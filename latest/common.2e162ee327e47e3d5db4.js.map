{"version":3,"file":"common.2e162ee327e47e3d5db4.js","mappings":"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","sources":["webpack://@terrestris/shogun-gis-client/./src/hooks/useAppDispatch.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useAppSelector.ts","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.less?3a66","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/usePlugins.ts","webpack://@terrestris/shogun-gis-client/./src/components/BasicMapComponent/index.tsx","webpack://@terrestris/shogun-gis-client/./src/plugin/index.ts","webpack://@terrestris/shogun-gis-client/./src/components/CookieBanner/index.less?eff3","webpack://@terrestris/shogun-gis-client/./src/components/CookieBanner/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useSHOGunAPIClient.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteWfsTransaction.ts","webpack://@terrestris/shogun-gis-client/./src/components/FileUpload/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useConvertImageUrl.ts","webpack://@terrestris/shogun-gis-client/./src/components/ImageUpload/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoForm/index.less?d0f3","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ReferenceTable/index.less?1552","webpack://@terrestris/shogun-gis-client/./src/components/ReferenceTable/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/DisplayField/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditReferenceTable/index.less?bbe4","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditReferenceTable/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureForm/index.less?0b49","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteWfsDescribeFeatureType.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useWriteWfsTransaction.ts","webpack://@terrestris/shogun-gis-client/./src/components/MapDrawer/index.less?074d","webpack://@terrestris/shogun-gis-client/./src/components/MapDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteGetFeature.ts","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureGeometryToolbar/index.less?cbd2","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureGeometryToolbar/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureTabs/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/DeleteButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/ResetButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/SaveButton/index.less?fbda","webpack://@terrestris/shogun-gis-client/./src/components/FeedbackIcon/index.less?77c8","webpack://@terrestris/shogun-gis-client/./src/components/FeedbackIcon/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/SaveButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureToolbar/index.less?6e4b","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureToolbar/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureFullForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteWfsTransactionLock.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useGetFeatureInfo.ts","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureSwitch/index.less?2952","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureSwitch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/index.less?c362","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.less?bf45","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/BasicNominatimSearch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/MultiSearch/index.less?3fe9","webpack://@terrestris/shogun-gis-client/./src/utils/generateSolrQuery.ts","webpack://@terrestris/shogun-gis-client/./src/components/MultiSearch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/SearchField/index.less?bf24","webpack://@terrestris/shogun-gis-client/./src/components/SearchField/index.tsx","webpack://@terrestris/shogun-gis-client/./src/utils/getGravatarUrl.ts","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.less?5255","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useVersion.ts","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.less?f429","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.less?b06e","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerConfiguration/index.less?9f82","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerConfiguration/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerDetails/index.less?4108","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerDetails/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/index.less?b9d0","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/StylingDrawer/index.less?b6ee","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawerButton/StylingComponent/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/StylingDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.less?da3b","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.less?76ea","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Serializer/SHOGunMapFishPrintV3WMSSerializer.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Serializer/SHOGunMapFishPrintV3TiledWMSSerializer.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/CustomFieldInput/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/LayoutSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/OutputFormatSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/ResolutionSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/ScaleSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Shared/Shared.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.less?6377","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/Attributions/AttributionRow/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/Attributions/index.less?3fa9","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/Attributions/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/DeleteAllButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawerButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useHighlightVectorLayer.ts","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/PaginationToolbar/index.less?2293","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/PaginationToolbar/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoTabs/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?a4df","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.less?7905","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.less?47fb","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/LayerTreeContextMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.less?c926","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/LoadingIndicator/index.less?c9dc","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/LoadingIndicator/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.less?beca","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.less?b016","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.less?e08e","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useRestoreTransientLayers.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useQueryParams.ts","webpack://@terrestris/shogun-gis-client/./src/App.less?984e","webpack://@terrestris/shogun-gis-client/./src/App.tsx","webpack://@terrestris/shogun-gis-client/./src/store/appInfo/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/description/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/legal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/logoPath/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/searchEngines/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/title/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/user/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/store.ts","webpack://@terrestris/shogun-gis-client/./src/index.less?df1e","webpack://@terrestris/shogun-gis-client/./src/bootstrap.tsx","webpack://@terrestris/shogun-gis-client/./src/context/PluginContext.tsx","webpack://@terrestris/shogun-gis-client/./src/context/SHOGunAPIClientContext.tsx","webpack://@terrestris/shogun-gis-client/./src/i18n/index.ts","webpack://@terrestris/shogun-gis-client/./src/i18n/translations.ts","webpack://@terrestris/shogun-gis-client/./src/index.tsx","webpack://@terrestris/shogun-gis-client/./src/store/addLayerModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/editFeature/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/editFeatureDrawerOpen/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/featureInfo/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/layerDetailsModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/layerTree/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/print/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/selectedFeatures/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/stylingDrawerVisibility/index.tsx","webpack://@terrestris/shogun-gis-client/./src/store/toolMenu/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/uploadDataModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/App.less?ee38","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.less?6017","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.less?f940","webpack://@terrestris/shogun-gis-client/./src/components/CookieBanner/index.less?0530","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureForm/index.less?a2dd","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureGeometryToolbar/index.less?141f","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureSwitch/index.less?c38e","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureToolbar/index.less?512e","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditReferenceTable/index.less?53a5","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/SaveButton/index.less?8e96","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/index.less?8ba3","webpack://@terrestris/shogun-gis-client/./src/components/FeedbackIcon/index.less?78b5","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.less?a2b7","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.less?b02d","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.less?bd2b","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerConfiguration/index.less?2da8","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerDetails/index.less?acf5","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/index.less?a101","webpack://@terrestris/shogun-gis-client/./src/components/MapDrawer/index.less?bfb2","webpack://@terrestris/shogun-gis-client/./src/components/MultiSearch/index.less?ea03","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.less?68c2","webpack://@terrestris/shogun-gis-client/./src/components/ReferenceTable/index.less?7f72","webpack://@terrestris/shogun-gis-client/./src/components/SearchField/index.less?8fd0","webpack://@terrestris/shogun-gis-client/./src/components/StylingDrawer/index.less?bc42","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/Attributions/index.less?d745","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.less?6534","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoForm/index.less?6db1","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?27cc","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/PaginationToolbar/index.less?8e8c","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.less?f3c5","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/LoadingIndicator/index.less?22c2","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.less?d8e5","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.less?b29b","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.less?949c","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.less?cb8c","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.less?a168","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.less?25f0","webpack://@terrestris/shogun-gis-client/./src/index.less?2fc8"],"sourcesContent":["import {\n  useDispatch\n} from 'react-redux';\n\nimport type {\n  AppDispatch\n} from '../store/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport default useAppDispatch;\n","import {\n  TypedUseSelectorHook,\n  useSelector\n} from 'react-redux';\n\nimport type {\n  RootState\n} from '../store/store';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport default useAppSelector;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport {\n  Input,\n  Modal,\n  ModalProps,\n  notification,\n  Select,\n  Table,\n  Typography\n} from 'antd';\n\nimport {\n  InputStatus\n} from 'antd/lib/_util/statusUtils';\n\nimport {\n  getUid\n} from 'ol';\nimport OlLayerGroup from 'ol/layer/Group';\nimport ImageLayer from 'ol/layer/Image';\nimport TileLayer from 'ol/layer/Tile';\nimport ImageWMSSource from 'ol/source/ImageWMS';\nimport TileWMSSource from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\nimport CapabilitiesUtil from '@terrestris/ol-util/dist/CapabilitiesUtil/CapabilitiesUtil';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport { SimpleButton } from '@terrestris/react-geo';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport {\n  hide\n} from '../../store/addLayerModal';\n\nimport './index.less';\n\nexport type AddLayerModalProps = Partial<ModalProps>;\n\nexport const AddLayerModal: React.FC<AddLayerModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState(false);\n  const [layers, setLayers] = useState<(ImageLayer<ImageWMSSource> | TileLayer<TileWMSSource>)[]>([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n  const [validationStatus, setValidationStatus] = useState<InputStatus>('');\n  const [url, setUrl] = useState(\n    'https://sgx.geodatenzentrum.de/wms_topplus_open'\n  );\n  const [sanitizedUrl, setSanitizedUrl] = useState<string>();\n  const [version, setVersion] = useState<string>('1.3.0');\n\n  const isModalVisible = useAppSelector(state => state.addLayerModal.visible);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    if (!isModalVisible) {\n      return;\n    }\n    setSanitizedUrl(UrlUtil.createValidGetCapabilitiesRequest(url, 'WMS', version));\n  }, [version, isModalVisible, url]);\n\n  const onUrlChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = evt.target.value;\n    setValidationStatus(UrlUtil.isValid(value.trim()) ? '' : 'error');\n    setUrl(evt.target.value);\n  };\n\n  const getCapabilities = async () => {\n    if (!sanitizedUrl) {\n      return;\n    }\n    try {\n      setLoading(true);\n\n      const capabilities = await CapabilitiesUtil.getWmsCapabilities(sanitizedUrl);\n      const externalLayers = CapabilitiesUtil.getLayersFromWmsCapabilities(capabilities, 'Title');\n\n      setLayers(externalLayers);\n    } catch (error) {\n      notification.error({\n        message: t('AddLayerModal.errorMessage'),\n        description: t('AddLayerModal.errorDescription')\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const closeModal = () => {\n    setSelectedRowKeys([]);\n    setLayers([]);\n    dispatch(hide());\n  };\n\n  const onAddSelected = () => {\n    const layersToAdd = layers.filter(layer => selectedRowKeys.includes(getUid(layer)));\n    addLayers(layersToAdd);\n  };\n\n  const onAddAll = () => {\n    addLayers(layers);\n  };\n\n  const addLayers = (layersToAdd: (ImageLayer<ImageWMSSource> | TileLayer<TileWMSSource>)[]) => {\n    if (!map) {\n      return;\n    }\n\n    const targetFolderName = t('AddLayerModal.externalWmsFolder');\n    let targetGroup = MapUtil.getLayerByName(map, targetFolderName) as OlLayerGroup;\n\n    if (!targetGroup) {\n      targetGroup = new OlLayerGroup({\n        layers: []\n      });\n      targetGroup.set('name', targetFolderName);\n      const existingGroups = map.getLayerGroup().getLayers();\n      existingGroups.insertAt(existingGroups?.getLength() || 0, targetGroup);\n    }\n\n    layersToAdd.forEach(layerToAdd => {\n      if (!targetGroup.getLayers().getArray().includes(layerToAdd)) {\n        layerToAdd.set('isExternalLayer', true);\n\n        let layerUrl: string | undefined;\n        if (layerToAdd instanceof ImageLayer) {\n          layerUrl = layerToAdd.getSource()?.getUrl();\n        }\n\n        if (layerToAdd instanceof TileLayer) {\n          const urls = layerToAdd.getSource()?.getUrls();\n          layerUrl = urls?.length === 1 ? urls[0] : undefined;\n        }\n\n        const layerConfig = {\n          name: layerToAdd.get('name'),\n          type: layerToAdd instanceof TileLayer ? 'TILEWMS' : 'WMS',\n          opacity: layerToAdd.getOpacity(),\n          sourceConfig: {\n            layerNames: layerToAdd.getSource()?.getParams().LAYERS,\n            url: layerUrl,\n            useBearerToken: false\n          }\n        };\n        layerToAdd.set('layerConfig', layerConfig);\n        targetGroup.getLayers().push(layerToAdd);\n      }\n    });\n\n    closeModal();\n  };\n\n  return (\n    <Modal\n      className=\"add-layer-modal\"\n      title={t('AddLayerModal.title')}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={600}\n      footer={[\n        <SimpleButton\n          aria-label='add-all'\n          key=\"add-all\"\n          disabled={layers?.length < 1}\n          onClick={onAddAll}\n        >\n          {t('AddLayerModal.addAllLayers')}\n        </SimpleButton>,\n        <SimpleButton\n          aria-label='add-selected'\n          key=\"add-selected\"\n          disabled={selectedRowKeys?.length < 1}\n          onClick={onAddSelected}\n        >\n          {t('AddLayerModal.addSelectedLayers')}\n        </SimpleButton>\n      ]}\n      {...restProps}\n    >\n      <span>{t('AddLayerModal.requestWmsGetCapabilitiesInstruction')}</span>\n      <Input.Search\n        aria-label='input-search'\n        className='url-input'\n        placeholder={t('AddLayerModal.inputPlaceholder')}\n        value={url}\n        onChange={onUrlChange}\n        onSearch={getCapabilities}\n        status={validationStatus}\n        enterButton={true}\n        addonBefore={\n          <Select\n            aria-label='select-version'\n            defaultValue='1.3.0'\n            onChange={setVersion}\n            options={[\n              {\n                value: '1.3.0',\n                label: `${t('AddLayerModal.version')} 1.3.0`\n              },\n              {\n                value: '1.1.1',\n                label: `${t('AddLayerModal.version')} 1.1.1`\n              }\n            ]}\n          >\n          </Select>\n        }\n      />\n      {\n        validationStatus !== '' &&\n        <Typography className='error'>\n          {t('AddLayerModal.invalidUrlErrorMsg')}\n        </Typography>\n      }\n      <Table\n        aria-label='wms-table'\n        loading={loading}\n        columns={[\n          {\n            title: t('AddLayerModal.columnTitle'),\n            render: (text: any, record: any) => {\n              return record.get('title');\n            }\n          }\n        ]}\n        scroll={{\n          y: 250\n        }}\n        rowKey={(record: any) => getUid(record)}\n        rowSelection={{\n          selectedRowKeys,\n          onChange: setSelectedRowKeys\n        }}\n        pagination={false}\n        dataSource={layers}\n      />\n    </Modal>\n  );\n};\n\nexport default AddLayerModal;\n","import { useContext } from 'react';\n\nimport PluginContext from '../context/PluginContext';\n\nimport { ClientPluginInternal } from '../plugin';\n\nexport const usePlugins = (): ClientPluginInternal[] => {\n  return useContext(PluginContext);\n};\n\nexport default usePlugins;\n","import React, {\n  useEffect\n} from 'react';\n\nimport { ObjectEvent as OlObjectEvent } from 'ol/Object';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport MapComponent, {\n  MapComponentProps\n} from '@terrestris/react-geo/dist/Map/MapComponent/MapComponent';\n\nimport usePlugins from '../../hooks/usePlugins';\n\nimport {\n  isMapIntegration\n} from '../../plugin';\n\nexport const BasicMapComponent: React.FC<Partial<MapComponentProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const plugins = usePlugins();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  /**\n   * Updates external layer group name when language changes.\n   */\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const targetGroups = MapUtil.getLayersByProperty(map, 'isExternalLayerGroup', true);\n    if (targetGroups?.length !== 1) {\n      return;\n    }\n    const targetGroup = targetGroups[0];\n    const oldName = targetGroups[0].get('name');\n    targetGroup.set('name', t('AddLayerModal.externalWmsFolder'));\n    const changeEvent = new OlObjectEvent('change:layers', 'name', oldName);\n    targetGroup.dispatchEvent(changeEvent);\n  }, [i18n.language, map, t]);\n\n  const pluginComponents: JSX.Element[] = [];\n\n  if (plugins) {\n    plugins.forEach(plugin => {\n      if (isMapIntegration(plugin.integration)) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        pluginComponents.push(\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  }\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <MapComponent\n      map={map}\n      {...restProps}\n    >\n      {\n        pluginComponents\n      }\n    </MapComponent>\n  );\n};\n\nexport default BasicMapComponent;\n","import type { IconDefinition } from '@fortawesome/fontawesome-common-types';\n\nimport type {\n  Middleware,\n  Reducer\n} from '@reduxjs/toolkit';\n\nimport { CollapsePanelProps } from 'antd';\nimport type OlMap from 'ol/Map';\n\nimport type SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nexport type ClientPluginLocale = {\n  [locale: string]: {\n    translation: {\n      [key: string]: any;\n    };\n  };\n};\n\nexport type ClientPluginComponentProps = {\n  map?: OlMap;\n  client?: SHOGunAPIClient;\n};\n\nexport type ClientPluginIntegration = {\n  /**\n   * The main identifier of the integration point of the plugin.\n   */\n  placement: string;\n};\n\nexport type ClientPluginIntegrationToolMenu = ClientPluginIntegration &\n  Omit<CollapsePanelProps, 'key' | 'header'> & {\n    placement: 'tool-menu';\n    /**\n     * The label for the plugin in the tool menu.\n     */\n    label?: string;\n    /**\n     * The insertion index for the plugin in the tool menu, starting from 0 which is on top.\n     */\n    insertionIndex?: number;\n    /**\n     * The icon for the plugin in the tool menu.\n     */\n    icon?: IconDefinition;\n  };\n\nexport type HeaderPlacementOrientation = 'left' | 'center' | 'right';\n\nexport type ClientPluginIntegrationHeader = ClientPluginIntegration & {\n  placement: 'header';\n  /**\n   * The placement orientation for the plugin in the header.\n   */\n  placementOrientation: HeaderPlacementOrientation;\n  /**\n   * The insertion index for the plugin in the header, starting from 0 which is on the left.\n   */\n  insertionIndex?: number;\n};\n\nexport type ClientPluginIntegrationFeatureInfo = ClientPluginIntegration & {\n  placement: 'feature-info';\n  /**\n   * The list of layer names the plugin component should be rendered for. If not\n   * specified, the component will be rendered for all layers.\n   */\n  layers?: string[];\n};\n\nexport type ClientPluginIntegrationMap = ClientPluginIntegration & {\n  placement: 'map';\n};\n\nexport type FooterPlacementOrientation = 'left' | 'right';\n\nexport type ClientPluginIntegrationFooter = ClientPluginIntegration & {\n  placement: 'footer';\n  /**\n  * The placement orientation for the plugin in the footer.\n  */\n  placementOrientation: FooterPlacementOrientation;\n  /**\n  * The insertion index for the plugin in the footer, starting from 0 which is on the left.\n  */\n  insertionIndex?: number;\n};\n\nexport type ClientPluginIntegrationCookieConsent = ClientPluginIntegration & {\n  placement: 'cookie-banner';\n};\n\nexport type ClientPluginIntegrations =\n  | ClientPluginIntegrationToolMenu\n  | ClientPluginIntegrationHeader\n  | ClientPluginIntegrationFeatureInfo\n  | ClientPluginIntegrationMap\n  | ClientPluginIntegrationFooter\n  | ClientPluginIntegrationCookieConsent;\n\nexport type ClientPlugin = {\n  /**\n   * The key of the plugin, usually used for internal references (e.g. element class names) only.\n   */\n  key: string;\n  /**\n   * The definition of the integration point.\n   */\n  integration: ClientPluginIntegrations;\n  /**\n   * The actual component of the plugin.\n   */\n  component: React.FunctionComponent<ClientPluginComponentProps>;\n  /**\n   * The i18n definition to be used in the plugin.\n   */\n  i18n?: ClientPluginLocale;\n  /**\n   * A set of redux reducers to be used in the plugin.\n   */\n  reducers?: {\n    [key: string]: Reducer;\n  };\n  /**\n   * A set of middlewares that should be added to the store\n   * especially useful for usage of redux-rtk\n   */\n  middlewares?: Middleware[];\n};\n\nexport type ClientPluginInternal = ClientPlugin & {\n  wrappedComponent: React.FunctionComponent<ClientPluginComponentProps>;\n};\n\nexport function isToolMenuIntegration(\n  pluginIntegration: ClientPluginIntegrations\n): pluginIntegration is ClientPluginIntegrationToolMenu {\n  return pluginIntegration && pluginIntegration.placement === 'tool-menu';\n}\n\nexport function isHeaderIntegration(\n  pluginIntegration: ClientPluginIntegrations\n): pluginIntegration is ClientPluginIntegrationHeader {\n  return pluginIntegration && pluginIntegration.placement === 'header';\n}\n\nexport function isFeatureInfoIntegration(\n  pluginIntegration: ClientPluginIntegrations\n): pluginIntegration is ClientPluginIntegrationFeatureInfo {\n  return pluginIntegration && pluginIntegration.placement === 'feature-info';\n}\n\nexport function isMapIntegration(\n  pluginIntegration: ClientPluginIntegrations\n): pluginIntegration is ClientPluginIntegrationMap {\n  return pluginIntegration && pluginIntegration.placement === 'map';\n}\n\nexport function isFooterIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationFooter {\n  return pluginIntegration && pluginIntegration.placement === 'footer';\n}\n\nexport function isCookieConsentIntegration(\n  pluginIntegration: ClientPluginIntegrations\n): pluginIntegration is ClientPluginIntegrationCookieConsent {\n  return pluginIntegration && pluginIntegration.placement === 'cookie-banner';\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport { CookieConsent } from 'react-cookie-consent';\nimport { useTranslation } from 'react-i18next';\n\nimport usePlugins from '../../hooks/usePlugins';\nimport { isCookieConsentIntegration } from '../../plugin';\n\nimport './index.less';\n\nexport const CookieBanner = () => {\n  const plugins = usePlugins();\n\n  const { t } = useTranslation();\n\n  const getPlugin = () => {\n    let cookiePlugin: React.ReactElement | null = null;\n\n    plugins.forEach(plugin => {\n      if (isCookieConsentIntegration(plugin.integration)) {\n        const {\n          key, wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        cookiePlugin = <WrappedPluginComponent key={key} />;\n      }\n    });\n\n    return cookiePlugin;\n  };\n\n  return (\n    <CookieConsent\n      disableStyles={true}\n      key=\"default-cookie-consent\"\n      location=\"bottom\"\n      buttonText={t('CookieBanner.button')}\n      cookieName=\"SHOGun-Session-Cookie\"\n      buttonClasses=\"cookie-button\"\n      containerClasses=\"cookie-container\"\n      contentClasses=\"cookie-content\"\n      expires={150}\n    >\n      {getPlugin() ? getPlugin() : t('CookieBanner.info')}\n    </CookieConsent>\n  );\n};\n\nexport default CookieBanner;\n","import { useContext } from 'react';\n\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nimport SHOGunAPIClientContext from '../context/SHOGunAPIClientContext';\n\nexport const useSHOGunAPIClient = (): SHOGunAPIClient | null => {\n  return useContext(SHOGunAPIClientContext);\n};\n\nexport default useSHOGunAPIClient;\n","import {\n  useCallback\n} from 'react';\n\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type ExecuteWfsTransactionOpts = {\n  layer: WmsLayer;\n  transaction: Node;\n};\n\nexport const useExecuteWfsTransaction = () => {\n  const client = useSHOGunAPIClient();\n\n  // TODO Make detection more robust\n  const isFailed = (xmlDoc: Document) => {\n    const errorTagNameCandidates = [\n      'wfs:FAILED',\n      'ows:ExceptionReport'\n    ];\n\n    return errorTagNameCandidates.some(candidate =>\n      xmlDoc.getElementsByTagName(candidate).length > 0);\n  };\n\n  const executeWfsTransaction = useCallback(async (opts: ExecuteWfsTransactionOpts) => {\n    let url;\n\n    const source = opts.layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = source.getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = source.getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const defaultHeaders = {\n      'Content-Type': 'application/xml'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: opts.layer?.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders,\n      body: new XMLSerializer().serializeToString(opts.transaction)\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response while executing a WFS-Transaction');\n    }\n\n    const responseText = await response.text();\n\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'text/xml');\n\n    if (isFailed(xmlDoc)) {\n      throw new Error(`Something failed: ${responseText}`);\n    }\n\n    return responseText;\n  }, [client]);\n\n  return executeWfsTransaction;\n};\n\nexport default useExecuteWfsTransaction;\n","import React from 'react';\n\nimport {\n  Upload,\n  Button\n} from 'antd';\n\nimport {\n  UploadFile,\n  UploadProps\n} from 'antd/lib/upload/interface';\n\nimport _isNil from 'lodash/isNil';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport ShogunFile from '@terrestris/shogun-util/dist/model/File';\nimport {\n  PropertyFormItemEditConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\nimport {\n  getCsrfTokenHeader\n} from '@terrestris/shogun-util/dist/security/getCsrfTokenHeader';\n\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nexport type FileUploadProps = {\n  fieldConfig?: PropertyFormItemEditConfig;\n  readOnly?: boolean;\n} & Partial<UploadProps>;\n\nexport const FileUpload: React.FC<FileUploadProps> = ({\n  readOnly = false,\n  fieldConfig,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const client = useSHOGunAPIClient();\n  const {\n    t\n  } = useTranslation();\n\n  /**\n   * Workaround which allows to download files that need authentication.\n   */\n  const showPreview = async (file: UploadFile<ShogunFile>) => {\n    if (!client) {\n      return;\n    }\n    const { response } = file;\n    const fileName = response?.fileName;\n    const fileUrl = `/files/${response?.fileUuid}`;\n\n    if (_isNil(fileName) || _isNil(response?.fileUuid)) {\n      return;\n    }\n\n    const anchor = document.createElement('a');\n    document.body.appendChild(anchor);\n\n    const opts = {\n      headers: { ... getBearerTokenHeader(client.getKeycloak())}\n    };\n\n    const result = await fetch(fileUrl, opts);\n    const blob = await result.blob();\n    let objectUrl = window.URL.createObjectURL(blob);\n\n    anchor.href = objectUrl;\n    anchor.download = fileName;\n    anchor.click();\n    window.URL.revokeObjectURL(objectUrl);\n  };\n\n  const removeFile = async (file: UploadFile<ShogunFile>) => {\n    const uuid = file?.response?.fileUuid;\n    if (uuid) {\n      const url = `${client?.getBasePath()}files/${uuid}`;\n      return await fetch(url, {\n        method: 'DELETE',\n        credentials: 'same-origin',\n        headers: {\n          ...getCsrfTokenHeader(),\n          ...getBearerTokenHeader(client?.getKeycloak())\n        }\n      });\n    }\n  };\n\n  if (!client) {\n    return <></>;\n  }\n\n  return (\n    <Upload\n      multiple\n      name='file'\n      action='/files/uploadToFileSystem'\n      withCredentials={true}\n      headers={{\n        ...getCsrfTokenHeader(),\n        ...getBearerTokenHeader(client.getKeycloak())\n      }}\n      onRemove={removeFile}\n      onPreview={showPreview}\n      {...fieldConfig?.fieldProps}\n      {...passThroughProps}\n    >\n      {\n        !readOnly && (\n          <Button>{t('FileUpload.upload')}</Button>\n        )\n      }\n    </Upload>\n  );\n};\n\nexport default FileUpload;\n","import {\n  useCallback\n} from 'react';\n\nimport _isNil from 'lodash/isNil';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport const useConvertImageUrl = () => {\n  const client = useSHOGunAPIClient();\n\n  const imageUrlToBase64 = useCallback(async (url: string) => {\n    if (_isNil(url)) {\n      return Promise.reject();\n    }\n\n    const response = await fetch(url, {\n      credentials: 'include',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak())\n      }\n    });\n\n    const blob = await response.blob();\n    return new Promise<string>((onSuccess, onError) => {\n      try {\n        const reader = new FileReader() ;\n        reader.onload = function () { onSuccess(this.result as string); };\n        reader.readAsDataURL(blob);\n      } catch (e) {\n        onError(e);\n      }\n    });\n  }, [client]);\n\n  return imageUrlToBase64;\n};\n\nexport default useConvertImageUrl;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Upload,\n  Modal\n} from 'antd';\n\nimport {\n  UploadFile,\n  UploadProps\n} from 'antd/lib/upload/interface';\n\nimport _isNil from 'lodash/isNil';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport { useAsyncEffect } from '@terrestris/react-util/dist/hooks/useAsyncEffect/useAsyncEffect';\n\nimport ShogunFile from '@terrestris/shogun-util/dist/model/File';\nimport {\n  PropertyFormItemEditConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\nimport {\n  getCsrfTokenHeader\n} from '@terrestris/shogun-util/dist/security/getCsrfTokenHeader';\n\nimport useConvertImageUrl from '../../hooks/useConvertImageUrl';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nexport type ImageUploadProps = {\n  fieldConfig?: PropertyFormItemEditConfig;\n  readOnly?: boolean;\n  initialFileList?: UploadFile<any>[];\n} & Partial<UploadProps>;\n\nexport const ImageUpload: React.FC<ImageUploadProps> = ({\n  fieldConfig,\n  readOnly = false,\n  initialFileList,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const [mediaPreviewVisible, setMediaPreviewVisible] = useState<boolean>(false);\n  const [previewImage, setPreviewImage] = useState<string>('');\n  const [defaultFileListWithBlob, setDefaultFileListWithBlob] = useState<UploadFile<ShogunFile>[]>();\n\n  const client = useSHOGunAPIClient();\n  const imageUrlToBase64 = useConvertImageUrl();\n  const {\n    t\n  } = useTranslation();\n\n  useAsyncEffect(async () => {\n    if (!initialFileList || initialFileList.length === 0) {\n      return;\n    }\n    const convertDefaultFileList = async (fileList: UploadFile<ShogunFile>[]) => {\n      const fileListPromises = fileList.map(async (val: any) => ({\n        ...val,\n        thumbUrl: await imageUrlToBase64(`${client?.getBasePath()}imagefiles/${val?.response?.fileUuid}/thumbnail`),\n        url: undefined\n      }));\n      return await Promise.all(fileListPromises);\n    };\n    const fl = await convertDefaultFileList(initialFileList);\n    setDefaultFileListWithBlob(fl);\n  }, [initialFileList?.length]);\n\n  /**\n   * Shows preview of clicked uploaded image.\n   * @param {Object} file Image file object.\n   */\n  const showImagePreview = async (file: UploadFile<ShogunFile>) => {\n    const { response } = file;\n    if (_isNil(response) || _isNil(response?.fileUuid)) {\n      return;\n    }\n    const previewImageUrl = `${client?.getBasePath()}imagefiles/${response.fileUuid}`;\n    const img = await imageUrlToBase64(previewImageUrl);\n    setPreviewImage(img);\n    setMediaPreviewVisible(true);\n  };\n\n  const removeFile = async (file: UploadFile<ShogunFile>) => {\n    const uuid = file?.response?.fileUuid;\n    if (uuid) {\n      const url = `${client?.getBasePath()}imagefiles/${uuid}`;\n      return await fetch(url, {\n        method: 'DELETE',\n        credentials: 'same-origin',\n        headers: {\n          ...getCsrfTokenHeader(),\n          ...getBearerTokenHeader(client?.getKeycloak())\n        }\n      });\n    }\n  };\n\n  if (!client) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Upload\n        accept=\"image/*\"\n        multiple\n        name=\"file\"\n        action={`${client.getBasePath()}imagefiles/uploadToFileSystem`}\n        withCredentials={true}\n        listType=\"picture-card\"\n        headers={{\n          ...getCsrfTokenHeader(),\n          ...getBearerTokenHeader(client.getKeycloak())\n        }}\n        onRemove={removeFile}\n        onPreview={showImagePreview}\n        fileList={readOnly ? defaultFileListWithBlob : undefined}\n        {...fieldConfig?.fieldProps}\n        {...passThroughProps}\n      >\n        {\n          !readOnly && (\n            <div>\n              <FontAwesomeIcon icon={faPlus} />\n              <div style={{ marginTop: 8 }}>{t('ImageUpload.upload')}</div>\n            </div>\n          )\n        }\n      </Upload>\n      <Modal\n        open={mediaPreviewVisible}\n        footer={null}\n        onCancel={() => setMediaPreviewVisible(false)}\n      >\n        <img\n          alt=\"example\"\n          style={{ width: '100%' }}\n          src={previewImage}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default ImageUpload;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport {\n  Form,\n  FormProps\n} from 'antd';\n\nimport {\n  useForm\n} from 'antd/lib/form/Form';\n\nimport OlFeature from 'ol/Feature';\n\nimport {\n  PropertyFormItemReadConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport DisplayField from '../../../DisplayField';\n\nimport './index.less';\n\nexport type FeatureInfoFormProps = FormProps & {\n  feature: OlFeature;\n  formConfig?: PropertyFormItemReadConfig[];\n};\n\nexport const FeatureInfoForm: React.FC<FeatureInfoFormProps> = ({\n  feature,\n  formConfig,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const [form] = useForm();\n\n  useEffect(() => {\n    form.resetFields();\n    form.setFieldsValue(feature.getProperties());\n  }, [feature, form]);\n\n  const createFormItem = (fieldCfg: PropertyFormItemReadConfig) => {\n    return (\n      <Form.Item\n        key={fieldCfg.propertyName}\n        name={fieldCfg.propertyName}\n        label={fieldCfg.displayName || fieldCfg.propertyName}\n      >\n        <DisplayField\n          label={fieldCfg.displayName || fieldCfg.propertyName}\n          {...fieldCfg.fieldProps}\n        />\n      </Form.Item>\n    );\n  };\n\n  return (\n    <Form\n      className=\"feature-info-form\"\n      form={form}\n      labelCol={{\n        span: 8\n      }}\n      labelAlign=\"left\"\n      labelWrap\n      {...passThroughProps}\n    >\n      {formConfig?.map(createFormItem)}\n    </Form>\n  );\n\n};\n\nexport default FeatureInfoForm;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faBoxOpen\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Modal,\n  Table\n} from 'antd';\n\nimport {\n  TableProps\n} from 'antd/lib/table';\n\nimport OlFeature from 'ol/Feature';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport {\n  ReferenceConfig\n} from '../DisplayField';\n\nimport FeatureInfoForm from '../ToolMenu/FeatureInfo/FeatureInfoForm';\n\nimport './index.less';\n\nexport type ReferenceDataType = {\n  [key: string]: any;\n};\n\nexport type ReferenceTableProps = TableProps<ReferenceDataType> & {\n  value?: string;\n  referenceConfig?: ReferenceConfig;\n};\n\nexport const ReferenceTable: React.FC<ReferenceTableProps> = ({\n  value,\n  referenceConfig,\n  ...passThroughProps\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n\n  const {\n    t\n  } = useTranslation();\n\n  const defaultPropertyName = 'id';\n\n  const resolvePlaceholder = (record: ReferenceDataType) => {\n    if (referenceConfig?.tablePropertyName) {\n      const regex = /{{(.*?)}}/g;\n\n      if (referenceConfig?.tablePropertyName.match(regex)) {\n        let resolved = referenceConfig?.tablePropertyName;\n        let match;\n\n        while (match = regex.exec(referenceConfig?.tablePropertyName)) {\n          resolved = resolved.replace(match[0], record[match[1]]);\n        }\n\n        return resolved;\n      }\n\n      return record[referenceConfig?.tablePropertyName];\n    }\n\n    if (record[defaultPropertyName]) {\n      return record[defaultPropertyName];\n    }\n  };\n\n  const columns = [{\n    width: '100%',\n    render: (val: any, record: ReferenceDataType) => resolvePlaceholder(record) ?\n      resolvePlaceholder(record) :\n      t('ReferenceTable.defaultRowPlaceholder')\n  }, {\n    render: (val: any, record: ReferenceDataType) => {\n      return (\n        <Button\n          onClick={() => onDetailsClick(val, record)}\n          icon={(\n            <FontAwesomeIcon\n              icon={faBoxOpen}\n            />\n          )}\n        />\n      );\n    }\n  }];\n\n  const getDataSource = () => {\n    if (!value) {\n      return [];\n    }\n\n    try {\n      const parsedValue = JSON.parse(value);\n\n      if (Array.isArray(parsedValue)) {\n        return parsedValue;\n      }\n\n      if (parsedValue === null || parsedValue === undefined || typeof parsedValue === 'number' ||\n        typeof parsedValue === 'boolean' || typeof parsedValue === 'string') {\n        Logger.warn('Unsupported value given');\n        return [];\n      }\n\n      if (typeof parsedValue === 'object') {\n        return [parsedValue];\n      }\n    } catch (error) {\n      Logger.warn('Error while parsing the table data ', error);\n      return [];\n    }\n  };\n\n  const getModalTitle = () => {\n    if (!selectedFeature) {\n      return t('ReferenceTable.defaultModalTitle');\n    }\n\n    const placeholder = resolvePlaceholder(selectedFeature.getProperties());\n\n    if (!placeholder) {\n      return t('ReferenceTable.defaultModalTitle');\n    }\n\n    return `${t('ReferenceTable.modalTitle', {\n      referenceValue: placeholder\n    })}`;\n  };\n\n  const onDetailsClick = (val: any, record: ReferenceDataType) => {\n    const feature = new OlFeature();\n    feature.setProperties(record);\n\n    setSelectedFeature(feature);\n    setIsModalOpen(true);\n  };\n\n  const onCancel = async () => {\n    setIsModalOpen(false);\n    setSelectedFeature(undefined);\n  };\n\n  return (\n    <>\n      <Table\n        size=\"small\"\n        showHeader={false}\n        pagination={false}\n        columns={columns}\n        rowKey={defaultPropertyName}\n        dataSource={getDataSource()}\n        {...passThroughProps}\n      />\n      <Modal\n        className=\"reference-table-modal\"\n        open={isModalOpen}\n        maskClosable={false}\n        footer={null}\n        width={600}\n        destroyOnClose={true}\n        title={getModalTitle()}\n        onCancel={onCancel}\n      >\n        {selectedFeature && (\n          <FeatureInfoForm\n            feature={selectedFeature}\n            formConfig={referenceConfig?.featureInfoFormConfig}\n          />\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default ReferenceTable;\n","import React from 'react';\n\nimport {\n  Checkbox,\n  Typography,\n  UploadFile\n} from 'antd';\n\nimport isString from 'lodash/isString';\nimport {\n  isMoment\n} from 'moment';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport ShogunFile from '@terrestris/shogun-util/dist/model/File';\nimport {\n  PropertyFormItemReadConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport { isFileConfig } from '../EditFeatureDrawer/EditFeatureForm';\nimport FileUpload from '../FileUpload';\nimport ImageUpload from '../ImageUpload';\nimport ReferenceTable from '../ReferenceTable';\n\nexport type ValueType = string | number | boolean | moment.Moment | Record<string, any>;\n\nexport type ReferenceConfig = {\n  tablePropertyName?: string;\n  featureInfoFormConfig?: PropertyFormItemReadConfig[];\n};\n\nexport type DisplayFieldProps = {\n  format?: string;\n  suffix?: string;\n  value?: ValueType | ValueType[];\n  label?: string;\n  referenceConfig?: ReferenceConfig;\n};\n\nexport const DisplayField: React.FC<DisplayFieldProps> = ({\n  format = 'DD.MM.YYYY',\n  suffix,\n  value,\n  label,\n  referenceConfig,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const {\n    i18n\n  } = useTranslation();\n\n  let displayValue: React.ReactNode = '';\n\n  if (typeof value === 'string') {\n    displayValue = value;\n  }\n\n  if (typeof value === 'boolean' || value === 'false' || value === 'true') {\n    return (\n      <Checkbox\n        checked={value === true || value === 'true'}\n        disabled\n      />\n    );\n  }\n\n  if (Number.isFinite(value)) {\n    displayValue = new Intl.NumberFormat(i18n.language, {\n      useGrouping: false\n    }).format(Number(value));\n  }\n\n  if (isMoment(value)) {\n    displayValue = value.format(format);\n  }\n\n  if (Array.isArray(value)) {\n    displayValue = value.join(', ');\n  }\n\n  const isUrl = (candidate: string) => {\n    const lowerCandidate = candidate.toLowerCase();\n    const protocols = ['http://', 'https://', 'ftp://', 'mailto:'];\n    return protocols.some(protocol => lowerCandidate.startsWith(protocol));\n  };\n\n  if (isString(value) && isUrl(value)) {\n    displayValue = (\n      <a\n        href={value}\n        target=\"_blank\"\n        rel='noreferrer'\n      >\n        {value}\n      </a>\n    );\n  }\n\n  const getUpload = (val: ValueType | ValueType[]): UploadFile<ShogunFile>[] | null => {\n    if (!value) {\n      return null;\n    }\n    let v = typeof val !== 'string' ? JSON.stringify(val) : val;\n\n    try {\n      v = JSON.parse(v);\n    } catch (e) {\n      return null;\n    }\n\n    if (typeof v === 'object' && v !== null && isFileConfig(v[0])) {\n      return v as UploadFile<ShogunFile>[];\n    }\n    return null;\n  };\n\n  const uploadValue = value && getUpload(value);\n\n  if (uploadValue) {\n    if (uploadValue[0].response?.fileType?.startsWith('image/')) {\n      return (\n        <ImageUpload\n          initialFileList={uploadValue}\n          disabled\n          readOnly\n        />\n      );\n    } else {\n      return (\n        <FileUpload\n          defaultFileList={uploadValue}\n          disabled\n          readOnly\n        />\n      );\n    }\n  }\n\n  const isJson = (val: ValueType | ValueType[]): boolean => {\n    let v = typeof val !== 'string' ? JSON.stringify(val) : val;\n\n    try {\n      v = JSON.parse(v);\n    } catch (e) {\n      return false;\n    }\n\n    return typeof v === 'object' && v !== null;\n  };\n\n  if (value && isJson(value)) {\n    return (\n      <ReferenceTable\n        value={typeof value === 'string' ? value : JSON.stringify(value)}\n        referenceConfig={referenceConfig}\n      />\n    );\n  }\n\n  if (suffix) {\n    displayValue = <>{displayValue} {suffix}</>;\n  }\n\n  return (\n    <Typography.Text\n      className=\"displayfield\"\n      {...passThroughProps}\n    >\n      {displayValue}\n    </Typography.Text>\n  );\n};\n\nexport default DisplayField;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faEdit,\n  faTrash,\n  faPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Modal,\n  Popconfirm,\n  Table\n} from 'antd';\n\nimport {\n  FormInstance,\n  useForm\n} from 'antd/lib/form/Form';\n\nimport {\n  ColumnsType,\n  TableProps\n} from 'antd/lib/table';\n\nimport { FileInfoList } from 'hooks/useWriteWfsTransaction';\n\nimport _cloneDeep from 'lodash/cloneDeep';\n\nimport moment from 'moment';\n\nimport OlFeature from 'ol/Feature';\nimport {\n  getUid\n} from 'ol/util';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport {\n  PropertyFormItemEditConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useConvertImageUrl from '../../../hooks/useConvertImageUrl';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport EditFeatureForm from '../../EditFeatureDrawer/EditFeatureForm';\n\nimport './index.less';\n\nexport type EditReferenceDataType = {\n  id?: number;\n  internalId?: number;\n  [key: string]: any;\n};\n\nexport type EditReferenceTableProps = Omit<TableProps<EditReferenceDataType>, 'onChange'> & {\n  parentForm: FormInstance<EditReferenceDataType>;\n  propertyName: string;\n  value?: EditReferenceDataType;\n  tablePropertyName?: string;\n  formConfig?: PropertyFormItemEditConfig[];\n  onChange?: (changedValues: EditReferenceDataType[]) => void;\n};\n\nexport const EditReferenceTable: React.FC<EditReferenceTableProps> = ({\n  parentForm,\n  propertyName,\n  value,\n  tablePropertyName,\n  formConfig,\n  onChange = () => {},\n  ...passThroughProps\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n\n  const [form] = useForm<EditReferenceDataType>();\n\n  const {\n    t\n  } = useTranslation();\n\n  const imageUrlToBase64 = useConvertImageUrl();\n  const client = useSHOGunAPIClient();\n\n  const defaultPropertyName = 'id';\n\n  const resolvePlaceholder = (record: EditReferenceDataType): string | number => {\n    if (!tablePropertyName) {\n      return record[defaultPropertyName] || '';\n    }\n\n    const regex = /{{(.*?)}}/g;\n\n    if (!tablePropertyName.match(regex)) {\n      return record[tablePropertyName];\n    }\n\n    let resolved = tablePropertyName;\n    let match;\n\n    while (match = regex.exec(tablePropertyName)) {\n      resolved = resolved.replace(match[0], record[match[1]]);\n    }\n\n    return resolved;\n  };\n\n  const columns: ColumnsType<EditReferenceDataType> = [{\n    width: '100%',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => {\n      const valA = resolvePlaceholder(a);\n      const valB = resolvePlaceholder(b);\n\n      if (Number.isFinite(valA) && Number.isFinite(valB)) {\n        return (valA as number) - (valB as number);\n      }\n\n      if (typeof valA === 'string' && typeof valB === 'string') {\n        return valA.localeCompare(valB);\n      }\n\n      return 0;\n    },\n    render: (_: any, record: EditReferenceDataType) => resolvePlaceholder(record)\n  }, {\n    render: (_: any, record: EditReferenceDataType) => {\n      return (\n        <Button\n          onClick={() => onDetailsClick(record)}\n          icon={(\n            <FontAwesomeIcon\n              icon={faEdit}\n            />\n          )}\n        />\n      );\n    }\n  }, {\n    render: (_: any, record: EditReferenceDataType) => {\n      return (\n        <Popconfirm\n          title={t('EditReferenceTable.confirmDeleteTitle')}\n          onConfirm={() => onConfirmDelete(record)}\n          placement=\"bottomRight\"\n        >\n          <Button\n            danger={true}\n            icon={(\n              <FontAwesomeIcon\n                icon={faTrash}\n              />\n            )}\n          />\n        </Popconfirm>\n      );\n    }\n  }];\n\n  const getDataSource = () => {\n    if (!value) {\n      return;\n    }\n\n    if (!Array.isArray(value)) {\n      Logger.warn('Reference value must be of of type array.');\n      return;\n    }\n\n    const valueCopy = _cloneDeep(value);\n    valueCopy.forEach(v => {\n      Object.entries(v).forEach(async ([key, val]) => {\n        const isDate = formConfig?.some(cfg => cfg.propertyName === key && cfg.component === 'DATE');\n        if (isDate && val) {\n          const parsedDate = moment(value);\n\n          if (parsedDate.isValid()) {\n            v[key] = moment(val);\n          } else {\n            Logger.warn('Could not parse date');\n            v[key] = null;\n          }\n        }\n\n        const isUpload = formConfig?.some(cfg => cfg.propertyName === key && cfg.component === 'UPLOAD');\n        if (isUpload) {\n          if (Array.isArray(v[key])) {\n            const vMap = v[key]?.map(async (upload: FileInfoList) => ({\n              ...upload,\n              thumbUrl: upload.type.startsWith('image')\n                ? await imageUrlToBase64(\n                  `${client?.getBasePath()}imagefiles/${\n                    upload?.response?.fileUuid\n                  }/thumbnail`\n                )\n                : undefined,\n              url: upload.type.startsWith('image') ? undefined : upload.url\n            }));\n            const result = await Promise.all(vMap);\n            v[key] = result;\n          } else {\n            v[key] = [];\n          }\n        }\n      });\n    });\n\n    const isIdAvailable = valueCopy.every(el => {\n      if (Number.isFinite(el.id)) {\n        return true;\n      }\n\n      if (typeof el.id === 'string' && el.id.length > 0) {\n        return true;\n      }\n\n      return false;\n    });\n\n    if (!isIdAvailable) {\n      Logger.warn('Not all elements in the referenced array contain an id value. ' +\n        'This might result in unexpected behaviour');\n    }\n\n    return valueCopy;\n  };\n\n  const onAddClick = () => {\n    const feature = new OlFeature();\n    // We need to set a temporarily internal id on the feature to have it\n    // detectable while it's not being saved and has no id property set.\n    feature.set('internalId', getUid(feature));\n\n    form.setFieldsValue(feature.getProperties());\n\n    setSelectedFeature(feature);\n    setIsModalOpen(true);\n  };\n\n  const onConfirmDelete = (record: EditReferenceDataType) => {\n    const parentFormValues = parentForm.getFieldsValue();\n\n    if (!parentFormValues[propertyName]) {\n      Logger.warn(`Could not find the property ${propertyName} in the form values`);\n      return;\n    }\n\n    const deleteCandidates = _cloneDeep(parentFormValues[propertyName]);\n\n    if (!Array.isArray(deleteCandidates)) {\n      Logger.warn('The delete candidate is not of required type array');\n      return;\n    }\n\n    const deleteIdx = deleteCandidates.findIndex(deleteCandidate => {\n      if (Number.isFinite(deleteCandidate.id) && (deleteCandidate.id === record.id)) {\n        return true;\n      }\n\n      if (deleteCandidate.internalId && (deleteCandidate.internalId === record.internalId)) {\n        return true;\n      }\n\n      return false;\n    });\n\n    if (deleteIdx === -1) {\n      Logger.warn(`Could not find the index (${record.id}) to delete`);\n      return;\n    }\n\n    deleteCandidates.splice(deleteIdx, 1);\n\n    onChange(deleteCandidates);\n  };\n\n  const onDetailsClick = (record: EditReferenceDataType) => {\n    const feature = new OlFeature();\n    feature.setProperties(record);\n\n    form.setFieldsValue(feature.getProperties());\n\n    setSelectedFeature(feature);\n    setIsModalOpen(true);\n  };\n\n  const updateReferences = () => {\n    const formValues = _cloneDeep<EditReferenceDataType>(form.getFieldsValue(true));\n\n    let existingReferences: EditReferenceDataType[] = [];\n    if (Array.isArray(parentForm.getFieldValue(propertyName))) {\n      existingReferences = _cloneDeep(parentForm.getFieldValue(propertyName));\n    }\n\n    const targetIdx = existingReferences.findIndex(existingReference => {\n      if (Number.isFinite(existingReference.id) && (existingReference.id === formValues.id)) {\n        return true;\n      }\n\n      if (existingReference.internalId && (existingReference.internalId === formValues.internalId)) {\n        return true;\n      }\n\n      return false;\n    });\n\n    if (targetIdx > -1) {\n      // Update\n      existingReferences[targetIdx] = formValues;\n    } else {\n      // Add\n      existingReferences.push(formValues);\n    }\n\n    if (form.isFieldsTouched()) {\n      onChange(existingReferences);\n    }\n  };\n\n  const onCancel = () => {\n    closeModal();\n  };\n\n  const onOk = async () => {\n    try {\n      await form.validateFields();\n    } catch (error) {\n      Logger.warn('Form validation failed: ', error);\n      return;\n    }\n\n    updateReferences();\n\n    closeModal();\n  };\n\n  const closeModal = () => {\n    form.resetFields();\n\n    setIsModalOpen(false);\n    setSelectedFeature(undefined);\n  };\n\n  return (\n    <>\n      <Button\n        className=\"add-reference-button\"\n        onClick={onAddClick}\n        icon={(\n          <FontAwesomeIcon\n            icon={faPlus}\n          />\n        )}\n      />\n      <Table\n        size=\"small\"\n        showHeader={false}\n        pagination={false}\n        columns={columns}\n        rowKey={defaultPropertyName}\n        dataSource={getDataSource()}\n        {...passThroughProps}\n      />\n      <Modal\n        className=\"edit-reference-table-modal\"\n        open={isModalOpen}\n        maskClosable={false}\n        width={600}\n        destroyOnClose={true}\n        title={`${t('EditReferenceTable.modalTitle', {\n          referenceValue: selectedFeature ?\n            resolvePlaceholder(selectedFeature.getProperties() as EditReferenceDataType) :\n            undefined\n        })}`}\n        onCancel={onCancel}\n        onOk={onOk}\n      >\n        {selectedFeature && (\n          <EditFeatureForm\n            form={form}\n            formConfig={formConfig}\n            applyFormDirty={false}\n          />\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default EditReferenceTable;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  Input,\n  InputNumber,\n  DatePicker,\n  Select,\n  Switch,\n  Checkbox,\n  Form,\n  FormItemProps\n} from 'antd';\n\nimport {\n  FormInstance,\n  FormProps\n} from 'antd/lib/form/Form';\nimport {\n  UploadChangeParam,\n  UploadFile\n} from 'antd/lib/upload/interface';\n\nimport _debounce from 'lodash/debounce';\nimport _isNil from 'lodash/isNil';\nimport _isObject from 'lodash/isObject';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport ShogunFile from '@terrestris/shogun-util/dist/model/File';\n\nimport {\n  PropertyFormItemEditConfig,\n  PropertyFormItemEditReferenceTableConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\nimport {\n  setFormDirty\n} from '../../../store/editFeature';\nimport DisplayField from '../../DisplayField';\nimport FileUpload from '../../FileUpload';\nimport ImageUpload from '../../ImageUpload';\nimport EditReferenceTable from '../EditReferenceTable';\n\nimport './index.less';\n\nexport type EditFeatureFormProps = FormProps & {\n  form: FormInstance;\n  formConfig?: PropertyFormItemEditConfig[];\n  applyFormDirty?: boolean;\n};\n\nexport function isFileConfig(val: any): val is UploadFile<ShogunFile> {\n  if (_isNil(val)) {\n    return false;\n  }\n\n  return val.uid &&\n    !_isNil(val.name) &&\n    !_isNil(val.type) &&\n    !_isNil(val.uid) &&\n    _isObject(val.response) &&\n    !_isNil(val.response.id) &&\n    !_isNil(val.response.fileUuid) &&\n    !_isNil(val.response.fileName) &&\n    !_isNil(val.response.fileType);\n}\n\nexport const EditFeatureForm: React.FC<EditFeatureFormProps> = ({\n  form,\n  formConfig,\n  applyFormDirty = true,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const client = useSHOGunAPIClient();\n  const dispatch = useAppDispatch();\n\n  const formDirty = useAppSelector(\n    state => state.editFeature.formDirty\n  );\n\n  const createFormItem = (fieldCfg: PropertyFormItemEditConfig): React.ReactNode => {\n    let field: React.ReactNode;\n    if (fieldCfg.readOnly) {\n      field = createReadOnlyComponent(fieldCfg);\n    } else if (fieldCfg.component) {\n      field = createFieldComponent(fieldCfg);\n    } else {\n      Logger.warn('FieldConfig is missing `readOnly`, `component` or `dataType` property.');\n      field = (\n        <Input\n          key={fieldCfg.propertyName}\n          placeholder=\"\"\n        />\n      );\n    }\n\n    const formItemProps: FormItemProps = {\n      rules: []\n    };\n\n    formItemProps.rules = [{\n      required: fieldCfg.required\n    }];\n\n    if ((fieldCfg.component === 'SWITCH' || fieldCfg.component === 'CHECKBOX') && !fieldCfg.readOnly) {\n      formItemProps.valuePropName = 'checked';\n    }\n\n    if (fieldCfg.component === 'UPLOAD' && !fieldCfg.readOnly) {\n      formItemProps.valuePropName = 'fileList';\n      /**\n       * Setting `getValueFromEvent` to provide the proper file list to the antd Upload component.\n       */\n      formItemProps.getValueFromEvent = (e: UploadFile<ShogunFile>[] | UploadChangeParam<UploadFile<ShogunFile>>) => {\n        if (Array.isArray(e)) {\n          return e;\n        }\n        return e && e.fileList;\n      };\n    }\n\n    return (\n      <Form.Item\n        key={fieldCfg.propertyName}\n        name={fieldCfg.propertyName}\n        label={fieldCfg.displayName || fieldCfg.propertyName}\n        {...formItemProps}\n      >\n        {field}\n      </Form.Item>\n    );\n  };\n\n  const createReadOnlyComponent = (fieldConfig: PropertyFormItemEditConfig): React.ReactNode => {\n    return (\n      <DisplayField\n        {...fieldConfig.fieldProps}\n      />\n    );\n  };\n\n  const createFieldComponent = (fieldCfg: PropertyFormItemEditConfig): React.ReactNode => {\n    if (!client) {\n      return;\n    }\n\n    switch (fieldCfg.component) {\n      case 'CHECKBOX':\n        return (\n          <Checkbox\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'DATE':\n        return (\n          <DatePicker\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'DISPLAY':\n        return (\n          <span {...fieldCfg?.fieldProps} />\n        );\n      case 'INPUT':\n        return (\n          <Input\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'NUMBER':\n        return (\n          <InputNumber\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'SELECT':\n        return (\n          <Select\n            allowClear={true}\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'SWITCH':\n        return (\n          <Switch\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'TEXTAREA':\n        return (\n          <Input.TextArea\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'UPLOAD':\n        if (fieldCfg?.fieldProps?.type === 'IMAGE') {\n          return (\n            <ImageUpload\n              {...fieldCfg?.fieldProps}\n            />\n          );\n        } else {\n          return (\n            <FileUpload\n              {...fieldCfg?.fieldProps}\n            />\n          );\n        }\n      case 'REFERENCE_TABLE':\n        const referenceTableConfig = (fieldCfg as PropertyFormItemEditReferenceTableConfig);\n\n        return (\n          <EditReferenceTable\n            key={referenceTableConfig.propertyName}\n            tablePropertyName={referenceTableConfig.tablePropertyName}\n            propertyName={referenceTableConfig.propertyName}\n            formConfig={referenceTableConfig.editFormConfig}\n            parentForm={form}\n            {...referenceTableConfig.fieldProps}\n          />\n        );\n      default:\n        Logger.error(`Component type \"${fieldCfg?.component}\" is not supported`);\n        return <></>;\n    }\n  };\n\n  const onValuesChange = async (changedValues: any) => {\n    if (applyFormDirty && changedValues && !formDirty) {\n      dispatch(setFormDirty(true));\n    }\n  };\n\n  return (\n    <Form\n      className=\"edit-feature-form\"\n      form={form}\n      labelCol={{\n        span: 8\n      }}\n      labelAlign=\"left\"\n      labelWrap\n      onValuesChange={_debounce(onValuesChange, 250)}\n      {...passThroughProps}\n    >\n      { formConfig?.map(createFormItem) }\n    </Form>\n  );\n};\n\nexport default EditFeatureForm;\n","import {\n  useCallback\n} from 'react';\n\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type LocalGeometryType = 'MultiPoint' | 'Point' | 'MultiLineString' | 'LineString' | 'MultiPolygon' | 'Polygon';\nexport type GeometryType = 'gml:MultiPoint' | 'gml:Point' | 'gml:MultiLineString' | 'gml:LineString' | 'gml:MultiPolygon' | 'gml:Polygon';\n\nexport type Property = {\n  localType: 'int' | 'number' | 'string' | 'boolean' | 'date' | LocalGeometryType;\n  maxOccurs: 0 | 1;\n  minOccurs: 0 | 1;\n  name: string;\n  nillable: boolean;\n  type: 'xsd:int' | 'xsd:number' | 'xsd:string' | 'xsd:boolean' | 'xsd:date' | GeometryType;\n};\n\nexport type FeatureType = {\n  typeName: string;\n  properties: Property[];\n};\n\nexport type DescribeFeatureType = {\n  elementFormDefault: string;\n  featureTypes: FeatureType[];\n  targetNamespace: string;\n  targetPrefix: string;\n};\n\nexport const isGeometryType = (propertyType: string): propertyType is GeometryType => {\n  const geometryTypes = [\n    'gml:MultiPoint',\n    'gml:Point',\n    'gml:MultiLineString',\n    'gml:LineString',\n    'gml:MultiPolygon',\n    'gml:Polygon'\n  ];\n\n  return geometryTypes.includes(propertyType);\n};\n\nexport const useExecuteWfsDescribeFeatureType = () => {\n  const client = useSHOGunAPIClient();\n\n  const executeWfsDescribeFeatureType = useCallback(async (layer: WmsLayer) => {\n    let url;\n\n    const source = layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = source.getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = source.getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const params = {\n      SERVICE: 'WFS',\n      REQUEST: 'DescribeFeatureType',\n      VERSION: '2.0.0',\n      OUTPUTFORMAT: 'application/json',\n      TYPENAMES: layer.getSource()?.getParams().LAYERS\n    };\n\n    const defaultHeaders = {\n      'Content-Type': 'application/json'\n    };\n\n    const response = await fetch(`${url}?${UrlUtil.objectToRequestString(params)}`, {\n      method: 'GET',\n      headers: layer.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response while executing a WFS-Transaction');\n    }\n\n    return await response.json() as DescribeFeatureType;\n  }, [client]);\n\n  return executeWfsDescribeFeatureType;\n};\n\nexport default useExecuteWfsDescribeFeatureType;\n","import {\n  useCallback\n} from 'react';\n\nimport {\n  FormInstance\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _cloneDeep from 'lodash/cloneDeep';\n\nimport {\n  isMoment\n} from 'moment';\n\nimport {\n  isEmpty\n} from 'ol/extent';\nimport OlFeature from 'ol/Feature';\nimport OlFormatWFS, {\n  WriteTransactionOptions as OlWriteTransactionOptions\n} from 'ol/format/WFS';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  PropertyFormTabConfig,\n  PropertyFormItemEditConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport {\n  isFileConfig\n} from '../components/EditFeatureDrawer/EditFeatureForm';\n\nimport useAppSelector from './useAppSelector';\nimport useExecuteWfsDescribeFeatureType, {\n  isGeometryType\n} from './useExecuteWfsDescribeFeatureType';\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type WriteWfsTransactionOpts = {\n  layer: WmsLayer;\n  upsertFeatures?: OlFeature[];\n  deleteFeatures?: OlFeature[];\n  form?: FormInstance;\n};\n\nexport type FileInfoList = {\n  uid: string;\n  lastModified: number;\n  name: string;\n  type: string;\n  url: string;\n  response: {\n    id: number;\n    created: string;\n    fileName: string;\n    fileType: string;\n    fileUuid: string;\n  };\n};\n\nexport const useWriteWfsTransaction = () => {\n  const map = useMap();\n  const executeWfsDescribeFeatureType = useExecuteWfsDescribeFeatureType();\n  const client = useSHOGunAPIClient();\n  const allowedEditMode = useAppSelector(state => state.editFeature.userEditMode);\n\n  const cleanFormValues = useCallback((formValues: Record<string, any>,\n    formConfig: PropertyFormTabConfig<PropertyFormItemEditConfig>[], stringify?: boolean) => {\n    for (const [key, value] of Object.entries(formValues)) {\n      if (Array.isArray(value)) {\n        const cleanedValue = value.map(v => cleanFormValues(v, formConfig));\n        formValues[key] = stringify ? JSON.stringify(cleanedValue) : cleanedValue;\n      }\n\n      // Transform undefined to null values.\n      if (value === undefined) {\n        formValues[key] = null;\n      }\n\n      // Filter out read-only fields.\n      const isReadOnly = formConfig.some(cfg => cfg.children\n        ?.some(child => child.propertyName === key && child.readOnly));\n\n      if (isReadOnly) {\n        delete formValues[key];\n      }\n\n      // Transform moments back to iso string.\n      if (isMoment(value)) {\n        formValues[key] = value.toISOString();\n      }\n\n      if (Array.isArray(value) && value.length > 0 && isFileConfig(value[0])) {\n        const filePath = value[0].response?.fileType?.startsWith('image/') ? 'imagefiles/' : 'files/';\n        const fileInfoList: FileInfoList[] = value.map((val: FileInfoList) => ({\n          uid: val.uid,\n          lastModified: val.lastModified,\n          name: val.name,\n          type: val.type,\n          url: `${client?.getBasePath()}${filePath}${val.response.fileUuid}`,\n          response: {\n            id: val.response?.id,\n            created: val.response?.created,\n            fileName: val.response?.fileName,\n            fileType: val.response?.fileType,\n            fileUuid: val.response?.fileUuid\n          }\n        }));\n        formValues[key] = JSON.stringify(fileInfoList);\n      }\n    }\n\n    return formValues;\n  }, [client]);\n\n  const writeWfsTransaction = useCallback(async (opts: WriteWfsTransactionOpts) => {\n    if (!map) {\n      return;\n    }\n\n    const inserts: OlFeature[] = [];\n    const updates: OlFeature[] = [];\n    const deletes: OlFeature[] = [];\n\n    const describeFeatureType = await executeWfsDescribeFeatureType(opts.layer);\n\n    if (!describeFeatureType) {\n      return;\n    }\n\n    const formConfig = opts.layer.get('editFormConfig') as PropertyFormTabConfig<PropertyFormItemEditConfig>[];\n\n    const geomProperty = describeFeatureType.featureTypes[0]?.properties\n      ?.find(property => isGeometryType(property.type));\n\n    let overallUpdateMode = false;\n\n    if (opts.upsertFeatures) {\n      for (const feature of opts.upsertFeatures) {\n        const feat = new OlFeature();\n\n        const geometry = feature.getGeometry()?.clone();\n\n        if (geometry && !isEmpty(geometry.getExtent()) && allowedEditMode?.includes('EDIT_GEOMETRY')) {\n          feat.set(geomProperty?.name || 'geom', geometry);\n          feat.setGeometryName(geomProperty?.name || 'geom');\n        }\n\n        if (opts.form) {\n          feat.setProperties(cleanFormValues(_cloneDeep(opts.form?.getFieldsValue()), formConfig, true));\n        }\n\n        const updateMode = !!feature.getId();\n\n        if (updateMode && !overallUpdateMode) {\n          overallUpdateMode = true;\n        }\n\n        if (updateMode) {\n          feat.setId(feature.getId());\n        }\n\n        if (updateMode) {\n          updates.push(feat);\n        } else {\n          inserts.push(feat);\n        }\n      }\n    }\n\n    if (opts.deleteFeatures) {\n      deletes.push(...opts.deleteFeatures);\n    }\n\n    const transactionOpts: OlWriteTransactionOptions = {\n      featureNS: describeFeatureType.targetNamespace,\n      featurePrefix: describeFeatureType.targetPrefix,\n      featureType: opts.layer.getSource()?.getParams().LAYERS,\n      srsName: map.getView().getProjection().getCode(),\n      version: '1.1.0',\n      nativeElements: []\n    };\n\n    const format = new OlFormatWFS();\n\n    const transaction = format.writeTransaction(inserts, updates, deletes, transactionOpts);\n\n    if (overallUpdateMode && ClientConfiguration.wfsLockFeatureEnabled) {\n      const rootNode = transaction.getRootNode() as Element;\n      const lockId = document.createElementNS('http://www.opengis.net/wfs', 'LockId');\n      const lockIdValue = document.createTextNode('GeoServer');\n      lockId.appendChild(lockIdValue);\n      rootNode.appendChild(lockId);\n    }\n\n    return transaction;\n  }, [map, allowedEditMode, executeWfsDescribeFeatureType, cleanFormValues]);\n\n  return writeWfsTransaction;\n};\n\nexport default useWriteWfsTransaction;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport {\n  Drawer\n} from 'antd';\n\nimport type {\n  DrawerProps\n} from 'antd/es/drawer';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\nexport type MapDrawerProps = DrawerProps;\n\nexport const MapDrawer: React.FC<MapDrawerProps> = ({\n  open,\n  children,\n  ...passThroughProps\n}) => {\n\n  const map = useMap();\n\n  useEffect(() => {\n    document.querySelectorAll('#map')[0]?.classList.toggle('bisected', !!open);\n  }, [open]);\n\n  const onAfterDrawerOpenChange = () => {\n    map?.updateSize();\n  };\n\n  return (\n    <Drawer\n      className=\"map-drawer\"\n      mask={false}\n      open={open}\n      placement=\"right\"\n      width={getComputedStyle(document.documentElement).getPropertyValue('--editDrawerWidth')}\n      afterOpenChange={onAfterDrawerOpenChange}\n      {...passThroughProps}\n    >\n      {children}\n    </Drawer>\n  );\n};\n\nexport default MapDrawer;\n","import {\n  useCallback\n} from 'react';\n\nimport {\n  FeatureCollection\n} from 'geojson';\n\nimport OlFormatFilter from 'ol/format/filter/Filter';\nimport OlFormatWFS from 'ol/format/WFS';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useExecuteWfsDescribeFeatureType from './useExecuteWfsDescribeFeatureType';\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type GetFeatureOpts = {\n  layer: WmsLayer;\n  filter?: OlFormatFilter;\n};\n\nexport const useExecuteGetFeature = () => {\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const executeWfsDescribeFeatureType = useExecuteWfsDescribeFeatureType();\n\n  const executeGetFeature = useCallback(async (opts: GetFeatureOpts) => {\n    if (!map) {\n      return;\n    }\n\n    const describeFeatureType = await executeWfsDescribeFeatureType(opts.layer);\n\n    if (!describeFeatureType) {\n      return;\n    }\n\n    let url;\n\n    const source = opts.layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = source.getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = source.getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const featureRequest = new OlFormatWFS().writeGetFeature({\n      srsName: map.getView().getProjection().getCode(),\n      featureNS: describeFeatureType.targetNamespace,\n      featurePrefix: describeFeatureType.targetPrefix,\n      featureTypes: [source?.getParams().LAYERS],\n      outputFormat: 'application/json',\n      filter: opts.filter\n    });\n\n    const defaultHeaders = {\n      'Content-Type': 'application/json'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: opts.layer?.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders,\n      body: new XMLSerializer().serializeToString(featureRequest)\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response');\n    }\n\n    return await response.json() as FeatureCollection;\n  }, [client, executeWfsDescribeFeatureType, map]);\n\n  return executeGetFeature;\n};\n\nexport default useExecuteGetFeature;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\n\nimport {\n  faPencil,\n  faTrash,\n  faDrawPolygon,\n  faUndo\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport { TooltipPlacement } from 'antd/es/tooltip';\nimport {\n  FeatureCollection,\n  Feature\n} from 'geojson';\nimport { t } from 'i18next';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport { isEmpty as isEmptyOlExtent } from 'ol/extent';\nimport OlFormatGeoJson from 'ol/format/GeoJSON';\nimport OlGeometry from 'ol/geom/Geometry';\nimport { DrawEvent as OlDrawEvent } from 'ol/interaction/Draw';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport DeleteButton from '@terrestris/react-geo/dist/Button/DeleteButton/DeleteButton';\nimport DrawButton from '@terrestris/react-geo/dist/Button/DrawButton/DrawButton';\nimport ModifyButton from '@terrestris/react-geo/dist/Button/ModifyButton/ModifyButton';\nimport SimpleButton from '@terrestris/react-geo/dist/Button/SimpleButton/SimpleButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport Toolbar, { ToolbarProps } from '@terrestris/react-geo/dist/Toolbar/Toolbar';\n\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\n\nimport {\n  setFormDirty\n} from '../../../store/editFeature';\n\nimport './index.less';\n\nexport type EditFeatureGeometryToolbarProps = ToolbarProps & {\n  feature: Feature;\n  historyLength?: number;\n};\n\ntype DrawType = 'Point' | 'LineString' | 'Polygon';\n\ntype EditHistory = {\n  past: FeatureCollection[];\n  future: FeatureCollection[];\n};\nexport const EditFeatureGeometryToolbar: React.FC<EditFeatureGeometryToolbarProps> = ({\n  feature,\n  historyLength = 10\n}) => {\n\n  const editHistory = useRef<EditHistory>({\n    past: [],\n    future: []\n  });\n\n  const map = useMap();\n  const dispatch = useAppDispatch();\n\n  const [editLayer, setEditLayer] = useState<OlLayerVector<OlSourceVector<OlGeometry>>>();\n  const [, setRevision] = useState<number>(0);\n\n  const gjFormat = useMemo(() => new OlFormatGeoJson(), []);\n\n  const allowedEditMode = useAppSelector(state => state.editFeature.userEditMode);\n  const formDirty = useAppSelector(state => state.editFeature.formDirty);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    if (!editLayer) {\n      setEditLayer(DigitizeUtil.getDigitizeLayer(map));\n    }\n\n    return () => {\n      if (editLayer) {\n        map?.removeLayer(editLayer);\n      }\n    };\n  }, [editLayer, map]);\n\n  useEffect(() => {\n    const isModified = editHistory.current.past.length > 0;\n    if (isModified && !formDirty) {\n      dispatch(setFormDirty(true));\n    }\n  // we only want to change formDirty state when the editHistory changes\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, editHistory.current.past]);\n\n  useEffect(() => {\n    if (editLayer && feature?.id) {\n      editLayer.getSource()?.clear();\n      const olFeat = gjFormat.readFeature(feature);\n      const source = editLayer.getSource() as OlSourceVector;\n      source.addFeature(olFeat);\n      setRevision(r => r + 1);\n\n      if (!isEmptyOlExtent(source.getExtent())) {\n        map?.getView().fit(source.getExtent(), {\n          padding: [50, 50, 50, 50]\n        });\n      }\n    }\n  }, [feature, editLayer, gjFormat, map]);\n\n  const undoEdit = () => {\n\n    const editSource = editLayer?.getSource();\n    const features = editSource?.getFeatures();\n\n    if (!features) {\n      return;\n    }\n\n    const clone: FeatureCollection = gjFormat.writeFeaturesObject(features);\n    const previousSource = editHistory.current.past[editHistory.current.past.length - 1];\n    if (!_isEmpty(previousSource)) {\n      editSource?.clear();\n      editSource?.addFeatures(gjFormat.readFeatures(previousSource));\n      editHistory.current = {\n        past: editHistory.current.past.slice(0, -1),\n        future: [...editHistory.current.future, clone].slice(-historyLength)\n      };\n      setRevision(r => r + 1);\n    }\n  };\n\n  const redoEdit = () => {\n\n    const editSource = editLayer?.getSource();\n    const features = editSource?.getFeatures();\n\n    if (!features) {\n      return;\n    }\n\n    const clone = gjFormat.writeFeaturesObject(features);\n    const nextSource = editHistory.current.future[editHistory.current.future.length - 1];\n    if (!_isEmpty(nextSource)) {\n      editSource?.clear();\n      editSource?.addFeatures(gjFormat.readFeatures(nextSource));\n\n      editHistory.current = {\n        future: editHistory.current.future.slice(0, -1),\n        past: [...editHistory.current.past, clone].slice(-historyLength)\n      };\n      setRevision(r => r + 1);\n    }\n  };\n\n  const onDrawEnd = (e: OlDrawEvent) => {\n    // overwrite existing geometry of feature\n    if (!feature.geometry.type.toLocaleLowerCase().startsWith('multi')) {\n      const source = editLayer?.getSource();\n      const existingFeature = source?.getFeatures()[0];\n      if (existingFeature) {\n        // drawbutton automatically adds the feature to the source so we need to remove it again\n        source?.once('addfeature', (e2) => source.removeFeature(e2.feature!));\n        existingFeature.setGeometry(e.feature.getGeometry());\n      }\n    }\n    updateRevision();\n  };\n\n  const updateRevision = () => {\n\n    const features = editLayer?.getSource()?.getFeatures();\n\n    if (!features) {\n      return;\n    }\n\n    const clone: FeatureCollection = gjFormat.writeFeaturesObject(features);\n    editHistory.current = {\n      ...editHistory.current,\n      past: [...editHistory.current.past, clone].slice(-10)\n    };\n    setRevision(r => r + 1);\n  };\n\n  const btnTooltipProps = {\n    tooltipPlacement: 'left' as TooltipPlacement,\n    tooltipProps: {\n      mouseEnterDelay: 0.5\n    }\n  };\n\n  if (!editLayer) {\n    return <></>;\n  }\n\n  if (allowedEditMode.includes('EDIT_GEOMETRY')) {\n    return (\n      <Toolbar\n        className=\"geometry-edit-tb\"\n        alignment=\"vertical\"\n      >\n        <ToggleGroup>\n          {\n            allowedEditMode.includes('CREATE') ?\n              <DrawButton\n                icon={\n                  <FontAwesomeIcon icon={faPencil} />\n                }\n                pressedIcon={\n                  <FontAwesomeIcon icon={faPencil} />\n                }\n                name=\"draw\"\n                digitizeLayer={editLayer}\n                tooltip={t('EditFeatureGeometryToolbar.draw')}\n                drawType={feature.geometry.type as DrawType}\n                onDrawEnd={onDrawEnd}\n                {...btnTooltipProps}\n              />\n              : <></>\n          }\n          {\n            allowedEditMode.includes('UPDATE') ?\n              <ModifyButton\n                icon={\n                  <FontAwesomeIcon icon={faDrawPolygon} />\n                }\n                pressedIcon={\n                  <FontAwesomeIcon icon={faDrawPolygon} />\n                }\n                name=\"edit\"\n                digitizeLayer={editLayer}\n                tooltip={t('EditFeatureGeometryToolbar.edit')}\n                onModifyStart={updateRevision}\n                onModifyEnd={updateRevision}\n                onTranslateEnd={updateRevision}\n                {...btnTooltipProps}\n              />\n              : <></>\n          }\n          {\n            allowedEditMode.includes('DELETE') ?\n              <DeleteButton\n                icon={\n                  <FontAwesomeIcon icon={faTrash} />\n                }\n                pressedIcon={\n                  <FontAwesomeIcon icon={faTrash} />\n                }\n                name=\"delete\"\n                digitizeLayer={editLayer}\n                tooltip={t('EditFeatureGeometryToolbar.delete')}\n                onFeatureRemove={updateRevision}\n                {...btnTooltipProps}\n              />\n              : <></>\n          }\n        </ToggleGroup>\n        <SimpleButton\n          icon={\n            <FontAwesomeIcon icon={faUndo} />\n          }\n          tooltip={t('EditFeatureGeometryToolbar.undo')}\n          onClick={undoEdit}\n          disabled={editHistory.current.past?.length === 0}\n          {...btnTooltipProps}\n        />\n        <SimpleButton\n          icon={\n            <FontAwesomeIcon\n              icon={faUndo}\n              flip=\"horizontal\"\n            />\n          }\n          tooltip={t('EditFeatureGeometryToolbar.redo')}\n          onClick={redoEdit}\n          disabled={editHistory.current.future?.length === 0}\n          {...btnTooltipProps}\n        />\n      </Toolbar>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default EditFeatureGeometryToolbar;\n","import React from 'react';\n\nimport {\n  Tabs,\n  TabsProps\n} from 'antd';\n\nimport {\n  FormInstance\n} from 'antd/lib/form/Form';\n\nimport {\n  Tab\n} from 'rc-tabs/lib/interface';\n\nimport {\n  PropertyFormItemEditConfig,\n  PropertyFormTabConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport EditFeatureForm from '../EditFeatureForm';\n\nexport type EditFeatureTabsProps = TabsProps & {\n  tabConfig?: PropertyFormTabConfig<PropertyFormItemEditConfig>[];\n  form: FormInstance;\n  initialValues?: Record<string, any>;\n};\n\nexport const EditFeatureTabs: React.FC<EditFeatureTabsProps> = ({\n  tabConfig,\n  form,\n  initialValues,\n  ...passThroughProps\n}) => {\n\n  const items = tabConfig?.map((config, idx) => {\n    return {\n      label: config.title,\n      key: `${idx}`,\n      forceRender: true,\n      children: (\n        <EditFeatureForm\n          name={config.title}\n          form={form}\n          initialValues={initialValues}\n          formConfig={config.children}\n        />\n      )\n    } as Tab;\n  });\n\n  return (\n    <Tabs\n      items={items}\n      {...passThroughProps}\n    />\n  );\n};\n\nexport default EditFeatureTabs;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faTrash\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  ButtonProps,\n  Popconfirm\n} from 'antd';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useExecuteWfsTransaction from '../../../hooks/useExecuteWfsTransaction';\nimport useWriteWfsTransaction from '../../../hooks/useWriteWfsTransaction';\n\nexport type DeleteButtonProps = ButtonProps & {\n  feature: Feature;\n  layer: WmsLayer;\n  onError?: (error: unknown) => void;\n  onSuccess?: () => void;\n};\n\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n  feature,\n  layer,\n  onError = () => {},\n  onSuccess = () => {},\n  ...passThroughProps\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const writeWfsTransaction = useWriteWfsTransaction();\n  const executeWfsTransaction = useExecuteWfsTransaction();\n\n  const onConfirmDelete = async () => {\n    if (!map) {\n      return;\n    }\n\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const olFeature = new OlFormatGeoJSON().readFeature(feature);\n\n      const transaction = await writeWfsTransaction({\n        deleteFeatures: [olFeature],\n        layer: layer\n      });\n\n      if (!transaction) {\n        return;\n      }\n\n      await executeWfsTransaction({\n        layer: layer,\n        transaction: transaction\n      });\n\n      layer.getSource()?.refresh();\n\n      onSuccess();\n    } catch (error) {\n      Logger.error(error);\n\n      onError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Popconfirm\n      title={t('DeleteButton.confirm')}\n      onConfirm={onConfirmDelete}\n      placement='bottomRight'\n    >\n      <Button\n        type='primary'\n        loading={loading}\n        disabled={!feature.id}\n        danger\n        icon={(\n          <FontAwesomeIcon\n            icon={faTrash}\n          />\n        )}\n        {...passThroughProps}\n      >\n        {\n          t('DeleteButton.title')\n        }\n      </Button>\n    </Popconfirm>\n  );\n};\n\nexport default DeleteButton;\n","import React from 'react';\n\nimport {\n  faRotateLeft\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  ButtonProps\n} from 'antd';\n\nimport {\n  FormInstance\n} from 'antd/lib/form/Form';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport OlFormatGeoJson from 'ol/format/GeoJSON';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport { DigitizeUtil } from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport {\n  setFormDirty\n} from '../../../store/editFeature';\n\nexport type ResetButtonProps = Omit<ButtonProps, 'form'> & {\n  feature: Feature;\n  form: FormInstance;\n};\n\nexport const ResetButton: React.FC<ResetButtonProps> = ({\n  feature,\n  form,\n  ...passThroughProps\n}) => {\n\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const dispatch = useAppDispatch();\n\n  const onClick = () => {\n    form.resetFields();\n    dispatch(setFormDirty(false));\n\n    if (map) {\n      const editLayer = DigitizeUtil.getDigitizeLayer(map);\n      if (editLayer) {\n        editLayer.getSource()?.clear();\n        const format = new OlFormatGeoJson();\n        const olFeat = format.readFeature(feature);\n        editLayer.getSource()?.addFeature(olFeat);\n      }\n    }\n  };\n\n  return (\n    <Button\n      type='primary'\n      onClick={onClick}\n      icon={(\n        <FontAwesomeIcon\n          icon={faRotateLeft}\n        />\n      )}\n      {...passThroughProps}\n    >\n      {\n        t('ResetButton.title')\n      }\n    </Button>\n  );\n};\n\nexport default ResetButton;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport './index.less';\n\nexport type FeedbackIconProps = {\n  loadComplete: boolean;\n};\n\nexport const FeedbackIcon: React.FC<FeedbackIconProps> = ({\n  loadComplete = false\n}) => {\n\n  return (\n    <div className={loadComplete ? 'feedback-icon' : 'feedback-icon hidden'}>\n      <div className={loadComplete ? 'checkmark' : 'checkmark-hidden'} />\n    </div>\n  );\n};\n\nexport default FeedbackIcon;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faFloppyDisk\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  ButtonProps\n} from 'antd';\n\nimport {\n  FormInstance\n} from 'antd/lib/form/Form';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useExecuteWfsTransaction from '../../../hooks/useExecuteWfsTransaction';\nimport useWriteWfsTransaction from '../../../hooks/useWriteWfsTransaction';\nimport {\n  setFormDirty\n} from '../../../store/editFeature';\n\nimport './index.less';\nimport FeedbackIcon from '../../FeedbackIcon';\n\nexport type SaveButtonProps = Omit<ButtonProps, 'form'> & {\n  form: FormInstance;\n  layer: WmsLayer;\n  onError?: (error?: unknown) => void;\n  onSuccess?: (response?: string) => void;\n};\n\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n  form,\n  layer,\n  onError = () => {},\n  onSuccess = () => {},\n  ...passThroughProps\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [saveCompleted, setSaveCompleted] = useState(false);\n\n  const map = useMap();\n\n  const writeWfsTransaction = useWriteWfsTransaction();\n  const executeWfsTransaction = useExecuteWfsTransaction();\n\n  const dispatch = useAppDispatch();\n\n  const formDirty = useAppSelector(\n    state => state.editFeature.formDirty\n  );\n\n  const {\n    t\n  } = useTranslation();\n\n  const onClick = async () => {\n    if (!map) {\n      return;\n    }\n\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    const editLayer = DigitizeUtil.getDigitizeLayer(map);\n\n    if (!editLayer) {\n      Logger.error('Cannot find the digitize layer');\n      onError();\n      return;\n    }\n\n    const features = editLayer.getSource()?.getFeatures();\n\n    if (!features || features.length === 0) {\n      Logger.error('Cannot save feature without geometry');\n      onError(t('SaveButton.errorNoGeometry'));\n      return;\n    }\n\n    try {\n      await form.validateFields();\n    } catch (error) {\n      onError(error);\n      Logger.warn('Validation has failed: ', error);\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const transaction = await writeWfsTransaction({\n        upsertFeatures: features,\n        form: form,\n        layer: layer\n      });\n\n      if (!transaction) {\n        return;\n      }\n\n      const result = await executeWfsTransaction({\n        layer: layer,\n        transaction: transaction\n      });\n\n      layer.getSource()?.refresh();\n\n      setSaveCompleted(true);\n      setTimeout(() => {\n        setSaveCompleted(false);\n      }, 3000);\n\n      dispatch(setFormDirty(false));\n\n      onSuccess(result);\n    } catch (error) {\n      Logger.error(error);\n\n      onError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Button\n      className='save-button'\n      type='primary'\n      onClick={onClick}\n      loading={loading}\n      disabled={!formDirty}\n      icon={(\n        <FontAwesomeIcon\n          icon={faFloppyDisk}\n        />\n      )}\n      {...passThroughProps}\n    >\n      {\n        t('SaveButton.title')\n      }\n      <FeedbackIcon loadComplete={saveCompleted} />\n    </Button>\n  );\n};\n\nexport default SaveButton;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  FormInstance\n} from 'antd';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppSelector from '../../../hooks/useAppSelector';\n\nimport DeleteButton from '../DeleteButton';\nimport ResetButton from '../ResetButton';\nimport SaveButton from '../SaveButton';\n\nimport './index.less';\n\nexport type EditFeatureToolbarProps = {\n  feature: Feature;\n  layer: WmsLayer;\n  form: FormInstance;\n  onSaveSuccess?: (responseText?: string) => void;\n  onSaveError?: (error: unknown) => void;\n  onDeleteSuccess?: () => void;\n  onDeleteError?: (error: unknown) => void;\n};\n\nexport const EditFeatureToolbar: React.FC<EditFeatureToolbarProps> = ({\n  feature,\n  layer,\n  form,\n  onSaveSuccess = () => {},\n  onSaveError = () => {},\n  onDeleteSuccess = () => {},\n  onDeleteError = () => {}\n}) => {\n  const allowedEditMode = useAppSelector(state => state.editFeature.userEditMode);\n\n  return (\n    <div\n      className='edit-feature-toolbar'\n    >\n      {\n        allowedEditMode.includes('CREATE') ||\n        allowedEditMode.includes('UPDATE') ?\n          <>\n            <ResetButton\n              feature={feature}\n              form={form}\n            />\n            <SaveButton\n              form={form}\n              layer={layer}\n              onSuccess={onSaveSuccess}\n              onError={onSaveError}\n            />\n          </>: <></>\n      }\n      {\n        allowedEditMode.includes('DELETE') &&\n        <DeleteButton\n          feature={feature}\n          layer={layer}\n          onSuccess={onDeleteSuccess}\n          onError={onDeleteError}\n        />\n      }\n    </div>\n  );\n};\n\nexport default EditFeatureToolbar;\n","import React, {\n  ReactNode,\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Alert,\n  UploadFile\n} from 'antd';\nimport {\n  useForm\n} from 'antd/lib/form/Form';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport moment from 'moment';\n\nimport {\n  equalTo\n} from 'ol/format/filter';\n\nimport { ValidateErrorEntity } from 'rc-field-form/es/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport ShogunFile from '@terrestris/shogun-util/dist/model/File';\nimport {\n  PropertyFormItemEditConfig,\n  PropertyFormTabConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useConvertImageUrl from '../../../hooks/useConvertImageUrl';\nimport useExecuteGetFeature from '../../../hooks/useExecuteGetFeature';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport {\n  setFeature\n} from '../../../store/editFeature';\n\nimport { isFileConfig } from '../EditFeatureForm';\nimport EditFeatureGeometryToolbar from '../EditFeatureGeometryToolbar';\nimport EditFeatureTabs from '../EditFeatureTabs';\nimport EditFeatureToolbar from '../EditFeatureToolbar';\n\nexport type EditFeatureFullFormProps = {\n  feature: Feature;\n  layer: WmsLayer;\n};\n\nexport const EditFeatureFullForm: React.FC<EditFeatureFullFormProps> = ({\n  feature,\n  layer\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const executeGetFeature = useExecuteGetFeature();\n  const imageUrlToBase64 = useConvertImageUrl();\n\n  const [tabConfig, setTabConfig] = useState<PropertyFormTabConfig<PropertyFormItemEditConfig>[]>();\n  const [initialValues, setInitialValues] = useState<Record<string, any>>();\n  const [errorMsg, setErrorMsg] = useState<string | ReactNode>();\n\n  const [form] = useForm();\n  const map = useMap();\n  const dispatch = useAppDispatch();\n  const client = useSHOGunAPIClient();\n\n  const reloadFeature = useCallback(async (id: string) => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    const updatedFeatures = await executeGetFeature({\n      layer: layer,\n      filter: equalTo('id', id)\n    });\n\n    if (\n      updatedFeatures?.features[0]\n    ) {\n      dispatch(setFeature(updatedFeatures?.features[0]));\n    }\n  }, [dispatch, executeGetFeature, layer]);\n\n  const update = useCallback(async () => {\n    if (!map || !client) {\n      return;\n    }\n\n    let editFormConfig = layer.get('editFormConfig') as PropertyFormTabConfig<PropertyFormItemEditConfig>[];\n\n    if (editFormConfig?.length === 0) {\n      Logger.warn(`Layer ${layer.get('name')} has no 'editFormConfig' set`);\n      return;\n    }\n\n    const properties = structuredClone(feature?.properties) || {};\n\n    const setPropertiesPromises = Object.entries(properties).map(async ([key, value]) => {\n      const tabConfigs = editFormConfig?.filter(tabCfg => {\n        return tabCfg.children?.find(formCfg => formCfg.propertyName === key);\n      });\n\n      if (tabConfigs.length > 1) {\n        Logger.warn(`Property ${key} is configured in multiple tabs. Is this intended?`);\n      }\n\n      if (tabConfigs && tabConfigs[0]) {\n        const isDate = tabConfigs[0].children?.some(cfg => {\n          return cfg.propertyName === key && cfg.component === 'DATE';\n        });\n\n        if (isDate) {\n          const parsedDate = moment(value);\n\n          if (parsedDate.isValid()) {\n            properties[key] = parsedDate;\n          } else {\n            Logger.warn('Could not parse date');\n            properties[key] = null;\n          }\n        }\n\n        const isUpload = tabConfigs[0].children?.some(cfg => {\n          return cfg.propertyName === key && cfg.component === 'UPLOAD';\n        });\n\n        if (isUpload) {\n          if (value) {\n            try {\n              const parsedJson = JSON.parse(value);\n              if (!isFileConfig(parsedJson[0])) {\n                throw new Error('File config is no valid SHOGun file.');\n              }\n              const fileList = parsedJson as UploadFile<ShogunFile>[];\n              properties[key] = fileList;\n              const fileListWithBlob = fileList.map(async (val: any) => {\n                const isImageFile = fileList[0].response?.fileType?.startsWith('image/');\n                const thumbUrl = isImageFile ?\n                  await imageUrlToBase64(`${client.getBasePath()}imagefiles/${val?.response?.fileUuid}/thumbnail`) : undefined;\n                return {\n                  ...val,\n                  thumbUrl,\n                  url: isImageFile ? undefined : val.url\n                };\n              });\n\n              const result = await Promise.all(fileListWithBlob);\n              properties[key] = result;\n            } catch (error) {\n              Logger.error('Could not parse file list from JSON config: ', error);\n              properties[key] = [];\n            }\n          } else {\n            properties[key] = [];\n          }\n        }\n\n        const isReference = tabConfigs[0].children?.some(cfg =>\n          cfg.propertyName === key && cfg.component === 'REFERENCE_TABLE');\n\n        if (isReference) {\n          try {\n            properties[key] = JSON.parse(properties[key]);\n          } catch (error) {\n            Logger.warn('Could not parse the input for the REFERENCE_TABLE', error);\n          }\n        }\n      }\n    });\n\n    await Promise.all(setPropertiesPromises);\n\n    setInitialValues(properties);\n    form.resetFields();\n    form.setFieldsValue(properties);\n\n    setTabConfig(editFormConfig);\n  }, [map, client, layer, feature?.properties, form, imageUrlToBase64]);\n\n  useEffect(() => {\n    update();\n  }, [update]);\n\n  const formatErrorMessage = (error: ValidateErrorEntity): React.ReactNode => {\n    const collectedFieldErrors: string[] = [];\n    const errorFields = error.errorFields || [];\n\n    errorFields.forEach((field) => {\n      if (Array.isArray(field.errors)) {\n        collectedFieldErrors.push(...field.errors);\n      }\n    });\n\n    const formattedMessage = collectedFieldErrors.map((line, index) => (\n      <React.Fragment key={index}>\n        {line}\n        {index !== collectedFieldErrors.length - 1 && <br />}\n      </React.Fragment>\n    ));\n\n    return formattedMessage;\n  };\n\n  const onSaveSuccess = (responseText?: string) => {\n    if (!responseText) {\n      return;\n    }\n    setErrorMsg(undefined);\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'text/xml');\n\n    // get feature id from response\n    const featureId = xmlDoc.getElementsByTagName('ogc:FeatureId');\n    const idString = featureId.item(0)?.getAttribute('fid');\n    const id = idString?.split('.')[1];\n    if (id) {\n      reloadFeature(id);\n    }\n  };\n\n  const onSaveError = (error?: unknown) => {\n    if (typeof error === 'object' && error !== null && 'errorFields' in error) {\n      const formattedErrorMessage = formatErrorMessage(\n        error as ValidateErrorEntity\n      );\n      setErrorMsg(formattedErrorMessage);\n    } else if (typeof error === 'string') {\n      setErrorMsg(error);\n    } else {\n      setErrorMsg(t('EditFeatureFullForm.saveErrorMsg'));\n    }\n  };\n\n  const onDeleteSuccess = () => {\n    setErrorMsg(undefined);\n    dispatch(setFeature(null));\n  };\n\n  const onDeleteError = () => {\n    setErrorMsg(t('EditFeatureFullForm.deleteErrorMsg'));\n  };\n\n  return (\n    <>\n      <EditFeatureGeometryToolbar\n        feature={feature}\n      />\n      {\n        errorMsg && (\n          <Alert\n            className=\"error-alert\"\n            message={errorMsg}\n            type=\"error\"\n            showIcon\n          />\n        )\n      }\n      <EditFeatureToolbar\n        feature={feature}\n        layer={layer}\n        form={form}\n        onSaveSuccess={onSaveSuccess}\n        onSaveError={onSaveError}\n        onDeleteSuccess={onDeleteSuccess}\n        onDeleteError={onDeleteError}\n      />\n      <EditFeatureTabs\n        tabConfig={tabConfig}\n        initialValues={initialValues}\n        form={form}\n      />\n    </>\n  );\n};\n\nexport default EditFeatureFullForm;\n","import {\n  useCallback\n} from 'react';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type ExecuteWfsLockOpts = {\n  layer: WmsLayer;\n  feature: Feature;\n};\n\nexport const useExecuteWfsLockFeature = () => {\n  const client = useSHOGunAPIClient();\n\n  const writeWfsLockFeature = (opts: ExecuteWfsLockOpts) => {\n    const featureId = opts.feature.id;\n    const featureProperties = opts.feature.properties;\n\n    if (!featureId || !featureProperties) {\n      Logger.warn('Either the id of the feature or its properties (or even both) aren\\'t available');\n      return;\n    }\n\n    let id: number;\n    if (typeof featureId === 'number') {\n      id = featureId;\n    } else {\n      id = parseInt(featureId.split('.')[1], 10);\n    }\n\n    const match = Object.entries(featureProperties).find(([, value]) => (value === id || value === id.toString()));\n\n    if (!match) {\n      Logger.warn('Count not detect the id property');\n      return;\n    }\n\n    const idProperty = match[0];\n\n    const typeName = opts.layer.getSource()?.getParams().LAYERS;\n\n    const lockFeatureDoc = document.createElementNS('http://www.opengis.net/wfs/2.0', 'LockFeature');\n\n    lockFeatureDoc.setAttribute('service', 'WFS');\n    lockFeatureDoc.setAttribute('version', '2.0.0');\n    // Expiry in seconds.\n    lockFeatureDoc.setAttribute('expiry', '300');\n    lockFeatureDoc.setAttribute('lockAction', 'SOME');\n\n    const queryElement = document.createElementNS('http://www.opengis.net/wfs/2.0', 'Query');\n    queryElement.setAttribute('typeNames', typeName);\n\n    const filterElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'Filter');\n    const isEqualToElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'PropertyIsEqualTo');\n\n    const valueReferenceElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'ValueReference');\n    const valueReferenceValue = document.createTextNode(idProperty);\n    valueReferenceElement.appendChild(valueReferenceValue);\n\n    const literalElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'Literal');\n    const literalValue = document.createTextNode(id.toString());\n    literalElement.appendChild(literalValue);\n\n    isEqualToElement.appendChild(valueReferenceElement);\n    isEqualToElement.appendChild(literalElement);\n\n    filterElement.appendChild(isEqualToElement);\n\n    queryElement.appendChild(filterElement);\n\n    lockFeatureDoc.appendChild(queryElement);\n\n    return lockFeatureDoc;\n  };\n\n  const executeWfsLockFeature = useCallback(async (opts: ExecuteWfsLockOpts) => {\n    let url;\n\n    const source = opts.layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = source.getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = source.getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const lockFeatureDoc = writeWfsLockFeature({\n      layer: opts.layer,\n      feature: opts.feature\n    });\n\n    if (!lockFeatureDoc) {\n      return;\n    }\n\n    const defaultHeaders = {\n      'Content-Type': 'application/xml'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: opts.layer?.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders,\n      body: new XMLSerializer().serializeToString(lockFeatureDoc)\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response while executing a WFS-LockFeature');\n    }\n\n    const responseText = await response.text();\n\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'text/xml');\n\n    // TODO Make detection more robust\n    const transactionLockFailed = xmlDoc.getElementsByTagName('wfs:FeaturesNotLocked');\n\n    if (transactionLockFailed.length > 0) {\n      throw new Error(`Error while locking a feature: ${responseText}`);\n    }\n\n    return responseText;\n  }, [client]);\n\n  return executeWfsLockFeature;\n};\n\nexport default useExecuteWfsLockFeature;\n","import {\n  useCallback,\n  useEffect\n} from 'react';\n\nimport {\n  FeatureCollection\n} from 'geojson';\n\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport const useGetFeatureInfo = (layer?: WmsLayer, onSuccess?: (featureCollection: FeatureCollection) => void, onFailure?: () => void) => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n\n  const onSingleClick = useCallback(async (evt: MapBrowserEvent<MouseEvent>) => {\n    if (!map || !layer) {\n      return;\n    }\n\n    const coords = evt.coordinate;\n\n    const viewResolution = map.getView().getResolution();\n\n    if (!viewResolution) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const url = source?.getFeatureInfoUrl(\n      coords,\n      viewResolution,\n      map.getView().getProjection(),\n      {\n        INFO_FORMAT: 'application/json',\n        BUFFER: 10\n      }\n    );\n\n    const defaultHeaders = {\n      'Content-Type': 'application/json'\n    };\n\n    if (!url) {\n      return;\n    }\n\n    try {\n      map.getTargetElement().style.cursor = 'wait';\n\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: layer.get('useBearerToken') ? {\n          ...defaultHeaders,\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : defaultHeaders\n      });\n\n      if (!response.ok) {\n        throw new Error('No successful response');\n      }\n\n      const featureCollection: FeatureCollection = await response.json();\n\n      if (onSuccess) {\n        onSuccess(featureCollection);\n      }\n    } catch (error) {\n      Logger.error('Error: ', error);\n\n      if (onFailure) {\n        onFailure();\n      }\n    } finally {\n      map.getTargetElement().style.cursor = '';\n    }\n  }, [client, layer, map, onSuccess, onFailure]);\n\n  const onPointerMove = useCallback((evt: MapBrowserEvent<MouseEvent>) => {\n    if (!map || !layer) {\n      return;\n    }\n\n    if (evt.dragging) {\n      return;\n    }\n\n    const data = layer.getData(evt.pixel);\n\n    if (!(data instanceof Uint8ClampedArray)) {\n      return;\n    }\n\n    const hit = data && data[3] > 0;\n\n    map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n  }, [layer, map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    map.on('pointermove', onPointerMove);\n    map.on('singleclick', onSingleClick);\n\n    return () => {\n      map.un('pointermove', onPointerMove);\n      map.un('singleclick', onSingleClick);\n    };\n  }, [map, onPointerMove, onSingleClick]);\n};\n\nexport default useGetFeatureInfo;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  Button\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useExecuteWfsDescribeFeatureType, {\n  isGeometryType\n} from '../../../hooks/useExecuteWfsDescribeFeatureType';\nimport useExecuteWfsLockFeature from '../../../hooks/useExecuteWfsTransactionLock';\nimport useGetFeatureInfo from '../../../hooks/useGetFeatureInfo';\n\nimport {\n  setFeature\n} from '../../../store/editFeature';\n\nimport './index.less';\n\nexport type EditFeatureSwitchProps = {\n  layer: WmsLayer;\n  onLockSuccess?: (responseText: string) => void;\n  onLockError?: (error: unknown) => void;\n  onCreate?: () => void;\n};\n\nexport const EditFeatureSwitch: React.FC<EditFeatureSwitchProps> = ({\n  layer,\n  onLockSuccess = () => {},\n  onLockError = () => {},\n  onCreate = () => {}\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const executeWfsDescribeFeatureType = useExecuteWfsDescribeFeatureType();\n  const executeWfsLockFeature = useExecuteWfsLockFeature();\n  const dispatch = useAppDispatch();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  useGetFeatureInfo(layer, async (featureCollection) => {\n    if (\n      featureCollection.features.length &&\n      (allowedEditMode.includes('UPDATE') || allowedEditMode.includes('DELETE'))\n    ) {\n\n      const feature = featureCollection.features[0];\n\n      if (!layer || !feature) {\n        return;\n      }\n\n      if (ClientConfiguration.wfsLockFeatureEnabled) {\n        try {\n          const response = await executeWfsLockFeature({\n            layer: layer,\n            feature: feature\n          });\n\n          if (!response) {\n            return;\n          }\n\n          dispatch(setFeature(feature));\n\n          onLockSuccess(response);\n        } catch (error) {\n          onLockError(error);\n        }\n      } else {\n        dispatch(setFeature(feature));\n      }\n    }\n  });\n\n  const getGeometryType = async () => {\n    if (!map || !layer) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const describeFeatureType = await executeWfsDescribeFeatureType(layer);\n\n      if (!describeFeatureType) {\n        return;\n      }\n\n      // We expect a single featureType here.\n      const geomProperty = describeFeatureType.featureTypes[0]?.properties\n        ?.find(property => isGeometryType(property.type));\n\n      switch (geomProperty?.type) {\n        case 'gml:MultiPoint':\n          return 'MultiPoint';\n        case 'gml:Point':\n          return 'Point';\n        case 'gml:MultiLineString':\n          return 'MultiLineString';\n        case 'gml:LineString':\n          return 'LineString';\n        case 'gml:MultiPolygon':\n          return 'MultiPolygon';\n        case 'gml:Polygon':\n          return 'Polygon';\n        default:\n          break;\n      }\n    } catch (error) {\n      Logger.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onCreateClick = async () => {\n    const geomType = await getGeometryType();\n\n    if (!geomType) {\n      return;\n    }\n\n    dispatch(setFeature({\n      type: 'Feature',\n      properties: {},\n      geometry: {\n        type: geomType,\n        coordinates: []\n      }\n    }));\n\n    onCreate();\n  };\n\n  return (\n    <div className=\"edit-feature-switch\">\n      {allowedEditMode.includes('CREATE') && (\n        <>\n          {\n            allowedEditMode.includes('UPDATE') &&\n            <div>{t('EditFeatureSwitch.usageHint')}</div>\n          }\n          <Button\n            loading={loading}\n            onClick={onCreateClick}\n          >\n            {t('EditFeatureSwitch.createFeature')}\n          </Button>\n        </>\n      )}\n      {!allowedEditMode.includes('CREATE') &&\n        (allowedEditMode.includes('UPDATE') ||\n        allowedEditMode.includes('DELETE')) && (\n        <div>{t('EditFeatureSwitch.limitedUsageHint')}</div>\n      )}\n    </div>\n  );\n};\n\nexport default EditFeatureSwitch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Alert, Modal\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport OlFeature from 'ol/Feature';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useExecuteWfsTransaction from '../../hooks/useExecuteWfsTransaction';\nimport useWriteWfsTransaction from '../../hooks/useWriteWfsTransaction';\n\nimport {\n  reset,\n  setFormDirty\n} from '../../store/editFeature';\nimport {\n  hide as hideEditFeatureDrawer\n} from '../../store/editFeatureDrawerOpen';\n\nimport MapDrawer, {\n  MapDrawerProps\n} from '../MapDrawer';\n\nimport EditFeatureFullForm from './EditFeatureFullForm';\nimport EditFeatureSwitch from './EditFeatureSwitch';\n\nimport './index.less';\n\nexport type EditFeatureDrawerProps = MapDrawerProps;\n\nexport const EditFeatureDrawer: React.FC<EditFeatureDrawerProps> = ({\n  ...passThroughProps\n}) => {\n  const {\n    t\n  } = useTranslation();\n\n  const [layer, setLayer] = useState<WmsLayer>();\n  const [isFeatureLocked, setIsFeatureLocked] = useState<boolean>(false);\n  const [drawerTitle, setDrawerTitle] = useState<string>(t('EditFeatureDrawer.featureEditor'));\n\n  const isDrawerOpen = useAppSelector(state => state.editFeatureDrawerOpen);\n  const layerId = useAppSelector(state => state.editFeature.layerId);\n  const feature = useAppSelector(state => state.editFeature.feature);\n  const formDirty = useAppSelector(state => state.editFeature.formDirty);\n\n  const map = useMap();\n  const dispatch = useAppDispatch();\n  const writeWfsTransaction = useWriteWfsTransaction();\n  const executeWfsTransaction = useExecuteWfsTransaction();\n\n  useEffect(() => {\n    if (!map || !layerId) {\n      return;\n    }\n\n    const olLayer = MapUtil.getLayerByOlUid(map, layerId);\n\n    if (!olLayer || !isWmsLayer(olLayer)) {\n      Logger.warn(`Could not find layer with id ${layerId}`);\n      return;\n    }\n\n    setDrawerTitle(`${t('EditFeatureDrawer.featureEditor')} - ${olLayer.get('name')}`);\n    setLayer(olLayer);\n  }, [map, layerId, t]);\n\n  const releaseLock = async () => {\n    if (!layer || !feature || !feature.id || !ClientConfiguration.wfsLockFeatureEnabled) {\n      return;\n    }\n\n    try {\n      const feat = new OlFeature();\n      feat.setId(feature.id);\n\n      const transaction = await writeWfsTransaction({\n        layer: layer,\n        deleteFeatures: [],\n        upsertFeatures: [feat]\n      });\n\n      if (!transaction) {\n        return;\n      }\n\n      await executeWfsTransaction({\n        layer: layer,\n        transaction: transaction\n      });\n    } catch (error) {\n      Logger.error('Error while releasing the lock on the feature');\n    }\n  };\n\n  const closeDrawer = async () => {\n    await releaseLock();\n\n    dispatch(hideEditFeatureDrawer());\n    dispatch(setFormDirty(false));\n    dispatch(reset());\n    setIsFeatureLocked(false);\n  };\n\n  const onDrawerClose = () => {\n    if (layer && feature && formDirty) {\n      Modal.confirm({\n        maskClosable: false,\n        title: t('EditFeatureDrawer.closeDrawerWarnTitle'),\n        content: t('EditFeatureDrawer.closeDrawerWarnContent'),\n        okType: 'danger',\n        onOk: closeDrawer\n      });\n    } else {\n      closeDrawer();\n    }\n  };\n\n  const onLockSuccess = () => {\n    setIsFeatureLocked(false);\n  };\n\n  const onLockError = () => {\n    setIsFeatureLocked(true);\n  };\n\n  const onCreate = () => {\n    setIsFeatureLocked(false);\n  };\n\n  return (\n    <MapDrawer\n      className=\"map-drawer edit-feature-drawer\"\n      onClose={onDrawerClose}\n      open={isDrawerOpen}\n      title={drawerTitle}\n      {...passThroughProps}\n    >\n      {\n        !layer && (\n          <Alert\n            message={t('EditFeatureDrawer.noLayerFoundError')}\n            type=\"error\"\n            showIcon\n          />\n        )\n      }\n      {\n        isFeatureLocked && (\n          <Alert\n            message={t('EditFeatureDrawer.isFeatureLockedErrorMsg')}\n            type=\"error\"\n            showIcon\n          />\n        )\n      }\n      {\n        layer && layerId && !feature &&\n        <EditFeatureSwitch\n          layer={layer}\n          onLockSuccess={onLockSuccess}\n          onLockError={onLockError}\n          onCreate={onCreate}\n        />\n      }\n      {\n        layer && feature &&\n        <EditFeatureFullForm\n          feature={feature}\n          layer={layer}\n        />\n      }\n    </MapDrawer>\n  );\n};\n\nexport default EditFeatureDrawer;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect } from 'react';\n\nimport {\n  Button, Divider\n} from 'antd';\n\nimport OlControlMousePosition from 'ol/control/MousePosition';\nimport OlControlScaleLine from 'ol/control/ScaleLine';\nimport { createStringXY } from 'ol/coordinate';\n\nimport { useTranslation } from 'react-i18next';\n\nimport ScaleCombo from '@terrestris/react-geo/dist/Field/ScaleCombo/ScaleCombo';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport { usePlugins } from '../../hooks/usePlugins';\n\nimport {\n  FooterPlacementOrientation,\n  isFooterIntegration\n} from '../../plugin';\nimport { Legal } from '../../store/legal';\n\nexport interface FooterProps extends React.ComponentProps<'div'> { }\n\nexport const Footer: React.FC<FooterProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const plugins = usePlugins();\n  const { t } = useTranslation();\n\n  const legalInformation: Legal = useAppSelector(state => state.legal);\n  const map = useMap();\n\n  const insertPlugins = (itemPosition: FooterPlacementOrientation, items: JSX.Element[]) => {\n    plugins.forEach(plugin => {\n      if (isFooterIntegration(plugin.integration) && plugin.integration?.placementOrientation === itemPosition) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        items.splice(plugin.integration?.insertionIndex || 0, 0,\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map\n      .getControls()\n      .getArray()\n      .find(control => control instanceof OlControlScaleLine);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlScaleLine({\n        target: 'scale-line-container'\n      })\n    );\n  }, [map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map\n      .getControls()\n      .getArray()\n      .find(control => control instanceof OlControlMousePosition);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlMousePosition({\n        coordinateFormat: createStringXY(2),\n        projection: map.getView().getProjection(),\n        target: 'mouse-position'\n      })\n    );\n  }, [map]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  const getLeftItems = () => {\n    const items = [\n      <div\n        key=\"scale-line-container\"\n        id=\"scale-line-container\"\n        aria-label=\"scale-line\"\n      />,\n      <Divider\n        key=\"scale-line-divider\"\n        type=\"vertical\"\n      />,\n      <div\n        key=\"scale-combo-container\"\n        className=\"scale-combo\"\n        aria-label='scale-combo'\n      >\n        {t('Footer.scale')}:&nbsp;\n        <ScaleCombo\n          aria-label='scalecombo-dropdown'\n          map={map}\n        />\n        <Divider\n          type=\"vertical\"\n        />\n      </div>,\n      <div\n        key=\"reference-system-container\"\n        className=\"reference-system\"\n        aria-label=\"reference-system\"\n      >\n        {t('Footer.refSystem')}: {map.getView().getProjection().getCode()}\n        <Divider\n          type=\"vertical\"\n        />\n      </div>,\n      <div\n        key=\"mouse-position-container\"\n        className=\"mouse-position-wrapper\"\n      >\n        {t('Footer.mousePosition')}:&nbsp;\n        <div\n          id=\"mouse-position\"\n          className=\"mouse-position\"\n          aria-label=\"mouse-position\"\n        />\n      </div>\n    ];\n\n    insertPlugins('left', items);\n\n    return items;\n  };\n\n  const getRightItems = () => {\n    const items = [\n      <Button\n        key=\"open-contact\"\n        onClick={openContactModal}\n        type=\"link\"\n      >\n        {t('Footer.contact')}\n      </Button>,\n      <Button\n        key=\"open-imprint\"\n        onClick={openImprintModal}\n        type=\"link\"\n      >\n        {t('Footer.imprint')}\n      </Button>,\n      <Button\n        key=\"open-privacy\"\n        onClick={openPrivacyModal}\n        type=\"link\"\n      >\n        {t('Footer.privacypolicy')}\n      </Button>\n    ];\n\n    if (plugins.length > 0) {\n      insertPlugins('right', items);\n    }\n\n    return items;\n  };\n\n  const openContactModal = (): void => {\n    window.open(legalInformation.contact, '_blank');\n  };\n\n  const openImprintModal = (): void => {\n    window.open(legalInformation.imprint, '_blank');\n  };\n\n  const openPrivacyModal = (): void => {\n    window.open(legalInformation.privacy, '_blank');\n  };\n\n  return (\n    <div\n      className=\"footer\"\n      {...restProps}\n    >\n      <div\n        className=\"item-container left-items\"\n      >\n        {\n          getLeftItems()\n        }\n      </div>\n      <div\n        className=\"item-container right-items\"\n      >\n        {\n          getRightItems()\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, {\n  useEffect, useState\n} from 'react';\n\nimport {\n  Extent as OlExtent\n} from 'ol/extent';\nimport {\n  transformExtent\n} from 'ol/proj';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport NominatimSearch, {\n  NominatimSearchProps\n} from '@terrestris/react-geo/dist/Field/NominatimSearch/NominatimSearch';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport const BasicNominatimSearch: React.FC<Partial<NominatimSearchProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n  const [viewBox, setViewBox] = useState<string>();\n\n  useEffect(() => {\n    const mapViewProjection = map?.getView().getProjection();\n    const extent: OlExtent = map?.getView()?.get('extent');\n    if (extent) {\n      const transformedExtent = transformExtent(extent, mapViewProjection, 'EPSG:4326');\n      setViewBox(transformedExtent.toString());\n    }\n  }, [map]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <NominatimSearch\n      countryCodes={''}\n      allowClear={true}\n      nominatimBaseUrl={'https://nominatim.terrestris.de/search.php?'}\n      placeholder={t('Nominatim.placeholder')}\n      viewBox={viewBox ? viewBox : ''}\n      {...restProps}\n    />\n  );\n};\n\nexport default BasicNominatimSearch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import _groupBy from 'lodash/groupBy';\nimport Map from 'ol/Map';\n\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  SearchConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nexport interface SolrQueryProps {\n  searchValue: string;\n  map: Map;\n}\n\ntype SolrQuery = {\n  query: string;\n  fieldList?: string;\n};\n\n/**\n * Generates a solr search query based on the `searchConfiguration` and `searchable` properties of each layer. This\n * currently considers all layers which are part of the layer tree / map.\n */\nexport const generateSolrQuery = ({\n  searchValue,\n  map\n}: SolrQueryProps): SolrQuery[] => {\n  // parse searchValue into an array of search terms,\n  // removing special characters and white spaces\n  let parts = searchValue.trim()\n    .replaceAll(/[()\\\\\\-_./\\/]/g, ' ')\n    .split(' ')\n    .map(s => s.trim())\n    .filter(s => s !== '');\n\n  const searchQueries: SolrQuery[] = [];\n  const layers = map.getAllLayers().filter(l => l.get('searchable'));\n  const groupedLayers = _groupBy(layers, (l) => (l.get('searchConfig') as SearchConfig)?.attributes);\n\n  Object.entries(groupedLayers).forEach(([key, layerList]) => {\n    const layerNames = layerList\n      .filter(l => isWmsLayer(l))\n      .map(l => (l as WmsLayer).getSource()?.getParams()?.LAYERS);\n\n    const featureTypeParts = layerNames.map(layerName => `featureType:\"${layerName}\"`);\n    const featureTypeQuery = featureTypeParts.join(' OR ');\n\n    const query = `(${featureTypeQuery}) AND (${generateSearchQuery(parts)})`;\n    searchQueries.push({\n      query: query,\n      fieldList: key !== 'undefined' ? key.split(',').join(' ') : undefined\n    });\n  });\n\n  return searchQueries;\n};\n\n/**\n * Applies operators for wildcard and fuzzy search to a solr (sub)query for multiple search terms.\n * Also includes exact matches to allow searching for numeric values.\n * @param searchParts The search input which may consist of multiple search terms, e.g. [\"foo\", \"bar\"]\n */\nconst generateSearchQuery = (\n  searchParts: string[]\n): string => {\n  const subQueries = searchParts.map(part => {\n    return `(${part.trim()}^4 OR *${part.trim()}*^2 OR ${part.trim()}~1)`;\n  });\n  return subQueries.join(' AND ');\n};\n\nexport default generateSolrQuery;\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\n\nimport {\n  LoadingOutlined,\n  SearchOutlined,\n  SettingOutlined\n} from '@ant-design/icons';\nimport {\n  Checkbox,\n  Dropdown,\n  Empty,\n  Input,\n  InputProps\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _groupBy from 'lodash/groupBy';\nimport _isNil from 'lodash/isNil';\n\nimport { getUid } from 'ol';\nimport {\n  Extent as OlExtent\n} from 'ol/extent';\nimport OlFeature from 'ol/Feature';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlFormatWKT from 'ol/format/WKT';\nimport OlGeometry from 'ol/geom/Geometry';\nimport { transformExtent } from 'ol/proj';\nimport OlStyleCircle from 'ol/style/Circle';\nimport OlStyleFill from 'ol/style/Fill';\nimport OlStyleStroke from 'ol/style/Stroke';\nimport OlStyle from 'ol/style/Style';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport PermalinkUtil from '@terrestris/ol-util/dist/PermalinkUtil/PermalinkUtil';\nimport { NominatimPlace } from '@terrestris/react-geo/dist/Field/NominatimSearch/NominatimSearch';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport SearchResultsPanel, {\n  Category as ResultCategory\n} from '@terrestris/react-geo/dist/Panel/SearchResultsPanel/SearchResultsPanel';\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  SearchConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport './index.less';\n\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport generateSolrQuery from '../../utils/generateSolrQuery';\n\ninterface MultiSearchProps extends InputProps {\n  useNominatim: boolean;\n}\n\nexport type DataSearchResult = {\n  [key: string]: string | string[] | number[];\n};\n\nexport type HighlightingResult = {\n  [key: string]: string;\n};\n\nexport type HighlightingResults = {\n  [key: string]: HighlightingResult;\n};\n\nconst isFulfilled = <T, >(p: PromiseSettledResult<T>): p is PromiseFulfilledResult<T> => p.status === 'fulfilled';\n\nexport type SolrQueryConfig = {\n  q: string;\n  fq?: string;\n  defType?: 'lucene' | 'dismax' | 'edismax';\n  qf?: string;\n  rows?: number;\n  hl?: boolean;\n  'hl.fl'?: string;\n  'hl.tag.pre'?: string;\n  'hl.tag.post'?: string;\n  'hl.requireFieldMatch'?: boolean;\n};\n\nexport type Item = {\n  feature: OlFeature;\n};\n\nexport const MultiSearch: React.FC<MultiSearchProps> = ({\n  useNominatim\n}): JSX.Element => {\n\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n  const clickAwayRef = useRef<HTMLDivElement>(null);\n\n  const [searchNominatim, setSearchNominatim] = useState<boolean>(useNominatim);\n  const [searchData, setSearchData] = useState<boolean>(true);\n  const [useViewBox, setUseViewBox] = useState<boolean>(ClientConfiguration.search?.defaultUseViewBox ?? true);\n  const [searchValue, setSearchValue] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [resultsVisible, setResultsVisible] = useState<boolean>(false);\n  const [settingsVisible, setSettingsVisible] = useState<boolean>(false);\n  const [dataSearchResults, setDataSearchResults] = useState<DataSearchResult[]>([]);\n  const [highlightingResults, setHighlightingResults] = useState<HighlightingResults>({});\n  const [nominatimResults, setNominatimResults] = useState<NominatimPlace[]>([]);\n  const [searchResults, setSearchResults] = useState<ResultCategory[]>([]);\n\n  useEffect(() => {\n    window.addEventListener('mousedown', handleClickAway);\n\n    return () => {\n      window.removeEventListener('mousedown', handleClickAway);\n    };\n  }, []);\n\n  const handleClickAway = (e: Event) => {\n    let target = e.target;\n    while (target) {\n      target = (target as Node).parentNode;\n    }\n\n    if ((clickAwayRef.current && ((clickAwayRef.current as Element).contains(e.target as Node)))) {\n      return;\n    }\n\n    setResultsVisible(false);\n  };\n\n  const settingsMenu = useMemo(() => {\n    return {\n      items: [{\n        label: (\n          <Checkbox\n            checked={useViewBox}\n            onChange={e => setUseViewBox(e.target.checked)}\n          >\n            {t('MultiSearch.searchInViewBox')}\n          </Checkbox>\n        ),\n        key: 'viewbox'\n      }, {\n        label: (\n          <Checkbox\n            checked={searchData}\n            onChange={e => setSearchData(e.target.checked)}\n          >\n            {t('MultiSearch.searchData')}\n          </Checkbox>\n        ),\n        key: 'data'\n      }, {\n        label: (\n          <Checkbox\n            checked={searchNominatim}\n            onChange={e => setSearchNominatim(e.target.checked)}\n          >\n            {t('MultiSearch.searchNominatim')}\n          </Checkbox>\n        ),\n        key: 'nominatim'\n      }]\n    };\n  }, [searchData, searchNominatim, useViewBox, t]);\n\n  const performSearch = useCallback(async () => {\n    const minChars = ClientConfiguration.search?.minChars ?? 3;\n    if (searchValue.length < minChars) {\n      resetSearch();\n      return;\n    }\n\n    if (!searchData && !searchNominatim) {\n      return;\n    }\n\n    setLoading(true);\n    setNominatimResults([]);\n    setDataSearchResults([]);\n    setHighlightingResults({});\n\n    let response;\n    let viewBox: OlExtent | null = null;\n\n    if (useViewBox) {\n      const mapViewProjection = map?.getView().getProjection();\n      const extent = map?.getView()?.calculateExtent();\n      if (extent) {\n        viewBox = transformExtent(extent, mapViewProjection, 'EPSG:4326');\n      }\n    }\n\n    if (searchData && map) {\n      try {\n        const solrBasePath = ClientConfiguration.search?.solrBasePath ?? '/search/query';\n        const searchUrl = new URL(`${window.location.origin}${solrBasePath}`);\n        const queriesPerLayer = generateSolrQuery({\n          searchValue,\n          map\n        });\n\n        const promises = queriesPerLayer.map(q => {\n          const solrQueryConfig: SolrQueryConfig = {\n            q: q.query,\n            rows: ClientConfiguration.search?.solrQueryConfig?.rowsPerQuery ?? 100,\n            defType: ClientConfiguration.search?.solrQueryConfig?.queryParser ?? 'edismax'\n          };\n\n          if (q.fieldList) {\n            solrQueryConfig.qf = q.fieldList;\n          } else {\n            solrQueryConfig.qf = ClientConfiguration.search?.coreName ?? 'search';\n          }\n\n          if (useViewBox && viewBox) {\n            const bboxFilter = `geometry:[${viewBox[1]},${viewBox[0]} TO ${viewBox[3]},${viewBox[2]}]`;\n            solrQueryConfig.fq = bboxFilter;\n          }\n\n          if (ClientConfiguration.search?.useSolrHighlighting) {\n            solrQueryConfig.hl = true;\n            solrQueryConfig['hl.fl'] = '*';\n            solrQueryConfig['hl.tag.pre'] = ClientConfiguration.search?.solrQueryConfig?.tagPre ?? '<b>';\n            solrQueryConfig['hl.tag.post'] = ClientConfiguration.search?.solrQueryConfig?.tagPost ?? '</b>';\n            solrQueryConfig['hl.requireFieldMatch'] = ClientConfiguration.search?.solrQueryConfig?.requireFieldMatch ?? true;\n          }\n\n          const defaultHeaders = {\n            'Content-Type': 'application/json'\n          };\n\n          return fetch(searchUrl.href, {\n            method: 'POST',\n            headers: {\n              ...defaultHeaders,\n              ...getBearerTokenHeader(client?.getKeycloak())\n            },\n            body: JSON.stringify(solrQueryConfig)\n          });\n        });\n\n        const results = await Promise.allSettled(promises.map(async pr => {\n          const res = await pr;\n          return res.json();\n        }));\n\n        const successfulResults = results.filter(isFulfilled);\n        const dataResults = successfulResults.flatMap(sR => sR.value?.response?.docs).filter(r => r);\n        const hlResults = Object.assign({}, ...successfulResults.map(sr => sr.value?.highlighting));\n\n        setDataSearchResults(dataResults);\n        setHighlightingResults(hlResults);\n      } catch (error) {\n        setDataSearchResults([]);\n        setHighlightingResults({});\n        logger.error('Error while fetching the layer search results: ', error);\n      } finally {\n        if (!searchNominatim) {\n          setLoading(false);\n        }\n      }\n    }\n\n    if (searchNominatim) {\n      try {\n        const nominatimUrl = new URL('https://nominatim.terrestris.de/search');\n        nominatimUrl.searchParams.set('q', searchValue);\n        nominatimUrl.searchParams.set('format', 'json');\n        nominatimUrl.searchParams.set('polygon_geojson', '1');\n\n        if (useViewBox && viewBox) {\n          nominatimUrl.searchParams.set('viewbox', viewBox.toString());\n          nominatimUrl.searchParams.set('bounded', '1');\n        }\n        response = await fetch(nominatimUrl.href);\n        setNominatimResults(await response.json());\n      }\n      catch (error) {\n        setNominatimResults([]);\n        logger.error('Error while fetching the nominatim results: ', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  }, [searchValue, searchData, searchNominatim, useViewBox, map, client]);\n\n  const replaceTemplates = (template: string, data: DataSearchResult): string => {\n    const pattern = /{\\s*(\\w+?)\\s*}/g; // regex for template string with values in brackets, e.g. {name}\n    return template.replace(pattern, (_, token) => data[token]?.toString() || '');\n  };\n\n  const getFeatureTitle = useCallback((dsResult: DataSearchResult, highlightResult?: HighlightingResult): string => {\n    if (!map) {\n      return '';\n    }\n\n    const layer = MapUtil.getLayerByNameParam(map, dsResult.featureType[0] as string);\n    const searchConfig = layer?.get('searchConfig') as SearchConfig;\n\n    const blacklistedAttributes = [\n      'category',\n      'id',\n      'featureType',\n      'geometry',\n      'search'\n    ];\n\n    let title: string = '';\n\n    if (searchConfig?.displayTemplate) {\n      return replaceTemplates(searchConfig.displayTemplate, dsResult);\n    }\n\n    if (highlightResult) {\n      const filteredHighlightKeys = Object.keys(highlightResult).filter(key => !blacklistedAttributes.includes(key));\n      if (filteredHighlightKeys.length > 0) {\n        const highlightValue = highlightResult[filteredHighlightKeys[0]];\n        return `${highlightValue} [${filteredHighlightKeys[0]}]`;\n      }\n    }\n\n    Object.keys(dsResult)\n      .filter(key => !blacklistedAttributes.includes(key))\n      .forEach(propKey => {\n        let propValue = dsResult[propKey]?.toString();\n        if (!title && propValue.toLowerCase().indexOf(searchValue?.toLowerCase()) > -1) {\n          // show matched value followed by the attribute name in square brackets (e.g. '53111 Bonn [city]')\n          title = `${propValue} [${propKey}]`;\n        }\n      });\n\n    if (!title) {\n      // fallback -> should never happen after adding of the valid layer search config\n      title = dsResult.id as string;\n    }\n\n    return title;\n  }, [searchValue, map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    let updatedResults: ResultCategory[] = [];\n\n    if (nominatimResults.length > 0) {\n\n      const geoJsonFormat = new OlFormatGeoJSON();\n      const nFeats = nominatimResults.filter(f => !_isNil(f?.geojson)).map(f => {\n        const olFeat = geoJsonFormat.readFeature(f.geojson, {\n          dataProjection: 'EPSG:4326',\n          featureProjection: map.getView().getProjection()\n        });\n        olFeat.set('title', f.display_name);\n        return olFeat;\n      });\n\n      const nResults: ResultCategory = {\n        title: t('MultiSearch.nominatimTitle'),\n        features: nFeats\n      };\n      updatedResults.push(nResults);\n    }\n\n    if (dataSearchResults?.length > 0) {\n\n      const wktFormat = new OlFormatWKT();\n\n      // 1. group by category or layer title\n      let categories;\n      if (ClientConfiguration.search?.groupByCategory) {\n        categories = _groupBy(dataSearchResults, res => res?.category[0]);\n      } else {\n        const layers = map.getAllLayers().filter(l => l.get('searchable'));\n        const resultsWithLayerName = dataSearchResults.map(result => {\n          const layerTitle = layers.filter(l => isWmsLayer(l))\n            .find((l) => (l as WmsLayer).getSource()?.getParams()?.LAYERS === result.featureType[0])\n            ?.get('name');\n\n          return {\n            layerTitle,\n            ...result\n          } as DataSearchResult;\n        });\n        categories = _groupBy(resultsWithLayerName, res => res?.layerTitle);\n      }\n\n      // 2. build features\n      Object.keys(categories).forEach(category => {\n        const features = categories[category].map(dsResult => {\n          if (!dsResult?.geometry?.[0]) {\n            return;\n          }\n          const id = dsResult.id as string;\n\n          const geometry = wktFormat.readGeometry(dsResult.geometry[0], {\n            dataProjection: 'EPSG:4326',\n            featureProjection: map.getView().getProjection()\n          });\n          const olFeat = new OlFeature({\n            geometry\n          });\n          olFeat.set('title', getFeatureTitle(dsResult, highlightingResults?.[id]));\n          let ftName;\n          if (dsResult.featureType?.[0]) {\n            const layer = MapUtil.getLayerByNameParam(map, dsResult.featureType?.[0] as string);\n            if (layer) {\n              olFeat.set('layer', layer);\n              ftName = layer.get('name');\n            }\n          } else {\n            ftName = id.substring(0, id.lastIndexOf('_'));\n          }\n          olFeat.set('ftName', ftName);\n          return olFeat;\n        }).filter(f => f) as OlFeature<OlGeometry>[];\n        const resultCategory: ResultCategory = {\n          title: category,\n          features\n        };\n        updatedResults.push(resultCategory);\n      });\n    }\n\n    setResultsVisible(true);\n    setSearchResults(updatedResults);\n\n  }, [dataSearchResults, highlightingResults, nominatimResults, map, getFeatureTitle, t]);\n\n  useEffect(() => {\n    const delay = ClientConfiguration.search?.delay ?? 1000;\n    const timeout = setTimeout(() => {\n      performSearch();\n    }, delay);\n\n    return () => clearTimeout(timeout);\n\n  }, [performSearch]);\n\n  const resetSearch = () => {\n    setDataSearchResults([]);\n    setNominatimResults([]);\n  };\n\n  const actionsCreator = (item: any) => {\n    const feat = item.feature;\n    const layer = feat.get('layer');\n\n    if (!layer?.get('editable')) {\n      return;\n    }\n\n    // button is temporarily disabled\n    return [<></>];\n  };\n\n  const layerStyle = useMemo(() => (\n    new OlStyle({\n      stroke: new OlStyleStroke({\n        color: 'rgb(255,0,0)',\n        width: 2\n      }),\n      fill: new OlStyleFill({\n        color: 'rgba(255,255,255, 0.5)'\n      }),\n      image: new OlStyleCircle({\n        radius: 10,\n        fill: new OlStyleFill({\n          color: 'rgba(255,255,255, 0.5)'\n        }),\n        stroke: new OlStyleStroke({\n          color: 'rgb(255,0,0)',\n          width: 3\n        })\n      })\n    })\n  ), []);\n\n  const resultRenderer = () => {\n    if (searchValue.length < 2 || !resultsVisible || loading || !dataSearchResults) {\n      return null;\n    }\n\n    const numTotal = nominatimResults.length + dataSearchResults.length;\n\n    if (numTotal === 0) {\n      return (\n        <div\n          className='no-search-result-div'\n        >\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n          />\n        </div>\n      );\n    }\n\n    const onSearchResultClick = (item: Item) => {\n      setResultsVisible(false);\n      zoomOffsetOnClick(item);\n      if (ClientConfiguration.search?.activateLayerOnClick) {\n        activateLayer(item);\n      }\n    };\n\n    const activateLayer = (item: Item) => {\n      const layer = item?.feature?.get('layer');\n      if (layer && map && !layer.getVisible()) {\n        layer.setVisible(true);\n        // also make all parent folders / groups visible so\n        // that the layer becomes visible in map\n        PermalinkUtil.setParentsVisible(\n          map,\n          map.getLayerGroup().getLayers(),\n          getUid(layer)\n        );\n      }\n    };\n\n    const zoomOffsetOnClick = (item: Item) => {\n      const extent = item.feature.getGeometry()?.getExtent();\n      const toolMenuElement = document.getElementsByClassName('tool-menu');\n      const toolMenuWidth = toolMenuElement[0]?.clientWidth ?? 0;\n      let padding = [0, 0, 0, toolMenuWidth];\n\n      if (extent) {\n        map?.getView().fit(extent, {\n          size: map.getSize(),\n          padding\n        });\n      }\n    };\n\n    return (\n      <SearchResultsPanel\n        searchResults={searchResults}\n        numTotal={numTotal}\n        accordion\n        searchTerms={searchValue.split(' ')}\n        actionsCreator={actionsCreator}\n        layerStyle={layerStyle}\n        onClick={onSearchResultClick}\n      />\n    );\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <div ref={clickAwayRef}>\n      <Input\n        value={searchValue}\n        disabled={!searchData && !searchNominatim}\n        onChange={event => {\n          setLoading(event.target.value !== '');\n          setSearchValue(event.target.value);\n        }}\n        allowClear\n        addonAfter={\n          <Dropdown\n            placement=\"bottomRight\"\n            menu={settingsMenu}\n            trigger={['click']}\n            onOpenChange={setSettingsVisible}\n            open={settingsVisible}\n          >\n            <SettingOutlined />\n          </Dropdown >\n        }\n        onFocus={() => setResultsVisible(true)}\n        placeholder={t('MultiSearch.searchPlaceholder')}\n        prefix={<SearchOutlined />}\n        suffix={loading ? <LoadingOutlined /> : null}\n      />\n      {resultRenderer()}\n    </div>\n  );\n};\n\nexport default MultiSearch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  InputProps\n} from 'antd/lib/input';\n\nimport logger from '@terrestris/base-util/dist/Logger';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport BasicNominatimSearch from '../BasicNominatimSearch';\nimport MultiSearch from '../MultiSearch';\n\nimport './index.less';\n\ninterface SearchFieldProps extends InputProps { }\n\nexport const SearchField: React.FC<SearchFieldProps> = (): JSX.Element => {\n\n  const useNominatim = useAppSelector((state) => state.searchEngines.includes('nominatim'));\n  const useSolr = useAppSelector((state) => state.searchEngines.includes('solr'));\n\n  if (!useNominatim && !useSolr) {\n    logger.warn('Neither nominatim nor solr search is configured.');\n    return <></>;\n  }\n\n  return (\n    <div\n      className=\"search\"\n      aria-label='search-field'\n    >\n      {\n        useSolr ?\n          <MultiSearch\n            aria-label='search'\n            useNominatim={useNominatim}\n          /> :\n          <BasicNominatimSearch\n            aria-label='search'\n          />\n      }\n    </div>\n  );\n};\n\nexport default SearchField;\n","import md5 from 'js-md5';\n\nexport interface GravatarProps {\n  email: string;\n  size?: number;\n  rating?: 'g' | 'pg' | 'r' | 'x';\n  defaultImage?: '404' | 'mp' | 'identicon' | 'monsterid' | 'wavatar' | 'retro' | 'robohash' | 'blank';\n  force?: boolean;\n}\n\nconst GRAVATAR_BASE_URL = 'https://www.gravatar.com/avatar/';\n\n/**\n * https://de.gravatar.com/site/implement/images/\n */\nexport const getGravatarUrl = ({\n  email = '',\n  size = 80,\n  rating = 'g',\n  defaultImage = 'identicon',\n  force = false\n}: GravatarProps): string => {\n  const lowerCaseEmail = email.toLowerCase();\n  const hash = md5(lowerCaseEmail);\n\n  let url = `${GRAVATAR_BASE_URL}${hash}?s=${size}&r=${rating}&d=${defaultImage}`;\n\n  if (force) {\n    url = `${url}&f=y`;\n  }\n\n  return url;\n};\n\nexport default getGravatarUrl;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  Modal,\n  Statistic\n} from 'antd';\n\nimport {\n  ModalProps\n} from 'antd/lib/modal';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport useAppSelector from '../../hooks/useAppSelector';\n\nimport {\n  useClientVersion\n} from '../../hooks/useVersion';\n\nimport './index.less';\n\ninterface ApplicationInfoProps extends ModalProps {\n  opener?: JSX.Element;\n}\n\nexport const ApplicationInfo: React.FC<ApplicationInfoProps> = ({\n  opener,\n  ...restProps\n}) => {\n  const {\n    t\n  } = useTranslation();\n\n  const appInfo = useAppSelector(state => state.appInfo);\n  const logoPath = useAppSelector(state => state.logoPath);\n  const appDescription = useAppSelector(state => state.description);\n\n  const [isVisible, setVisible] = useState<boolean>(false);\n\n  const toggleVisibility = () => {\n    setVisible(!isVisible);\n  };\n\n  let Opener;\n  if (opener) {\n    Opener = React.cloneElement(\n      opener,\n      {\n        onClick: toggleVisibility\n      }\n    );\n  } else {\n    Opener = <button onClick={toggleVisibility}>Open</button>;\n  }\n\n  return (\n    <>\n      {\n        Opener\n      }\n      <Modal\n        className='application-info'\n        title={t('ApplicationInfo.title')}\n        centered={true}\n        open={isVisible}\n        onOk={toggleVisibility}\n        onCancel={toggleVisibility}\n        footer={null}\n        {...restProps}\n      >\n        <img\n          className=\"logo\"\n          src={logoPath}\n        />\n        <div\n          className=\"description\"\n        >\n          {appDescription}\n        </div>\n        <Statistic\n          title={t('ApplicationInfo.clientVersionTitle')}\n          value={useClientVersion()}\n        />\n        {\n          (appInfo.version && appInfo.buildTime) &&\n          <Statistic\n            title={t('ApplicationInfo.backendVersionTitle')}\n            value={`${appInfo.version} (${appInfo.buildTime})`}\n          />\n        }\n      </Modal>\n    </>\n  );\n};\n\nexport default ApplicationInfo;\n","export const useClientVersion = () => {\n  return PROJECT_VERSION;\n};\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faInfo,\n  faUserCog,\n  faSignOut,\n  faSignIn,\n  faAngleDown,\n  faCircleQuestion\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport { Button } from 'antd';\nimport {\n  ItemType\n} from 'antd/lib/menu/hooks/useItems';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport {\n  MenuInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport UserChip from '@terrestris/react-geo/dist/UserChip/UserChip';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport {\n  getGravatarUrl\n} from '../../utils/getGravatarUrl';\n\nimport ApplicationInfo from '../ApplicationInfo';\n\nimport './index.less';\n\ninterface OwnProps { }\n\ntype UserProps = OwnProps;\n\nexport const UserMenu: React.FC<UserProps> = (): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const client = useSHOGunAPIClient();\n  const keycloak = client?.getKeycloak();\n\n  const user = useAppSelector((state) => state.user);\n\n  const onMenuClick = (evt: MenuInfo) => {\n    switch (evt.key) {\n      case 'settings':\n        if (keycloak) {\n          keycloak.accountManagement();\n        }\n        break;\n      case 'info':\n        // Don't do anything, visible state will be handled by the menu itself.\n        break;\n      case 'login':\n        if (keycloak) {\n          keycloak.login();\n        }\n        break;\n      case 'logout':\n        if (keycloak) {\n          keycloak.logout({\n            redirectUri: keycloak.createLoginUrl()\n          });\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const getMenu = () => {\n    const login: ItemType = {\n      key: 'login',\n      icon: (\n        <FontAwesomeIcon\n          icon={faSignIn}\n        />\n      ),\n      label: t('UserMenu.loginMenuTitle')\n    };\n\n    const username: ItemType = {\n      key: 'username',\n      label: (\n        <div\n          className=\"user-name\"\n          aria-label='user-name'\n        >\n          <span>\n            {\n              user.providerDetails?.email\n            }\n          </span>\n        </div>\n      )\n    };\n\n    const divider: ItemType = {\n      type: 'divider'\n    };\n\n    const settings: ItemType = {\n      key: 'settings',\n      icon: (\n        <FontAwesomeIcon\n          icon={faUserCog}\n        />\n      ),\n      label: t('UserMenu.settingsMenuTitle')\n    };\n\n    const info: ItemType = {\n      key: 'info',\n      icon: (\n        <FontAwesomeIcon\n          icon={faInfo}\n        />\n      ),\n      label: (\n        <ApplicationInfo\n          opener={\n            <span\n              className=\"info-opener\"\n              aria-label='info-opener'\n            >\n              {t('UserMenu.infoMenuTitle')}\n            </span>\n          }\n        />\n      )\n    };\n\n    const docs: ItemType = {\n      key: 'docs',\n      icon: (\n        <FontAwesomeIcon\n          icon={faCircleQuestion}\n        />\n      ),\n      label: (\n        <Button\n          type='text'\n          className=\"user-documentation\"\n          aria-label='user-documentation'\n          onClick={() => window.open('/gis-docs', '_blank')}\n        >\n          {t('UserMenu.helpMenuTitle')}\n        </Button>\n      )\n    };\n\n    const logout: ItemType = {\n      key: 'logout',\n      icon: (\n        <FontAwesomeIcon\n          icon={faSignOut}\n        />\n      ),\n      label: (\n        <div\n          aria-label='login'\n        >\n          {t('UserMenu.logoutMenuTitle')}\n        </div>\n      )\n    };\n\n    const items: ItemType[] = [];\n\n    if (_isEmpty(user)) {\n      if (ClientConfiguration.keycloak?.enabled) {\n        items.push(login);\n      }\n      items.push(info);\n    } else {\n      const accountRoles = keycloak?.tokenParsed?.resource_access?.account?.roles;\n      const hasUserManagementAccess = Array.isArray(accountRoles) && accountRoles.indexOf('manage-account') > -1;\n      const itemsForLoggedInUser = hasUserManagementAccess ? [\n        username,\n        divider,\n        settings,\n        info,\n        docs,\n        divider,\n        logout\n      ] : [\n        username,\n        divider,\n        info,\n        docs,\n        divider,\n        logout\n      ];\n\n      items.push(...itemsForLoggedInUser);\n    }\n\n    return {\n      items,\n      onClick: onMenuClick\n    };\n  };\n\n  if (_isEmpty(user)) {\n    return <></>;\n  }\n\n  return (\n    <UserChip\n      size={'small'}\n      imageSrc={getGravatarUrl({\n        email: user.providerDetails?.email || '',\n        size: 28\n      })}\n      userName={\n        <FontAwesomeIcon\n          icon={faAngleDown}\n        />\n      }\n      userMenu={getMenu()}\n    />\n  );\n};\n\nexport default UserMenu;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  useAppSelector\n} from '../../hooks/useAppSelector';\nimport {\n  usePlugins\n} from '../../hooks/usePlugins';\n\nimport {\n  HeaderPlacementOrientation,\n  isHeaderIntegration\n} from '../../plugin';\nimport SearchField from '../SearchField';\n\nimport UserMenu from '../UserMenu';\n\nimport './index.less';\n\nexport interface HeaderProps extends React.ComponentProps<'div'> { }\n\nexport const Header: React.FC<HeaderProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const title = useAppSelector((state) => state.title);\n  const logoPath = useAppSelector((state) => state.logoPath);\n  const plugins = usePlugins();\n\n  const insertPlugins = (itemPosition: HeaderPlacementOrientation, items: JSX.Element[]) => {\n    plugins.forEach(plugin => {\n      if (isHeaderIntegration(plugin.integration) && plugin.integration?.placementOrientation === itemPosition) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        items.splice(plugin.integration?.insertionIndex || 0, 0,\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  };\n\n  const getLeftItems = () => {\n    const items = [(\n      <img\n        key=\"logo\"\n        className=\"logo\"\n        aria-label=\"logo\"\n        src={logoPath}\n      />\n    ), (\n      <div\n        key=\"title\"\n        className=\"title\"\n        aria-label=\"title\"\n      >\n        {title}\n      </div>\n    )];\n\n    insertPlugins('left', items);\n\n    return items;\n  };\n\n  const getCenterItems = () => {\n    const items = [\n      <SearchField\n        key=\"search\"\n        aria-label='search-input'\n        name='search-input'\n        className='search-input'\n      />\n    ];\n\n    insertPlugins('center', items);\n\n    return items;\n  };\n\n  const getRightItems = () => {\n    const items = [\n      <div\n        key=\"user-menu\"\n        aria-label=\"user-menu\"\n      >\n        <UserMenu\n          key=\"user-menu\"\n        />\n      </div>\n    ];\n\n    insertPlugins('right', items);\n\n    return items;\n  };\n\n  return (\n    <div\n      className=\"header\"\n      {...restProps}\n    >\n      <div\n        className=\"item-container left-items\"\n      >\n        {\n          getLeftItems()\n        }\n      </div>\n      <div\n        className=\"item-container center-items\"\n      >\n        {\n          getCenterItems()\n        }\n      </div>\n      <div\n        className=\"item-container right-items\"\n      >\n        {\n          getRightItems()\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\n\nimport {\n  Alert,\n  Spin\n} from 'antd';\n\nimport OlLayer from 'ol/layer/Layer';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport './index.less';\n\nexport type LayerConfigurationProps = React.ComponentProps<'pre'> & {\n  layer?: OlLayer;\n};\n\nexport const LayerConfiguration: React.FC<LayerConfigurationProps> = ({\n  layer,\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [layerConfiguration, setLayerConfiguration] = useState<Layer>();\n\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const getLayerConfiguration = useCallback(async () => {\n    try {\n      setLoading(true);\n      setErrorMessage('');\n\n      if (!layer || !layer.get('shogunId')) {\n        throw new Error('No layer provided or the layer has no shogunId set');\n      }\n\n      const conf = await client?.layer().findOne(layer.get('shogunId'));\n\n      setLayerConfiguration(conf);\n    } catch (error) {\n      Logger.error(error);\n      setErrorMessage(t('LayerConfiguration.errorMessage'));\n    } finally {\n      setLoading(false);\n    }\n  }, [t, client, layer]);\n\n  useEffect(() => {\n    getLayerConfiguration();\n  }, [getLayerConfiguration]);\n\n  if (errorMessage) {\n    return (\n      <Alert\n        type=\"error\"\n        closable={true}\n        message={errorMessage}\n      />\n    );\n  }\n\n  return (\n    <Spin\n      spinning={loading}\n    >\n      <pre\n        className=\"layer-configuration\"\n        {...restProps}\n      >\n        <code>\n          {\n            JSON.stringify(layerConfiguration, null, '  ')\n          }\n        </code>\n      </pre>\n    </Spin>\n  );\n};\n\nexport default LayerConfiguration;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\n\nimport {\n  Alert,\n  Form,\n  FormProps,\n  Spin\n} from 'antd';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayer from 'ol/layer/Layer';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport CapabilitiesUtil from '@terrestris/ol-util/dist/CapabilitiesUtil/CapabilitiesUtil';\n\nimport {\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport './index.less';\n\nexport type LayerDetailsProps = Partial<FormProps> & {\n  layer?: OlLayer;\n};\n\nexport const LayerDetails: React.FC<LayerDetailsProps> = ({\n  layer,\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [capabilities, setCapabilities] = useState<any>();\n  const [errorMessage, setErrorMessage] = useState<string>();\n\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const getCapabilities = useCallback(async () => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setErrorMessage('');\n      setCapabilities(undefined);\n\n      const capa = await CapabilitiesUtil.getWmsCapabilitiesByLayer(\n        (layer as OlLayerImage<OlSourceImageWMS> | OlLayerTile<OlSourceTileWMS>), {\n          headers: {\n            ...layer.get('useBearerToken') ? {\n              ...getBearerTokenHeader(client?.getKeycloak())\n            } : undefined\n          }\n        });\n\n      setCapabilities(capa);\n    } catch (error) {\n      Logger.error(error);\n      setErrorMessage(t('LayerDetails.errorMessage'));\n    } finally {\n      setLoading(false);\n    }\n  }, [t, client, layer]);\n\n  useEffect(() => {\n    getCapabilities();\n  }, [getCapabilities]);\n\n  const getLayerName = () => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    return layer.getSource()?.getParams().LAYERS;\n  };\n\n  const getCapabilitiesUrl = () => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    let layerUrl;\n    if (layer.getSource() instanceof OlSourceImageWMS) {\n      layerUrl = (layer.getSource() as OlSourceImageWMS).getUrl();\n    }\n    if (layer.getSource() instanceof OlSourceTileWMS) {\n      const urls = (layer.getSource() as OlSourceTileWMS).getUrls();\n      layerUrl = urls ? urls[0] : undefined;\n    }\n\n    if (layerUrl) {\n      return UrlUtil.createValidGetCapabilitiesRequest(layerUrl, 'WMS', '1.3.0');\n    }\n  };\n\n  const getCapabilitiesLayer = () => {\n    const layers: any[] = capabilities?.Capability?.Layer?.Layer;\n    const layerName = getLayerName();\n    let lay;\n    if (Array.isArray(layers)) {\n      lay = layers?.find(l => l?.Name === layerName);\n    } else {\n      return layers;\n    }\n    return lay;\n  };\n\n  const getBBox = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay || !lay.EX_GeographicBoundingBox) {\n      return;\n    }\n\n    return [\n      lay.EX_GeographicBoundingBox.westBoundLongitude,\n      lay.EX_GeographicBoundingBox.southBoundLatitude,\n      lay.EX_GeographicBoundingBox.eastBoundLongitude,\n      lay.EX_GeographicBoundingBox.northBoundLatitude\n    ].join(', ');\n  };\n\n  const getMinScale = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.MinScaleDenominator;\n  };\n\n  const getMaxScale = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.MaxScaleDenominator;\n  };\n\n  const getAbstract = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.Abstract;\n  };\n\n  const getServiceAbstract = () => {\n    return capabilities?.Service?.Abstract;\n  };\n\n  const getContact = () => {\n    return capabilities?.Service?.ContactInformation?.ContactElectronicMailAddress;\n  };\n\n  const getLayerTitle = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.Title;\n  };\n\n  const getAccessConstraints = () => {\n    return capabilities?.Service?.AccessConstraints;\n  };\n\n  if (errorMessage) {\n    return (\n      <Alert\n        type=\"error\"\n        closable={true}\n        message={errorMessage}\n      />\n    );\n  }\n\n  return (\n    <Spin\n      spinning={loading}\n    >\n      <Form\n        className=\"layer-details\"\n        layout=\"horizontal\"\n        size=\"small\"\n        labelAlign=\"left\"\n        labelWrap={true}\n        labelCol={{\n          flex: '150px'\n        }}\n        {...restProps}\n      >\n        <Form.Item\n          name=\"layerName\"\n          label={t('LayerDetails.layerNameLabel')}\n        >\n          <span>{getLayerName() ? getLayerName() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"layerTitle\"\n          label={t('LayerDetails.layerTitleLabel')}\n        >\n          <span>{getLayerTitle() ? getLayerTitle() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"service-abstract\"\n          label={t('LayerDetails.serviceAbstractLabel')}\n        >\n          <span>{getServiceAbstract() ? getServiceAbstract() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"abstract\"\n          label={t('LayerDetails.abstractLabel')}\n        >\n          <span>{getAbstract() ? getAbstract() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"accessConstraints\"\n          label={t('LayerDetails.accessConstraintsLabel')}\n        >\n          <span>{getAccessConstraints() ? getAccessConstraints() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"CapabilitiesUrl\"\n          label={t('LayerDetails.capabilitiesUrlLabel')}\n        >\n          <a href={getCapabilitiesUrl()}>{getCapabilitiesUrl()}</a>\n        </Form.Item>\n        <Form.Item\n          name=\"contact\"\n          label={t('LayerDetails.contactLabel')}\n        >\n          {getContact() ? <a href={`mailto:${getContact()}`}>{getContact()}</a> : <span>{t('LayerDetails.noDataPlaceholder')}</span>}\n        </Form.Item>\n        <Form.Item\n          name=\"minScale\"\n          label={t('LayerDetails.minScaleLabel')}\n        >\n          <span>{getMinScale() ? getMinScale() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"maxScale\"\n          label={t('LayerDetails.maxScaleLabel')}\n        >\n          <span>{getMaxScale() ? getMaxScale() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"bbox\"\n          label={t('LayerDetails.bboxLabel')}\n        >\n          <span>{getBBox() ? getBBox() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n      </Form>\n    </Spin>\n  );\n};\n\nexport default LayerDetails;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport {\n  FileTextOutlined\n} from '@ant-design/icons';\n\nimport {\n  Button,\n  Modal,\n  ModalProps,\n  Tooltip\n} from 'antd';\n\nimport OlLayer from 'ol/layer/Layer';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\n\nimport {\n  hide as hideLayerDetailsModal,\n  setLayer as setDetailsLayer\n} from '../../store/layerDetailsModal';\n\nimport LayerConfiguration from './LayerConfiguration';\nimport LayerDetails from './LayerDetails';\n\nimport './index.less';\n\nexport type LayerDetailsModalProps = Partial<ModalProps>;\n\nexport const LayerDetailsModal: React.FC<LayerDetailsModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [layer, setLayer] = useState<OlLayer>();\n  const [configurationVisible, setConfigurationVisible] = useState<boolean>(false);\n\n  const isModalVisible = useAppSelector(state => state.layerDetailsModal.visible);\n  const layerId = useAppSelector(state => state.layerDetailsModal.layerId);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    if (!layerId) {\n      setLayer(undefined);\n      return;\n    }\n\n    const l = MapUtil.getLayerByOlUid(map, layerId);\n\n    if (!(l instanceof OlLayer)) {\n      return;\n    }\n\n    setLayer(l);\n  }, [map, layerId]);\n\n  const closeModal = () => {\n    dispatch(hideLayerDetailsModal());\n    dispatch(setDetailsLayer(undefined));\n  };\n\n  const onShowConfigurationClick = () => {\n    setConfigurationVisible(!configurationVisible);\n  };\n\n  return (\n    <Modal\n      className=\"layer-details-modal\"\n      title={(\n        <div\n          className=\"title-group\"\n        >\n          <span>{t('LayerDetailsModal.title', {\n            layerName: layer?.get('name')\n          })}\n          </span>\n          {\n            layer?.get('shogunId') && (\n              <Tooltip\n                title={configurationVisible ?\n                  t('LayerDetailsModal.internalConfigurationButtonTooltipPressed') :\n                  t('LayerDetailsModal.internalConfigurationButtonTooltip')\n                }\n              >\n                <Button\n                  type=\"link\"\n                  className={configurationVisible ? 'pressed' : ''}\n                  icon={<FileTextOutlined />}\n                  onClick={onShowConfigurationClick}\n                />\n              </Tooltip>\n            )\n          }\n        </div>\n      )}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={800}\n      footer={false}\n      {...restProps}\n    >\n      <LayerDetails\n        layer={layer}\n        hidden={configurationVisible}\n      />\n      {\n        layer?.get('shogunId') && (\n          <LayerConfiguration\n            layer={layer}\n            hidden={!configurationVisible}\n          />\n        )\n      }\n    </Modal>\n  );\n};\n\nexport default LayerDetailsModal;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import * as React from 'react';\n\nimport {\n  useEffect,\n  useState\n} from 'react';\n\nimport CardStyle, {\n  CardStyleProps\n} from 'geostyler/dist/Component/CardStyle/CardStyle';\n\nimport OlParser from 'geostyler-openlayers-parser';\n\nimport {\n  Style as GsStyle\n} from 'geostyler-style';\n\nimport OlFeature from 'ol/Feature';\n\nimport OlLayerVector from 'ol/layer/Vector';\n\nimport VectorSource from 'ol/source/Vector';\n\nimport {\n  StyleFunction,\n  StyleLike as OlStyleLike\n} from 'ol/style/Style';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport type StylingComponentProps = CardStyleProps;\n\nexport const StylingComponent: React.FC<StylingComponentProps> = ({\n  ...passThroughProps\n}): JSX.Element => {\n\n  const defaultStyle: GsStyle = {\n    name: 'Default Style',\n    rules: [{\n      name: 'Area',\n      symbolizers: [{\n        kind: 'Fill',\n        color: '#00b72b',\n        outlineOpacity: 0.8,\n        opacity: 0.5,\n        fillOpacity: 0.8,\n        outlineWidth: 2,\n        outlineColor: '#00b72b'\n      }]\n    }, {\n      name: 'Line',\n      symbolizers: [{\n        kind: 'Line',\n        color: '#00b72b',\n        width: 2,\n        opacity: 0.8\n      }]\n    }, {\n      name: 'Point',\n      symbolizers: [{\n        kind: 'Mark',\n        wellKnownName: 'circle',\n        color: '#00b72b',\n        strokeColor: '#00b72b',\n        strokeOpacity: 0.8,\n        opacity: 0.5,\n        radius: 7\n      }],\n      filter: [\n        '==',\n        'label',\n        'undefined'\n      ]\n    }, {\n      name: 'Text',\n      symbolizers: [{\n        kind: 'Text',\n        label: '{{label}}',\n        size: 12,\n        font: [\n          'sans-serif'\n        ],\n        opacity: 0.8,\n        color: '#00b72b',\n        offset: [\n          5,\n          5\n        ],\n        haloColor: '#00b72b',\n        haloWidth: 1\n      }],\n      filter: [\n        '!=',\n        'label',\n        'undefined'\n      ]\n    }]\n  };\n\n  const [style, setStyle] = useState<GsStyle>(defaultStyle);\n\n  const map = useMap();\n\n  useEffect(() => {\n    if (!style || !map) {\n      return;\n    }\n\n    const olParser = new OlParser();\n\n    let drawVectorLayer = MapUtil.getLayerByName(map, 'react-geo_digitize') as OlLayerVector<VectorSource>;\n\n    const parseStyles = async () => {\n      let olStylePolygon: OlStyleLike;\n      let olStyleLineString: OlStyleLike;\n      let olStylePoint: OlStyleLike;\n      let olStyleText: OlStyleLike;\n\n      for (const rule of style.rules) {\n        const newStyle: GsStyle = {\n          name: '',\n          rules: [rule]\n        };\n\n        const olStyle = await olParser.writeStyle(newStyle);\n\n        if (!olStyle.output) {\n          return;\n        }\n\n        if (rule.symbolizers[0].kind === 'Fill') {\n          olStylePolygon = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Text') {\n          olStyleText = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Line') {\n          olStyleLineString = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Mark') {\n          olStylePoint = olStyle.output;\n        }\n      }\n\n      const drawLayerStyleFunction = (feature: OlFeature, resolution: number) => {\n        const geometryType = feature.getGeometry()?.getType();\n\n        if (!geometryType) {\n          return;\n        }\n\n        if (['MultiPolygon', 'Polygon', 'Circle'].includes(geometryType)) {\n          return typeof olStylePolygon === 'function' ? olStylePolygon(feature, resolution) : olStylePolygon;\n        }\n\n        if (['MultiLineString', 'LineString'].includes(geometryType)) {\n          return typeof olStyleLineString === 'function' ? olStyleLineString(feature, resolution) : olStyleLineString;\n        }\n\n        if (['MultiPoint', 'Point'].includes(geometryType)) {\n          if (feature.get('label')) {\n            return typeof olStyleText === 'function' ? olStyleText(feature, resolution) : olStyleText;\n          }\n\n          return typeof olStylePoint === 'function' ? olStylePoint(feature, resolution) : olStylePoint;\n        }\n      };\n\n      drawVectorLayer.setStyle(drawLayerStyleFunction as StyleFunction);\n    };\n\n    parseStyles();\n  }, [style, map]);\n\n  return (\n    <CardStyle\n      style={style}\n      onStyleChange={setStyle}\n      {...passThroughProps}\n    />\n  );\n};\n\nexport default StylingComponent;\n","import React from 'react';\n\nimport {\n  Drawer,\n  DrawerProps\n} from 'antd';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport './index.less';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport { setStylingDrawerVisibility } from '../../store/stylingDrawerVisibility';\nimport StylingComponent from '../ToolMenu/Draw/StylingDrawerButton/StylingComponent';\n\nexport type StylingDrawerProps = DrawerProps;\n\nexport const StylingDrawer: React.FC<StylingDrawerProps> = ({\n  ...passThroughProps\n}): JSX.Element => {\n\n  const dispatch = useAppDispatch();\n  const isStylingDrawerVisible = useAppSelector(state => state.stylingDrawerVisibility);\n\n  const {\n    t\n  } = useTranslation();\n\n  const onClose = () => {\n    dispatch(setStylingDrawerVisibility(false));\n  };\n\n  return (\n    <Drawer\n      title={t('StylingDrawer.title')}\n      placement=\"right\"\n      onClose={onClose}\n      open={isStylingDrawerVisible}\n      className=\"color-pick-drawer\"\n      maskClosable={false}\n      mask={false}\n      {...passThroughProps}\n    >\n      <StylingComponent />\n    </Drawer>\n  );\n};\n\nexport default StylingDrawer;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport './index.less';\n\nimport {\n  Select\n} from 'antd';\n\nconst {\n  Option\n} = Select;\n\nimport i18n from '../../i18n';\n\nexport const LanguageSelect = () => {\n  const supportedLanguages = Object.keys(i18n.services.resourceStore.data);\n\n  const onLanguageChange = (lang: string) => {\n    i18n.changeLanguage(lang);\n  };\n\n  return (\n    <div\n      className=\"language-select\"\n      aria-label='language-selector'\n    >\n      <Select\n        defaultValue={i18n.language || 'en'}\n        onChange={onLanguageChange}\n      >\n        {\n          supportedLanguages.map(supportedLanguage => {\n            return (\n              <Option\n                key={supportedLanguage}\n                value={supportedLanguage}\n              >\n                {supportedLanguage.toUpperCase()}\n              </Option>\n            );\n          })\n        }\n      </Select>\n    </div>\n  );\n};\n\nexport default LanguageSelect;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect, useState, useMemo\n} from 'react';\n\nimport {\n  CopyOutlined,\n  MailOutlined,\n  WhatsAppOutlined\n} from '@ant-design/icons';\nimport {\n  Input, Tooltip, message\n} from 'antd';\nimport copy from 'copy-to-clipboard';\nimport {\n  EventsKey\n} from 'ol/events';\nimport BaseLayer from 'ol/layer/Base';\nimport LayerGroup from 'ol/layer/Group';\nimport ImageLayer from 'ol/layer/Image';\nimport TileLayer from 'ol/layer/Tile';\nimport {\n  unByKey\n} from 'ol/Observable';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport PermalinkUtil from '@terrestris/ol-util/dist/PermalinkUtil/PermalinkUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\n\nimport './index.less';\n\ninterface DefaultPermalinkProps { }\n\nexport interface PermalinkProps extends Partial<DefaultPermalinkProps> { }\n\nexport const Permalink: React.FC<PermalinkProps> = () => {\n  const map = useMap();\n  const layerAttributes = useMemo(() => [\n    'layerConfig',\n    'isExternalLayer',\n    'isUploadedLayer',\n    'groupName'\n  ], []);\n  const {\n    t\n  } = useTranslation();\n\n  const initialPermalink = map ? PermalinkUtil.getLink(\n    map,\n    ';',\n    l => l.get('name'),\n    l => (l instanceof TileLayer || l instanceof ImageLayer) && l.getVisible(),\n    layerAttributes\n  ) : '';\n\n  const [permalink, setPermalink] = useState(initialPermalink);\n\n  const mailSubject = 'SHOGun Web-GIS';\n  const mailBody = `Hey,\\r\\ncheck out the layer-composition I created:\\r\\n\\r\\n${permalink}`;\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n    let eventKeys: EventsKey[] = [];\n\n    const identifierFunction = (l: BaseLayer) => l.get('name');\n    const filterFunction = (l: BaseLayer) => (l instanceof TileLayer || l instanceof ImageLayer) && l.getVisible();\n    const updatePermalink = () => {\n      setPermalink(PermalinkUtil.getLink(\n        map,\n        ';',\n        identifierFunction,\n        filterFunction,\n        layerAttributes\n      ));\n    };\n\n    const updateLayerConfig = () => {\n      const externalLayers = map.getAllLayers().filter(l => l.get('isExternalLayer') || l.get('isUploadedLayer'));\n      externalLayers.forEach(externalLayer => {\n        const layerConfig = externalLayer.get('layerConfig') as Layer;\n        if (layerConfig) {\n          if (layerConfig.clientConfig) {\n            layerConfig.clientConfig.opacity = externalLayer.getOpacity();\n          } else {\n            layerConfig.clientConfig = {\n              opacity: externalLayer.getOpacity()\n            };\n          }\n          externalLayer.set('layerConfig', layerConfig);\n        }\n      });\n      updatePermalink();\n    };\n\n    const registerLayerCallback = (layerGroup: LayerGroup) => {\n      const layersInGroup = layerGroup.getLayers().getArray();\n      for (let i = 0; i < layersInGroup.length; i++) {\n        const layerInGroup = layersInGroup[i];\n\n        if (layerInGroup instanceof LayerGroup) {\n          registerLayerCallback(layerInGroup);\n        } else {\n          let eventKeyVisibility = layerInGroup.on('change:visible', updatePermalink);\n          let eventKeyOpacity = layerInGroup.on('change:opacity', updateLayerConfig);\n          eventKeys.push(eventKeyVisibility, eventKeyOpacity);\n        }\n      }\n    };\n\n    const listenerKeyCenter = map.getView().on('change:center', updatePermalink);\n    const listenerKeyResolution = map.getView().on('change:resolution', updatePermalink);\n\n    let mapLayerGroup = map.getLayerGroup();\n    registerLayerCallback(mapLayerGroup);\n    updateLayerConfig();\n\n    return () => {\n      unByKey(listenerKeyCenter);\n      unByKey(listenerKeyResolution);\n      unByKey(eventKeys);\n    };\n  }, [layerAttributes, map, t]);\n\n  function onTwitterClick() {\n    const twitterUrl = new URL('https://twitter.com/intent/tweet');\n    twitterUrl.searchParams.set('url', mailBody);\n    window.open(twitterUrl);\n  }\n\n  function onWhatsAppClick() {\n    const whatsAppUrl = new URL('https://wa.me');\n    whatsAppUrl.searchParams.set('text', mailBody);\n    window.open(whatsAppUrl);\n  }\n\n  function onMailClick() {\n    const mailToUrl = new URL('mailto:');\n    mailToUrl.searchParams.set('subject', mailSubject);\n    mailToUrl.searchParams.set('body', mailBody);\n    window.open(mailToUrl.toString().replace(/\\+/g, '%20'), '_self');\n  }\n\n  function onCopyClick() {\n    const success = copy(permalink);\n    if (success) {\n      message.info(t('Permalink.copiedToClipboard'));\n    } else {\n      message.info(t('Permalink.copyToClipboardFailed'));\n    }\n  }\n\n  return (\n    <div className=\"permalink-wrapper\">\n      <div className=\"icons\">\n        <Tooltip title={t('Permalink.whatsAppTooltip')}>\n          <WhatsAppOutlined onClick={onWhatsAppClick} />\n        </Tooltip>\n        <Tooltip title={t('Permalink.mailTooltip')}>\n          <MailOutlined onClick={onMailClick} />\n        </Tooltip>\n      </div>\n      <div\n        className=\"link\"\n        aria-label='permalink-url'\n      >\n        <Input value={permalink}\n          readOnly\n        />\n        <Tooltip title={t('Permalink.copyTooltip')}>\n          <CopyOutlined onClick={onCopyClick} />\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nexport default Permalink;\n","import OlLayer from 'ol/layer/Layer';\n\nimport MapFishPrintV3WMSSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3WMSSerializer';\n\nexport class SHOGunMapFishPrintV3WMSSerializer extends MapFishPrintV3WMSSerializer {\n\n  serialize(layer: OlLayer, opts?: any) {\n    const serialized: any = super.serialize(layer, opts);\n\n    if (serialized.baseURL.startsWith('/geoserver/ows')) {\n      serialized.baseURL = `http://shogun-geoserver:8080${serialized.baseURL}`;\n    }\n\n    if (serialized.baseURL.startsWith('/geoserver/SHOGUN')) {\n      serialized.baseURL = `http://shogun-geoserver:8080${serialized.baseURL}`;\n    }\n\n    return serialized;\n  }\n}\n\nexport default SHOGunMapFishPrintV3WMSSerializer;\n","import OlLayer from 'ol/layer/Layer';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport MapFishPrintV3TiledWMSSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3TiledWMSSerializer';\n\nimport SHOGunMapFishPrintV3WMSSerializer from './SHOGunMapFishPrintV3WMSSerializer';\n\nexport class SHOGunMapFishPrintV3TiledWMSSerializer extends SHOGunMapFishPrintV3WMSSerializer {\n\n  serialize(layer: OlLayer<OlSourceTileWMS>, opts: any) {\n    const optsToApply = {\n      tileSize: [512, 512],\n      ...opts\n    };\n\n    const source = layer.getSource();\n\n    if (!source || !this.validateSource(source)) {\n      return;\n    }\n\n    const serialized = {\n      ...super.serialize(layer, optsToApply),\n      ...{\n        type: MapFishPrintV3TiledWMSSerializer.TYPE_WMS\n      },\n      ...opts\n    };\n\n    return serialized;\n  }\n}\n\nexport default SHOGunMapFishPrintV3TiledWMSSerializer;\n","import React, {\n  useEffect, useState\n} from 'react';\n\nimport { Input } from 'antd';\nimport { InputProps } from 'antd/lib/input';\n\nimport _isNil from 'lodash/isNil';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport { addCustomParam } from '../../../store/print';\n\ninterface CustomFieldInputProps extends InputProps {}\n\nexport const CustomFieldInput: React.FC<CustomFieldInputProps> = ({\n  value,\n  id,\n  placeholder,\n  maxLength,\n  ...restProps\n}): JSX.Element => {\n\n  const [inputText, setInputText] = useState<any>(value);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (!_isNil(id)) {\n      dispatch(addCustomParam({\n        [id]: inputText\n      }));\n    }\n  }, [inputText, id, dispatch]);\n\n  useEffect(() => {\n    setInputText(value);\n  }, [value]);\n\n  return (\n    <Input\n      id={id}\n      value={inputText}\n      onChange={(event) => setInputText(event.target.value)}\n      placeholder={placeholder}\n      maxLength={maxLength}\n      showCount={!!(maxLength && maxLength > 1)}\n      {...restProps}\n    />\n  );\n};\n\nexport default CustomFieldInput;\n","import React, {\n  useEffect,\n  useRef,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport {\n  Layout\n} from '../';\n\nexport interface LayoutSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n  onValueChange: Function;\n}\n\nexport const LayoutSelect: React.FC<LayoutSelectProps> = ({\n  printManager,\n  onValueChange,\n  placeholder = 'Bitte wählen Sie eine Vorlage aus',\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [layout, setLayout] = useState<any>(value);\n  const prevLayoutRef = useRef<string | null | undefined>(layout);\n\n  useEffect(() => {\n    prevLayoutRef.current = value;\n  }, [value]);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setLayout(layout);\n      if (prevLayoutRef.current !== layout) {\n        onValueChange();\n      }\n    }\n  }, [printManager, layout, onValueChange, value]);\n\n  useEffect(() => {\n    setLayout(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={layout}\n      onChange={setLayout}\n      {...restProps}\n    >\n      {\n        printManager?.getLayouts().map((l: Layout) => (\n          <Select.Option\n            key={l.name}\n            value={l.name}\n          >\n            {l.name}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default LayoutSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface OutputFormatSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n  outputFormats: string[];\n}\n\nexport const OutputFormatSelect: React.FC<OutputFormatSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  outputFormats,\n  ...restProps\n}): JSX.Element => {\n\n  const [outputFormat, setOutputFormat] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setOutputFormat(outputFormat);\n    }\n  }, [printManager, outputFormat]);\n\n  useEffect(() => {\n    setOutputFormat(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={outputFormat}\n      onChange={setOutputFormat}\n      {...restProps}\n    >\n      {\n        outputFormats.map((f: string) => (\n          <Select.Option\n            key={f}\n            value={f}\n          >\n            {f.toLocaleUpperCase()}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default OutputFormatSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface ResolutionSelectProps extends SelectProps<number> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const ResolutionSelect: React.FC<ResolutionSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [resolution, setResolution] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setDpi(resolution);\n    }\n  }, [printManager, resolution]);\n\n  useEffect(() => {\n    setResolution(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={resolution}\n      onChange={setResolution}\n      {...restProps}\n    >\n      {\n        printManager?.getDpis().map((d: number) => (\n          <Select.Option\n            key={d}\n            value={d}\n          >\n            {`${d} DPI`}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default ResolutionSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport interface ScaleSelectProps extends SelectProps<number> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const ScaleSelect: React.FC<ScaleSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const map = useMap();\n\n  const [scale, setScale] = useState<number>(0);\n\n  useEffect(() => {\n    if (printManager && scale) {\n      printManager.setScale(scale);\n    }\n  }, [printManager, scale]);\n\n  useEffect(() => {\n    const updateScale = () => {\n      const pmScale = printManager.getScale();\n      if (pmScale) {\n        setScale(pmScale);\n      }\n    };\n    const transformInteraction = map?.getInteractions().getArray().find(i => {\n      return i.get('name') === MapFishPrintV3Manager.TRANSFORM_INTERACTION_NAME;\n    });\n\n    if (printManager && transformInteraction) {\n      // @ts-ignore\n      transformInteraction.on('scaling', updateScale);\n\n      return () => {\n        // @ts-ignore\n        transformInteraction.un('scaling', updateScale);\n      };\n    }\n  }, [printManager, map]);\n\n  useEffect(() => {\n    if (value) {\n      setScale(value);\n    }\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={scale}\n      onChange={setScale}\n      {...restProps}\n    >\n      {\n        printManager?.getScales().map((s: number) => (\n          <Select.Option\n            key={s}\n            value={s}\n          >\n            {`1 : ${s.toLocaleString()}`}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default ScaleSelect;\n","import OlLayer from 'ol/layer/Layer';\nimport OlRendererLayer from 'ol/renderer/Layer';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSource from 'ol/source/Source';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport Shared from '@terrestris/mapfish-print-manager/dist/util/Shared';\n\nShared.getLegendGraphicUrl = (layer: OlLayer<OlSource, OlRendererLayer<any>>): string => {\n  if (layer.get('legendUrl')) {\n    return layer.get('legendUrl');\n  }\n\n  if (layer.getSource() instanceof OlSourceTileWMS ||\n    layer.getSource() instanceof OlSourceImageWMS) {\n\n    const customParams: any = layer.get('customPrintLegendParams');\n    const source: any = layer.getSource();\n\n    const {\n      LAYERS,\n      VERSION,\n      FORMAT\n    } = source.getParams();\n\n    let url: string = source instanceof OlSourceImageWMS ?\n      source.getUrl() :\n      source.getUrls()[0];\n\n    if (url.startsWith('/geoserver/ows')) {\n      url = `http://shogun-geoserver:8080${url}`;\n    }\n\n    const params: any = {\n      LAYER: LAYERS.split(',')[0],\n      VERSION: VERSION || '1.3.0',\n      SERVICE: 'WMS',\n      REQUEST: 'GetLegendGraphic',\n      FORMAT: FORMAT || 'image/png',\n      ...customParams\n    };\n\n    const queryParams = Object.keys(params).map(key => {\n      return `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`;\n    }).join('&');\n\n    if (url.startsWith('/geoserver/SHOGUN')) {\n      url = `http://shogun-geoserver:8080${url}/service?`;\n      return `${url}${queryParams}`;\n    }\n\n    if (url.endsWith('?')) {\n      return `${url}${queryParams}`;\n    } else {\n      return `${url}?${queryParams}`;\n    }\n  }\n\n  return '';\n};\n","import React, {\n  useCallback, useEffect, useState\n} from 'react';\n\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n  Alert, Button, Form\n} from 'antd';\nimport { FormProps } from 'antd/lib/form/Form';\nimport ClientConfiguration from 'clientConfig';\nimport _isNil from 'lodash/isNil';\n\nimport OlGeometry from 'ol/geom/Geometry';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayer from 'ol/layer/Layer';\n\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlLayerRenderer from 'ol/renderer/Layer';\nimport OlSource from 'ol/source/Source';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport { useTranslation } from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport { MapFishPrintV3Manager } from '@terrestris/mapfish-print-manager';\nimport { MapFishPrintV3ManagerOpts } from '@terrestris/mapfish-print-manager/dist/manager/MapFishPrintV3Manager';\nimport MapFishPrintV3GeoJsonSerializer\n  from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3GeoJsonSerializer';\nimport MapFishPrintV3OSMSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3OSMSerializer';\nimport MapFishPrintV3WMTSSerializer\n  from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3WMTSSerializer';\n\nimport { LayerUtil } from '@terrestris/ol-util';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport { useMap } from '@terrestris/react-geo/dist/Hook/useMap';\nimport { getBearerTokenHeader } from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport { addCustomParam } from '../../store/print';\nimport SHOGunMapFishPrintV3TiledWMSSerializer from '../PrintForm/Serializer/SHOGunMapFishPrintV3TiledWMSSerializer';\nimport SHOGunMapFishPrintV3WMSSerializer from '../PrintForm/Serializer/SHOGunMapFishPrintV3WMSSerializer';\n\nimport CustomFieldInput from './CustomFieldInput';\nimport LayoutSelect from './LayoutSelect';\nimport OutputFormatSelect from './OutputFormatSelect';\nimport ResolutionSelect from './ResolutionSelect';\nimport ScaleSelect from './ScaleSelect';\n\nimport '../PrintForm/Shared/Shared';\n\nexport interface Layout {\n  name: string;\n  attributes: any[];\n}\n\nexport interface PrintFormProps extends Omit<FormProps, 'form'> {\n  active: boolean;\n  customPrintScales?: number[];\n  layerBlackList?: string[];\n  layouts?: Layout[];\n  outputFormats?: string[];\n}\n\nexport type LayerType = OlLayer<OlSource, OlLayerRenderer<OlLayerVector<OlSourceVector<OlGeometry>>>>;\n\nexport const PrintForm: React.FC<PrintFormProps> = ({\n  active,\n  customPrintScales = [],\n\n  layerBlackList = [],\n  outputFormats = ['pdf', 'png'],\n  ...restProps\n}): JSX.Element => {\n\n  const [form] = Form.useForm();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  const map = useMap();\n\n  const dispatch = useAppDispatch();\n\n  const currentLanguageCode = i18n.language;\n\n  const client = useSHOGunAPIClient();\n\n  const customMapParams = useAppSelector(state => state.print.customMapParams);\n  const customParams = useAppSelector(state => state.print.customParams);\n  const printApp = useAppSelector(state => state.print.printApp);\n\n  const [printManager, setPrintManager] = useState<MapFishPrintV3Manager | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMsg, setErrorMsg] = useState<string | null>(null);\n\n  const layerFilter = useCallback((l: OlLayer<OlSource>) => {\n    if (!map) {\n      return;\n    }\n\n    const layerName = l.get('name');\n\n    return layerName && !layerBlackList.includes(layerName) &&\n      l.getVisible() && !(l instanceof OlLayerGroup) &&\n      MapUtil.layerInResolutionRange(l, map);\n  }, [map, layerBlackList]);\n\n  const legendFilter = useCallback((l: OlLayer<OlSource>) => {\n    if (_isNil(map)) {\n      return false;\n    }\n    const layerName = l.get('name');\n    const notBlacklisted = !layerBlackList.includes(layerName);\n    const notHidden = !l.get('hideLegendInPrint');\n    const visible = l.getVisible() && MapUtil.layerInResolutionRange(l, map);\n    const printableLayer = !(l instanceof OlLayerGroup);\n\n    if (notBlacklisted && notHidden && visible && printableLayer) {\n      const res = map?.getView().getResolution();\n      if (res) {\n        l.set('customPrintLegendParams', {\n          SCALE: MapUtil.getScaleForResolution(res, 'm')\n        });\n      }\n      return true;\n    }\n    return false;\n  }, [map, layerBlackList]);\n\n  const getPrintableLayers = useCallback((printLayer: LayerType) => {\n    if (!map) {\n      return [];\n    }\n\n    return MapUtil.getAllLayers(map).filter((layer) => {\n      const layerName = layer.get('name');\n      return layerName &&\n        !(layerName.includes('react-geo')) &&\n        layer.getVisible() &&\n        !(layer instanceof OlLayerGroup) &&\n        layer !== printLayer;\n    }) as LayerType[];\n  }, [map]);\n\n  const getAttributions = useCallback((manager: MapFishPrintV3Manager) => {\n    const extentLayer = manager.getExtentLayer();\n    if (!extentLayer) {\n      return '';\n    }\n\n    const layers = getPrintableLayers(extentLayer);\n    let allAttributions: string[] = [];\n\n    layers.filter((layer: LayerType) => {\n      return layer.getSource && layer.getSource()?.getAttributions && layer.getSource()?.getAttributions();\n    }).forEach((layer: LayerType) => {\n      const currentLayerAttribution = LayerUtil.getLayerAttributionsText(layer, ',', true);\n\n      if (!allAttributions.includes(currentLayerAttribution)) {\n        allAttributions.push(currentLayerAttribution);\n      }\n    });\n    return allAttributions.join(', ').trim();\n  }, [getPrintableLayers]);\n\n  const initializeMapProvider = useCallback(async () => {\n    if (_isNil(map)) {\n      return;\n    }\n    let pManagerOpts: MapFishPrintV3ManagerOpts = {\n      url: ClientConfiguration.print?.url || '/print',\n      map,\n      customPrintScales: map\n        ?.getView()\n        ?.getResolutions()\n        ?.map((d: number | undefined) => {\n          const units = map?.getView()?.getProjection()?.getUnits();\n          if (typeof d !== 'undefined') {\n            const scale = MapUtil.getScaleForResolution(d, units);\n            if (typeof scale !== 'undefined') {\n              return MapUtil.roundScale(scale);\n            }\n          }\n          return undefined;\n        })\n        .filter((scale: number | undefined) => typeof scale !== 'undefined')\n        ?.reverse() as number[] | undefined,\n      timeout: 60000,\n      layerFilter,\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak())\n      },\n      transformOpts: {\n        rotate: false\n      },\n      serializers: [\n        new MapFishPrintV3GeoJsonSerializer(),\n        new MapFishPrintV3OSMSerializer(),\n        new MapFishPrintV3WMTSSerializer(),\n        new SHOGunMapFishPrintV3WMSSerializer(),\n        new SHOGunMapFishPrintV3TiledWMSSerializer()\n      ],\n      legendFilter\n    };\n\n    if (customPrintScales.length > 0) {\n      pManagerOpts = {\n        ...pManagerOpts,\n        ...{\n          customPrintScales: customPrintScales.toReversed()\n        }\n      };\n    }\n\n    const pManager: MapFishPrintV3Manager = new MapFishPrintV3Manager(pManagerOpts);\n\n    try {\n      await pManager.init();\n\n      // Use locale print app if available.\n      // Implies that a print app with the language code exists.\n      const apps = pManager.getPrintApps();\n      if (!printApp) {\n        if (apps && currentLanguageCode && apps.includes(currentLanguageCode)) {\n          await pManager.setPrintApp(currentLanguageCode);\n        }\n      } else {\n        await pManager.setPrintApp(printApp);\n      }\n\n      pManager.setOutputFormat(pManager.getOutputFormats()[0]);\n      pManager.setDpi(pManager.getDpis()[0]);\n      pManager.setLayout(pManager.getLayouts()[0]?.name);\n      setPrintManager(pManager);\n    } catch (error) {\n      setErrorMsg(() => t('PrintForm.managerErrorMessage'));\n      Logger.error('Could not initialize print manager: ', error);\n    }\n  }, [map, layerFilter, client, legendFilter, customPrintScales, printApp, currentLanguageCode, t]);\n\n  useEffect(() => {\n    if (printManager) {\n      dispatch(addCustomParam({\n        attributions: getAttributions(printManager)\n      }));\n    }\n  }, [dispatch, getAttributions, printManager]);\n\n  useEffect(() => {\n    if (active) {\n      if (!printManager) {\n        form.resetFields();\n        initializeMapProvider();\n      }\n    } else {\n      printManager?.shutdownManager();\n      setPrintManager(null);\n    }\n  }, [printManager, active, initializeMapProvider, form]);\n\n  useEffect(() => {\n    if (printManager) {\n      if (customParams) {\n        printManager.setCustomParams(customParams);\n      }\n      if (customMapParams) {\n        printManager.setCustomMapParams(customMapParams);\n      }\n    }\n  }, [printManager, customParams, customMapParams]);\n\n  const onDownloadClick = async () => {\n    try {\n      setErrorMsg(null);\n      setLoading(true);\n\n      if (!printManager) {\n        return;\n      }\n\n      const downloadUrl = await printManager.print(false);\n\n      if (!downloadUrl) {\n        throw new Error('No download URL available, the job has failed.');\n      }\n\n      window.open(downloadUrl);\n    } catch (error: any) {\n      setErrorMsg(t('PrintForm.printJobErrorMsg') || null);\n      Logger.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onAlertClose = () => {\n    setErrorMsg(null);\n  };\n\n  const handleLayoutChange = () => {\n    form.setFieldValue('dpi', printManager?.getDpis()[0]);\n  };\n\n  return (\n    <div\n      className=\"print\"\n      aria-label='print-form'\n    >\n      {\n        errorMsg && (\n          <Alert\n            className=\"print-alert\"\n            message={errorMsg}\n            type=\"error\"\n            closable\n            showIcon\n            onClose={onAlertClose}\n          />\n        )\n      }\n      {\n        printManager?.isInitiated() && (\n          <>\n            <Form\n              form={form}\n              className=\"print-form\"\n              labelAlign=\"left\"\n              labelCol={{\n                flex: '90px'\n              }}\n              {...restProps}\n            >\n              <Form.Item\n                aria-label='print-title'\n                name=\"title\"\n                label={t('PrintForm.title')}\n                initialValue={t('PrintForm.initialTitle')}\n              >\n                <CustomFieldInput\n                  aria-label='print-title-input'\n                  maxLength={50}\n                  placeholder={t('PrintForm.titlePlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                aria-label='print-comment'\n                name=\"comment\"\n                label={t('PrintForm.comment')}\n              >\n                <CustomFieldInput\n                  aria-label='print-comment-input'\n                  maxLength={200}\n                  placeholder={t('PrintForm.commentPlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                aria-label='print-layout'\n                name=\"layout\"\n                label={t('PrintForm.layout')}\n                initialValue={printManager?.getLayouts()[0]?.name}\n              >\n                <LayoutSelect\n                  aria-label='print-layout-input'\n                  printManager={printManager}\n                  onValueChange={handleLayoutChange}\n                />\n              </Form.Item>\n              <Form.Item\n                aria-label='print-scale'\n                name='scale'\n                label={t('PrintForm.scale')}\n                initialValue={printManager?.getClosestScaleToFitMap()}\n              >\n                <ScaleSelect\n                  aria-label='print-scale-input'\n                  printManager={printManager}\n                />\n              </Form.Item>\n              <Form.Item\n                aria-label='print-dpi'\n                name=\"dpi\"\n                label={t('PrintForm.dpi')}\n                initialValue={printManager.getDpis()[0]}\n              >\n                <ResolutionSelect\n                  aria-label='print-dpi-input'\n                  printManager={printManager}\n                  placeholder={t('PrintForm.resolutionPlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                aria-label='print-format'\n                name=\"format\"\n                label={t('PrintForm.format')}\n                initialValue=\"pdf\"\n              >\n                <OutputFormatSelect\n                  aria-label='print-format-input'\n                  printManager={printManager}\n                  outputFormats={outputFormats}\n                  placeholder={t('PrintForm.outputFormatPlaceholder')}\n                />\n              </Form.Item>\n            </Form>\n            <Button\n              aria-label='create-print'\n              className='print-button tool-menu-button'\n              disabled={!printManager?.isInitiated()}\n              icon={<FontAwesomeIcon icon={faDownload} />}\n              loading={loading}\n              onClick={onDownloadClick}\n            >\n              {t('PrintForm.downloadBtnText')}\n            </Button>\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default PrintForm;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  AutoComplete,\n  Form,\n  Input\n} from 'antd';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport type {\n  FormData\n} from '..';\n\nexport type AttributionRowProps = {\n  keyName: string | number;\n  onChange?: (value: string) => void;\n  options?: string[];\n};\n\nconst AttributionRow: React.FC<AttributionRowProps> = ({\n  keyName,\n  onChange = () => {},\n  options\n}) => {\n\n  const {\n    t\n  } = useTranslation();\n\n  return (\n    <>\n      <Form.Item\n        name={[keyName, 'name']}\n        rules={[{\n          required: true,\n          message: t('AttributionRow.missingKey')\n        }, ({ getFieldsValue }) => ({\n          validator(_, value: string) {\n            const fields: FormData = getFieldsValue(true);\n\n            if (fields.fields) {\n              const filtered = Object.entries(fields.fields).filter(([, val]) => val?.name === value);\n\n              if (filtered.length > 1) {\n                return Promise.reject(new Error(t('AttributionRow.keyInUse')));\n              }\n            }\n\n            return Promise.resolve();\n          }\n        })]}\n      >\n        <AutoComplete\n          placeholder={t('AttributionRow.keyPlaceholder')}\n          onChange={(value) => {\n            onChange(value);\n          }}\n          options={options?.map(o => ({ value: o }))}\n        />\n      </Form.Item>\n      <Form.Item\n        name={[keyName, 'value']}\n        rules={[{\n          required: true,\n          message: t('AttributionRow.missingValue')\n        }]}\n      >\n        <Input\n          placeholder={t('AttributionRow.valuePlaceholder')}\n          onChange={evt => {\n            onChange(evt.target.value);\n          }}\n        />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default AttributionRow;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  faMinusSquare\n} from '@fortawesome/free-regular-svg-icons';\nimport {\n  faPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Drawer,\n  DrawerProps,\n  Form,\n  FormListFieldData,\n  Popconfirm,\n  notification,\n  Row\n} from 'antd';\n\nimport OlFeature from 'ol/Feature';\nimport OlGeometry from 'ol/geom/Geometry';\nimport Select from 'ol/interaction/Select';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport AttributionRow from './AttributionRow';\n\nimport './index.less';\n\nexport type FormData = {\n  fields?: [{\n    name?: string;\n    value?: string;\n  }];\n};\n\nexport interface AttributionDrawerProps extends DrawerProps {\n  onCustomClose?: (open: boolean) => void;\n}\n\nconst AttributionDrawer: React.FC<AttributionDrawerProps> = ({\n  onCustomClose,\n  open,\n  onClose,\n  ...passThroughProps\n}) => {\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n  const [isFormValid, setIsFormIsValid] = useState(true);\n  const [availableFeatureCollectionAttributes, setAvailableFeatureCollectionAttributes] = useState<string[]>([]);\n  const [availableFeatureAttributes, setAvailableFeatureAttributes] = useState<string[]>([]);\n  const [, contextHolder] = notification.useNotification();\n  const [form] = Form.useForm<FormData>();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  const updateAvailableFeatureAttributes = useCallback((fields: FormData) => {\n    const currentKeys = fields.fields\n      ?.map(field => field?.name?.toLowerCase())\n      .filter(key => key !== undefined);\n\n    setAvailableFeatureAttributes(availableFeatureCollectionAttributes.filter(o => !(currentKeys?.includes(o.toLowerCase()))));\n  }, [availableFeatureCollectionAttributes]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const properties = selectedFeature?.getProperties();\n\n    form.setFieldValue('fields', []);\n\n    if (properties) {\n      const filteredPropertyEntries = Object.entries(properties)\n        .filter(([, value]) => !(value instanceof OlGeometry))\n        .map(([key, value]) => [key, value]);\n      const filteredProperties = Object.fromEntries(filteredPropertyEntries);\n\n      const formProperties = Object.entries(filteredProperties)\n        .map(([key, value]) => {\n          return {\n            name: key,\n            value: value\n          };\n        });\n\n      form.setFieldValue('fields', formProperties);\n    }\n\n    const digitizeLayer = DigitizeUtil.getDigitizeLayer(map);\n    const digitizedFeatures = digitizeLayer.getSource()?.getFeatures();\n\n    const featureCollectionAttributes: Set<string> = new Set();\n    digitizedFeatures?.forEach(feat => {\n      Object.keys(feat.getProperties()).forEach(prop => {\n        if (!(feat.get(prop) instanceof OlGeometry)) {\n          featureCollectionAttributes.add(prop);\n        }\n      });\n    });\n    setAvailableFeatureCollectionAttributes(Array.from(featureCollectionAttributes));\n  }, [selectedFeature, form, map]);\n\n  useEffect(() => {\n    setSelectedFeature(undefined);\n  }, [open]);\n\n  // todo revisit react-geo to make name of the slect-interaction configurable\n  const selectInteraction = map?.getInteractions().getArray().filter(interaction => {\n    if (interaction.get('active') === true && interaction.get('name') === 'react-geo-select-interaction') {\n      return true;\n    } else {\n      return false;\n    }\n  })[0] as Select;\n\n  if (selectInteraction) {\n    selectInteraction.on('select', () => {\n      setSelectedFeature(selectInteraction.getFeatures().getArray()[0]);\n    });\n  }\n\n  const onFinish = (input: FormData) => {\n    if (!selectedFeature) {\n      return;\n    }\n    notification.destroy();\n    notification.success({\n      message: (t('notificationApplyText.title')),\n      placement: 'top',\n      duration: 3.5\n    });\n\n    for (const property in selectedFeature.getProperties()) {\n      if (!(selectedFeature.get(property) instanceof OlGeometry)) {\n        selectedFeature.unset(property);\n      }\n    }\n\n    if (input.fields) {\n      Object.values(input.fields).forEach(field => {\n        if (!field?.name) {\n          return;\n        }\n        selectedFeature.set(field.name, field.value);\n      });\n    }\n  };\n\n  const remove = (rmFn: any, name: number) => {\n    rmFn(name);\n  };\n\n  const onChange = async () => {\n    try {\n      await form.validateFields();\n      setIsFormIsValid(true);\n    } catch (error) {\n      setIsFormIsValid(false);\n    }\n  };\n\n  const onValuesChange = (changedFields: FormData, fields: FormData) => {\n    updateAvailableFeatureAttributes(fields);\n  };\n\n  const getFormItems = (fields: FormListFieldData[], rmFn: any) => {\n    return fields.map((field) => {\n      const removeAndMessage = () => {\n        notification.destroy();\n        notification.info({\n          message: (t('notificationDeleteText.title')),\n          description: (t('notificationDeleteText.info')),\n          placement: 'top',\n          duration: 6\n        });\n        remove(rmFn, field.name);\n      };\n      return (\n        <div\n          key={field.key}\n          className='attribute-row'\n        >\n          <AttributionRow\n            keyName={field.name}\n            key={field.key}\n            onChange={onChange}\n            options={availableFeatureAttributes}\n          />\n          <Popconfirm\n            title={t('AttributionPopConfirm.title')}\n            okText={t('AttributionPopConfirm.okText')}\n            cancelText={t('AttributionPopConfirm.cancelText')}\n            placement='topRight'\n            onConfirm={removeAndMessage}\n          >\n            {contextHolder}\n            <Button\n              className=\"remove-attribute-button\"\n              type='primary'\n              danger={true}\n              icon={\n                <FontAwesomeIcon\n                  icon={faMinusSquare}\n                />\n              }\n            />\n          </Popconfirm>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <Drawer\n      title={t('Attribution.title')}\n      className=\"attribution-drawer\"\n      placement=\"right\"\n      mask={false}\n      maskClosable={false}\n      closable={false}\n      open={open}\n      {...passThroughProps}\n    >\n      {!selectedFeature &&\n        <>\n          {t('Attribution.select')}\n        </>\n      }\n      <Row>\n        <Form\n          onFinish={onFinish}\n          autoComplete=\"off\"\n          form={form}\n          onValuesChange={onValuesChange}\n        >\n          <Form.List\n            name=\"fields\"\n          >\n            {(fields, {\n              add,\n              remove: rmFn\n            }) => (\n              <>\n                {\n                  getFormItems(fields, rmFn)\n                }\n                <Form.Item>\n                  {\n                    selectedFeature ?\n                      <Button\n                        type=\"dashed\"\n                        onClick={() => {\n                          add();\n                        }}\n                        className=\"add-attribute-button\"\n                        icon={\n                          <FontAwesomeIcon\n                            icon={faPlus}\n                          />\n                        }\n                      >\n                        {t('Attribution.add')}\n                      </Button> :\n                      <></>\n                  }\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n          <Form.Item>\n            <Button\n              className=\"submit-attributes-button\"\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!isFormValid}\n              hidden={selectedFeature ? false: true}\n            >\n              {t('Attribution.submit')}\n            </Button>\n          </Form.Item>\n        </Form>\n      </Row>\n    </Drawer>\n  );\n};\n\nexport default AttributionDrawer;\n","import * as React from 'react';\nimport {\n  useEffect, useState\n} from 'react';\n\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Modal } from 'antd';\nimport OlGeometry from 'ol/geom/Geometry';\nimport OlVectorLayer from 'ol/layer/Vector';\nimport OlVectorSource from 'ol/source/Vector';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  SimpleButton, useMap\n} from '@terrestris/react-geo';\nimport { SimpleButtonProps } from '@terrestris/react-geo/dist/Button/SimpleButton/SimpleButton';\nimport { DigitizeUtil } from '@terrestris/react-util/dist/Util/DigitizeUtil';\n\nconst { confirm } = Modal;\n\ninterface OwnProps {\n  /**\n   * The vector layer which will be used for digitize features.\n   * The standard digitizeLayer can be retrieved via `DigitizeUtil.getDigitizeLayer(map)`.\n   */\n  digitizeLayer?: OlVectorLayer<OlVectorSource<OlGeometry>>;\n}\n\nexport type DeleteAllButtonProps = OwnProps & SimpleButtonProps;\n\n/**\n * The className added to this component.\n */\nconst defaultClassName = 'deleteallbutton';\n\nexport const DeleteAllButton: React.FC<DeleteAllButtonProps> = ({\n  className,\n  digitizeLayer,\n  ...passThroughProps\n}) => {\n  const [layers, setLayers] = useState<[OlVectorLayer<OlVectorSource<OlGeometry>>]|null>(null);\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    if (digitizeLayer) {\n      setLayers([digitizeLayer]);\n    } else {\n      setLayers([DigitizeUtil.getDigitizeLayer(map)]);\n    }\n  }, [map, digitizeLayer]);\n\n  if (!layers) {\n    return null;\n  }\n\n  const onClick = () => {\n\n    confirm({\n      title: (t('DeleteAllButton.deleteAll')),\n      content: (t('DeleteAllButton.confirmMessage')),\n      icon: <ExclamationCircleOutlined />,\n      onOk(){\n        layers[0].getSource()?.clear();\n      }\n    });\n  };\n\n  const finalClassName = className\n    ? `${defaultClassName} ${className}`\n    : defaultClassName;\n\n  return (\n    <SimpleButton\n      onClick={onClick}\n      className={finalClassName}\n      {...passThroughProps}\n    />\n  );\n};\n\nexport default DeleteAllButton;\n","import React from 'react';\n\nimport {\n  faPaintBrush\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport { Button } from 'antd';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport useAppDispatch from '../../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../../hooks/useAppSelector';\nimport { setStylingDrawerVisibility } from '../../../../store/stylingDrawerVisibility';\n\nexport const StylingButton: React.FC = (): JSX.Element => {\n\n  const dispatch = useAppDispatch();\n\n  const {\n    t\n  } = useTranslation();\n\n  const drawerVisibilty = useAppSelector(state => state.stylingDrawerVisibility);\n\n  const toggleDrawer = () => {\n    dispatch(setStylingDrawerVisibility(!drawerVisibilty));\n  };\n\n  return (\n    <Button\n      type=\"link\"\n      onClick={toggleDrawer}\n      icon={<FontAwesomeIcon icon={faPaintBrush} />}\n    >\n      {drawerVisibilty ? t('StylingDrawer.closeColorPalette') : t('StylingDrawer.openColorPalette')}\n    </Button>\n  );\n};\n\nexport default StylingButton;\n","import React, {\n  ChangeEvent,\n  useState\n} from 'react';\n\nimport {\n  faGripLines,\n  faCircle,\n  faSquare,\n  faFont,\n  faCircleNotch,\n  faShapes,\n  faPenToSquare,\n  faUpload,\n  faTrash,\n  faEraser,\n  faDownload\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport { message } from 'antd';\nimport {\n  Feature\n} from 'ol';\nimport GeoJSON from 'ol/format/GeoJSON';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport DeleteButton from '@terrestris/react-geo/dist/Button/DeleteButton/DeleteButton';\nimport DrawButton from '@terrestris/react-geo/dist/Button/DrawButton/DrawButton';\nimport ModifyButton from '@terrestris/react-geo/dist/Button/ModifyButton/ModifyButton';\nimport SimpleButton from '@terrestris/react-geo/dist/Button/SimpleButton/SimpleButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\nimport UploadButton from '@terrestris/react-geo/dist/Button/UploadButton/UploadButton';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport './index.less';\n\nimport AttributionDrawer from './Attributions';\nimport DeleteAllButton from './DeleteAllButton';\nimport StylingButton from './StylingDrawerButton';\n\ninterface DefaultDrawProps {\n  showDrawPoint?: boolean;\n  showDrawLine?: boolean;\n  showDrawPolygon?: boolean;\n  showDrawCircle?: boolean;\n  showDrawRectangle?: boolean;\n  showDrawAnnotation?: boolean;\n  showModifyFeatures?: boolean;\n  showUploadFeatures?: boolean;\n  showDownloadFeatures?: boolean;\n  showDeleteFeatures?: boolean;\n  showStyleFeatures?: boolean;\n}\n\nexport interface DrawProps extends Partial<DefaultDrawProps> { }\n\nexport const Draw: React.FC<DrawProps> = ({\n  showDrawPoint,\n  showDrawLine,\n  showDrawPolygon,\n  showDrawCircle,\n  showDrawRectangle,\n  showDrawAnnotation,\n  showModifyFeatures,\n  showUploadFeatures,\n  showDeleteFeatures\n}): JSX.Element => {\n  const [isAttributeDrawerOpen, setIsAttributeDrawerOpen] = useState(false);\n  const [selectedButton, setSelectedButton] = useState<string>();\n\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const onGeoJSONDownload = () => {\n    const clonedFeatures: Feature[] = [];\n    if (map) {\n      const mapProjection = map.getView().getProjection().getCode();\n      const digitizeLayer = DigitizeUtil.getDigitizeLayer(map);\n      const digitizedFeatures = digitizeLayer.getSource()?.getFeatures();\n      if (digitizedFeatures && digitizedFeatures.length > 0) {\n        digitizedFeatures.forEach(feat => {\n          const clonedFeature = feat.clone();\n          clonedFeature.getGeometry()?.transform(mapProjection, 'EPSG:4326');\n          clonedFeatures.push(clonedFeature);\n        });\n        const geoJSON = new GeoJSON().writeFeatures(clonedFeatures);\n\n        const fileToDownload = new Blob([geoJSON], {\n          type: 'application/geo+json'\n        });\n\n        // download the file\n        const url = window.URL.createObjectURL(fileToDownload);\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'exportedFeatures.geojson');\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n  };\n\n  const checkValidityOfUploadFile = (e: ChangeEvent<HTMLInputElement>) => {\n    const uploadedFiles = e.target.files;\n    let validity = false;\n    if (\n      (uploadedFiles && uploadedFiles.length === 1) &&\n      (\n        uploadedFiles[0].type === 'application/geo+json' ||\n        uploadedFiles[0].type === 'application/geojson' ||\n        uploadedFiles[0].name.includes('.geojson') ||\n        uploadedFiles[0].name.includes('.json')\n      )\n    ){\n      validity = true;\n    }\n    return validity;\n  };\n\n  const onUploadChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const uploadedFiles = e.target.files;\n    if (checkValidityOfUploadFile(e)){\n      onGeoJSONUpload(uploadedFiles![0]);\n    } else {\n\n      message.error(t('Draw.uploadError'));\n\n    }\n  };\n\n  const onGeoJSONUpload = (geoJSONFile: File) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      try {\n\n        const geoJSONFeatures = new GeoJSON().readFeatures(fileReader.result);\n\n        if (map) {\n          const mapProjection = map.getView().getProjection().getCode();\n          geoJSONFeatures.forEach(feat => {\n            feat.getGeometry()?.transform('EPSG:4326', mapProjection);\n          });\n          const digitizeLayer = DigitizeUtil.getDigitizeLayer(map);\n          const digitizeLayerSource = digitizeLayer.getSource();\n          digitizeLayerSource?.addFeatures(geoJSONFeatures);\n        }\n        message.success(t('Draw.uploadSuccess'));\n      } catch (err) {\n\n        message.error(t('Draw.uploadError'));\n\n      }\n    };\n\n    fileReader.readAsText(geoJSONFile);\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  const onToggleChange = (childProps: any) => {\n\n    if (childProps) {\n      setSelectedButton(childProps.name);\n    }\n  };\n\n  const onModifyButtonToggle = (active: boolean) => {\n    setIsAttributeDrawerOpen(active);\n  };\n\n  return (\n    <>\n      <ToggleGroup\n        selectedName={selectedButton}\n        onChange={onToggleChange}\n      >\n        {showDrawPoint ? (\n          <DrawButton\n            name=\"draw-point\"\n            drawType=\"Point\"\n            type=\"link\"\n            pressed={false}\n          >\n            <FontAwesomeIcon\n              icon={faCircle}\n            />\n            <span\n              className=\"draw-point\"\n            >\n              {t('Draw.point')}\n            </span>\n          </DrawButton>\n        ) : <></>}\n\n        {showDrawLine ? (\n          <DrawButton\n            name=\"draw-line\"\n            drawType=\"LineString\"\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faGripLines}\n            />\n            <span\n              className=\"draw-line\"\n            >\n              {t('Draw.line')}\n            </span>\n          </DrawButton>\n        ) : <></>}\n\n        {showDrawPolygon ? (\n          <DrawButton\n            name=\"draw-polygon\"\n            drawType=\"Polygon\"\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faShapes}\n            />\n            <span\n              className=\"draw-polygon\"\n            >\n              {t('Draw.polygon')}\n            </span>\n          </DrawButton>\n        ) : <></>}\n\n        {showDrawCircle ? (\n          <DrawButton\n            name=\"draw-circle\"\n            drawType=\"Circle\"\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faCircleNotch}\n            />\n            <span\n              className=\"draw-circle\"\n            >\n              {t('Draw.circle')}\n            </span>\n          </DrawButton>\n        ) : <></>}\n\n        {showDrawRectangle ? (\n          <DrawButton\n            name=\"draw-rectangle\"\n            drawType=\"Rectangle\"\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faSquare}\n            />\n            <span\n              className=\"draw-rectangle\"\n            >\n              {t('Draw.rectangle')}\n            </span>\n          </DrawButton>\n        ) : <></>}\n        {showDrawAnnotation ? (\n          <DrawButton\n            name=\"draw-text\"\n            drawType=\"Text\"\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faFont}\n            />\n            <span\n              className=\"draw-text\"\n            >\n              {t('Draw.text')}\n            </span>\n          </DrawButton>\n        ) : <></>}\n        <StylingButton />\n        {showModifyFeatures ? (\n          <ModifyButton\n            name=\"draw-modify\"\n            type=\"link\"\n            onToggle={onModifyButtonToggle}\n          >\n            <FontAwesomeIcon\n              icon={faPenToSquare}\n            />\n            <span\n              className=\"draw-modify\"\n            >\n              {t('Draw.modify')}\n            </span>\n          </ModifyButton>\n        ) : <></>}\n        {showDeleteFeatures ? (\n          <DeleteButton\n            name=\"draw-delete\"\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faEraser}\n            />\n            <span\n              className=\"draw-delete\"\n            >\n              {t('Draw.delete')}\n            </span>\n          </DeleteButton>\n        ) : <></>}\n        {showDeleteFeatures ? (\n          <DeleteAllButton\n            name=\"draw-delete-all\"\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faTrash}\n            />\n            <span\n              className=\"draw-delete-all\"\n            >\n              {t('DeleteAllButton.deleteAll')}\n            </span>\n          </DeleteAllButton>\n        ):<></>}\n\n        {showUploadFeatures ? (\n          <UploadButton\n            name=\"draw-upload\"\n            onChange={onUploadChange}\n            type=\"link\"\n            aria-label='draw-upload'\n          >\n            <SimpleButton\n              type=\"link\"\n            >\n              <FontAwesomeIcon\n                icon={faUpload}\n              />\n              <span\n                className=\"draw-upload\"\n              >\n                {t('Draw.upload')}\n              </span>\n            </SimpleButton>\n          </UploadButton>\n        ) : <></>}\n\n        {showUploadFeatures ? (\n          <SimpleButton\n            name=\"draw-export\"\n            onClick={onGeoJSONDownload}\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faDownload}\n            />\n            <span\n              className=\"draw-export\"\n            >\n              {t('Draw.export')}\n            </span>\n          </SimpleButton>\n        ) : <></>}\n      </ToggleGroup>\n      <AttributionDrawer\n        open={isAttributeDrawerOpen}\n        onCustomClose={() => setIsAttributeDrawerOpen(false)}\n      />\n    </>\n  );\n};\n\nexport default Draw;\n","import {\n  useCallback,\n  useEffect\n} from 'react';\n\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\nimport OlStyleCircle from 'ol/style/Circle';\nimport OlStyleFill from 'ol/style/Fill';\nimport OlStyleStroke from 'ol/style/Stroke';\nimport OlStyle from 'ol/style/Style';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport type HighlightVectorLayerOpts = {\n  layerName: string;\n};\n\nexport const useHighlightVectorLayer = (opts: HighlightVectorLayerOpts) => {\n  const map = useMap();\n\n  const initVectorLayer = useCallback(async () => {\n    if (!map) {\n      return;\n    }\n\n    if (MapUtil.getLayerByName(map, opts.layerName)) {\n      return;\n    }\n\n    const source = new OlSourceVector();\n\n    const fill = new OlStyleFill({\n      color: 'rgba(255, 255, 255, 0.15)'\n    });\n    const stroke = new OlStyleStroke({\n      color: 'rgba(209, 70, 47, 1)',\n      width: 2\n    });\n    const featureStyle = new OlStyle({\n      fill,\n      stroke,\n      image: new OlStyleCircle({\n        radius: 5,\n        fill,\n        stroke\n      })\n    });\n\n    const layer = new OlLayerVector({\n      source: source,\n      style: featureStyle\n    });\n\n    layer.set('name', opts.layerName);\n\n    map.addLayer(layer);\n  }, [map, opts.layerName]);\n\n  const deinitVectorLayer = useCallback(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, opts.layerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    map.removeLayer(vectorLayer);\n  }, [map, opts.layerName]);\n\n  useEffect(() => {\n    initVectorLayer();\n\n    return () => deinitVectorLayer();\n  }, [deinitVectorLayer, initVectorLayer]);\n};\n\nexport default useHighlightVectorLayer;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faClipboardCheck,\n  faClipboardList,\n  faEdit\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Pagination,\n  PaginationProps,\n  Tooltip\n} from 'antd';\n\nimport copy from 'copy-to-clipboard';\n\nimport {\n  Feature\n} from 'geojson';\nimport _clone from 'lodash/clone';\n\nimport {\n  getUid\n} from 'ol';\nimport { isEmpty as isEmptyOlExtent } from 'ol/extent';\nimport OlFeature from 'ol/Feature';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlGeometry from 'ol/geom/Geometry';\nimport OlLayer from 'ol/layer/Layer';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport { DigitizeUtil } from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport useAppDispatch from '../../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../../hooks/useAppSelector';\nimport {\n  setLayerId,\n  setFeature\n} from '../../../../store/editFeature';\nimport {\n  show as showEditFeatureDrawer\n} from '../../../../store/editFeatureDrawerOpen';\nimport { CopyTools } from '../../../../store/featureInfo';\n\nimport './index.less';\n\nexport type PaginationToolbarProps = {\n  exportFilter?: (propertyName: string, propertyValue: string) => boolean;\n  features: OlFeature[];\n  layer?: OlLayer;\n  selectedFeature: OlFeature;\n} & PaginationProps;\n\nexport const PaginationToolbar: React.FC<PaginationToolbarProps> = ({\n  exportFilter,\n  features,\n  layer,\n  selectedFeature,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useAppDispatch();\n  const map = useMap();\n\n  const activeCopyTools = useAppSelector(state => state.featureInfo.activeCopyTools);\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  const onCopyAsGeoJSONClick = () => {\n    if (!selectedFeature) {\n      return;\n    }\n\n    const selectedFeatureClone = selectedFeature.clone();\n\n    if (exportFilter) {\n      const propertyEntries = Object.entries(selectedFeatureClone.getProperties());\n      const filteredPropertyEntries = propertyEntries.filter(([key, value]) => exportFilter(key, value));\n\n      for (const [key, value] of propertyEntries) {\n        if (value instanceof OlGeometry) {\n          continue;\n        }\n\n        selectedFeatureClone.unset(key);\n      }\n\n      selectedFeatureClone.setProperties(Object.fromEntries(filteredPropertyEntries));\n    }\n\n    copy(new OlFormatGeoJSON().writeFeature(selectedFeatureClone));\n  };\n\n  const onCopyAsObjectClick = () => {\n    if (!selectedFeature) {\n      return;\n    }\n\n    let props = Object.entries(_clone(selectedFeature.getProperties()))\n      .filter(([, value]) => !(value instanceof OlGeometry));\n\n    if (exportFilter) {\n      props = props.filter(([key, value]) => exportFilter(key, value));\n    }\n\n    copy(JSON.stringify(Object.fromEntries(props)));\n  };\n\n  const onEditFeatureBtnClick = () => {\n    if (!layer || !map) {\n      return;\n    }\n\n    const geojsonFeatureString = new OlFormatGeoJSON().writeFeature(selectedFeature);\n\n    try {\n      const geojsonFeature = JSON.parse(geojsonFeatureString) as Feature;\n      const editLayer = DigitizeUtil.getDigitizeLayer(map);\n\n      if (!editLayer) {\n        return;\n      }\n\n      const source = editLayer.getSource();\n\n      if (!source) {\n        return;\n      }\n\n      source.clear();\n      source.addFeature(selectedFeature);\n\n      if (isEmptyOlExtent(source.getExtent())) {\n        return;\n      }\n\n      map.getView().fit(source.getExtent(), {\n        padding: [150, 150, 150, 150]\n      });\n      dispatch(setLayerId(getUid(layer)));\n      dispatch(setFeature(geojsonFeature));\n      dispatch(showEditFeatureDrawer());\n    } catch (error) {\n      Logger.error('Could not parse GeoJSON: ', error);\n    }\n  };\n\n  const isEditButtonVisible = allowedEditMode.includes('CREATE') ||\n    allowedEditMode.includes('DELETE') ||\n    allowedEditMode.includes('UPDATE');\n  const isLayerEditable = layer?.get('editable');\n\n  return (\n    <div\n      className=\"pagination-toolbar\"\n    >\n      <Pagination\n        simple\n        total={features.length}\n        size=\"small\"\n        pageSize={1}\n        {...passThroughProps}\n      />\n      <div\n        className=\"copy-buttons\"\n      >\n        {\n          isEditButtonVisible && (\n            <Tooltip\n              key=\"edit\"\n              title={isLayerEditable ? t('PaginationToolbar.editFeature') : t('PaginationToolbar.editDisabled')}\n            >\n              <Button\n                type=\"text\"\n                size=\"small\"\n                onClick={onEditFeatureBtnClick}\n                icon={<FontAwesomeIcon icon={faEdit} />}\n                disabled={!isLayerEditable}\n              />\n            </Tooltip>\n          )\n        }\n        {\n          activeCopyTools?.includes(CopyTools.COPY_AS_GEOJSON) && (\n            <Tooltip\n              title={t('PaginationToolbar.copyAsGeoJson')}\n            >\n              <Button\n                type=\"text\"\n                size=\"small\"\n                onClick={onCopyAsGeoJSONClick}\n                icon={<FontAwesomeIcon icon={faClipboardCheck} />}\n              />\n            </Tooltip>\n          )\n        }\n        {\n          activeCopyTools?.includes(CopyTools.COPY_AS_OBJECT) && (\n            <Tooltip\n              title={t('PaginationToolbar.copyAsObject')}\n            >\n              <Button\n                type=\"text\"\n                size=\"small\"\n                onClick={onCopyAsObjectClick}\n                icon={<FontAwesomeIcon icon={faClipboardList} />}\n              />\n            </Tooltip>\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default PaginationToolbar;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Tabs,\n  TabsProps\n} from 'antd';\n\nimport _isNil from 'lodash/isNil';\nimport OlFeature from 'ol/Feature';\nimport OlLayer from 'ol/layer/Layer';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  Tab\n} from 'rc-tabs/lib/interface';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  PropertyFormItemReadConfig,\n  PropertyFormTabConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useHighlightVectorLayer from '../../../../hooks/useHighlightVectorLayer';\n\nimport FeatureInfoForm from '../FeatureInfoForm';\nimport PaginationToolbar from '../PaginationToolbar';\n\nexport type FeatureInfoTabsProps = TabsProps & {\n  features: OlFeature[];\n  layerName: string;\n  tabConfig?: PropertyFormTabConfig<PropertyFormItemReadConfig>[];\n  layer: OlLayer;\n};\n\nexport const FeatureInfoTabs: React.FC<FeatureInfoTabsProps> = ({\n  features,\n  layerName,\n  layer,\n  tabConfig,\n  ...passThroughProps\n}) => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n  const [activeKey, setActiveKey] = useState<string>('0');\n\n  const map = useMap();\n\n  const vectorLayerName = `selection-layer-${layerName}`;\n\n  useHighlightVectorLayer({\n    layerName: vectorLayerName\n  });\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    setCurrentPage(1);\n\n    if (features.length > 0) {\n      setActiveKey('0');\n      setSelectedFeature(features[0]);\n    }\n  }, [features, map, vectorLayerName]);\n\n  useEffect(() => {\n    if (!selectedFeature || !map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    vectorLayer.getSource()?.addFeature(selectedFeature);\n  }, [selectedFeature, map, vectorLayerName]);\n\n  const onChange = (page: number) => {\n    if (page < 1) {\n      return;\n    }\n\n    setCurrentPage(page);\n    setSelectedFeature(features[page - 1]);\n  };\n\n  if (!tabConfig || !selectedFeature) {\n    return <></>;\n  }\n\n  const exportFilter = (propertyName: string) => {\n    let match = false;\n\n    for (const conf of tabConfig) {\n      if (!conf.children) {\n        continue;\n      }\n\n      for (const child of conf.children) {\n        if (child.propertyName === propertyName) {\n          match = true;\n          break;\n        }\n      }\n    }\n\n    return match;\n  };\n\n  const items = tabConfig\n    .filter(config => !_isNil(config))\n    .map((config, idx) => {\n      return {\n        label: config.title,\n        key: `${idx}`,\n        forceRender: true,\n        children: (\n          <FeatureInfoForm\n            name={config.title}\n            feature={selectedFeature}\n            formConfig={config.children}\n          />\n        )\n      } as Tab;\n    });\n\n  const changeKey = (key: string) => {\n    setActiveKey(key);\n  };\n\n  return (\n    <div\n      className=\"feature-info-tabs\"\n    >\n      <PaginationToolbar\n        current={currentPage}\n        exportFilter={exportFilter}\n        features={features}\n        layer={layer}\n        onChange={onChange}\n        selectedFeature={selectedFeature}\n      />\n      <Tabs\n        items={items}\n        activeKey={activeKey}\n        defaultActiveKey='0'\n        onTabClick={changeKey}\n        {...passThroughProps}\n      />\n    </div>\n  );\n};\n\nexport default FeatureInfoTabs;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  TableProps\n} from 'antd';\n\nimport OlFeature from 'ol/Feature';\nimport OlGeometry from 'ol/geom/Geometry';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport PropertyGrid from '@terrestris/react-geo/dist/Grid/PropertyGrid/PropertyGrid';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useHighlightVectorLayer from '../../../../hooks/useHighlightVectorLayer';\n\nimport PaginationToolbar from '../PaginationToolbar';\n\nimport './index.less';\n\nexport type FeatureInfoPropertyGridProps = {\n  features: OlFeature[];\n  layerName: string;\n} & TableProps<OlFeature>;\n\nexport const FeatureInfoPropertyGrid: React.FC<FeatureInfoPropertyGridProps> = ({\n  features,\n  layerName,\n  ...restProps\n}): JSX.Element => {\n  const [currentPage, setCurrentPage] = useState<number>();\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n  const [blacklistedAttributes, setBlacklistedAttributes] = useState<string[]>([]);\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  const vectorLayerName = `selection-layer-${layerName}`;\n\n  useHighlightVectorLayer({\n    layerName: vectorLayerName\n  });\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    setCurrentPage(1);\n\n    if (features.length > 0) {\n      setSelectedFeature(features[0]);\n    }\n  }, [features, map, vectorLayerName]);\n\n  useEffect(() => {\n    if (!selectedFeature || !map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    const geomAttributes = Object.entries(selectedFeature.getProperties())\n      .filter(([, value]) => value instanceof OlGeometry)\n      .map(([key]) => key);\n\n    setBlacklistedAttributes(geomAttributes);\n\n    vectorLayer.getSource()?.clear();\n    vectorLayer.getSource()?.addFeature(selectedFeature);\n  }, [selectedFeature, map, vectorLayerName]);\n\n  const onChange = (page: number) => {\n    setCurrentPage(page);\n    setSelectedFeature(features[page - 1]);\n  };\n\n  if (!selectedFeature) {\n    return <></>;\n  }\n\n  const attributeFilter = selectedFeature.getKeys()\n    .filter((prop: string | number | boolean) => {\n      return !blacklistedAttributes.includes((prop as string).toLocaleLowerCase());\n    });\n\n  return (\n    <PropertyGrid\n      className=\"property-grid\"\n      feature={selectedFeature}\n      attributeFilter={attributeFilter}\n      size=\"small\"\n      sticky={true}\n      title={() => (\n        <PaginationToolbar\n          features={features}\n          selectedFeature={selectedFeature}\n          current={currentPage}\n          onChange={onChange}\n        />\n      )}\n      columns={[{\n        title: t('FeaturePropertyGrid.key'),\n        dataIndex: 'attributeName',\n        key: 'attributeName',\n        width: '50%',\n        ellipsis: true,\n        defaultSortOrder: 'ascend',\n        sorter: (a, b) => a.key.localeCompare(b.key)\n      }, {\n        title: t('FeaturePropertyGrid.value'),\n        dataIndex: 'attributeValue',\n        key: 'attributeValue',\n        width: '50%',\n        ellipsis: true\n      }]}\n      scroll={{\n        scrollToFirstRowOnChange: true,\n        y: 'calc(100% - 90px)'\n      }}\n      {...restProps}\n    />\n  );\n};\n\nexport default FeatureInfoPropertyGrid;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useCallback, useEffect, useState\n} from 'react';\n\nimport {\n  FormProps, Spin, Tabs\n} from 'antd';\n\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlLayerBase from 'ol/layer/Base';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport { Tab } from 'rc-tabs/lib/interface';\n\nimport { useTranslation } from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport CoordinateInfo, {\n  CoordinateInfoProps,\n  CoordinateInfoState\n} from '@terrestris/react-geo/dist/CoordinateInfo/CoordinateInfo';\nimport { useMap } from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  isWmsLayer, WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport { getBearerTokenHeader } from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport usePlugins from '../../../hooks/usePlugins';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport { isFeatureInfoIntegration } from '../../../plugin';\n\nimport { CopyTools } from '../../../store/featureInfo';\nimport {\n  SelectedFeatures, setSelectedFeatures\n} from '../../../store/selectedFeatures';\n\nimport FeatureInfoTabs from './FeatureInfoTabs';\n\nimport FeatureInfoPropertyGrid from './FeaturePropertyGrid';\n\nimport './index.less';\n\nexport type FeatureInfoConfig = {\n  enabled?: boolean;\n  activeCopyTools?: CopyTools[];\n};\n\nexport type FeatureInfoProps = FormProps & Partial<CoordinateInfoProps>;\n\ntype LayerIndex = {\n  layerName: string;\n  index: number;\n};\n\nexport const FeatureInfo: React.FC<FeatureInfoProps> = ({\n  ...restProps\n}): JSX.Element => {\n\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const plugins = usePlugins();\n  const dispatch = useAppDispatch();\n\n  const [queryLayers, setQueryLayers] = useState<WmsLayer[]>([]);\n  const [activeTabKey, setActiveTabKey] = useState<string | undefined>(undefined);\n  const featureInfoEnabled = useAppSelector(state => state.featureInfo.enabled);\n\n  const layerFilter = (layer: OlLayerBase) => {\n    if (!layer.get('hoverable')) {\n      return false;\n    }\n    if (layer instanceof OlLayerImage && layer.getSource() instanceof OlSourceImageWMS) {\n      return true;\n    }\n    return layer instanceof OlLayerTile && layer.getSource() instanceof OlSourceTileWMS;\n  };\n\n  const updateQueryLayers = useCallback(() => {\n    if (!map) {\n      return;\n    }\n\n    const layerCandidates = MapUtil.getAllLayers(map, layerFilter) as WmsLayer[];\n    setQueryLayers(layerCandidates.filter(l => l.getVisible()));\n  }, [map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    updateQueryLayers();\n\n    const mapLayers = MapUtil.getAllLayers(map, layerFilter) as WmsLayer[];\n    mapLayers.forEach(l => l.on('change:visible', updateQueryLayers));\n\n    return () => {\n      mapLayers.forEach(l => l.un('change:visible', updateQueryLayers));\n    };\n\n  }, [map, updateQueryLayers]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  const changeActiveKey = (key: string) => {\n    setActiveTabKey(key);\n  };\n\n  const findMapLayerIndex = (layerName: string) => {\n    const allLayers = map.getAllLayers();\n\n    return allLayers.findIndex(l => {\n      if (isWmsLayer(l)) {\n        const source = l.getSource();\n        const unqualifiedMapLayerName = getUnqualifiedLayerName(source?.getParams().LAYERS);\n        const unqualifiedLayerName = getUnqualifiedLayerName(layerName);\n\n        return unqualifiedLayerName === unqualifiedMapLayerName;\n      }\n      return false;\n    });\n  };\n\n  const resultRenderer = (coordinateInfoState: CoordinateInfoState) => {\n    const features = coordinateInfoState.features;\n    const loading = coordinateInfoState.loading;\n\n    if (Object.keys(features).length === 0) {\n      return (\n        <span className='usage-hint'>\n          {t('FeatureInfo.usageHint')}\n        </span>\n      );\n    }\n\n    const items: Array<Tab & { index: number }> = [];\n\n    Object.keys(features).forEach(layerName => {\n      let pluginRendererAvailable = false;\n\n      const allLayers = map.getAllLayers();\n\n      const mapLayerIndex = findMapLayerIndex(layerName);\n      const mapLayer = allLayers[mapLayerIndex];\n\n      plugins.forEach(plugin => {\n        if (isFeatureInfoIntegration(plugin.integration) &&\n          ((Array.isArray(plugin.integration.layers) && plugin.integration.layers.includes(layerName)) ||\n            !plugin.integration.layers)) {\n          const {\n            key,\n            wrappedComponent: WrappedPluginComponent\n          } = plugin;\n\n          items.push({\n            label: layerName,\n            index: mapLayerIndex,\n            key: layerName,\n            children: (\n              <WrappedPluginComponent\n                key={key}\n              />\n            )\n          });\n\n          pluginRendererAvailable = true;\n        }\n      });\n\n      if (!pluginRendererAvailable) {\n        items.push({\n          label: mapLayer?.get('name') || layerName,\n          index: mapLayerIndex,\n          key: layerName,\n          children: (\n            <div\n              key={layerName}\n            >\n              {\n                mapLayer?.get('featureInfoFormConfig') ?\n                  <FeatureInfoTabs\n                    tabConfig={mapLayer?.get('featureInfoFormConfig')}\n                    features={features[layerName]}\n                    layerName={layerName}\n                    layer={mapLayer}\n                  /> :\n                  <FeatureInfoPropertyGrid\n                    features={features[layerName]}\n                    layerName={layerName}\n                  />\n              }\n            </div>\n          )\n        });\n      }\n    });\n\n    items.sort((a, b) => b.index - a.index);\n\n    return (\n      <Spin\n        spinning={loading}\n      >\n        <Tabs\n          destroyInactiveTabPane={true}\n          items={items}\n          activeKey={activeTabKey}\n          defaultActiveKey={items[0].key}\n          onTabClick={changeActiveKey}\n        />\n      </Spin>\n    );\n  };\n\n  const getUnqualifiedLayerName = (layerName: string) => {\n    return layerName.split(':').length > 1 ?\n      layerName.split(':')[1] :\n      layerName.split(':')[0];\n  };\n\n  if (!featureInfoEnabled) {\n    return <></>;\n  }\n\n  const getFetchOpts = (layer: WmsLayer) => {\n    return {\n      headers: {\n        ...layer.get('useBearerToken') ? {\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : undefined\n      }\n    };\n  };\n\n  const onSuccess = (coordinateInfoState: CoordinateInfoState) => {\n    const features = coordinateInfoState.features;\n\n    const serializedFeatures: SelectedFeatures = {};\n    Object.entries(features).forEach(entry => {\n      const layerName = entry[0];\n      const selectedFeatures = entry[1];\n\n      serializedFeatures[layerName] = new OlFormatGeoJSON().writeFeatures(selectedFeatures);\n    });\n\n    const layers: LayerIndex[] = Object.keys(features).map(layerName => ({\n      layerName: layerName,\n      index: findMapLayerIndex(layerName)\n    })).sort((a, b) => b.index - a.index);\n\n    if (layers.length > 0) {\n      setActiveTabKey(layers[0].layerName);\n    }\n\n    dispatch(setSelectedFeatures(serializedFeatures));\n  };\n\n  return (\n    <div className='feature-info-panel'>\n      <CoordinateInfo\n        featureCount={10}\n        map={map}\n        queryLayers={queryLayers}\n        resultRenderer={resultRenderer}\n        fetchOpts={getFetchOpts}\n        onSuccess={onSuccess}\n        {...restProps}\n      />\n    </div>\n  );\n};\n\nexport default FeatureInfo;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  faClock\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Divider\n} from 'antd';\n\nimport moment from 'moment';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport TimeSlider, {\n  TimeSliderProps\n} from '@terrestris/react-geo/dist/Slider/TimeSlider/TimeSlider';\n\nimport './index.less';\n\ninterface WmsTimeSliderProps extends Omit<TimeSliderProps, 'min' | 'max' | 'marks' | 'useRange' |\n  'onChange' | 'defaultValue' | 'value' | 'formatString'> {\n  layer: OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>;\n}\n\nexport const WmsTimeSlider: React.FC<WmsTimeSliderProps> = ({\n  layer,\n  ...passThroughProps\n}) => {\n  const [value, setValue] = useState<string | [string, string]>(layer.getSource()?.getParams().TIME);\n  const [min, setMin] = useState<string>();\n  const [max, setMax] = useState<string>();\n  const [marks, setMarks] = useState<Record<string | number, string> | undefined>();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    const dimension = layer.get('dimension');\n\n    if (!dimension) {\n      return;\n    }\n\n    let timeValues;\n    if (dimension.values) {\n      timeValues = dimension.values.split(',');\n    }\n\n    if (!timeValues || timeValues.length === 0) {\n      return;\n    }\n\n    setMin(timeValues[0]);\n    setMax(timeValues[timeValues.length - 1]);\n    setValue(timeValues[timeValues.length - 1]);\n\n    const m: Record<string | number, string> = {};\n    timeValues.forEach((val: string, idx: number) => {\n      m[val] = moment(val).format('YYYY-MM-DD');\n    });\n\n    setMarks(m);\n\n    if (timeValues.default === 'current') {\n      let nearest: [number, string] = [NaN, ''];\n      Object.values(m).forEach(d => {\n        let diff = moment().diff(moment(d));\n\n        if (diff < nearest[0]) {\n          nearest = [diff, d];\n        }\n      });\n\n      setValue(nearest[1]);\n    }\n  }, [layer]);\n\n  const onChange = (val: string | [string, string]) => {\n    setValue(val);\n\n    layer.getSource()?.updateParams({\n      TIME: val\n    });\n  };\n\n  return (\n    <div\n      className=\"wms-time-slider\"\n    >\n      <Divider>\n        <FontAwesomeIcon\n          icon={faClock}\n        />\n        {t('WmsTimeSlider.title')}\n      </Divider>\n      {\n        marks ?\n          <TimeSlider\n            min={min}\n            max={max}\n            marks={marks}\n            value={value}\n            onChange={onChange}\n            step={null}\n            {...passThroughProps}\n          /> :\n          <span>\n            {t('WmsTimeSlider.default')}\n          </span>\n      }\n    </div>\n  );\n};\n\nexport default WmsTimeSlider;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faEllipsisV\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Dropdown,\n  DropDownProps,\n  notification,\n  Spin\n} from 'antd';\nimport {\n  ItemType\n} from 'antd/lib/menu/hooks/useItems';\n\nimport {\n  getUid\n} from 'ol';\nimport OlLayerBase from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport {\n  transformExtent\n} from 'ol/proj';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  MenuInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport LayerUtil from '@terrestris/ol-util/dist/LayerUtil/LayerUtil';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  DownloadConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../../../hooks/useSHOGunAPIClient';\n\nimport {\n  setLayerId,\n  setFeature\n} from '../../../../store/editFeature';\nimport {\n  show as showEditFeatureDrawer\n} from '../../../../store/editFeatureDrawerOpen';\n\nimport {\n  setLayer as setLayerDetailsLayer,\n  show as showLayerDetailsModal\n} from '../../../../store/layerDetailsModal';\n\nexport type LayerTreeContextMenuProps = {\n  layer: OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>;\n  visibleLegendsIds: string[];\n  setVisibleLegendsIds: (ids: string[]) => void;\n} & Partial<DropDownProps>;\n\nexport const LayerTreeContextMenu: React.FC<LayerTreeContextMenuProps> = ({\n  layer,\n  visibleLegendsIds,\n  setVisibleLegendsIds,\n  ...restProps\n}): JSX.Element => {\n\n  const [settingsVisible, setSettingsVisible] = useState<boolean>(false);\n  const [extentLoading, setExtentLoading] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  const downloadConfig: DownloadConfig[] = layer.get('downloadConfig') ?? null;\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  const onContextMenuItemClick = (evt: MenuInfo): void => {\n    if (evt?.key.startsWith('downloadLayer')) {\n      const url = evt.key.split('|')[1];\n      downloadLayer(decodeURI(url));\n    }\n    switch (evt?.key) {\n      case 'zoomToExtent':\n        zoomToLayerExtent();\n        break;\n      case 'removeExternal':\n        removeExternalLayer();\n        break;\n      case 'toggleLegend':\n        const legendId: string = getUid(layer);\n        const newLegendIds = [...visibleLegendsIds];\n        if (newLegendIds.includes(legendId)) {\n          newLegendIds.splice(newLegendIds.indexOf(legendId), 1);\n        } else {\n          newLegendIds.push(legendId);\n        }\n        setVisibleLegendsIds(newLegendIds);\n        break;\n      case 'editLayer':\n        dispatch(setFeature(null));\n        dispatch(setLayerId(getUid(layer)));\n        dispatch(showEditFeatureDrawer());\n        break;\n      case 'layerDetails':\n        dispatch(setLayerDetailsLayer(getUid(layer)));\n        dispatch(showLayerDetailsModal());\n        break;\n      default:\n        break;\n    }\n    setSettingsVisible(false);\n  };\n\n  const zoomToLayerExtent = async (): Promise<void> => {\n    if (!map) {\n      return;\n    }\n\n    setExtentLoading(true);\n\n    try {\n      let extent = await LayerUtil.getExtentForLayer(layer, {\n        headers: layer.get('useBearerToken') ? {\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : {}\n      });\n      extent = transformExtent(extent, 'EPSG:4326', map.getView().getProjection());\n      map.getView().fit(extent);\n    } catch (error) {\n      Logger.error(error);\n      notification.error({\n        message: t('LayerTreeContextMenu.extentError')\n      });\n    } finally {\n      setExtentLoading(false);\n    }\n  };\n\n  const getParentLayerGroups = (l: OlLayerBase): OlLayerGroup[] => {\n    if (!map) {\n      return [];\n    }\n\n    const layerGroups = getAllLayerGroups(map.getLayerGroup())\n      .filter(layerGroup => layerGroup.getLayers().getArray().includes(l));\n\n    return layerGroups;\n  };\n\n  const getAllLayerGroups = (layerGroup: OlLayerGroup): OlLayerGroup[] => {\n    const layerGroups = [layerGroup];\n\n    for (const l of layerGroup.getLayers().getArray()) {\n      if (l instanceof OlLayerGroup) {\n        layerGroups.push(...getAllLayerGroups(l));\n      }\n    }\n\n    return layerGroups;\n  };\n\n  const removeLayer = (l: OlLayerBase) => {\n    const parentGroups = getParentLayerGroups(l);\n\n    parentGroups.forEach(parentGroup => parentGroup.getLayers().remove(l));\n  };\n\n  const removeExternalLayer = () => {\n    if (!map) {\n      return;\n    }\n\n    removeLayer(layer);\n\n    const externalLayerGroup = MapUtil.getLayerByName(map, t('AddLayerModal.externalWmsFolder')) as OlLayerGroup;\n    const uploadedLayerGroup = MapUtil.getLayerByName(map, t('UploadDataModal.uploadedDataFolder')) as OlLayerGroup;\n\n    if (externalLayerGroup && externalLayerGroup.getLayers().getLength() === 0) {\n      removeLayer(externalLayerGroup);\n    }\n\n    if (uploadedLayerGroup && uploadedLayerGroup.getLayers().getLength() === 0) {\n      removeLayer(uploadedLayerGroup);\n    }\n  };\n\n  const downloadLayer = async (url: string) => {\n    if (!layer) {\n      return;\n    }\n    const reqOpts = {\n      method: 'GET',\n      headers: {\n        ...layer.get('useBearerToken') ? {\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : undefined\n      }\n    };\n\n    const res = await fetch(url, reqOpts);\n    const blob = await res.blob();\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.setAttribute('download', layer.get('name'));\n    a.click();\n  };\n\n  let dropdownMenuItems: ItemType[] = [];\n\n  if (isWmsLayer(layer)) {\n    dropdownMenuItems.push({\n      label: (\n        <Spin\n          spinning={extentLoading}\n        >\n          {t('LayerTreeContextMenu.layerZoomToExtent')}\n        </Spin>\n      ),\n      key: 'zoomToExtent'\n    });\n  }\n\n  if (isWmsLayer(layer) && layer.getVisible()) {\n    const legendVisible = visibleLegendsIds.includes(getUid(layer));\n\n    dropdownMenuItems.push({\n      label: legendVisible ? t('LayerTreeContextMenu.hideLegend') : t('LayerTreeContextMenu.showLegend'),\n      key: 'toggleLegend'\n    });\n  }\n\n  if (layer.get('isExternalLayer') || layer.get('isUploadedLayer')) {\n    dropdownMenuItems.push({\n      label: t('LayerTreeContextMenu.removeLayer'),\n      key: 'removeExternal'\n    });\n  }\n\n  if (downloadConfig) {\n    const downloadItems = downloadConfig.map((dlConfig: DownloadConfig) => {\n      return {\n        label: t('LayerTreeContextMenu.downloadLayer', {\n          formatName: dlConfig.formatName ?? 'XML'\n        }),\n        key: `downloadLayer|${encodeURI(dlConfig.downloadUrl)}`\n      };\n    });\n    dropdownMenuItems.push(...downloadItems);\n  }\n\n  if (\n    layer.get('editable') &&\n    (allowedEditMode.includes('CREATE') ||\n      allowedEditMode.includes('UPDATE') ||\n      allowedEditMode.includes('DELETE'))\n  ) {\n    dropdownMenuItems.push({\n      label: t('LayerTreeContextMenu.editLayer'),\n      key: 'editLayer'\n    });\n  }\n\n  dropdownMenuItems.push({\n    label: t('LayerTreeContextMenu.layerDetails'),\n    key: 'layerDetails'\n  });\n\n  return (\n    <div\n      aria-label='layer-context'\n    >\n      <Dropdown\n        menu={{\n          items: dropdownMenuItems,\n          onClick: onContextMenuItemClick\n        }}\n        placement=\"bottomLeft\"\n        onOpenChange={setSettingsVisible}\n        open={settingsVisible}\n        trigger={['click']}\n        {...restProps}\n      >\n        <FontAwesomeIcon icon={faEllipsisV} />\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default LayerTreeContextMenu;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport './index.less';\n\nexport const LoadingIndicator: React.FC = (): JSX.Element => {\n  return (\n    <div className=\"layer-node-title-loading-animation\">\n      <span className=\"dot-one\">.</span>\n      <span className=\"dot-two\">.</span>\n      <span className=\"dot-three\">.</span>\n    </div>\n  );\n};\n\nexport default LoadingIndicator;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\n\nimport {\n  getUid\n} from 'ol';\nimport BaseEvent from 'ol/events/Event';\nimport OlBaseLayer from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayer from 'ol/layer/Layer';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSource from 'ol/source/Source';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport RgLayerTree, {\n  LayerTreeProps as RgLayerTreeProps\n} from '@terrestris/react-geo/dist/LayerTree/LayerTree';\nimport Legend from '@terrestris/react-geo/dist/Legend/Legend';\nimport LayerTransparencySlider from '@terrestris/react-geo/dist/Slider/LayerTransparencySlider/LayerTransparencySlider';\n\nimport LayerType from '@terrestris/shogun-util/dist/model/enum/LayerType';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport WmsTimeSlider from '../../WmsTimeSlider';\n\nimport LayerTreeContextMenu from './LayerTreeContextMenu';\n\nimport './index.less';\nimport LoadingIndicator from './LoadingIndicator';\n\nexport type LayerTreeProps = Partial<RgLayerTreeProps>;\n\nexport type LayerTileLoadCounter = {\n  [key: string]: {\n    loading: number;\n    loaded: number;\n    percent: number;\n  };\n};\n\nexport const LayerTree: React.FC<LayerTreeProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const {\n    t\n  } = useTranslation();\n\n  const showLegendsState: boolean = useAppSelector(state => state.layerTree.showLegends) ?? false;\n\n  const initialLayersUid = map?.getAllLayers().map(l => getUid(l));\n\n  const [visibleLegendsIds, setVisibleLegendsIds] = useState<string[]> (showLegendsState ? initialLayersUid ?? [] : []);\n  const [layerTileLoadCounter, setLayerTileLoadCounter] = useState<LayerTileLoadCounter>({});\n\n  const registerTileLoadHandler = useCallback(() => {\n    if (!map) {\n      return;\n    }\n\n    const allLayers = MapUtil.getAllLayers(map);\n    allLayers.forEach(layer => {\n      if (layer instanceof OlLayer) {\n        const source = layer.getSource();\n        if (source instanceof OlSourceTileWMS) {\n          if (!source.hasListener('tileloadstart')) {\n            source.on('tileloadstart', tileLoadStartListener);\n          }\n          if (!source.hasListener('tileloadend') && !source.hasListener('tileloaderror')) {\n            source.on(['tileloadend', 'tileloaderror'], tileLoadEndListener);\n          }\n        }\n        if (source instanceof OlSourceImageWMS) {\n          if (!source.hasListener('imageloadstart')) {\n            source.on('imageloadstart', tileLoadStartListener);\n          }\n          if (!source.hasListener('imageloadend') && !source.hasListener('imageloaderror')) {\n            source.on(['imageloadend', 'imageloaderror'], tileLoadEndListener);\n          }\n        }\n      }\n    });\n  }, [map]);\n\n  const checkListeners = useCallback(() => {\n    const activeLayers = map?.getAllLayers().map(l => getUid(l));\n\n    if (activeLayers?.length !== initialLayersUid?.length) {\n      registerTileLoadHandler();\n    }\n  }, [map, initialLayersUid, registerTileLoadHandler]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    registerTileLoadHandler();\n\n    map.getLayers().on('change', checkListeners);\n\n    return () => {\n      const allLayers = MapUtil.getAllLayers(map);\n      allLayers.forEach(layer => {\n        if (layer instanceof OlLayer) {\n          const source = layer.getSource();\n          if (source.hasListener('tileloadstart')) {\n            source.un('tileloadstart', tileLoadStartListener);\n          }\n          if (source.hasListener('tileloadend')) {\n            source.un('tileloadend', tileLoadEndListener);\n          }\n          if (source.hasListener('tileloaderror')) {\n            source.un('tileloaderror', tileLoadEndListener);\n          }\n        }\n      });\n      map.getLayers().un('change', checkListeners);\n    };\n  }, [map, registerTileLoadHandler, checkListeners]);\n\n  const tileLoadStartListener = (evt: BaseEvent) => {\n    setLayerTileLoadCounter((counter: LayerTileLoadCounter) => {\n      const uid = parseInt(getUid(evt.target), 10);\n      const update = { ...counter };\n      // reset when load was finished\n      if (update[uid] && update[uid].loaded >= update[uid].loading) {\n        update[uid].loading = 1;\n        update[uid].loaded = 0;\n        update[uid].percent = 0;\n        return update;\n      }\n      if (!update[uid]) {\n        update[uid] = {\n          loading: 0,\n          loaded: 0,\n          percent: 0\n        };\n      }\n      update[uid].loading = Number.isInteger(update[uid].loading) ?\n        update[uid].loading + 1 : 1;\n      return update;\n    });\n  };\n\n  const tileLoadEndListener = (evt: BaseEvent | Event) => {\n    setLayerTileLoadCounter((counter: LayerTileLoadCounter) => {\n      const uid = parseInt(getUid(evt.target), 10);\n      const update = { ...counter };\n      if (!update[uid]) {\n        update[uid] = {\n          loading: 0,\n          loaded: 0,\n          percent: 0\n        };\n      }\n      update[uid].loaded = Number.isInteger(update[uid].loaded) ?\n        update[uid].loaded + 1 : 1;\n      const percent = Math.round(update[uid].loaded / update[uid].loading * 100);\n      if (percent > update[uid].percent) {\n        update[uid].percent = percent;\n      }\n      return update;\n    });\n  };\n\n  const treeFilterFunction = (layer: OlLayer<OlSource> | OlLayerGroup) => {\n    if ((layer as OlLayerGroup).getLayers) {\n      return !layer.get('hideInLayerTree');\n    }\n\n    return !((layer as OlLayer).getSource && ((layer as OlLayer).getSource() as OlSourceVector)?.forEachFeature);\n  };\n\n  const treeNodeTitleRenderer = (layer: OlBaseLayer) => {\n    if (!map) {\n      return;\n    }\n\n    const mapView = map.getView();\n    const unit = mapView.getProjection().getUnits() || 'm';\n    const resolution = mapView.getResolution();\n    const scale = resolution ? MapUtil.getScaleForResolution(resolution, unit) : undefined;\n    const percent = layer instanceof OlLayer && getUid(layer.getSource()) ?\n      layerTileLoadCounter[getUid(layer.getSource())]?.percent : 100;\n\n    if (layer instanceof OlLayerGroup) {\n      return (\n        <div\n          aria-label='layer-group'\n        >\n          {layer.get('name')}\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div\n            className=\"tree-node-header\"\n            aria-label=\"tree-node-header\"\n          >\n            <span\n              aria-label='layer-name'\n              className='layer-name'\n            >\n              {layer.get('name')}\n              <span\n                className='loading-dots'\n              >\n                {percent < 100 && <LoadingIndicator />}\n              </span>\n            </span>\n            {\n              (layer instanceof OlLayerTile || layer instanceof OlLayerImage) && (\n                <div\n                  aria-label='layer-context-menu'\n                >\n                  <LayerTreeContextMenu\n                    layer={layer}\n                    visibleLegendsIds={visibleLegendsIds}\n                    setVisibleLegendsIds={setVisibleLegendsIds}\n                  />\n                </div>\n              )\n            }\n\n          </div>\n          {\n            layer.get('visible') &&\n            <div\n              className=\"layer-transparency\"\n              aria-label='transparency-slider'\n            >\n              <LayerTransparencySlider\n                tooltip={{\n                  formatter: val => `${t('LayerTree.transparency')}: ${val}%`\n                }}\n                layer={layer}\n              />\n            </div>\n          }\n          {\n            (layer.get('visible') && layer.get('type') as LayerType === 'WMSTIME') &&\n            <div className=\"layer-time-slider\">\n              <WmsTimeSlider\n                layer={layer as OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>}\n              />\n            </div>\n          }\n          {\n            (layer.get('visible') && visibleLegendsIds.includes(getUid(layer))) &&\n            <Legend\n              layer={layer as OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>}\n              errorMsg={t('LayerTree.noLegendAvailable')}\n              extraParams={{\n                scale,\n                LEGEND_OPTIONS: 'fontAntiAliasing:true;forceLabels:on',\n                TRANSPARENT: true\n              }}\n              headers={\n                layer.get('useBearerToken') ?\n                  {\n                    ...getBearerTokenHeader(client?.getKeycloak())\n                  } :\n                  {}\n              }\n            />\n          }\n        </>\n      );\n    }\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <RgLayerTree\n      aria-label=\"layertree\"\n      className=\"layertree\"\n      map={map}\n      nodeTitleRenderer={treeNodeTitleRenderer}\n      filterFunction={treeFilterFunction}\n      draggable\n      {...restProps}\n    />\n  );\n};\n\nexport default LayerTree;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faDrawPolygon,\n  faPenRuler\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MeasureButton from '@terrestris/react-geo/dist/Button/MeasureButton/MeasureButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\ninterface DefaultMeasureProps {\n  showMeasureDistance?: boolean;\n  showMeasureArea?: boolean;\n}\n\nexport interface MeasureProps extends Partial<DefaultMeasureProps> { }\n\nexport const Measure: React.FC<MeasureProps> = ({\n  showMeasureDistance,\n  showMeasureArea\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <ToggleGroup>\n      {showMeasureDistance ? (\n        <MeasureButton\n          geodesic\n          name=\"line\"\n          map={map}\n          measureType=\"line\"\n          type=\"link\"\n          continueLineMsg={t('Measure.clicktodrawline')}\n        >\n          <FontAwesomeIcon icon={faPenRuler} />\n          <span className=\"measure-text\">{t('Measure.line')}</span>\n        </MeasureButton>\n      ) : <></>}\n\n      {showMeasureArea ? (\n        <MeasureButton\n          geodesic\n          name=\"poly\"\n          map={map}\n          measureType=\"polygon\"\n          type=\"link\"\n          continuePolygonMsg={t('Measure.clicktodrawarea')}\n        >\n          <FontAwesomeIcon icon={faDrawPolygon} />\n          <span className=\"measure-text\">{t('Measure.area')}</span>\n        </MeasureButton>\n      ) : <></>}\n\n    </ToggleGroup>\n  );\n};\n\nexport default Measure;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\n\nimport type {\n  IconDefinition\n} from '@fortawesome/fontawesome-common-types';\n\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faPalette,\n  faFileDownload,\n  faLanguage,\n  faCircleInfo,\n  faPlus,\n  faRuler,\n  faShareNodes,\n  faStream,\n  faUpload\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Collapse,\n  CollapsePanelProps,\n  Tooltip\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _toArray from 'lodash/toArray';\n\nconst { Panel } = Collapse;\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport usePlugins from '../../hooks/usePlugins';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nimport {\n  isToolMenuIntegration\n} from '../../plugin';\n\nimport {\n  show as showAdd\n} from '../../store/addLayerModal';\nimport { setFeatureInfoEnabled } from '../../store/featureInfo';\nimport {\n  UploadTools, setLayerTreeEnabled\n} from '../../store/layerTree';\nimport {\n  setActiveKeys\n} from '../../store/toolMenu';\nimport {\n  show as showUpload\n} from '../../store/uploadDataModal';\n\nimport LanguageSelect from '../LanguageSelector';\nimport Permalink from '../Permalink';\nimport PrintForm from '../PrintForm';\n\nimport Draw from './Draw';\nimport FeatureInfo from './FeatureInfo';\nimport LayerTree from './LayerTree';\n\nimport Measure from './Measure';\nimport './index.less';\n\nexport interface TitleEventEntity {\n  key: string;\n  domEvent: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>;\n}\n\nexport type ToolPanelConfig = {\n  icon: IconDefinition;\n  title: string;\n  wrappedComponent: JSX.Element;\n};\n\nexport type ToolMenuProps = Partial<CollapsePanelProps> & {\n  collapseWidth?: number;\n  minWidth?: number;\n  maxWidth?: number;\n};\n\nexport const ToolMenu: React.FC<ToolMenuProps> = ({\n  collapseWidth = 40,\n  minWidth = 240,\n  maxWidth = 600,\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n  const map = useMap();\n\n  const plugins = usePlugins();\n\n  const dispatch = useAppDispatch();\n  const availableTools = useAppSelector(state => state.toolMenu.availableTools);\n  const activeKeys = useAppSelector(state => state.toolMenu.activeKeys);\n\n  const client = useSHOGunAPIClient();\n  const keycloak = client?.getKeycloak();\n\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const [menuTools, setMenuTools] = useState<string[]>([]);\n  const [isResizing, setIsResizing] = useState(false);\n  const [width, setWidth] = useState(320);\n  const [noCollapseWidth, setNoCollapseWidth] = useState(width);\n\n  useEffect(() => {\n    const mobileQuery = window.matchMedia('only screen and (max-width: 450px) and (orientation: portrait),' +\n      'only screen and (max-width: 750px) and (orientation: landscape), only screen and (max-width: 580px)');\n    const mobileNavigatorRegEx = new RegExp('/Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle' +\n      '|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/');\n    const isMobile = mobileQuery.matches || mobileNavigatorRegEx.test(window.navigator.userAgent);\n\n    if (isMobile) {\n      setCollapsed(true);\n      setWidth(collapseWidth);\n    }\n  }, [collapseWidth]);\n\n  useEffect(() => {\n    if (menuTools.length < 1) {\n      if (availableTools.includes('default')) {\n        setMenuTools([\n          'measure_tools',\n          'draw_tools',\n          'feature_info',\n          'print',\n          'tree',\n          'permalink',\n          'language_selector'\n        ]);\n      } else {\n        setMenuTools(availableTools);\n      }\n    }\n  }, [menuTools, availableTools]);\n\n  useEffect(() => {\n    const exclusiveTools = [\n      'print',\n      'measure_tools',\n      'draw_tools',\n      'feature_info',\n      'tree'\n    ];\n\n    const activeExclusiveTools = exclusiveTools.filter(tool =>\n      activeKeys.includes(tool)\n    );\n\n    if (activeExclusiveTools.length > 1) {\n      const lastExclusiveTool = activeKeys\n        .slice(0, activeKeys.length - 1)\n        .reverse()\n        .find(tool => exclusiveTools.includes(tool));\n\n      if (lastExclusiveTool) {\n        dispatch(\n          setActiveKeys(activeKeys.filter(keys => keys !== lastExclusiveTool))\n        );\n      }\n    }\n\n    dispatch(setFeatureInfoEnabled(activeKeys.includes('feature_info')));\n    dispatch(setLayerTreeEnabled(activeKeys.includes('tree')));\n\n  }, [activeKeys, dispatch]);\n\n  const getToolPanels = (): JSX.Element[] => {\n\n    const panels: JSX.Element[] = [];\n\n    menuTools.forEach((tool: string) => {\n      const toolPanelConfig: ToolPanelConfig | undefined = getToolPanelConfig(tool);\n\n      if (!toolPanelConfig) {\n        return;\n      }\n      const {\n        icon,\n        title,\n        wrappedComponent\n      } = toolPanelConfig;\n\n      const panel = (\n        <Panel\n          className={tool}\n          header={\n            <>\n              {icon ? <FontAwesomeIcon icon={icon} /> : undefined}\n              <span>{title}</span>\n            </>\n          }\n          key={tool}\n        >\n          {wrappedComponent}\n        </Panel>\n      );\n      panels.push(panel);\n    });\n\n    if (plugins) {\n      plugins.forEach(plugin => {\n        if (isToolMenuIntegration(plugin.integration)) {\n          const {\n            key,\n            wrappedComponent: WrappedPluginComponent,\n            integration: {\n              placement,\n              label = 'Plugin',\n              insertionIndex,\n              icon,\n              ...passThroughProps\n            }\n          } = plugin;\n\n          panels.splice(insertionIndex || 0, 0, (\n            <Panel\n              header={\n                <>\n                  {icon ? <FontAwesomeIcon icon={icon} /> : undefined}\n                  <span>{t(label)}</span>\n                </>\n              }\n              key={key}\n              {...passThroughProps}\n            >\n              <WrappedPluginComponent />\n            </Panel>\n          ));\n        }\n      });\n    }\n    return panels;\n  };\n\n  const activeUploadTools = useAppSelector(state => state.layerTree.activeUploadTools);\n\n  const getToolPanelConfig = (tool: string): ToolPanelConfig | undefined => {\n    switch (tool) {\n      case 'measure_tools':\n        return {\n          icon: faRuler,\n          title: t('ToolMenu.measure'),\n          wrappedComponent: (\n            <Measure\n              showMeasureDistance={\n                availableTools.includes('default') || availableTools.includes('measure_tools_distance')\n              }\n              showMeasureArea={availableTools.includes('default') || availableTools.includes('measure_tools_area')}\n            />\n          )\n        };\n      case 'draw_tools':\n        return {\n          icon: faPalette,\n          title: t('ToolMenu.draw'),\n          wrappedComponent: (\n            <Draw\n              showDrawPoint={availableTools.includes('default') || availableTools.includes('draw_tools_point')}\n              showDrawLine={availableTools.includes('default') || availableTools.includes('draw_tools_line')}\n              showDrawPolygon={availableTools.includes('default') || availableTools.includes('draw_tools_polygon')}\n              showDrawCircle={availableTools.includes('default') || availableTools.includes('draw_tools_circle')}\n              showDrawRectangle={availableTools.includes('default') || availableTools.includes('draw_tools_rectangle')}\n              showDrawAnnotation={\n                availableTools.includes('default') || availableTools.includes('draw_tools_annotation')\n              }\n              showModifyFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_modify')}\n              showUploadFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_upload')}\n              showDownloadFeatures={\n                availableTools.includes('default') || availableTools.includes('draw_tools_download')\n              }\n              showDeleteFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_delete')}\n              showStyleFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_style')}\n            />\n          )\n        };\n      case 'feature_info':\n        return {\n          icon: faCircleInfo,\n          title: t('ToolMenu.featureInfo'),\n          wrappedComponent: (\n            <FeatureInfo />\n          )\n        };\n      case 'print':\n        return {\n          icon: faFileDownload,\n          title: t('ToolMenu.print'),\n          wrappedComponent: map ? (\n            <PrintForm\n              active={activeKeys.includes('print')}\n              layerBlackList={[\n                'react-geo_measure',\n                'hoverVectorLayer'\n              ]}\n            />\n          ) : <></>\n        };\n      case 'tree':\n        return {\n          icon: faStream,\n          title: t('ToolMenu.layertree'),\n          wrappedComponent: (\n            <div className='tree-wrapper'>\n              <LayerTree />\n              {activeUploadTools?.includes(UploadTools.addWMS) && (\n                <Button\n                  className='add-wms-button tool-menu-button'\n                  icon={<FontAwesomeIcon icon={faPlus} />}\n                  onClick={() => dispatch(showAdd())}\n                >\n                  {t('ToolMenu.addWms')}\n                </Button>\n              )\n              }\n              {\n                keycloak && ClientConfiguration.geoserver?.upload?.authorizedRoles?.some(\n                  role => keycloak.hasResourceRole(role, keycloak.clientId)) &&\n                  activeUploadTools?.includes(UploadTools.dataUpload) && (\n                  <Button\n                    className='upload-data-button tool-menu-button'\n                    icon={<FontAwesomeIcon icon={faUpload} />}\n                    onClick={() => dispatch(showUpload())}\n                  >\n                    {t('ToolMenu.uploadData')}\n                  </Button>\n                )\n              }\n            </div>\n          )\n        };\n      case 'permalink':\n        return {\n          icon: faShareNodes,\n          title: t('Permalink.title'),\n          wrappedComponent: <Permalink />\n        };\n      case 'language_selector':\n        return {\n          icon: faLanguage,\n          title: t('ToolMenu.languageSelect'),\n          wrappedComponent: <LanguageSelect />\n        };\n      default:\n        break;\n    }\n  };\n\n  const onMouseDown = useCallback(() => {\n    setIsResizing(true);\n  }, []);\n\n  const onMouseUp = useCallback(() => {\n    setIsResizing(false);\n  }, []);\n\n  const onMouseMove = useCallback((e: MouseEvent) => {\n    if (isResizing && !collapsed) {\n      let offsetLeft = (e.clientX - document.body.offsetLeft);\n      if (offsetLeft > minWidth && offsetLeft < maxWidth) {\n        setWidth(offsetLeft);\n        setNoCollapseWidth(offsetLeft);\n      }\n    }\n  }, [isResizing, collapsed, minWidth, maxWidth]);\n\n  useEffect(() => {\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n\n    return () => {\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [onMouseMove, onMouseUp]);\n\n  return (\n    <div\n      aria-label=\"tool-menu\"\n      className={`tool-menu ${collapsed ? 'collapsed' : ''}`}\n      style={{width: width} as React.CSSProperties}\n    >\n      <Collapse\n        expandIconPosition='end'\n        activeKey={activeKeys}\n        destroyInactivePanel={true}\n        onChange={(keys: string[] | string) => {\n          setCollapsed(false);\n          dispatch(setActiveKeys(_toArray(keys)));\n          if (collapsed) {\n            setWidth(noCollapseWidth);\n          }\n        }}\n        {...restProps}\n      >\n        {getToolPanels()}\n      </Collapse>\n      <Tooltip\n        placement={'right'}\n        title={collapsed ? t('ToolMenu.expand') : t('ToolMenu.collapse')}\n      >\n        <Button\n          className=\"collapse-btn\"\n          aria-label=\"collapse-button\"\n          icon={\n            collapsed ?\n              <FontAwesomeIcon icon={faChevronRight} /> :\n              <FontAwesomeIcon icon={faChevronLeft} />\n          }\n          onClick={() => {\n            dispatch(setActiveKeys([]));\n            setCollapsed(!collapsed);\n            if (collapsed){\n              setWidth(noCollapseWidth);\n            } else {\n              setWidth(collapseWidth);\n            }\n          }}\n        />\n      </Tooltip>\n      {!collapsed ? (\n        <div\n          className =\"dynamicWidth\"\n          onMouseDown={onMouseDown}\n        />\n      ) : <></>}\n    </div>\n  );\n};\n\nexport default ToolMenu;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faUpload\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Alert,\n  Modal,\n  ModalProps,\n  Spin,\n  Upload\n} from 'antd';\n\nconst { Dragger } = Upload;\n\nimport {\n  RcFile,\n  UploadChangeParam,\n  UploadFile\n} from 'antd/lib/upload/interface';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport TileLayer from 'ol/layer/Tile';\nimport TileWMSSource from 'ol/source/TileWMS';\n\nimport {\n  UploadRequestOption\n} from 'rc-upload/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Shapefile\n} from 'shapefile.js';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport {\n  hide\n} from '../../store/uploadDataModal';\n\nimport './index.less';\n\ntype FeatureTypeAttribute = {\n  name: string;\n  minOccurs: number;\n  maxOccurs: number;\n  nillable: boolean;\n  binding?: string | null;\n  length?: number;\n};\n\ntype FeatureTypeAttributes = {\n  attribute: FeatureTypeAttribute[];\n};\n\nexport type LayerUploadOptions = {\n  baseUrl: string;\n  workspace: string;\n  storeName: string;\n  layerName: string;\n  file: RcFile;\n};\n\nexport type LayerUploadResponse = {\n  layerName: string;\n  workspace: string;\n  baseUrl: string;\n};\n\nexport type UploadDataModalProps = Partial<ModalProps>;\n\nexport const UploadDataModal: React.FC<UploadDataModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [uploadError, setUploadError] = useState('');\n  const [uploadSuccess, setUploadSuccess] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n\n  const isModalVisible = useAppSelector(state => state.uploadDataModal.visible);\n  const user = useAppSelector((state) => state.user);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const closeModal = () => {\n    setUploadError('');\n    setUploadSuccess('');\n    dispatch(hide());\n  };\n\n  const addLayer = (layer: TileLayer<TileWMSSource>) => {\n    if (!map) {\n      return;\n    }\n\n    const targetFolderName = t('UploadDataModal.uploadedDataFolder');\n    let targetGroup = MapUtil.getLayerByName(map, targetFolderName) as OlLayerGroup;\n\n    if (!targetGroup) {\n      targetGroup = new OlLayerGroup({\n        layers: [],\n        properties: {\n          name: targetFolderName\n        }\n      });\n      const existingGroups = map.getLayerGroup().getLayers();\n      existingGroups.insertAt(existingGroups?.getLength() || 0, targetGroup);\n    }\n\n    if (!targetGroup.getLayers().getArray().includes(layer)) {\n      targetGroup.getLayers().push(layer);\n    }\n  };\n\n  const onBeforeFileUpload = (file: RcFile) => {\n    const maxSize = ClientConfiguration.geoserver?.upload?.limit || 200000000;\n    const fileType = file.type;\n    const fileSize = file.size;\n\n    setUploadError('');\n    setUploadSuccess('');\n\n    if (fileSize > maxSize) {\n      setUploadError(t('UploadDataModal.error.maxSize', {\n        maxSize: maxSize / 1000000\n      }));\n\n      return false;\n    }\n\n    const supportedFormats = ['application/zip', 'image/tiff'];\n    if (!supportedFormats.includes(fileType)) {\n      setUploadError(t('UploadDataModal.error.supportedFormats', {\n        supportedFormats: supportedFormats.join(', ')\n      }));\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const uploadGeoTiff = async (options: LayerUploadOptions): Promise<void> => {\n    const {\n      baseUrl,\n      workspace,\n      storeName,\n      layerName,\n      file\n    } = options;\n\n    const coverageStoreUrl = `${baseUrl}/rest/workspaces/${workspace}/coveragestores/` +\n      `${storeName}/file.geotiff?configure=none`;\n\n    const coverageStoreResponse = await fetch(coverageStoreUrl, {\n      method: 'PUT',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'image/tiff'\n      },\n      body: file\n    });\n\n    if (!coverageStoreResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n\n    const coverageUrl = `${baseUrl}/rest/workspaces/${workspace}/coveragestores/${storeName}/coverages`;\n\n    const coverageResponse = await fetch(coverageUrl, {\n      method: 'POST',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        coverage: {\n          enabled: true,\n          name: layerName,\n          nativeName: layerName,\n          title: layerName,\n          keywords: {\n            // eslint-disable-next-line quote-props\n            'string': [\n              'User upload',\n              `Uploaded by ${user.providerDetails?.username}`\n            ]\n          }\n        }\n      })\n    });\n\n    if (!coverageResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n  };\n\n  const uploadShapeZip = async (options: LayerUploadOptions): Promise<void> => {\n    const {\n      baseUrl,\n      workspace,\n      storeName,\n      layerName,\n      file\n    } = options;\n\n    const shp = await Shapefile.load(file);\n\n    let featureTypeName = '';\n    let featureTypeAttributes: FeatureTypeAttributes = {\n      attribute: []\n    };\n\n    if (Object.entries(shp).length !== 1) {\n      throw new Error(t('UploadDataModal.error.zipContent'));\n    }\n\n    Object.entries(shp).forEach(([k, v]) => {\n      featureTypeName = k;\n\n      const dbfContent = v.parse('dbf', {\n        properties: false\n      });\n\n      featureTypeAttributes.attribute = dbfContent.fields.map(field => ({\n        name: field.name,\n        minOccurs: 0,\n        maxOccurs: 1,\n        nillable: true,\n        binding: getAttributeType(field.type),\n        length: field.length\n      }));\n\n      const shxContent = v.parse('shx');\n\n      featureTypeAttributes.attribute.push({\n        name: 'the_geom',\n        minOccurs: 0,\n        maxOccurs: 1,\n        nillable: true,\n        binding: getGeometryType(shxContent.header.type)\n      });\n    });\n\n    const url = `${baseUrl}/rest/workspaces/${workspace}/datastores/` +\n      `${storeName}/file.shp?configure=none`;\n\n    const response = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/zip'\n      },\n      body: file\n    });\n\n    if (!response.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n\n    const featureTypeUrl = `${baseUrl}/rest/workspaces/${workspace}/datastores/${storeName}/featuretypes`;\n\n    const featureTypeResponse = await fetch(featureTypeUrl, {\n      method: 'POST',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        featureType: {\n          enabled: true,\n          name: layerName,\n          nativeName: featureTypeName,\n          title: layerName,\n          attributes: featureTypeAttributes,\n          keywords: {\n            // eslint-disable-next-line quote-props\n            'string': [\n              'User upload',\n              `Uploaded by ${user.providerDetails?.username}`\n            ]\n          }\n        }\n      })\n    });\n\n    if (!featureTypeResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n  };\n\n  const onFileUploadAction = async (options: UploadRequestOption<LayerUploadResponse>) => {\n    const {\n      onError,\n      onSuccess,\n      file\n    } = options;\n\n    const splittedFileName = (file as RcFile).name.split('.');\n    const fileType = (file as RcFile).type;\n    const geoServerBaseUrl = ClientConfiguration.geoserver?.base || '/geoserver';\n    const workspace = ClientConfiguration.geoserver?.upload?.workspace || 'SHOGUN';\n    const layerName = `${splittedFileName[0]}_${Date.now()}`.toUpperCase();\n\n    const uploadData = {\n      file: file as RcFile,\n      baseUrl: geoServerBaseUrl,\n      workspace: workspace,\n      storeName: layerName,\n      layerName: layerName\n    };\n\n    try {\n      if (fileType === 'image/tiff') {\n        await uploadGeoTiff(uploadData);\n      }\n\n      if (fileType === 'application/zip') {\n        await uploadShapeZip(uploadData);\n      }\n\n      if (onSuccess) {\n        onSuccess({\n          baseUrl: geoServerBaseUrl,\n          workspace: workspace,\n          layerName: layerName\n        });\n      }\n    } catch (error) {\n      if (onError) {\n        onError({\n          name: 'UploadError',\n          message: (error instanceof Error) ? error.message : t('UploadDataModal.error.general', {\n            fileName: (file as RcFile).name\n          })\n        });\n      }\n    }\n  };\n\n  const onFileUploadChange = async (info: UploadChangeParam<UploadFile<LayerUploadResponse>>) => {\n    const file = info.file;\n\n    if (file.status === 'uploading') {\n      setIsUploading(true);\n    }\n\n    if (file.status === 'done') {\n      if (!client || !file.response) {\n        return;\n      }\n\n      const layerConfig: Layer = {\n        name: file.response.layerName,\n        type: 'TILEWMS',\n        clientConfig: {\n          hoverable: true\n        },\n        sourceConfig: {\n          url: `${file.response.baseUrl}/ows?`,\n          layerNames: `${file.response.workspace}:${file.response.layerName}`,\n          useBearerToken: true\n        }\n      };\n\n      const parser = new SHOGunApplicationUtil({\n        client\n      });\n\n      const olLayer = parser.parseTileLayer(layerConfig);\n      olLayer.set('layerConfig', layerConfig);\n      olLayer.set('isUploadedLayer', true);\n      olLayer.set('groupName', t('UploadDataModal.uploadedDataFolder'));\n      addLayer(olLayer);\n\n      setUploadSuccess(t('UploadDataModal.success', {\n        fileName: file.name,\n        layerName: file.response.layerName\n      }));\n\n      setIsUploading(false);\n    } else if (file.status === 'error') {\n      setIsUploading(false);\n\n      Logger.error(file.error);\n\n      if (file.error && file.error.message) {\n        setUploadError(file.error.message);\n      } else {\n        setUploadError(t('UploadDataModal.error.general', {\n          fileName: file.name\n        }));\n      }\n    }\n  };\n\n  const getGeometryType = (type: number) => {\n    const types: {\n      [key: number]: string | null;\n    } = {\n      0: null, // Null\n      1: 'org.locationtech.jts.geom.Point', // Point\n      3: 'org.locationtech.jts.geom.LineString', // Polyline\n      5: 'org.locationtech.jts.geom.Polygon', // Polygon\n      8: 'org.locationtech.jts.geom.MultiPoint', // MultiPoint\n      11: 'org.locationtech.jts.geom.Point', // PointZ\n      13: 'org.locationtech.jts.geom.LineString', // PolylineZ\n      15: 'org.locationtech.jts.geom.Polygon', // PolygonZ\n      18: 'org.locationtech.jts.geom.MultiPoint', // MultiPointZ\n      21: 'org.locationtech.jts.geom.Point', // PointM\n      23: 'org.locationtech.jts.geom.LineString', // PolylineM\n      25: 'org.locationtech.jts.geom.Polygon', // PolygonM\n      28: 'org.locationtech.jts.geom.MultiPoint', // MultiPointM\n      31: null // MultiPatch\n    };\n\n    return types[type];\n  };\n\n  const getAttributeType = (dbfFieldType: string) => {\n    switch (dbfFieldType) {\n      case 'C': // Character\n        return 'java.lang.String';\n      case 'D': // Date\n        return 'java.util.Date';\n      case 'N': // Numeric\n        return 'java.lang.Long';\n      case 'F': // Floating point\n        return 'java.lang.Double';\n      case 'L': // Logical\n        return 'java.lang.Boolean';\n      case 'M': // Memo\n        return null;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Modal\n      className=\"upload-data-modal\"\n      title={t('UploadDataModal.title')}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={600}\n      footer={false}\n      {...restProps}\n    >\n      {\n        uploadSuccess && (\n          <Alert\n            message={uploadSuccess}\n            closable={true}\n            type=\"success\"\n          />\n        )\n      }\n\n      {\n        uploadError && (\n          <Alert\n            message={uploadError}\n            closable={true}\n            type=\"error\"\n          />\n        )\n      }\n\n      <Spin\n        spinning={isUploading}\n      >\n        <Dragger\n          customRequest={onFileUploadAction}\n          accept='image/tiff,application/zip'\n          maxCount={1}\n          showUploadList={false}\n          beforeUpload={onBeforeFileUpload}\n          onChange={onFileUploadChange}\n        >\n          <p className=\"ant-upload-drag-icon\">\n            <FontAwesomeIcon\n              icon={faUpload}\n            />\n          </p>\n          <p className=\"ant-upload-text\">\n            {t('UploadDataModal.description')}\n          </p>\n          <p className=\"ant-upload-hint\">\n            {t('UploadDataModal.hint')}\n          </p>\n        </Dragger>\n      </Spin>\n    </Modal>\n  );\n};\n\nexport default UploadDataModal;\n","import _isEmpty from 'lodash/isEmpty';\n\nimport BaseLayer from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport PermalinkUtil from '@terrestris/ol-util/dist/PermalinkUtil/PermalinkUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\n\nimport useQueryParams from './useQueryParams';\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport const useRestoreTransientLayers = async () => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const queryParams = useQueryParams();\n  const {\n    t\n  } = useTranslation();\n\n  const layers = queryParams.get('layers');\n\n  if (!map) {\n    return;\n  }\n\n  const identifier = (l: BaseLayer) => l.get('name');\n  const filter = (l: BaseLayer) => (l instanceof OlLayerTile || l instanceof OlLayerImage);\n  const configString = PermalinkUtil.applyLink(map, ';', identifier, filter);\n\n  if (!configString) {\n    return;\n  }\n\n  const addLayerGroup = (name: string) => {\n    const layerGroup = new OlLayerGroup({\n      layers: []\n    });\n    layerGroup.set('name', name);\n    const existingGroups = map.getLayerGroup().getLayers();\n    existingGroups.insertAt(existingGroups?.getLength() || 0, layerGroup);\n\n    return layerGroup;\n  };\n\n  try {\n    const config = JSON.parse(configString);\n\n    if (!client) {\n      throw new Error('Client is not available');\n    }\n\n    const parser = new SHOGunApplicationUtil({\n      client\n    });\n\n    for (let i = 0; i < config.length; i++) {\n      const cfg = config[i];\n      if (!_isEmpty(cfg?.layerConfig)) {\n        const layerConfig: Layer = cfg.layerConfig;\n        const olLayer = await parser.parseLayer(layerConfig);\n\n        if (!olLayer) {\n          continue;\n        }\n\n        if (cfg.isExternalLayer) {\n          olLayer.set('isExternalLayer', cfg.isExternalLayer);\n        }\n\n        if (cfg.isUploadedLayer) {\n          olLayer.set('isUploadedLayer', cfg.isUploadedLayer);\n        }\n\n        olLayer.set('groupName', cfg.groupName);\n        olLayer.set('layerConfig', cfg.layerConfig);\n\n        olLayer.setVisible(!!layers?.split(';').some(l => l === layerConfig.name));\n\n        if (!(olLayer.get('isExternalLayer') || olLayer.get('isUploadedLayer'))) {\n          continue;\n        }\n\n        let targetGroup: OlLayerGroup;\n\n        if (olLayer.get('groupName')) {\n          // handle custom layer group\n          targetGroup = MapUtil.getLayerByName(map, olLayer.get('groupName')) as OlLayerGroup;\n\n          if (!targetGroup) {\n            targetGroup = addLayerGroup(olLayer.get('groupName'));\n          }\n        } else {\n          // handle default layer group for external layers (external and uploaded layers)\n          targetGroup = MapUtil.getLayersByProperty(map, 'isExternalLayerGroup', true)?.[0] as OlLayerGroup;\n          if (!targetGroup) {\n            targetGroup = addLayerGroup(t('AddLayerModal.externalWmsFolder'));\n            targetGroup.set('isExternalLayerGroup', true);\n          }\n        }\n\n        if (!MapUtil.getLayerByName(map, olLayer.get('name'))) {\n          targetGroup.getLayers().push(olLayer);\n        }\n      }\n    }\n  } catch (error) {\n    Logger.error(error);\n  }\n};\n\nexport default useRestoreTransientLayers;\n","import React from 'react';\n\nexport default function useQueryParams() {\n  const {\n    search\n  } = window.location;\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport AddLayerModal from './components/AddLayerModal/index';\nimport BasicMapComponent from './components/BasicMapComponent';\nimport CookieBanner from './components/CookieBanner';\nimport EditFeatureDrawer from './components/EditFeatureDrawer';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport LayerDetailsModal from './components/LayerDetailsModal';\nimport StylingDrawer from './components/StylingDrawer';\nimport ToolMenu from './components/ToolMenu';\nimport UploadDataModal from './components/UploadDataModal';\n\nimport useRestoreTransientLayers from './hooks/useRestoreTransientLayers';\n\nimport './App.less';\n\nexport interface AppProps extends React.ComponentProps<'div'> {}\n\nexport const App: React.FC<AppProps> = ({\n  ...restProps\n}): JSX.Element => {\n\n  useRestoreTransientLayers();\n\n  useEffect(() => {\n    const loadingMask = document.querySelectorAll('.loadmask')[0];\n\n    if (loadingMask) {\n      loadingMask.classList.add('loadmask-hidden');\n    }\n  }, []);\n\n  return (\n    <div\n      className=\"App\"\n      {...restProps}\n    >\n      <Header />\n      <BasicMapComponent />\n      <ToolMenu />\n      <Footer />\n      <CookieBanner />\n      <AddLayerModal />\n      <UploadDataModal />\n      <EditFeatureDrawer />\n      <LayerDetailsModal />\n      <StylingDrawer />\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport {\n  AppInfo\n} from '@terrestris/shogun-util/dist/model/AppInfo';\n\nconst initialState: AppInfo = {\n  authorities: [],\n  buildTime: '',\n  commitHash: '',\n  userId: -1,\n  version: ''\n};\n\nexport const slice = createSlice({\n  name: 'appInfo',\n  initialState,\n  reducers: {\n    setAppInfo(state, action: PayloadAction<AppInfo>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setAppInfo\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = '';\n\nexport const slice = createSlice({\n  name: 'description',\n  initialState,\n  reducers: {\n    setDescription: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setDescription\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice, PayloadAction\n} from '@reduxjs/toolkit';\n\nexport type Legal = {\n  contact?: string;\n  imprint?: string;\n  privacy?: string;\n};\n\nconst initialState: Legal = {\n  contact: 'https://www.terrestris.de/de/kontakt/',\n  imprint: 'https://www.terrestris.de/de/impressum/',\n  privacy: 'https://www.terrestris.de/de/datenschutzerklaerung/'\n};\n\nexport const slice = createSlice({\n  name: 'legal',\n  initialState,\n  reducers: {\n    setLegal: (state, action: PayloadAction<Legal>) => {\n      return {\n        contact: action.payload.contact || initialState.contact,\n        imprint: action.payload.imprint || initialState.imprint,\n        privacy: action.payload.privacy || initialState.privacy\n      };\n    }\n  }\n});\n\nexport const { setLegal } = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = './shogun_logo.png';\n\nexport const slice = createSlice({\n  name: 'logoPath',\n  initialState,\n  reducers: {\n    setLogoPath: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setLogoPath\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string[] = ['nominatim'];\n\nexport const slice = createSlice({\n  name: 'searchEngines',\n  initialState,\n  reducers: {\n    setSearchEngines: (state, action: PayloadAction<string[]>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setSearchEngines\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = 'SHOGun Client';\n\nexport const slice = createSlice({\n  name: 'title',\n  initialState,\n  reducers: {\n    setTitle: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setTitle\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport User from '@terrestris/shogun-util/dist/model/User';\n\nconst initialState: User = { };\n\nexport const slice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser(state, action: PayloadAction<User>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setUser\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  Action,\n  combineReducers,\n  configureStore,\n  createDynamicMiddleware,\n  Reducer,\n  ThunkDispatch\n} from '@reduxjs/toolkit';\n\nimport addLayerModal from './addLayerModal';\nimport appInfo from './appInfo';\nimport description from './description';\nimport editFeature from './editFeature';\nimport editFeatureDrawerOpen from './editFeatureDrawerOpen';\nimport featureInfo from './featureInfo';\nimport layerDetailsModal from './layerDetailsModal';\nimport layerTree from './layerTree';\nimport legal from './legal';\nimport logoPath from './logoPath';\nimport print from './print';\nimport searchEngines from './searchEngines';\nimport selectedFeatures from './selectedFeatures';\nimport stylingDrawerVisibility from './stylingDrawerVisibility';\nimport title from './title';\nimport toolMenu from './toolMenu';\nimport uploadDataModal from './uploadDataModal';\nimport user from './user';\n\ntype AsyncReducer = {\n  [key: string]: Reducer;\n};\n\nexport const dynamicMiddleware = createDynamicMiddleware();\n\nexport const createReducer = (asyncReducers?: AsyncReducer) => {\n  return combineReducers({\n    addLayerModal,\n    appInfo,\n    description,\n    editFeature,\n    editFeatureDrawerOpen,\n    featureInfo,\n    layerDetailsModal,\n    layerTree,\n    legal,\n    logoPath,\n    print,\n    selectedFeatures,\n    title,\n    toolMenu,\n    uploadDataModal,\n    searchEngines,\n    user,\n    stylingDrawerVisibility,\n    ...asyncReducers\n  });\n};\n\nexport const store = configureStore({\n  reducer: createReducer(),\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().prepend(dynamicMiddleware.middleware)\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch & ThunkDispatch<RootState, undefined, Action>;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  loader\n} from '@monaco-editor/react';\n\nimport {\n  Alert,\n  AlertProps,\n  ConfigProvider,\n  notification\n} from 'antd';\n\nimport csCZ from 'antd/lib/locale/cs_CZ';\nimport deDE from 'antd/lib/locale/de_DE';\nimport enGB from 'antd/lib/locale/en_GB';\nimport plPl from 'antd/lib/locale/pl_PL';\n\nimport ClientConfiguration, {\n  FeatureEditConfiguration\n} from 'clientConfig';\n\nimport Color from 'color';\n\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport Keycloak from 'keycloak-js';\n\nimport {\n  defaults as OlControlDefaults\n} from 'ol/control';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlMap from 'ol/Map';\nimport {\n  fromLonLat\n} from 'ol/proj';\nimport OlSourceOsm from 'ol/source/OSM';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\nimport OlView from 'ol/View';\n\nimport {\n  render\n} from 'react-dom';\n\nimport {\n  Provider\n} from 'react-redux';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport MapContext from '@terrestris/react-geo/dist/Context/MapContext/MapContext';\n\nimport {\n  AppInfo\n} from '@terrestris/shogun-util/dist/model/AppInfo';\nimport Application, {\n  DefaultApplicationTheme,\n  DefaultApplicationToolConfig\n} from '@terrestris/shogun-util/dist/model/Application';\nimport User from '@terrestris/shogun-util/dist/model/User';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nconst App = React.lazy(() => import('./App'));\n\nimport {\n  PluginProvider\n} from './context/PluginContext';\nimport {\n  SHOGunAPIClientProvider\n} from './context/SHOGunAPIClientContext';\n\nimport i18n, {\n  initOpts\n} from './i18n';\n\nimport {\n  ClientPluginInternal\n} from './plugin';\n\nimport {\n  setAppInfo\n} from './store/appInfo';\nimport {\n  setDescription\n} from './store/description';\nimport {\n  setUserEditMode,\n  EditLevel\n} from './store/editFeature';\nimport { setFeatureInfoActiveCopyTools } from './store/featureInfo';\nimport {\n  setLayerTreeActiveUploadTools,\n  setLayerTreeShowLegends\n} from './store/layerTree';\nimport {\n  setLegal\n} from './store/legal';\nimport {\n  setLogoPath\n} from './store/logoPath';\nimport { setPrintApp } from './store/print';\nimport {\n  setSearchEngines\n} from './store/searchEngines';\nimport {\n  createReducer, dynamicMiddleware,\n  store\n} from './store/store';\nimport {\n  setTitle\n} from './store/title';\nimport {\n  setAvailableTools\n} from './store/toolMenu';\nimport {\n  setUser\n} from './store/user';\n\nimport './index.less';\n\n// TODO: extend antd properties too\nexport interface ThemeProperties extends React.CSSProperties {\n  '--primaryColor'?: string;\n  '--secondaryColor'?: string;\n  '--complementaryColor'?: string;\n}\n\n// eslint-disable-next-line no-shadow\nenum LoadingErrorCode {\n  APP_ID_NOT_SET = 'APP_ID_NOT_SET',\n  APP_CONFIG_NOT_FOUND = 'APP_CONFIG_NOT_FOUND',\n  APP_UNAUTHORIZED = 'APP_UNAUTHORIZED',\n  APP_CONFIG_STATIC_NOT_FOUND = 'APP_CONFIG_STATIC_NOT_FOUND'\n}\n\nconst client = ClientConfiguration.shogunBase !== false ? new SHOGunAPIClient({\n  url: ClientConfiguration.shogunBase || '/'\n}) : undefined;\n\nconst parser = new SHOGunApplicationUtil({\n  client\n});\n\nconst getConfigLang = (lang: string) => {\n  switch (lang) {\n    case 'en':\n      return enGB;\n    case 'de':\n      return deDE;\n    case 'pl':\n      return plPl;\n    case 'cz':\n      return csCZ;\n    default:\n      return enGB;\n  }\n};\n\nconst getApplicationConfiguration = async (shogunClient: SHOGunAPIClient, applicationId: number) => {\n  try {\n    Logger.info(`Loading application with ID ${applicationId}`);\n\n    const application = await shogunClient.application().findOne(applicationId);\n\n    Logger.info(`Successfully loaded application with ID ${applicationId}`);\n\n    return application;\n  } catch (error) {\n    if ((error as Error).message.indexOf('401') > -1) {\n      throw new Error(LoadingErrorCode.APP_UNAUTHORIZED);\n    }\n    Logger.error(`Error while loading application with ID ${applicationId}: ${error}`);\n  }\n};\n\nconst getStaticApplicationConfiguration = async (staticAppContextUrl: string) => {\n  try {\n    Logger.info('Loading static application');\n\n    const response = await fetch(staticAppContextUrl);\n\n    if (!response.ok) {\n      throw new Error(`HTTP error status: ${response.status}`);\n    }\n\n    const application = await response.json();\n\n    Logger.info('Successfully loaded static application');\n\n    return application;\n  } catch (error) {\n    if ((error as Error).message.indexOf('401') > -1) {\n      throw new Error(LoadingErrorCode.APP_UNAUTHORIZED);\n    }\n    Logger.error(`Error while loading static application: ${error}`);\n  }\n};\n\nconst getApplicationInfo = async (shogunClient: SHOGunAPIClient) => {\n  try {\n    Logger.info('Loading application info');\n\n    const appInfo = await shogunClient.info().getAppInfo();\n\n    Logger.info('Successfully loaded application info');\n\n    return appInfo;\n  } catch (error) {\n    Logger.error('Error while loading application info: ', error);\n  }\n};\n\nconst getUser = async (shogunClient: SHOGunAPIClient, userId?: number) => {\n  if (!userId) {\n    Logger.info('No user ID given, can\\'t load it\\'s details.');\n    return;\n  }\n\n  try {\n    Logger.info(`Loading user with ID ${userId}`);\n\n    const user = await shogunClient.user().findOne(userId);\n\n    Logger.info(`Successfully loaded user with ID ${userId}`);\n\n    return user;\n  } catch (error) {\n    Logger.error(`Error while loading user with ID ${userId}: `, error);\n  }\n};\n\nconst setApplicationToStore = async (application?: Application) => {\n  if (!application) {\n    Logger.info('No application configuration provided, the default store will be loaded');\n\n    return;\n  }\n\n  if (application.name) {\n    store.dispatch(setTitle(application.name));\n  }\n\n  if (application.clientConfig?.description) {\n    store.dispatch(setDescription(application.clientConfig?.description));\n  }\n\n  if (application.clientConfig?.legal) {\n    store.dispatch(setLegal(application.clientConfig.legal));\n  }\n\n  if (application?.clientConfig?.theme?.logoPath) {\n    store.dispatch(setLogoPath(application.clientConfig.theme.logoPath));\n  }\n\n  // nominatim search is active by default\n  store.dispatch(setSearchEngines(['nominatim']));\n\n  if (application.toolConfig && application.toolConfig.length > 0) {\n    const availableTools: string[] = [];\n    application.toolConfig\n      .forEach((tool: DefaultApplicationToolConfig) => {\n        if (tool.config.visible && tool.name !== 'search') {\n          availableTools.push(tool.name);\n        }\n        if (tool.name === 'search' && tool.config.engines.length > 0) {\n          store.dispatch(setSearchEngines(tool.config.engines));\n        }\n        if (tool.name === 'feature_info' && Array.isArray(tool.config.activeCopyTools)) {\n          store.dispatch(setFeatureInfoActiveCopyTools(tool.config.activeCopyTools));\n        }\n        if (tool.name === 'tree' && Array.isArray(tool.config.uploadTools)) {\n          store.dispatch(setLayerTreeActiveUploadTools(tool.config.uploadTools));\n        }\n        if (tool.name === 'tree' && tool.config.showLegends) {\n          store.dispatch(setLayerTreeShowLegends(tool.config.showLegends));\n        }\n      });\n    store.dispatch(setAvailableTools(availableTools));\n  }\n};\n\nconst setAppInfoToStore = async (appInfo?: AppInfo) => {\n  if (!appInfo) {\n    return;\n  }\n\n  store.dispatch(setAppInfo(appInfo));\n};\n\nconst setUserToStore = async (user?: User) => {\n  if (!user) {\n    return;\n  }\n\n  store.dispatch(setUser(user));\n};\n\nconst setLoadingImage = (id: number, path = './shogun_spinner.gif') => {\n  const loadingImageElement = document.getElementById('loadmask-image') as HTMLImageElement;\n  if (!loadingImageElement) {\n    return;\n  }\n  loadingImageElement.src = path;\n  localStorage.setItem(`SHOGun_Logo_Path_${id}`, path);\n};\n\nconst initKeycloak = async () => {\n  const keycloakEnabled = ClientConfiguration.keycloak?.enabled;\n  const keycloakOnLoad = ClientConfiguration.keycloak?.onLoadAction;\n  const keycloakHost = ClientConfiguration.keycloak?.host;\n  const keycloakRealm = ClientConfiguration.keycloak?.realm;\n  const keycloakClientId = ClientConfiguration.keycloak?.clientId;\n\n  if (!keycloakEnabled) {\n    return undefined;\n  }\n\n  if (!keycloakHost) {\n    throw new Error('Neither config key keycloak.host nor environment KEYCLOAK_HOST is set');\n  }\n\n  if (!keycloakRealm) {\n    throw new Error('Neither config key keycloak.realm nor environment KEYCLOAK_REALM is set');\n  }\n\n  if (!keycloakClientId) {\n    throw new Error('Neither config key keycloak.clientId nor environment KEYCLOAK_CLIENT_ID is set');\n  }\n\n  const keycloak = new Keycloak({\n    url: `${keycloakHost}`,\n    realm: keycloakRealm,\n    clientId: keycloakClientId\n  });\n\n  keycloak.onTokenExpired = async () => {\n    try {\n      await keycloak.updateToken(0);\n    } catch (error) {\n      Logger.error('Error while refreshing the access token: ', error);\n    }\n  };\n\n  await keycloak.init({\n    onLoad: keycloakOnLoad,\n    checkLoginIframe: false\n  });\n\n  return keycloak;\n};\n\nconst setApplicationTitle = () => {\n  store.subscribe(() => {\n    document.title = store.getState().title;\n  });\n};\n\nconst setupMap = async (application?: Application) => {\n  if (application) {\n    return await setupSHOGunMap(application);\n  }\n\n  Logger.info('No application configuration provided, the default map will be loaded');\n\n  return setupDefaultMap();\n};\n\nconst setupSHOGunMap = async (application: Application) => {\n  const view = await parser.parseMapView(application, {\n    constrainOnlyCenter: true\n  });\n\n  let extent;\n  const projection = application.clientConfig?.mapView.projection;\n  const mapView = application.clientConfig?.mapView;\n  if (projection && mapView?.extent && mapView.extent.length === 4) {\n    const ll = fromLonLat([mapView.extent[0], mapView.extent[1]], projection);\n    const ur = fromLonLat([mapView.extent[2], mapView.extent[3]], projection);\n    extent = [\n      ll[0],\n      ll[1],\n      ur[0],\n      ur[1]\n    ];\n  }\n  if (extent) {\n    view.set('extent', extent);\n  }\n\n  view.setConstrainResolution(true);\n\n  let layers;\n  if (!ClientConfiguration.layerConfigUrl) {\n    layers = await parser.parseLayerTree(application, projection);\n  } else {\n    const response = await fetch(ClientConfiguration.layerConfigUrl);\n    const layersConfig = await response.json();\n    layers = await parser.parseLayerTreeNodes(application, layersConfig, projection);\n  }\n\n  return new OlMap({\n    view,\n    layers,\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\n// TODO Make default/fallback app configurable?\nconst setupDefaultMap = () => {\n  const osmLayer = new OlLayerTile({\n    source: new OlSourceOsm()\n  });\n  osmLayer.set('name', 'OpenStreetMap');\n\n  const temperatureLayer = new OlLayerTile({\n    opacity: 0.5,\n    visible: true,\n    source: new OlSourceTileWMS({\n      url: 'https://gibs.earthdata.nasa.gov/wms/epsg3857/best/wms.cgi',\n      projection: 'EPSG:3857',\n      params: {\n        LAYERS: 'MERRA2_2m_Air_Temperature_Assimilated_Monthly'\n      }\n    })\n  });\n  temperatureLayer.setProperties({\n    name: '2-meter Air Temperature, Assimilated (Monthly, MERRA2)',\n    hoverable: true\n  });\n\n  const eoLayerGroup = new OlLayerGroup({\n    layers: [temperatureLayer]\n  });\n  eoLayerGroup.set('name', 'NASA Earth Observations');\n\n  const backgroundLayerGroup = new OlLayerGroup({\n    layers: [osmLayer]\n  });\n  backgroundLayerGroup.set('name', 'Background');\n\n  const center = fromLonLat([0, 40], 'EPSG:3857');\n\n  return new OlMap({\n    view: new OlView({\n      center: center,\n      zoom: 0\n    }),\n    layers: [backgroundLayerGroup, eoLayerGroup],\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\nconst parseTheme = (theme?: DefaultApplicationTheme): ThemeProperties => {\n  const style: ThemeProperties = {\n    '--primaryColor': '#59666C',\n    '--secondaryColor': '#70B3BE',\n    '--complementaryColor': '#FFFFFF'\n  };\n  if (!theme) {\n    return style;\n  }\n  if (theme.primaryColor) {\n    style['--primaryColor'] = theme.primaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--secondaryColor'] = theme.secondaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--complementaryColor'] = theme.complementaryColor;\n  }\n  if (theme.faviconPath) {\n    const favicon = document.querySelector('link[rel=\"shortcut icon\"]') as HTMLLinkElement;\n    if (favicon) {\n      favicon.href = theme.faviconPath;\n    } else {\n      // If no favicon is set, create a new one\n      const newLink = document.createElement('link');\n      newLink.rel = 'shortcut icon';\n      newLink.type = 'image/x-icon';\n      newLink.href = theme.faviconPath;\n      document.head.appendChild(newLink);\n    }\n  }\n\n  return style;\n};\n\n// ExamplePlugin: 'ExamplePlugin@/client-plugin/remoteEntry.js'\nconst loadPluginModules = async (moduleName: string, moduleUrl: string, remoteNames: string[]) => {\n  await __webpack_init_sharing__('default');\n\n  await new Promise<void>((resolve, reject) => {\n    const element = document.createElement('script');\n\n    element.src = moduleUrl;\n    element.type = 'text/javascript';\n    element.async = true;\n\n    element.onload = () => {\n      element.parentElement?.removeChild(element);\n      resolve();\n    };\n\n    element.onerror = (err) => {\n      element.parentElement?.removeChild(element);\n      reject(err);\n    };\n\n    document.head.appendChild(element);\n  });\n\n  // @ts-ignore\n  const container = window[moduleName];\n\n  // eslint-disable-next-line camelcase\n  await container.init(__webpack_share_scopes__.default);\n\n  const modules = [];\n  for (const remoteName of remoteNames) {\n    const factory = await container.get(remoteName);\n    const module = factory();\n    modules.push(module);\n  }\n\n  return modules;\n};\n\nconst loadPlugins = async (map: OlMap, toolConfig?: DefaultApplicationToolConfig[]) => {\n  if (!ClientConfiguration.plugins || ClientConfiguration.plugins.length === 0) {\n    Logger.info('No plugins found');\n    return [];\n  }\n\n  Logger.info('Loading plugins');\n\n  const clientPlugins: ClientPluginInternal[] = [];\n\n  for (const plugin of ClientConfiguration.plugins) {\n    const name = plugin.name;\n    const resourcePath = plugin.resourcePath;\n    const exposedPaths = plugin.exposedPaths;\n\n    if (!name) {\n      Logger.error('Required plugin configuration \\'name\\' is not set');\n      return clientPlugins;\n    }\n\n    if (!resourcePath) {\n      Logger.error('Required plugin configuration \\'resourcePath\\' is not set');\n      return clientPlugins;\n    }\n\n    if (!exposedPaths) {\n      Logger.error('Required plugin configuration \\'exposedPaths\\' is not set');\n      return clientPlugins;\n    }\n\n    Logger.info(`Loading plugin ${name} (with exposed paths ${exposedPaths.join(' and ')}) from ${resourcePath}`);\n\n    let clientPluginModules: any[];\n    try {\n      clientPluginModules = await loadPluginModules(name, resourcePath, exposedPaths);\n      Logger.info(`Successfully loaded plugin ${name}`);\n    } catch (error) {\n      Logger.error(`Could not load plugin ${name}:`, error);\n      return clientPlugins;\n    }\n\n    for (let module of clientPluginModules) {\n      const clientPluginDefault: ClientPluginInternal = module.default;\n      const PluginComponent = clientPluginDefault.component;\n\n      if (toolConfig) {\n        const pluginApplicationConfig = toolConfig.find((tc) => tc.name === clientPluginDefault.key);\n        if (pluginApplicationConfig?.config?.disabled) {\n          Logger.info(`\"${clientPluginDefault.key}\" is disabled by the application config`);\n          continue;\n        }\n      }\n\n      const WrappedPluginComponent = () => (\n        <PluginComponent\n          map={map}\n          client={client}\n        />\n      );\n\n      clientPluginDefault.wrappedComponent = WrappedPluginComponent;\n\n      if (clientPluginDefault.i18n) {\n        Object.entries(clientPluginDefault.i18n).forEach(locale => {\n          const lng = locale[0];\n          const resources = locale[1].translation;\n          i18n.addResourceBundle(lng, 'translation', resources, true, true);\n        });\n      }\n\n      if (clientPluginDefault.reducers) {\n        const reducers = createReducer(clientPluginDefault.reducers);\n        store.replaceReducer(reducers);\n      }\n\n      if (Array.isArray(clientPluginDefault.middlewares)) {\n        clientPluginDefault.middlewares?.forEach(mw => dynamicMiddleware.addMiddleware(mw));\n      }\n\n      clientPlugins.push(clientPluginDefault);\n    }\n  }\n\n  return clientPlugins;\n};\n\nconst checkRoles = (\n  list: string[],\n  featureEditRoles: FeatureEditConfiguration\n): EditLevel[] => {\n  const {\n    authorizedRolesForCreate,\n    authorizedRolesForUpdate,\n    authorizedRolesForDelete,\n    authorizedRolesForEditingGeometries\n  } = featureEditRoles;\n\n  const result: EditLevel[] = [];\n\n  for (const element of list) {\n    if (authorizedRolesForCreate?.some(role => matchRole(role, element))) {\n      result.push('CREATE');\n    }\n    if (authorizedRolesForUpdate?.some(role => matchRole(role, element))) {\n      result.push('UPDATE');\n    }\n    if (authorizedRolesForDelete?.some(role => matchRole(role, element))) {\n      result.push('DELETE');\n    }\n    if (authorizedRolesForEditingGeometries?.some(role => matchRole(role, element))) {\n      result.push('EDIT_GEOMETRY');\n    }\n  }\n  return result;\n};\n\nconst matchRole = (role: string | RegExp, element: string): boolean => {\n  if (typeof role === 'string') {\n    return element === role;\n  }\n  if (role instanceof RegExp) {\n    return role.test(element);\n  }\n  return false;\n};\n\nconst renderApp = async () => {\n  try {\n    loader.config({\n      paths: {\n        vs: './vs'\n      }\n    });\n\n    const keycloak = await initKeycloak();\n\n    if (keycloak && client) {\n      client.setKeycloak(keycloak);\n    }\n\n    const applicationIdString = UrlUtil.getQueryParam(window.location.href, 'applicationId');\n    const applicationId = applicationIdString ? parseInt(applicationIdString, 10) : undefined;\n\n    if (!applicationId && !ClientConfiguration.enableFallbackConfig && !ClientConfiguration.staticAppConfigUrl) {\n      throw new Error(LoadingErrorCode.APP_ID_NOT_SET);\n    }\n    let appConfig;\n    if (applicationId && client) {\n      appConfig = await getApplicationConfiguration(client, applicationId);\n      setLoadingImage(applicationId, appConfig?.clientConfig?.theme?.logoPath);\n    } else if (ClientConfiguration.staticAppConfigUrl) {\n      appConfig = await getStaticApplicationConfiguration(ClientConfiguration.staticAppConfigUrl);\n\n      if (!appConfig) {\n        throw new Error(LoadingErrorCode.APP_CONFIG_STATIC_NOT_FOUND);\n      }\n    }\n\n    if (!appConfig && !ClientConfiguration.enableFallbackConfig) {\n      throw new Error(LoadingErrorCode.APP_CONFIG_NOT_FOUND);\n    }\n\n    const defaultLanguage = appConfig?.clientConfig?.defaultLanguage;\n\n    if (!defaultLanguage) {\n      i18n.use(LanguageDetector);\n    }\n\n    await i18n.init(initOpts);\n\n    if (defaultLanguage) {\n      i18n.changeLanguage(defaultLanguage);\n    }\n\n    const printApp = appConfig?.clientConfig?.printApp;\n    if (printApp) {\n      store.dispatch(setPrintApp(printApp));\n    }\n\n    const style = parseTheme(appConfig?.clientConfig?.theme);\n\n    ConfigProvider.config({\n      theme: {\n        primaryColor: Color(style['--primaryColor']).isLight() ?\n          Color(style['--primaryColor']).darken(0.5).hexa() :\n          style['--primaryColor']\n      }\n    });\n\n    if (Color(style['--secondaryColor'])?.isLight() && Color(style['--primaryColor'])?.isLight()) {\n      style['--complementaryColor'] = (Color(style['--complementaryColor']).darken(0.5).hexa());\n    } else if (Color(style['--secondaryColor'])?.isDark() && Color(style['--primaryColor'])?.isDark()) {\n      style['--complementaryColor'] = (Color(style['--complementaryColor']).lighten(0.5).hexa());\n    }\n\n    Object.keys(style).forEach((key: any) => {\n      document.body.style.setProperty(key, style[key as keyof ThemeProperties] as string);\n    });\n\n    setApplicationToStore(appConfig);\n\n    setApplicationTitle();\n\n    if (client) {\n      const appInfo = await getApplicationInfo(client);\n\n      setAppInfoToStore(appInfo);\n\n      const user = await getUser(client, appInfo?.userId);\n\n      setUserToStore(user);\n    }\n\n    const userRoles: string[] | undefined =\n      client?.getKeycloak()?.tokenParsed?.realm_access?.roles;\n\n    let allowedEditMode: EditLevel[] = ['NONE'];\n\n    if (userRoles && ClientConfiguration.featureEditRoles) {\n      allowedEditMode = checkRoles(\n        userRoles,\n        ClientConfiguration.featureEditRoles\n      );\n    }\n\n    store.dispatch(setUserEditMode(allowedEditMode));\n\n    const map = await setupMap(appConfig);\n\n    const plugins = await loadPlugins(map, appConfig?.toolConfig);\n\n    if (!appConfig) {\n      notification.error({\n        message: i18n.t('Index.applicationLoadErrorMessage'),\n        description: i18n.t('Index.applicationLoadErrorDescription', {\n          applicationId: applicationId\n        }),\n        duration: 0\n      });\n    }\n\n    render(\n      <React.StrictMode>\n        <React.Suspense fallback={<span></span>}>\n          <SHOGunAPIClientProvider client={client}>\n            <PluginProvider plugins={plugins}>\n              <ConfigProvider locale={getConfigLang(i18n.language)}>\n                <Provider store={store}>\n                  <MapContext.Provider value={map}>\n                    <App />\n                  </MapContext.Provider>\n                </Provider>\n              </ConfigProvider>\n            </PluginProvider>\n          </SHOGunAPIClientProvider>\n        </React.Suspense>\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  } catch (error) {\n    Logger.error(error);\n\n    const loadingMask = document.querySelectorAll('.loadmask')[0];\n\n    if (loadingMask) {\n      loadingMask.classList.add('loadmask-hidden');\n    }\n\n    if (!i18n.isInitialized) {\n      i18n.use(LanguageDetector);\n      await i18n.init(initOpts);\n    }\n\n    let type: AlertProps['type'] = 'warning';\n    let errorDescription = i18n.t('Index.errorDescription');\n\n    if ((error as Error)?.message === LoadingErrorCode.APP_ID_NOT_SET) {\n      errorDescription = i18n.t('Index.errorDescriptionAppIdNotSet');\n    }\n\n    if ((error as Error)?.message === LoadingErrorCode.APP_UNAUTHORIZED) {\n      errorDescription = i18n.t('Index.permissionDeniedUnauthorized');\n      type = 'error';\n    }\n\n    if ((error as Error)?.message === LoadingErrorCode.APP_CONFIG_NOT_FOUND) {\n      const appId = UrlUtil.getQueryParam(window.location.href, 'applicationId');\n\n      errorDescription = i18n.t('Index.errorDescriptionAppConfigNotFound', {\n        applicationId: appId\n      });\n    }\n\n    if ((error as Error)?.message === LoadingErrorCode.APP_CONFIG_STATIC_NOT_FOUND) {\n      errorDescription = i18n.t('Index.errorDescriptionAppConfigStaticNotFound');\n    }\n\n    render(\n      <React.StrictMode>\n        <Alert\n          className=\"error-boundary\"\n          message={i18n.t('Index.errorMessage')}\n          description={errorDescription}\n          type={type}\n          showIcon\n        />\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  }\n};\n\nrenderApp();\n","import React from 'react';\n\nimport {\n  ClientPluginInternal\n} from '../plugin';\n\nexport type PluginProviderProps = {\n  plugins: ClientPluginInternal[];\n  children: JSX.Element;\n};\n\nexport const PluginContext = React.createContext<(ClientPluginInternal[])>([]);\n\nexport const PluginProvider: React.FC<PluginProviderProps> = ({\n  plugins,\n  children\n}): JSX.Element => {\n  return (\n    <PluginContext.Provider\n      value={plugins}\n    >\n      {children}\n    </PluginContext.Provider>\n  );\n};\n\nexport default PluginContext;\n","import React from 'react';\n\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nexport type SHOGunAPIClientProviderProps = {\n  client?: SHOGunAPIClient;\n  children: JSX.Element;\n};\n\nexport const SHOGunAPIClientContext = React.createContext<(SHOGunAPIClient | null)>(null);\n\nexport const SHOGunAPIClientProvider: React.FC<SHOGunAPIClientProviderProps> = ({\n  client,\n  children\n}): JSX.Element => {\n  return (\n    <SHOGunAPIClientContext.Provider\n      value={client ?? null}\n    >\n      {children}\n    </SHOGunAPIClientContext.Provider>\n  );\n};\n\nexport default SHOGunAPIClientContext;\n","import i18n, {\n  InitOptions\n} from 'i18next';\nimport {\n  initReactI18next\n} from 'react-i18next';\n\nimport resources from './translations';\n\nexport const initOpts: InitOptions = {\n  resources,\n  fallbackLng: 'en',\n  debug: false,\n  interpolation: {\n    escapeValue: false\n  },\n  returnNull: false\n};\n\n// eslint-disable-next-line import/no-named-as-default-member\ni18n\n  .use(initReactI18next);\n\ni18n.options = initOpts;\n\nexport default i18n;\n","export default {\n  de: {\n    translation: {\n      ApplicationInfo: {\n        title: 'Über',\n        clientVersionTitle: 'Client Version',\n        backendVersionTitle: 'Backend Version'\n      },\n      AddLayerModal: {\n        addSelectedLayers: 'Auswahl hinzufügen',\n        addAllLayers: 'Alle hinzufügen',\n        inputPlaceholder: 'WMS GetCapabilities URL angeben…',\n        externalWmsFolder: 'Externe Themen',\n        title: 'WMS hinzufügen',\n        columnTitle: 'Name',\n        errorMessage: 'Fehler',\n        errorDescription: 'Das Capabilities Dokument konnte nicht geladen werden, bitte prüfen Sie die URL',\n        invalidUrlErrorMsg: 'Ungültige URL. Bitte geben Sie eine gültige URL wie z.B. ' +\n          'https://ows.terrestris.de/osm/service ein.',\n        version: 'Version',\n        requestWmsGetCapabilitiesInstruction: 'Bitte geben Sie eine gültige WMS GetCapabilities Adresse ein ' +\n          'und bestätigen Sie die Eingabe mit \\'Enter ↲\\' oder über den Button rechts vom Eingabefeld.'\n\n      },\n      BasicMapComponent: {\n        processedLayersFolder: 'Prozessierte Layer'\n      },\n      CookieBanner: {\n        info:\n          'Wir verwenden technisch notwendige Erstanbieter-Cookies, um Ihnen die bestmögliche Nutzung unserer ' +\n          'Website zu ermöglichen. Wenn Sie diese Website weiterhin nutzen, gehen wir davon aus, ' +\n          'dass Sie damit zufrieden sind.',\n        button: 'Akzeptieren'\n      },\n      Permalink: {\n        title: 'Teilen',\n        whatsAppTooltip: 'Link via WhatsApp teilen',\n        mailTooltip: 'Link via Mail teilen',\n        copyTooltip: 'Link in die Zwischenablage kopieren',\n        copiedToClipboard: 'Link wurde in Zwischenablage kopiert',\n        copyToClipboardFailed: 'Link konnte nicht kopiert werden'\n      },\n      Measure: {\n        title: 'Messen',\n        line: 'Entfernung',\n        area: 'Fläche',\n        clicktodrawline: 'Zum Zeichnen einer Linie klicken',\n        clicktodrawarea: 'Zum Zeichnen einer Fläche klicken'\n      },\n      Draw: {\n        point: 'Punkt',\n        line: 'Linie',\n        polygon: 'Polygon',\n        circle: 'Kreis',\n        rectangle: 'Rechteck',\n        text: 'Anmerkung',\n        modify: 'Bearbeitung',\n        upload: 'Hochladen',\n        uploadSuccess: 'Die Datei wurde erfolgreich importiert',\n        uploadError: 'Der Import ist fehlgeschlagen. Bitte beachten Sie, dass nur .geojson-Dateien unterstützt werden.',\n        delete: 'Löschen',\n        export: 'Exportieren'\n      },\n      DeleteAllButton:{\n        deleteAll: 'Alles Löschen',\n        confirmMessage: 'Bitte bestätigen Sie, dass Sie alle Zeichnungen löschen möchten.'\n      },\n      StylingDrawer: {\n        openColorPalette: 'Farbpalette öffnen',\n        closeColorPalette: 'Farbpalette schließen',\n        title: 'Farbschema bearbeiten'\n      },\n      FeatureInfo: {\n        usageHint:\n          'Klicken Sie in die Karte, um Detailinformationen zu erhalten.'\n      },\n      FileUpload: {\n        upload: 'Dateien hochladen'\n      },\n      ImageUpload: {\n        upload: 'Bilder hochladen'\n      },\n      LayerTree: {\n        transparency: 'Transparenz',\n        noLegendAvailable: 'Keine Legende verfügbar'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Auf Layerausdehnung zoomen',\n        extentError: 'Konnte nicht auf die Layerausdehnung zoomen',\n        removeLayer: 'Layer entfernen',\n        showLegend: 'Legende anzeigen',\n        hideLegend: 'Legende ausblenden',\n        downloadLayer: 'Layer exportieren ({{formatName}})',\n        editLayer: 'Layer bearbeiten',\n        layerDetails: 'Eigenschaften'\n      },\n      LayerDetailsModal: {\n        title: 'Eigenschaften des Layers {{layerName}}',\n        internalConfigurationButtonTooltip: 'Interne Konfiguration anzeigen',\n        internalConfigurationButtonTooltipPressed: 'Interne Konfiguration verbergen'\n      },\n      LayerDetails: {\n        noDataPlaceholder: '-',\n        layerNameLabel: 'Name',\n        layerTitleLabel: 'Titel',\n        serviceAbstractLabel: 'Service Beschreibung',\n        abstractLabel: 'Beschreibung',\n        accessConstraintsLabel: 'Nutzungseinschränkungen',\n        capabilitiesUrlLabel: 'GetCapabilities URL',\n        contactLabel: 'Kontakt',\n        minScaleLabel: 'Min. Maßstab',\n        maxScaleLabel: 'Max. Maßstab',\n        bboxLabel: 'Bounding Box',\n        errorMessage: 'Fehler beim Laden der Layer Capabilities'\n      },\n      LayerConfiguration: {\n        errorMessage: 'Fehler beim Laden der internen Konfiguration'\n      },\n      ToolMenu: {\n        expand: 'Menu ausklappen',\n        collapse: 'Menu einklappen',\n        measure: 'Messen',\n        draw: 'Zeichnen',\n        featureInfo: 'Karteninhalte abfragen',\n        addWms: 'WMS hinzufügen',\n        uploadData: 'Daten hochladen',\n        print: 'Export',\n        layertree: 'Karten',\n        languageSelect: 'Sprachauswahl'\n      },\n      PrintForm: {\n        title: 'Kartentitel',\n        initialTitle: 'Druckausgabe',\n        titlePlaceholder: 'Bitte geben Sie einen Titel ein',\n        comment: 'Bemerkung',\n        commentPlaceholder: 'Bitte geben Sie einen Kommentar ein',\n        layout: 'Vorlage',\n        dpi: 'Auflösung',\n        format: 'Format',\n        scale: 'Maßstab',\n        downloadBtnText: 'Ausdruck erzeugen',\n        printJobErrorMsg: 'Der Kartenausdruck konnte nicht erzeugt werden',\n        initErrorMsg:\n          'Der Kartendruck Generator konnte nicht initialisiert werden.',\n        outputFormatPlaceholder: 'Bitte wählen Sie ein Ausgabeformat aus',\n        resolutionPlaceholder: 'Bitte wählen Sie eine Ausgabequalität aus',\n        managerErrorMessage: 'Fehler bei der Initialisierung der Export-Engine'\n      },\n      Footer: {\n        refSystem: 'Bezugssystem',\n        scale: 'Maßstab',\n        mousePosition: 'Mausposition',\n        imprint: 'Impressum',\n        contact: 'Kontakt',\n        privacypolicy: 'Datenschutz'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Fehler beim Laden der Applikation',\n        applicationLoadErrorDescription:\n          'Die Applikation mit der ID {{applicationId}} konnte nicht geladen werden. ' +\n          'Die Standardkonfiguration wird stattdessen geladen.',\n        errorMessage: 'Fehler beim Laden der Applikation',\n        errorDescription: 'Aufgrund eines unerwarteten Fehlers konnte die Applikation nicht geladen werden.',\n        errorDescriptionAppIdNotSet: 'Keine Applikations-ID angegeben. Bitte geben Sie die ID als Abfrageparameter an, z.B. ?applicationId=1909',\n        errorDescriptionAppConfigNotFound: 'Die Applikation mit der ID {{applicationId}} konnte nicht geladen werden.',\n        errorDescriptionAppConfigStaticNotFound: 'Die Konfiguration der Applikation konnte nicht geladen werden.',\n        permissionDeniedUnauthorized: 'Dies ist keine öffentliche Applikation. Anmeldung erforderlich.'\n      },\n      Nominatim: {\n        placeholder: 'Ortsname, Straßenname, Stadtteilname, POI usw.'\n      },\n      UserMenu: {\n        settingsMenuTitle: 'Profil bearbeiten',\n        infoMenuTitle: 'Über',\n        helpMenuTitle: 'Dokumentation',\n        logoutMenuTitle: 'Ausloggen',\n        loginMenuTitle: 'Anmelden'\n      },\n      WmsTimeSlider: {\n        title: 'Zeitlicher Bezug',\n        default: 'Keine Daten gefunden'\n      },\n      UploadDataModal: {\n        title: 'Daten hochladen',\n        uploadedDataFolder: 'Hochgeladene Daten',\n        description: 'Klicken Sie oder ziehen Sie die Datei zum Hochladen in diesen Bereich',\n        hint: 'Unterstützte Dateiformate sind Shapefile (gebündelt als *.zip) und GeoTIFF',\n        success: 'Datei {{fileName}} wurde erfolgreich geladen und der Layer {{layerName}} erstellt',\n        error: {\n          general: 'Fehler beim Hochladen der Datei {{fileName}}',\n          maxSize: 'Der Upload überschreitet das Limit von {{maxSize}} MB',\n          supportedFormats: 'Der Dateityp ist nicht unterstützt ({{supportedFormats}})',\n          zipContent: 'Mehrere Geodatensätze innerhalb eines Archivs sind nicht unterstützt'\n        }\n      },\n      MultiSearch: {\n        searchInViewBox: 'Im aktuellen Kartenausschnitt suchen',\n        searchData: 'Layerdaten durchsuchen',\n        searchNominatim: 'Ortssuche (Nominatim)',\n        nominatimTitle: 'Ortssuche',\n        searchPlaceholder: 'Orts- und Datensuche…'\n      },\n      EditFeatureDrawer: {\n        featureEditor: 'Objekteditor',\n        noLayerFoundError: 'Kein passender Layer gefunden - das Editieren ist nicht möglich.',\n        isFeatureLockedErrorMsg: 'Das ausgewählte Objekt wird bereits in einer anderen Sitzung bearbeitet.',\n        closeDrawerWarnTitle: 'Wollen Sie wirklich fortfahren?',\n        closeDrawerWarnContent: 'Dadurch werden alle nicht gespeicherten Änderungen an dem Objekt verworfen.'\n      },\n      EditFeatureSwitch: {\n        usageHint: 'Objekt zum Editieren auf der Karte auswählen oder…',\n        limitedUsageHint: 'Zum Editieren bitte eine Objekt auf der Karte auswählen',\n        createFeature: 'Neues Objekt erstellen'\n      },\n      EditFeatureFullForm: {\n        saveErrorMsg: 'Das Objekt konnte nicht gespeichert werden',\n        deleteErrorMsg: 'Das Objekt konnte nicht gelöscht werden'\n      },\n      EditFeatureGeometryToolbar: {\n        draw: 'Neue Geometrie zeichnen',\n        edit: 'Geometrie editieren',\n        delete: 'Geometrie löschen',\n        undo: 'Rückgängig',\n        redo: 'Wiederherstellen'\n      },\n      Attribution: {\n        title: 'Attribute',\n        add: 'Attribut hinzufügen',\n        select: 'Wählen Sie zunächst eine Geometrie aus.',\n        submit: 'Speichern'\n      },\n      AttributionRow: {\n        missingKey: 'Fehlender Name',\n        missingValue: 'Fehlender Wert',\n        keyPlaceholder: 'Name',\n        valuePlaceholder: 'Wert',\n        keyInUse: 'Dieser Name existiert bereits!'\n      },\n      AttributionPopConfirm:{\n        title: 'Attribut löschen?',\n        okText: 'Löschen',\n        cancelText: 'Abbrechen'\n      },\n      ResetButton: {\n        title: 'Zurücksetzen'\n      },\n      notificationDeleteText:{\n        title: 'Drücke \"Speichern\" um die Änderung zu bestätigen.',\n        info: 'Wenn \"Übernehmen\" nicht geklickt wird, werden alle an dieser Zeichnung vorgenommenen Änderungen verworfen.'\n      },\n      notificationApplyText:{\n        title: 'Änderungen wurden erfolgreich gespeichert!'\n      },\n      SaveButton: {\n        title: 'Speichern',\n        errorNoGeometry: 'Objekt kann ohne Geometrie nicht gespeichert werden.'\n      },\n      DeleteButton: {\n        title: 'Objekt löschen',\n        confirm: 'Das Objekt wird vollständig gelöscht. Fortfahren?'\n      },\n      EditFeatureButton: {\n        title: 'Objekt bearbeiten'\n      },\n      FeaturePropertyGrid: {\n        key: 'Name',\n        value: 'Wert'\n      },\n      PaginationToolbar: {\n        copyAsGeoJson: 'Als GeoJSON kopieren (inkl. Geometrie)',\n        copyAsObject: 'Als Objekt kopieren (nur angezeigte Werte)',\n        editDisabled: 'Layer ist nicht editierbar',\n        editFeature: 'Feature editieren'\n      },\n      JsonModal: {\n        buttonTitle: 'Öffne {{propertyName}}'\n      },\n      ReferenceTable: {\n        modalTitle: 'Details zu {{referenceValue}}',\n        defaultModalTitle: 'Details',\n        defaultRowPlaceholder: 'Klicken Sie auf den Button, um die Details anzuzeigen'\n      },\n      EditReferenceTable: {\n        modalTitle: 'Details zu {{referenceValue}}',\n        confirmDeleteTitle: 'Das referenzierte Objekt wird vollständig gelöscht. Fortfahren?'\n      }\n    }\n  },\n  en: {\n    translation: {\n      ApplicationInfo: {\n        title: 'About',\n        clientVersionTitle: 'Client version',\n        backendVersionTitle: 'Backend version'\n      },\n      AddLayerModal: {\n        addSelectedLayers: 'Add selected',\n        addAllLayers: 'Add all',\n        inputPlaceholder: 'Enter a WMS GetCapabilities URL…',\n        externalWmsFolder: 'External layers',\n        title: 'Add WMS',\n        columnTitle: 'Name',\n        errorMessage: 'Error',\n        errorDescription: 'Could not load the provided Capabilities document, please check the validity of the URL',\n        invalidUrlErrorMsg: 'Invalid URL specified. Please provide an URL like https://ows.terrestris.de/osm/service',\n        version: 'Version',\n        requestWmsGetCapabilitiesInstruction: 'Please provide a valid GetCapabilities URL and submit ' +\n          'your input by pressing the \\'Enter ↲\\' key or by clicking on the button right of the field.'\n      },\n      BasicMapComponent: {\n        processedLayersFolder: 'Processed layers'\n      },\n      CookieBanner: {\n        info:\n          'We use technically necessary first-party cookies to ensure that we give you the best experience ' +\n          'on our website. If you continue to use this site we will assume that you are happy with it.',\n        button: 'Accept'\n      },\n      Permalink: {\n        title: 'Share',\n        whatsAppTooltip: 'Share link via WhatsApp',\n        mailTooltip: 'Share link via Mail',\n        copyTooltip: 'Copy link to Clipboard',\n        copiedToClipboard: 'Copied to clipboard',\n        copyToClipboardFailed: 'Could not copy link to clipboard'\n      },\n      Measure: {\n        title: 'Measure',\n        line: 'Distance',\n        area: 'Area',\n        clicktodrawline: 'Click to draw line',\n        clicktodrawarea: 'Click to draw area'\n      },\n      Draw: {\n        point: 'Point',\n        line: 'Line',\n        polygon: 'Polygon',\n        circle: 'Circle',\n        rectangle: 'Rectangle',\n        text: 'Annotation',\n        modify: 'Edit',\n        upload: 'Upload',\n        uploadSuccess: 'The file was uploaded successfully',\n        uploadError: 'The import failed, please note that only .geojson files are supported',\n        delete: 'Delete',\n        export: 'Export'\n      },\n      DeleteAllButton:{\n        deleteAll: 'Delete all',\n        confirmMessage: 'Please confirm, that you wish to delete all drawings.'\n      },\n      StylingDrawer: {\n        openColorPalette: 'Open color palette',\n        closeColorPalette: 'Close color palette',\n        title: 'Modify color scheme'\n      },\n      FeatureInfo: {\n        usageHint:\n          'Click on the map to get details about the clicked coordinate.'\n      },\n      FileUpload: {\n        upload: 'Upload files'\n      },\n      ImageUpload: {\n        upload: 'Upload images'\n      },\n      LayerTree: {\n        transparency: 'Transparency',\n        noLegendAvailable: 'No legend available'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Zoom to layer extent',\n        extentError: 'Could not zoom to layer extent',\n        removeLayer: 'Remove layer',\n        showLegend: 'Show legend',\n        hideLegend: 'Hide legend',\n        downloadLayer: 'Export layer as {{formatName}}',\n        editLayer: 'Edit layer',\n        layerDetails: 'Properties'\n      },\n      LayerDetailsModal: {\n        title: 'Properties of layer {{layerName}}',\n        internalConfigurationButtonTooltip: 'Show internal configuration',\n        internalConfigurationButtonTooltipPressed: 'Hide internal configuration'\n      },\n      LayerDetails: {\n        noDataPlaceholder: '-',\n        layerNameLabel: 'Name',\n        layerTitleLabel: 'Title',\n        serviceAbstractLabel: 'Service abstract',\n        abstractLabel: 'Abstract',\n        accessConstraintsLabel: 'Access constraints',\n        capabilitiesUrlLabel: 'GetCapabilities URL',\n        contactLabel: 'Contact',\n        minScaleLabel: 'Min. scale',\n        maxScaleLabel: 'Max. scale',\n        bboxLabel: 'Bounding box',\n        errorMessage: 'Error while loading the layer capabilities'\n      },\n      LayerConfiguration: {\n        errorMessage: 'Error while loading the internal configuration'\n      },\n      ToolMenu: {\n        expand: 'Expand',\n        collapse: 'Collapse',\n        measure: 'Measure',\n        draw: 'Draw',\n        featureInfo: 'Query map features',\n        addWms: 'Add WMS',\n        uploadData: 'Upload data',\n        print: 'Export',\n        layertree: 'Maps',\n        languageSelect: 'Language selector'\n      },\n      PrintForm: {\n        title: 'Title',\n        initialTitle: 'Title',\n        titlePlaceholder: 'Please input a title…',\n        comment: 'Comment',\n        commentPlaceholder: 'Please enter a comment…',\n        layout: 'Layout',\n        dpi: 'Resolution',\n        format: 'Format',\n        scale: 'Scale',\n        downloadBtnText: 'Create print',\n        printJobErrorMsg: 'Could not generate PDF output',\n        initErrorMsg: 'PDF Generator could not be initialized',\n        outputFormatPlaceholder: 'Please select an output format',\n        resolutionPlaceholder: 'Please select an output quality',\n        managerErrorMessage: 'Error while initializing the export engine'\n      },\n      Footer: {\n        refSystem: 'Reference system',\n        scale: 'Scale',\n        mousePosition: 'Mouse position',\n        imprint: 'Imprint',\n        contact: 'Contact',\n        privacypolicy: 'Privacy'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Error while loading the application',\n        applicationLoadErrorDescription:\n          'The application with ID {{applicationId}} could not be loaded correctly. ' +\n          'You\\'re seeing the default application configuration.',\n        errorMessage: 'Error while loading the application',\n        errorDescription: 'An unexpected error occurred while loading the application.',\n        errorDescriptionAppIdNotSet: 'No application ID given. Please provide the ID as query parameter, e.g. ?applicationId=1909',\n        errorDescriptionAppConfigNotFound: 'The application with ID {{applicationId}} could not be loaded correctly.',\n        errorDescriptionAppConfigStaticNotFound: 'The configuration of the application could not be loaded correctly.',\n        permissionDeniedUnauthorized: 'This application is not public. Authentication required.'\n      },\n      Nominatim: {\n        placeholder: 'Place name, street name, district name, POI, etc.'\n      },\n      UserMenu: {\n        settingsMenuTitle: 'Edit profile',\n        infoMenuTitle: 'About',\n        helpMenuTitle: 'Documentation',\n        logoutMenuTitle: 'Logout',\n        loginMenuTitle: 'Login'\n      },\n      WmsTimeSlider: {\n        title: 'Time reference',\n        default: 'No data found'\n      },\n      UploadDataModal: {\n        title: 'Upload data',\n        uploadedDataFolder: 'Uploaded data',\n        description: 'Click or drag file to this area to upload',\n        hint: 'Supported file formats are Shapefile (bundled as *.zip) and GeoTIFF',\n        success: 'Successfully uploaded file {{fileName}} and created layer {{layerName}}',\n        error: {\n          general: 'Error while uploading file {{fileName}}',\n          maxSize: 'The file exceeds the upload limit of {{maxSize}} MB',\n          supportedFormats: 'The given file type does not match the supported ones ({{supportedFormats}})',\n          zipContent: 'Multiple geodatasets within one archive are not supported'\n        }\n      },\n      MultiSearch: {\n        searchInViewBox: 'Search in current extent',\n        searchData: 'Search layer data',\n        searchNominatim: 'Search nominatim',\n        nominatimTitle: 'Nominatim',\n        searchPlaceholder: 'Address and data search…'\n      },\n      EditFeatureDrawer: {\n        featureEditor: 'Feature editor',\n        noLayerFoundError: 'No layer found - the editing is not possible.',\n        isFeatureLockedErrorMsg: 'The selected feature is already being edited in another session.',\n        closeDrawerWarnTitle: 'Do you really want to quit?',\n        closeDrawerWarnContent: 'This will discard any unsaved changes to the feature.'\n      },\n      EditFeatureSwitch: {\n        usageHint: 'Select an existing feature for editing on the map or…',\n        limitedUsageHint: 'To edit please select an object on the map',\n        createFeature: 'Create new feature'\n      },\n      EditFeatureFullForm: {\n        saveErrorMsg: 'Error while saving the feature',\n        deleteErrorMsg: 'Error while deleting the feature'\n      },\n      EditFeatureGeometryToolbar: {\n        draw: 'Draw new geometry',\n        edit: 'Edit geometry',\n        delete: 'Delete geometry',\n        undo: 'Undo',\n        redo: 'Redo'\n      },\n      Attribution: {\n        title: 'Properties',\n        add: 'Add Property',\n        select: 'Please select a geometry first.',\n        submit: 'Apply'\n      },\n      AttributionRow: {\n        missingKey: 'Missing Key',\n        missingValue: 'Missing Value',\n        keyPlaceholder: 'Key',\n        valuePlaceholder: 'Value',\n        keyInUse: 'Key already exists!'\n      },\n      AttributionPopConfirm:{\n        title: 'Delete property?',\n        okText: 'Delete',\n        cancelText: 'Cancel'\n      },\n      ResetButton: {\n        title: 'Reset'\n      },\n      notificationDeleteText:{\n        title: 'Press \"Apply\" to confirm changes.',\n        info: 'Not pressing \"Apply\" will reverse all changes made to this drawing.'\n      },\n      notificationApplyText:{\n        title: 'Changes were applied successfully!'\n      },\n      SaveButton: {\n        title: 'Save',\n        errorNoGeometry: 'Cannot save feature without geometry.'\n      },\n      DeleteButton: {\n        title: 'Delete feature',\n        confirm: 'The feature will be deleted completely. Proceed?'\n      },\n      EditFeatureButton: {\n        title: 'Edit feature'\n      },\n      FeaturePropertyGrid: {\n        key: 'Name',\n        value: 'Value'\n      },\n      PaginationToolbar: {\n        copyAsGeoJson: 'Copy as GeoJSON (incl. geometry)',\n        copyAsObject: 'Copy as object (displayed values only)',\n        editDisabled: 'This layer is not editable',\n        editFeature: 'Edit feature'\n      },\n      JsonModal: {\n        buttonTitle: 'Show {{propertyName}}'\n      },\n      ReferenceTable: {\n        modalTitle: 'Details for {{referenceValue}}',\n        defaultModalTitle: 'Details',\n        defaultRowPlaceholder: 'Click the button to show the details'\n      },\n      EditReferenceTable: {\n        modalTitle: 'Details for {{referenceValue}}',\n        confirmDeleteTitle: 'The referenced feature will be deleted completely. Proceed?'\n      }\n    }\n  }\n};\n","import('./bootstrap');\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface AddLayerModalState {\n  visible: boolean;\n}\n\nconst initialState: AddLayerModalState = {\n  visible: false\n};\n\nconst addLayerModalSlice = createSlice({\n  name: 'addLayerModal',\n  initialState,\n  reducers: {\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = addLayerModalSlice.actions;\n\nexport default addLayerModalSlice.reducer;\n","import {\n  PayloadAction,\n  createSlice\n} from '@reduxjs/toolkit';\n\nimport {\n  Feature\n} from 'geojson';\n\nexport type EditLevel =\n  | 'CREATE'\n  | 'UPDATE'\n  | 'DELETE'\n  | 'EDIT_GEOMETRY'\n  | 'NONE';\nexport interface EditFeatureState {\n  layerId: string | null;\n  feature: Feature | null;\n  userEditMode: EditLevel[];\n  formDirty: boolean;\n}\n\nconst initialState: EditFeatureState = {\n  layerId: null,\n  feature: null,\n  userEditMode: ['NONE'],\n  formDirty: false\n};\n\nconst editFeatureSlice = createSlice({\n  name: 'editFeature',\n  initialState,\n  reducers: {\n    setLayerId(state, action: PayloadAction<string | null>) {\n      state.layerId = action.payload;\n    },\n    setFeature(state, action: PayloadAction<Feature | null>) {\n      state.feature = action.payload;\n    },\n    reset(state) {\n      state.layerId = null;\n      state.feature = null;\n    },\n    setUserEditMode(state, action: PayloadAction<EditLevel[]>) {\n      state.userEditMode = action.payload;\n    },\n    setFormDirty(state, action: PayloadAction<boolean>) {\n      state.formDirty = action.payload;\n    }\n  }\n});\n\nexport const {\n  setLayerId,\n  setFeature,\n  reset,\n  setUserEditMode,\n  setFormDirty\n} = editFeatureSlice.actions;\n\nexport default editFeatureSlice.reducer;\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nconst initialState: boolean = false;\n\nconst editFeatureDrawerOpenSlice = createSlice({\n  name: 'editFeatureDrawerOpen',\n  initialState,\n  reducers: {\n    show() {\n      return true;\n    },\n    hide() {\n      return false;\n    },\n    toggle(state) {\n      return !state;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = editFeatureDrawerOpenSlice.actions;\n\nexport default editFeatureDrawerOpenSlice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport { FeatureInfoConfig } from '../../components/ToolMenu/FeatureInfo';\n\n// eslint-disable-next-line no-shadow\nexport enum CopyTools {\n  COPY_AS_GEOJSON = 'COPY_AS_GEOJSON',\n  COPY_AS_OBJECT = 'COPY_AS_OBJECT'\n}\n\nconst initialState: FeatureInfoConfig = {\n  enabled: false,\n  activeCopyTools: [CopyTools.COPY_AS_GEOJSON, CopyTools.COPY_AS_OBJECT]\n};\n\nexport const slice = createSlice({\n  name: 'featureInfo',\n  initialState,\n  reducers: {\n    setFeatureInfoConfig(state, action: PayloadAction<FeatureInfoConfig>) {\n      state = action.payload;\n    },\n    setFeatureInfoEnabled(state, action: PayloadAction<boolean>) {\n      state.enabled = action.payload;\n    },\n    setFeatureInfoActiveCopyTools(state, action: PayloadAction<CopyTools[]>) {\n      state.activeCopyTools = action.payload;\n    }\n  }\n});\n\nexport const {\n  setFeatureInfoEnabled,\n  setFeatureInfoActiveCopyTools\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  PayloadAction,\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface LayerDetailsModalState {\n  visible: boolean;\n  layerId?: string;\n}\n\nconst initialState: LayerDetailsModalState = {\n  visible: false\n};\n\nconst layerDetailsModalSlice = createSlice({\n  name: 'layerDetailsModal',\n  initialState,\n  reducers: {\n    setLayer(state, action: PayloadAction<string | undefined>) {\n      state.layerId = action.payload;\n    },\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  setLayer,\n  show,\n  hide,\n  toggle\n} = layerDetailsModalSlice.actions;\n\nexport default layerDetailsModalSlice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nexport type LayerTreeConfig = {\n  enabled?: boolean;\n  activeUploadTools?: UploadTools[];\n  showLegends?: boolean;\n};\n\n// eslint-disable-next-line no-shadow\nexport enum UploadTools {\n  addWMS = 'addWMS',\n  dataUpload = 'dataUpload'\n}\n\nconst initialState: LayerTreeConfig = {\n  enabled: false,\n  activeUploadTools: [UploadTools.addWMS, UploadTools.dataUpload],\n  showLegends: false\n};\n\nexport const slice = createSlice({\n  name: 'tree',\n  initialState,\n  reducers: {\n    setLayerTreeConfig(state, action: PayloadAction<LayerTreeConfig>) {\n      state = action.payload;\n    },\n    setLayerTreeEnabled(state, action: PayloadAction<boolean>) {\n      state.enabled = action.payload;\n    },\n    setLayerTreeActiveUploadTools(state, action: PayloadAction<UploadTools[]>) {\n      state.activeUploadTools = action.payload;\n    },\n    setLayerTreeShowLegends(state, action: PayloadAction<boolean>) {\n      state.showLegends = action.payload;\n    }\n  }\n});\n\nexport const {\n  setLayerTreeEnabled,\n  setLayerTreeActiveUploadTools,\n  setLayerTreeShowLegends\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport { V3CustomMapParams } from '@terrestris/mapfish-print-manager/dist/manager/MapFishPrintV3Manager';\n\nexport type PrintState = {\n  customMapParams?: V3CustomMapParams;\n  customParams?: any;\n  printApp?: string;\n};\n\nconst initialState: PrintState = {\n  printApp: 'default',\n  customMapParams: {},\n  customParams: {\n    printLegend: false\n  }\n};\n\nexport const printSlice = createSlice({\n  name: 'print',\n  initialState,\n  reducers: {\n    setCustomMapParams: (state, action: PayloadAction<V3CustomMapParams>) => {\n      state.customMapParams = action.payload;\n    },\n    setCustomParams: (state, action: PayloadAction<any>) => {\n      state.customParams = action.payload;\n    },\n    setPrintApp: (state, action: PayloadAction<string>) => {\n      state.printApp = action.payload;\n    },\n    addCustomMapParam: (state, action: PayloadAction<Partial<V3CustomMapParams>>) => {\n      state.customMapParams = {\n        ...state.customMapParams,\n        ...action.payload\n      };\n    },\n    addCustomParam: (state, action: PayloadAction<any>) => {\n      state.customParams = {\n        ...state.customParams,\n        ...action.payload\n      };\n    }\n  }\n});\n\nexport const {\n  setCustomMapParams,\n  setCustomParams,\n  addCustomMapParam,\n  addCustomParam,\n  setPrintApp\n} = printSlice.actions;\n\nexport default printSlice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nexport type SelectedFeatures = {\n  [layerName: string]: string;\n};\n\nconst initialState: SelectedFeatures = {};\n\nexport const slice = createSlice({\n  name: 'selectedFeatures',\n  initialState,\n  reducers: {\n    setSelectedFeatures(state, action: PayloadAction<SelectedFeatures>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setSelectedFeatures\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: boolean = false;\n\nexport const slice = createSlice({\n  name: 'stylingDrawerVisibility',\n  initialState,\n  reducers: {\n    setStylingDrawerVisibility: (state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setStylingDrawerVisibility\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nexport interface ToolMenuState {\n  activeKeys: string[];\n  availableTools: string[];\n}\n\nconst initialState: ToolMenuState = {\n  // This is the default state. If no config is given, then load all tools\n  activeKeys: [],\n  availableTools: ['default']\n};\n\nexport const slice = createSlice({\n  name: 'toolMenu',\n  initialState,\n  reducers: {\n    setActiveKeys(state, action: PayloadAction<string[]>) {\n      state.activeKeys = [...action.payload];\n    },\n    setAvailableTools(state, action: PayloadAction<string[]>) {\n      state.availableTools = [...action.payload];\n    }\n  }\n});\n\nexport const {\n  setActiveKeys,\n  setAvailableTools\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface UploadDataModalState {\n  visible: boolean;\n}\n\nconst initialState: UploadDataModalState = {\n  visible: false\n};\n\nconst uploadDataModalSlice = createSlice({\n  name: 'uploadDataModal',\n  initialState,\n  reducers: {\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = uploadDataModalSlice.actions;\n\nexport default uploadDataModalSlice.reducer;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","AddLayerModal","restProps","loading","setLoading","useState","layers","setLayers","selectedRowKeys","setSelectedRowKeys","validationStatus","setValidationStatus","url","setUrl","sanitizedUrl","setSanitizedUrl","version","setVersion","isModalVisible","state","addLayerModal","visible","dispatch","map","useMap","t","useTranslation","useEffect","UrlUtil","closeModal","hide","addLayers","layersToAdd","targetFolderName","targetGroup","MapUtil","OlLayerGroup","set","existingGroups","getLayerGroup","getLayers","insertAt","getLength","forEach","layerToAdd","getArray","includes","layerUrl","ImageLayer","getSource","getUrl","TileLayer","urls","getUrls","length","undefined","layerConfig","name","get","type","opacity","getOpacity","sourceConfig","layerNames","getParams","LAYERS","useBearerToken","push","React","Modal","_extends","className","title","open","onCancel","width","footer","SimpleButton","key","disabled","onClick","onAddAll","onAddSelected","filter","layer","getUid","Input","Search","placeholder","value","onChange","evt","target","trim","onSearch","async","capabilities","CapabilitiesUtil","externalLayers","error","notification","message","description","status","enterButton","addonBefore","Select","defaultValue","label","Typography","Table","columns","render","text","record","scroll","y","rowKey","rowSelection","pagination","dataSource","usePlugins","useContext","PluginContext","BasicMapComponent","plugins","i18n","targetGroups","oldName","changeEvent","OlObjectEvent","dispatchEvent","language","pluginComponents","plugin","pluginIntegration","integration","placement","wrappedComponent","WrappedPluginComponent","MapComponent","CookieBanner","getPlugin","cookiePlugin","CookieConsent","disableStyles","location","buttonText","cookieName","buttonClasses","containerClasses","contentClasses","expires","useSHOGunAPIClient","SHOGunAPIClientContext","useExecuteWfsTransaction","client","useCallback","source","opts","OlSourceImageWMS","OlSourceTileWMS","endsWith","slice","defaultHeaders","response","fetch","method","headers","getBearerTokenHeader","getKeycloak","body","XMLSerializer","serializeToString","transaction","ok","Error","responseText","xmlDoc","some","candidate","getElementsByTagName","isFailed","DOMParser","parseFromString","FileUpload","readOnly","fieldConfig","passThroughProps","Upload","multiple","action","withCredentials","getCsrfTokenHeader","onRemove","uuid","file","fileUuid","getBasePath","credentials","onPreview","fileName","fileUrl","_isNil","anchor","document","createElement","appendChild","result","blob","objectUrl","window","URL","createObjectURL","href","download","click","revokeObjectURL","fieldProps","Button","useConvertImageUrl","Promise","reject","onSuccess","onError","reader","FileReader","onload","this","readAsDataURL","e","ImageUpload","initialFileList","mediaPreviewVisible","setMediaPreviewVisible","previewImage","setPreviewImage","defaultFileListWithBlob","setDefaultFileListWithBlob","imageUrlToBase64","useAsyncEffect","fl","fileListPromises","fileList","val","thumbUrl","all","convertDefaultFileList","accept","listType","previewImageUrl","img","FontAwesomeIcon","icon","faPlus","style","marginTop","alt","src","FeatureInfoForm","feature","formConfig","form","useForm","resetFields","setFieldsValue","getProperties","Form","labelCol","span","labelAlign","labelWrap","fieldCfg","Item","propertyName","displayName","DisplayField","ReferenceTable","referenceConfig","isModalOpen","setIsModalOpen","selectedFeature","setSelectedFeature","defaultPropertyName","resolvePlaceholder","tablePropertyName","regex","match","resolved","exec","replace","onDetailsClick","faBoxOpen","OlFeature","setProperties","size","showHeader","getDataSource","parsedValue","JSON","parse","Array","isArray","Logger","maskClosable","destroyOnClose","getModalTitle","referenceValue","featureInfoFormConfig","format","suffix","displayValue","Checkbox","checked","Number","isFinite","Intl","NumberFormat","useGrouping","isMoment","join","isString","lowerCandidate","toLowerCase","protocol","startsWith","isUrl","rel","uploadValue","v","stringify","isFileConfig","getUpload","fileType","defaultFileList","isJson","Text","EditReferenceTable","parentForm","defaultSortOrder","sorter","a","b","valA","valB","localeCompare","_","faEdit","Popconfirm","onConfirm","onConfirmDelete","danger","faTrash","parentFormValues","getFieldsValue","deleteCandidates","_cloneDeep","deleteIdx","findIndex","deleteCandidate","id","internalId","splice","onAddClick","valueCopy","Object","entries","isDate","cfg","component","moment","isValid","isUpload","vMap","upload","every","el","onOk","validateFields","updateReferences","formValues","existingReferences","getFieldValue","targetIdx","existingReference","isFieldsTouched","EditFeatureForm","applyFormDirty","uid","_isObject","formDirty","editFeature","createReadOnlyComponent","createFieldComponent","DatePicker","InputNumber","allowClear","Switch","TextArea","referenceTableConfig","editFormConfig","onValuesChange","_debounce","changedValues","setFormDirty","field","formItemProps","rules","required","valuePropName","getValueFromEvent","isGeometryType","propertyType","useExecuteWfsDescribeFeatureType","params","SERVICE","REQUEST","VERSION","OUTPUTFORMAT","TYPENAMES","json","useWriteWfsTransaction","executeWfsDescribeFeatureType","allowedEditMode","userEditMode","cleanFormValues","cleanedValue","children","child","toISOString","filePath","fileInfoList","lastModified","created","inserts","updates","deletes","describeFeatureType","geomProperty","featureTypes","properties","find","property","overallUpdateMode","upsertFeatures","feat","geometry","getGeometry","clone","isEmpty","getExtent","setGeometryName","updateMode","getId","setId","deleteFeatures","transactionOpts","featureNS","targetNamespace","featurePrefix","targetPrefix","featureType","srsName","getView","getProjection","getCode","nativeElements","OlFormatWFS","writeTransaction","ClientConfiguration","rootNode","getRootNode","lockId","createElementNS","lockIdValue","createTextNode","MapDrawer","querySelectorAll","classList","toggle","Drawer","mask","getComputedStyle","documentElement","getPropertyValue","afterOpenChange","onAfterDrawerOpenChange","updateSize","useExecuteGetFeature","featureRequest","writeGetFeature","outputFormat","EditFeatureGeometryToolbar","historyLength","editHistory","useRef","past","future","editLayer","setEditLayer","setRevision","gjFormat","useMemo","OlFormatGeoJson","DigitizeUtil","getDigitizeLayer","removeLayer","current","clear","olFeat","readFeature","addFeature","r","isEmptyOlExtent","fit","padding","undoEdit","editSource","features","getFeatures","writeFeaturesObject","previousSource","_isEmpty","addFeatures","readFeatures","redoEdit","nextSource","onDrawEnd","toLocaleLowerCase","existingFeature","once","e2","removeFeature","setGeometry","updateRevision","btnTooltipProps","tooltipPlacement","tooltipProps","mouseEnterDelay","Toolbar","alignment","ToggleGroup","DrawButton","faPencil","pressedIcon","digitizeLayer","tooltip","drawType","ModifyButton","faDrawPolygon","onModifyStart","onModifyEnd","onTranslateEnd","DeleteButton","onFeatureRemove","faUndo","flip","EditFeatureTabs","tabConfig","initialValues","items","config","idx","forceRender","Tabs","writeWfsTransaction","executeWfsTransaction","isWmsLayer","olFeature","OlFormatGeoJSON","refresh","ResetButton","faRotateLeft","FeedbackIcon","loadComplete","SaveButton","saveCompleted","setSaveCompleted","warn","setTimeout","faFloppyDisk","EditFeatureToolbar","onSaveSuccess","onSaveError","onDeleteSuccess","onDeleteError","EditFeatureFullForm","executeGetFeature","setTabConfig","setInitialValues","errorMsg","setErrorMsg","reloadFeature","updatedFeatures","equalTo","setFeature","update","structuredClone","setPropertiesPromises","tabConfigs","tabCfg","formCfg","parsedDate","parsedJson","fileListWithBlob","isImageFile","isReference","Alert","showIcon","featureId","idString","item","getAttribute","split","formattedErrorMessage","collectedFieldErrors","errorFields","errors","line","index","formatErrorMessage","useExecuteWfsLockFeature","lockFeatureDoc","featureProperties","parseInt","toString","idProperty","typeName","setAttribute","queryElement","filterElement","isEqualToElement","valueReferenceElement","valueReferenceValue","literalElement","literalValue","writeWfsLockFeature","useGetFeatureInfo","onFailure","onSingleClick","coords","coordinate","viewResolution","getResolution","getFeatureInfoUrl","INFO_FORMAT","BUFFER","getTargetElement","cursor","featureCollection","onPointerMove","dragging","data","getData","pixel","Uint8ClampedArray","hit","on","un","EditFeatureSwitch","onLockSuccess","onLockError","onCreate","executeWfsLockFeature","geomType","getGeometryType","coordinates","EditFeatureDrawer","setLayer","isFeatureLocked","setIsFeatureLocked","drawerTitle","setDrawerTitle","isDrawerOpen","editFeatureDrawerOpen","layerId","olLayer","closeDrawer","releaseLock","hideEditFeatureDrawer","reset","onClose","onDrawerClose","confirm","content","okType","Footer","legalInformation","legal","insertPlugins","itemPosition","placementOrientation","insertionIndex","getControls","control","OlControlScaleLine","addControl","OlControlMousePosition","coordinateFormat","createStringXY","projection","openContactModal","contact","openImprintModal","imprint","openPrivacyModal","privacy","getLeftItems","Divider","ScaleCombo","getRightItems","BasicNominatimSearch","viewBox","setViewBox","mapViewProjection","extent","transformedExtent","transformExtent","NominatimSearch","countryCodes","nominatimBaseUrl","generateSearchQuery","searchParts","part","generateSolrQuery","searchValue","parts","replaceAll","s","searchQueries","getAllLayers","l","groupedLayers","_groupBy","attributes","layerList","query","layerName","fieldList","isFulfilled","p","MultiSearch","useNominatim","clickAwayRef","searchNominatim","setSearchNominatim","searchData","setSearchData","useViewBox","setUseViewBox","defaultUseViewBox","setSearchValue","resultsVisible","setResultsVisible","settingsVisible","setSettingsVisible","dataSearchResults","setDataSearchResults","highlightingResults","setHighlightingResults","nominatimResults","setNominatimResults","searchResults","setSearchResults","addEventListener","handleClickAway","removeEventListener","parentNode","contains","settingsMenu","performSearch","minChars","resetSearch","calculateExtent","solrBasePath","searchUrl","origin","promises","q","solrQueryConfig","rows","rowsPerQuery","defType","queryParser","qf","coreName","bboxFilter","fq","useSolrHighlighting","hl","tagPre","tagPost","requireFieldMatch","successfulResults","allSettled","pr","dataResults","flatMap","sR","docs","hlResults","assign","sr","highlighting","logger","nominatimUrl","searchParams","getFeatureTitle","dsResult","highlightResult","searchConfig","blacklistedAttributes","displayTemplate","template","token","replaceTemplates","filteredHighlightKeys","keys","propKey","propValue","indexOf","updatedResults","geoJsonFormat","nFeats","f","geojson","dataProjection","featureProjection","display_name","nResults","wktFormat","OlFormatWKT","categories","groupByCategory","res","category","resultsWithLayerName","layerTitle","resultCategory","readGeometry","ftName","substring","lastIndexOf","delay","timeout","clearTimeout","actionsCreator","layerStyle","OlStyle","stroke","OlStyleStroke","color","fill","OlStyleFill","image","OlStyleCircle","radius","ref","event","addonAfter","Dropdown","menu","trigger","onOpenChange","SettingOutlined","onFocus","prefix","SearchOutlined","LoadingOutlined","resultRenderer","numTotal","Empty","PRESENTED_IMAGE_SIMPLE","activateLayer","getVisible","setVisible","PermalinkUtil","zoomOffsetOnClick","toolMenuElement","getElementsByClassName","clientWidth","getSize","SearchResultsPanel","accordion","searchTerms","activateLayerOnClick","SearchField","searchEngines","useSolr","getGravatarUrl","email","rating","defaultImage","force","lowerCaseEmail","md5","ApplicationInfo","opener","appInfo","logoPath","appDescription","isVisible","toggleVisibility","Opener","centered","Statistic","PROJECT_VERSION","buildTime","UserMenu","keycloak","user","onMenuClick","accountManagement","login","logout","redirectUri","createLoginUrl","UserChip","imageSrc","providerDetails","userName","faAngleDown","userMenu","getMenu","faSignIn","username","divider","settings","faUserCog","info","faInfo","faCircleQuestion","faSignOut","enabled","accountRoles","tokenParsed","resource_access","account","roles","itemsForLoggedInUser","Header","getCenterItems","LayerConfiguration","errorMessage","setErrorMessage","layerConfiguration","setLayerConfiguration","getLayerConfiguration","conf","findOne","closable","Spin","spinning","LayerDetails","setCapabilities","getCapabilities","capa","getLayerName","getCapabilitiesUrl","getCapabilitiesLayer","Capability","Layer","lay","Name","getBBox","EX_GeographicBoundingBox","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","getMinScale","MinScaleDenominator","getMaxScale","MaxScaleDenominator","getAbstract","Abstract","getServiceAbstract","Service","getContact","ContactInformation","ContactElectronicMailAddress","getLayerTitle","Title","getAccessConstraints","AccessConstraints","layout","flex","LayerDetailsModal","configurationVisible","setConfigurationVisible","layerDetailsModal","OlLayer","Tooltip","FileTextOutlined","onShowConfigurationClick","hideLayerDetailsModal","setDetailsLayer","hidden","StylingComponent","setStyle","symbolizers","kind","outlineOpacity","fillOpacity","outlineWidth","outlineColor","wellKnownName","strokeColor","strokeOpacity","font","offset","haloColor","haloWidth","olParser","OlParser","drawVectorLayer","olStylePolygon","olStyleLineString","olStylePoint","olStyleText","rule","newStyle","olStyle","writeStyle","output","drawLayerStyleFunction","resolution","geometryType","getType","parseStyles","CardStyle","onStyleChange","StylingDrawer","isStylingDrawerVisible","stylingDrawerVisibility","setStylingDrawerVisibility","Option","LanguageSelect","supportedLanguages","services","resourceStore","lang","changeLanguage","supportedLanguage","toUpperCase","Permalink","layerAttributes","initialPermalink","permalink","setPermalink","mailBody","eventKeys","identifierFunction","filterFunction","updatePermalink","updateLayerConfig","externalLayer","clientConfig","registerLayerCallback","layerGroup","layersInGroup","i","layerInGroup","LayerGroup","eventKeyVisibility","eventKeyOpacity","listenerKeyCenter","listenerKeyResolution","mapLayerGroup","unByKey","WhatsAppOutlined","whatsAppUrl","MailOutlined","mailToUrl","CopyOutlined","copy","SHOGunMapFishPrintV3WMSSerializer","MapFishPrintV3WMSSerializer","serialize","serialized","super","baseURL","optsToApply","tileSize","validateSource","MapFishPrintV3TiledWMSSerializer","CustomFieldInput","maxLength","inputText","setInputText","addCustomParam","showCount","LayoutSelect","printManager","onValueChange","setLayout","prevLayoutRef","getLayouts","OutputFormatSelect","outputFormats","setOutputFormat","toLocaleUpperCase","ResolutionSelect","setResolution","setDpi","getDpis","d","ScaleSelect","scale","setScale","updateScale","pmScale","getScale","transformInteraction","getInteractions","MapFishPrintV3Manager","TRANSFORM_INTERACTION_NAME","getScales","toLocaleString","Shared","customParams","FORMAT","LAYER","queryParams","encodeURIComponent","PrintForm","active","customPrintScales","layerBlackList","currentLanguageCode","customMapParams","print","printApp","setPrintManager","layerFilter","legendFilter","notBlacklisted","notHidden","printableLayer","SCALE","getPrintableLayers","printLayer","getAttributions","manager","extentLayer","getExtentLayer","allAttributions","currentLayerAttribution","LayerUtil","getLayerAttributionsText","initializeMapProvider","pManagerOpts","getResolutions","units","getUnits","reverse","transformOpts","rotate","serializers","MapFishPrintV3GeoJsonSerializer","MapFishPrintV3OSMSerializer","MapFishPrintV3WMTSSerializer","SHOGunMapFishPrintV3TiledWMSSerializer","toReversed","pManager","init","apps","getPrintApps","setPrintApp","getOutputFormats","attributions","shutdownManager","setCustomParams","setCustomMapParams","onAlertClose","isInitiated","initialValue","handleLayoutChange","setFieldValue","getClosestScaleToFitMap","faDownload","downloadUrl","AttributionRow","keyName","validator","fields","resolve","AutoComplete","o","AttributionDrawer","onCustomClose","isFormValid","setIsFormIsValid","availableFeatureCollectionAttributes","setAvailableFeatureCollectionAttributes","availableFeatureAttributes","setAvailableFeatureAttributes","contextHolder","useNotification","updateAvailableFeatureAttributes","currentKeys","filteredPropertyEntries","OlGeometry","filteredProperties","fromEntries","formProperties","digitizedFeatures","featureCollectionAttributes","Set","prop","add","from","selectInteraction","interaction","Row","onFinish","input","destroy","success","duration","unset","values","autoComplete","changedFields","List","remove","rmFn","getFormItems","okText","cancelText","removeAndMessage","faMinusSquare","htmlType","defaultClassName","DeleteAllButton","finalClassName","ExclamationCircleOutlined","StylingButton","drawerVisibilty","toggleDrawer","faPaintBrush","Draw","showDrawPoint","showDrawLine","showDrawPolygon","showDrawCircle","showDrawRectangle","showDrawAnnotation","showModifyFeatures","showUploadFeatures","showDeleteFeatures","isAttributeDrawerOpen","setIsAttributeDrawerOpen","selectedButton","setSelectedButton","onGeoJSONUpload","geoJSONFile","fileReader","geoJSONFeatures","GeoJSON","mapProjection","transform","digitizeLayerSource","err","readAsText","selectedName","childProps","pressed","faCircle","faGripLines","faShapes","faCircleNotch","faSquare","faFont","onToggle","faPenToSquare","faEraser","UploadButton","uploadedFiles","files","validity","checkValidityOfUploadFile","faUpload","onGeoJSONDownload","clonedFeatures","clonedFeature","geoJSON","writeFeatures","fileToDownload","Blob","link","removeChild","initVectorLayer","OlSourceVector","featureStyle","OlLayerVector","addLayer","deinitVectorLayer","vectorLayer","PaginationToolbar","exportFilter","activeCopyTools","featureInfo","isEditButtonVisible","isLayerEditable","Pagination","simple","total","pageSize","onEditFeatureBtnClick","geojsonFeatureString","writeFeature","geojsonFeature","setLayerId","showEditFeatureDrawer","CopyTools","COPY_AS_GEOJSON","onCopyAsGeoJSONClick","selectedFeatureClone","propertyEntries","faClipboardCheck","COPY_AS_OBJECT","onCopyAsObjectClick","props","_clone","faClipboardList","FeatureInfoTabs","currentPage","setCurrentPage","activeKey","setActiveKey","vectorLayerName","useHighlightVectorLayer","page","defaultActiveKey","onTabClick","FeatureInfoPropertyGrid","setBlacklistedAttributes","geomAttributes","attributeFilter","getKeys","PropertyGrid","sticky","dataIndex","ellipsis","scrollToFirstRowOnChange","FeatureInfo","queryLayers","setQueryLayers","activeTabKey","setActiveTabKey","featureInfoEnabled","OlLayerImage","OlLayerTile","updateQueryLayers","layerCandidates","mapLayers","changeActiveKey","findMapLayerIndex","unqualifiedMapLayerName","getUnqualifiedLayerName","CoordinateInfo","featureCount","coordinateInfoState","pluginRendererAvailable","allLayers","mapLayerIndex","mapLayer","sort","destroyInactiveTabPane","fetchOpts","serializedFeatures","entry","selectedFeatures","setSelectedFeatures","WmsTimeSlider","setValue","TIME","min","setMin","max","setMax","marks","setMarks","dimension","timeValues","m","default","nearest","NaN","diff","faClock","TimeSlider","updateParams","step","LayerTreeContextMenu","visibleLegendsIds","setVisibleLegendsIds","extentLoading","setExtentLoading","downloadConfig","zoomToLayerExtent","getAllLayerGroups","layerGroups","parentGroups","getParentLayerGroups","parentGroup","removeExternalLayer","externalLayerGroup","uploadedLayerGroup","downloadLayer","reqOpts","dropdownMenuItems","legendVisible","downloadItems","dlConfig","formatName","encodeURI","decodeURI","legendId","newLegendIds","setLayerDetailsLayer","showLayerDetailsModal","faEllipsisV","LoadingIndicator","LayerTree","showLegendsState","layerTree","showLegends","initialLayersUid","layerTileLoadCounter","setLayerTileLoadCounter","registerTileLoadHandler","hasListener","tileLoadStartListener","tileLoadEndListener","checkListeners","activeLayers","counter","loaded","percent","isInteger","Math","round","RgLayerTree","nodeTitleRenderer","mapView","unit","LayerTransparencySlider","formatter","Legend","extraParams","LEGEND_OPTIONS","TRANSPARENT","forEachFeature","draggable","Measure","showMeasureDistance","showMeasureArea","MeasureButton","geodesic","measureType","continueLineMsg","faPenRuler","continuePolygonMsg","Panel","Collapse","ToolMenu","collapseWidth","minWidth","maxWidth","availableTools","toolMenu","activeKeys","collapsed","setCollapsed","menuTools","setMenuTools","isResizing","setIsResizing","setWidth","noCollapseWidth","setNoCollapseWidth","mobileQuery","matchMedia","mobileNavigatorRegEx","RegExp","matches","test","navigator","userAgent","exclusiveTools","tool","lastExclusiveTool","setActiveKeys","setFeatureInfoEnabled","setLayerTreeEnabled","activeUploadTools","getToolPanelConfig","faRuler","faPalette","showDownloadFeatures","showStyleFeatures","faCircleInfo","faFileDownload","faStream","UploadTools","addWMS","showAdd","authorizedRoles","role","hasResourceRole","clientId","dataUpload","showUpload","faShareNodes","faLanguage","onMouseDown","onMouseUp","onMouseMove","offsetLeft","clientX","expandIconPosition","destroyInactivePanel","_toArray","getToolPanels","panels","toolPanelConfig","panel","header","faChevronRight","faChevronLeft","Dragger","UploadDataModal","uploadError","setUploadError","uploadSuccess","setUploadSuccess","isUploading","setIsUploading","uploadDataModal","getAttributeType","dbfFieldType","customRequest","splittedFileName","geoServerBaseUrl","base","workspace","Date","now","uploadData","baseUrl","storeName","coverageStoreUrl","coverageUrl","coverage","nativeName","keywords","uploadGeoTiff","shp","Shapefile","load","featureTypeName","featureTypeAttributes","attribute","k","dbfContent","minOccurs","maxOccurs","nillable","binding","shxContent","featureTypeUrl","uploadShapeZip","maxCount","showUploadList","beforeUpload","maxSize","limit","fileSize","supportedFormats","hoverable","SHOGunApplicationUtil","parseTileLayer","search","URLSearchParams","useQueryParams","configString","addLayerGroup","parser","parseLayer","isExternalLayer","isUploadedLayer","groupName","App","useRestoreTransientLayers","loadingMask","createSlice","initialState","authorities","commitHash","userId","reducers","setAppInfo","payload","actions","setDescription","setLegal","setLogoPath","setSearchEngines","setTitle","setUser","dynamicMiddleware","createDynamicMiddleware","createReducer","asyncReducers","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","prepend","LoadingErrorCode","SHOGunAPIClient","getConfigLang","enGB","deDE","plPl","csCZ","setupSHOGunMap","view","parseMapView","application","constrainOnlyCenter","ll","fromLonLat","ur","setConstrainResolution","layersConfig","parseLayerTreeNodes","parseLayerTree","OlMap","controls","OlControlDefaults","zoom","setupDefaultMap","osmLayer","OlSourceOsm","temperatureLayer","eoLayerGroup","backgroundLayerGroup","center","OlView","loadPluginModules","moduleName","moduleUrl","remoteNames","__webpack_init_sharing__","element","parentElement","onerror","head","container","__webpack_share_scopes__","modules","remoteName","module","matchRole","loader","paths","vs","keycloakEnabled","keycloakOnLoad","onLoadAction","keycloakHost","host","keycloakRealm","realm","keycloakClientId","Keycloak","onTokenExpired","updateToken","onLoad","checkLoginIframe","initKeycloak","setKeycloak","applicationIdString","applicationId","APP_ID_NOT_SET","appConfig","shogunClient","APP_UNAUTHORIZED","getApplicationConfiguration","setLoadingImage","path","loadingImageElement","getElementById","localStorage","setItem","theme","staticAppContextUrl","getStaticApplicationConfiguration","APP_CONFIG_STATIC_NOT_FOUND","APP_CONFIG_NOT_FOUND","defaultLanguage","use","LanguageDetector","initOpts","primaryColor","secondaryColor","complementaryColor","faviconPath","favicon","querySelector","newLink","parseTheme","ConfigProvider","Color","isLight","darken","hexa","isDark","lighten","setProperty","toolConfig","engines","setFeatureInfoActiveCopyTools","uploadTools","setLayerTreeActiveUploadTools","setLayerTreeShowLegends","setAvailableTools","setApplicationToStore","subscribe","getState","getAppInfo","getApplicationInfo","setAppInfoToStore","setUserToStore","getUser","userRoles","realm_access","checkRoles","list","featureEditRoles","authorizedRolesForCreate","authorizedRolesForUpdate","authorizedRolesForDelete","authorizedRolesForEditingGeometries","setUserEditMode","setupMap","clientPlugins","resourcePath","exposedPaths","clientPluginModules","clientPluginDefault","PluginComponent","pluginApplicationConfig","tc","locale","lng","resources","translation","addResourceBundle","replaceReducer","middlewares","mw","addMiddleware","loadPlugins","fallback","SHOGunAPIClientProvider","PluginProvider","Provider","MapContext","isInitialized","errorDescription","appId","renderApp","de","clientVersionTitle","backendVersionTitle","addSelectedLayers","addAllLayers","inputPlaceholder","externalWmsFolder","columnTitle","invalidUrlErrorMsg","requestWmsGetCapabilitiesInstruction","processedLayersFolder","button","whatsAppTooltip","mailTooltip","copyTooltip","copiedToClipboard","copyToClipboardFailed","area","clicktodrawline","clicktodrawarea","point","polygon","circle","rectangle","modify","delete","export","deleteAll","confirmMessage","openColorPalette","closeColorPalette","usageHint","transparency","noLegendAvailable","layerZoomToExtent","extentError","showLegend","hideLegend","layerDetails","internalConfigurationButtonTooltip","internalConfigurationButtonTooltipPressed","noDataPlaceholder","layerNameLabel","layerTitleLabel","serviceAbstractLabel","abstractLabel","accessConstraintsLabel","capabilitiesUrlLabel","contactLabel","minScaleLabel","maxScaleLabel","bboxLabel","expand","collapse","measure","draw","addWms","layertree","languageSelect","initialTitle","titlePlaceholder","comment","commentPlaceholder","dpi","downloadBtnText","printJobErrorMsg","initErrorMsg","outputFormatPlaceholder","resolutionPlaceholder","managerErrorMessage","refSystem","mousePosition","privacypolicy","Index","applicationLoadErrorMessage","applicationLoadErrorDescription","errorDescriptionAppIdNotSet","errorDescriptionAppConfigNotFound","errorDescriptionAppConfigStaticNotFound","permissionDeniedUnauthorized","Nominatim","settingsMenuTitle","infoMenuTitle","helpMenuTitle","logoutMenuTitle","loginMenuTitle","uploadedDataFolder","hint","general","zipContent","searchInViewBox","nominatimTitle","searchPlaceholder","featureEditor","noLayerFoundError","isFeatureLockedErrorMsg","closeDrawerWarnTitle","closeDrawerWarnContent","limitedUsageHint","createFeature","saveErrorMsg","deleteErrorMsg","edit","undo","redo","Attribution","select","submit","missingKey","missingValue","keyPlaceholder","valuePlaceholder","keyInUse","AttributionPopConfirm","notificationDeleteText","notificationApplyText","errorNoGeometry","EditFeatureButton","FeaturePropertyGrid","copyAsGeoJson","copyAsObject","editDisabled","JsonModal","buttonTitle","modalTitle","defaultModalTitle","defaultRowPlaceholder","confirmDeleteTitle","en","fallbackLng","debug","interpolation","escapeValue","returnNull","initReactI18next","addLayerModalSlice","show","editFeatureSlice","editFeatureDrawerOpenSlice","setFeatureInfoConfig","layerDetailsModalSlice","setLayerTreeConfig","printSlice","printLegend","addCustomMapParam","uploadDataModalSlice","___CSS_LOADER_EXPORT___"],"sourceRoot":""}