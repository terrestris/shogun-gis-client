{"version":3,"file":"2842.28691660cf6842bf.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-geo/dist/Grid/PropertyGrid/PropertyGrid.js","webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-geo/dist/constants.js","webpack://@terrestris/shogun-gis-client/./node_modules/antd/es/_util/gapSize.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/util.js"],"sourcesContent":["import './PropertyGrid.less';\nimport { Table } from 'antd';\nimport _get from 'lodash/get';\nimport { getUid } from 'ol';\nimport React, { useMemo } from 'react';\nimport { CSS_PREFIX } from '../../constants';\nconst defaultClassName = `${CSS_PREFIX}propertygrid`;\n/**\n * Component representing a feature grid showing the attribute values of a simple feature.\n */\nconst PropertyGrid = ({ attributeNameColumnTitle = 'Attribute name', attributeNameColumnWidthInPercent = 50, attributeValueColumnTitle = 'Attribute value', className, attributeFilter, attributeNames, feature, ...passThroughProps }) => {\n    const dataSource = useMemo(() => {\n        let filter = attributeFilter;\n        if (!filter) {\n            filter = feature.getKeys().filter((attrName) => attrName !== 'geometry');\n        }\n        return filter.map((attr) => {\n            const fid = getUid(feature);\n            return {\n                attributeName: (attributeNames && _get(attributeNames, attr)) ?\n                    _get(attributeNames, attr) :\n                    attr,\n                attributeValue: feature.get(attr),\n                key: `ATTR_${attr}_fid_${fid}`\n            };\n        });\n    }, [attributeFilter, attributeNames, feature]);\n    const isUrl = (value) => {\n        return /^(?:\\w+:)?\\/\\/([^\\s.]+\\.\\S{2}|localhost[:?\\d]*)\\S*$/.test(value);\n    };\n    const columns = useMemo(() => {\n        return [{\n                title: attributeNameColumnTitle,\n                dataIndex: 'attributeName',\n                key: 'attributeName',\n                width: `${attributeNameColumnWidthInPercent}%`\n            }, {\n                title: attributeValueColumnTitle,\n                dataIndex: 'attributeValue',\n                key: 'attributeValue',\n                width: `${100 - attributeNameColumnWidthInPercent}%`,\n                render: (value) => {\n                    if (isUrl(value)) {\n                        return React.createElement(\"a\", { href: value, target: \"_blank\" }, value);\n                    }\n                    else {\n                        return value;\n                    }\n                }\n            }];\n    }, [attributeNameColumnTitle, attributeNameColumnWidthInPercent, attributeValueColumnTitle]);\n    const finalClassName = className\n        ? `${className} ${defaultClassName}`\n        : defaultClassName;\n    return (React.createElement(Table, { className: finalClassName, rowKey: record => record.key, dataSource: dataSource, columns: columns, pagination: false, ...passThroughProps }));\n};\nexport default PropertyGrid;\n//# sourceMappingURL=PropertyGrid.js.map","const CSS_PREFIX = 'react-geo-';\nexport { CSS_PREFIX };\n//# sourceMappingURL=constants.js.map","export function isPresetSize(size) {\n  return ['small', 'middle', 'large'].includes(size);\n}\nexport function isValidGapNumber(size) {\n  if (!size) {\n    // The case of size = 0 is deliberately excluded here, because the default value of the gap attribute in CSS is 0, so if the user passes 0 in, we can directly ignore it.\n    return false;\n  }\n  return typeof size === 'number' && !Number.isNaN(size);\n}","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.3.1';\n"],"names":["defaultClassName","attributeNameColumnTitle","attributeNameColumnWidthInPercent","attributeValueColumnTitle","className","attributeFilter","attributeNames","feature","passThroughProps","dataSource","filter","attrName","attr","fid","isUrl","value","columns","finalClassName","record","CSS_PREFIX","isPresetSize","size","isValidGapNumber","Number","abstract","Error","uidCounter_","getUid","obj","String","VERSION"],"mappings":"0OAMA,IAAMA,EAAmB,CAAC,EAAE,GAAU,CAAC,YAAY,CAAC,AAkDpD,WA9CqB,CAAC,CAAEC,yBAAAA,EAA2B,gBAAgB,CAAEC,kCAAAA,EAAoC,EAAE,CAAEC,0BAAAA,EAA4B,iBAAiB,CAAEC,UAAAA,CAAS,CAAEC,gBAAAA,CAAe,CAAEC,eAAAA,CAAc,CAAEC,QAAAA,CAAO,CAAE,GAAGC,EAAkB,IAClO,IAAMC,EAAa,cAAQ,KACvB,IAAIC,EAASL,EAIb,MAHI,CAACK,GACDA,CAAAA,EAASH,EAAQ,OAAO,GAAG,MAAM,CAAC,AAACI,GAAaA,AAAa,aAAbA,EAAuB,EAEpED,EAAO,GAAG,CAAC,AAACE,IACf,IAAMC,EAAM,aAAON,GACnB,MAAO,CACH,cAAe,AAACD,GAAkB,IAAKA,EAAgBM,GACnD,IAAKN,EAAgBM,GACrBA,EACJ,eAAgBL,EAAQ,GAAG,CAACK,GAC5B,IAAK,CAAC,KAAK,EAAEA,EAAK,KAAK,EAAEC,EAAI,CAAC,AAClC,CACJ,EACJ,EAAG,CAACR,EAAiBC,EAAgBC,EAAQ,EACvCO,EAAQ,AAACC,GACJ,sDAAsD,IAAI,CAACA,GAEhEC,EAAU,cAAQ,IACb,CAAC,CACA,MAAOf,EACP,UAAW,gBACX,IAAK,gBACL,MAAO,CAAC,EAAEC,EAAkC,CAAC,CAAC,AAClD,EAAG,CACC,MAAOC,EACP,UAAW,iBACX,IAAK,iBACL,MAAO,CAAC,EAAE,IAAMD,EAAkC,CAAC,CAAC,CACpD,OAAQ,AAACa,GACL,AAAID,EAAMC,GACC,iBAAmB,CAAC,IAAK,CAAE,KAAMA,EAAO,OAAQ,QAAS,EAAGA,GAG5DA,CAGnB,EAAE,CACP,CAACd,EAA0BC,EAAmCC,EAA0B,EACrFc,EAAiBb,EACjB,CAAC,EAAEA,EAAU,CAAC,EAAEJ,EAAiB,CAAC,CAClCA,EACN,OAAQ,iBAAmB,CAAC,GAAK,CAAE,CAAE,UAAWiB,EAAgB,OAAQC,GAAUA,EAAO,GAAG,CAAE,WAAYT,EAAY,QAASO,EAAS,WAAY,GAAO,GAAGR,CAAgB,AAAC,EACnL,C,wDCvDA,IAAMW,EAAa,Y,wBCAZ,SAASC,EAAaC,CAAI,EAC/B,MAAO,CAAC,QAAS,SAAU,QAAQ,CAAC,QAAQ,CAACA,EAC/C,CACO,SAASC,EAAiBD,CAAI,QACnC,EAAKA,GAIE,AAAgB,UAAhB,OAAOA,GAAqB,CAACE,OAAO,KAAK,CAACF,EACnD,C,8ECFO,SAASG,IACd,MAAM,AAAIC,MAAM,iCAClB,C,uGAOA,IAAIC,EAAc,EAWX,SAASC,EAAOC,CAAG,EACxB,OAAOA,EAAI,MAAM,EAAKA,CAAAA,EAAI,MAAM,CAAGC,OAAO,EAAEH,EAAW,CACzD,CAMO,IAAMI,EAAU,Q"}