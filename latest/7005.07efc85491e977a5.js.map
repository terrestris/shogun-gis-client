{"version":3,"file":"7005.07efc85491e977a5.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-util/dist/Hooks/useDraw/useDraw.js","webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-geo/dist/Button/DrawButton/DrawButton.js"],"sourcesContent":["import * as OlEventConditions from 'ol/events/condition';\nimport OlInteractionDraw, { createBox } from 'ol/interaction/Draw';\nimport { DigitizeUtil } from '../../Util/DigitizeUtil';\nimport useMap from '../useMap/useMap';\nimport { useOlInteraction } from '../useOlInteraction/useOlInteraction';\nimport { useOlListener } from '../useOlListener/useOlListener';\nimport { usePropOrDefault } from '../usePropOrDefault/usePropOrDefault';\nexport const useDraw = ({ active, digitizeLayer, drawInteractionConfig, drawStyle, drawType, onDrawEnd, onDrawStart }) => {\n    const map = useMap();\n    const layer = usePropOrDefault(digitizeLayer, () => map ? DigitizeUtil.getDigitizeLayer(map) : undefined, [map]);\n    const drawInteraction = useOlInteraction(() => {\n        if (!map || !layer) {\n            return undefined;\n        }\n        let geometryFunction;\n        let type;\n        if (drawType === 'Rectangle') {\n            geometryFunction = createBox();\n            type = 'Circle';\n        }\n        else {\n            type = drawType;\n        }\n        const newInteraction = new OlInteractionDraw({\n            source: layer.getSource() || undefined,\n            type: type,\n            geometryFunction: geometryFunction,\n            style: drawStyle ?? DigitizeUtil.defaultDigitizeStyleFunction,\n            freehandCondition: OlEventConditions.never,\n            ...(drawInteractionConfig ?? {})\n        });\n        newInteraction.set('name', `react-util-draw-interaction-${drawType}`);\n        return newInteraction;\n    }, [map, layer, drawType, drawStyle, drawInteractionConfig], active);\n    useOlListener(drawInteraction, i => i.on('drawend', (evt) => {\n        onDrawEnd?.(evt);\n    }), [drawInteraction, onDrawEnd]);\n    useOlListener(drawInteraction, i => i.on('drawstart', (evt) => {\n        onDrawStart?.(evt);\n    }), [drawInteraction, onDrawStart]);\n};\nexport default useDraw;\n//# sourceMappingURL=useDraw.js.map","import { useDraw } from '@terrestris/react-util/dist/Hooks/useDraw/useDraw';\nimport useMap from '@terrestris/react-util/dist/Hooks/useMap/useMap';\nimport { usePropOrDefault } from '@terrestris/react-util/dist/Hooks/usePropOrDefault/usePropOrDefault';\nimport { DigitizeUtil } from '@terrestris/react-util/dist/Util/DigitizeUtil';\nimport * as React from 'react';\nimport { useCallback, useState } from 'react';\nimport { CSS_PREFIX } from '../../constants';\nimport { FeatureLabelModal } from '../../FeatureLabelModal/FeatureLabelModal';\nimport ToggleButton from '../ToggleButton/ToggleButton';\n/**\n * The className added to this component.\n */\nconst defaultClassName = `${CSS_PREFIX}drawbutton`;\n/**\n * The DrawButton.\n */\nconst DrawButton = ({ className, digitizeLayer, drawInteractionConfig, drawStyle, drawType, maxLabelLineLength, modalPromptCancelButtonText = 'Cancel', modalPromptOkButtonText = 'Ok', modalPromptTitle = 'Label', onDrawEnd, onDrawStart, onModalLabelCancel, onModalLabelOk, pressed, ...passThroughProps }) => {\n    const map = useMap();\n    const layer = usePropOrDefault(digitizeLayer, () => map ? DigitizeUtil.getDigitizeLayer(map) : undefined, [map]);\n    /**\n     * Currently drawn feature which should be represented as label or post-it.\n     */\n    const [digitizeTextFeature, setDigitizeTextFeature] = useState(null);\n    const onDrawEndInternal = useCallback((evt) => {\n        if (drawType === 'Text') {\n            evt.feature.set('isLabel', true);\n            setDigitizeTextFeature(evt.feature);\n        }\n        onDrawEnd?.(evt);\n    }, [drawType, onDrawEnd]);\n    useDraw({\n        onDrawEnd: onDrawEndInternal,\n        digitizeLayer: layer,\n        drawInteractionConfig,\n        drawStyle,\n        drawType: drawType === 'Text' ? 'Point' : drawType,\n        onDrawStart,\n        active: !!pressed\n    });\n    const finalClassName = className\n        ? `${defaultClassName} ${className}`\n        : defaultClassName;\n    const btnWrapperClass = `${CSS_PREFIX}digitize-button-wrapper`;\n    let modal = null;\n    if (digitizeTextFeature) {\n        const onModalLabelOkInternal = () => {\n            onModalLabelOk?.(digitizeTextFeature);\n            setDigitizeTextFeature(null);\n        };\n        const onModalLabelCancelInternal = () => {\n            layer?.getSource()?.removeFeature(digitizeTextFeature);\n            setDigitizeTextFeature(null);\n            onModalLabelCancel?.();\n            digitizeLayer?.getSource()?.removeFeature(digitizeTextFeature);\n            setDigitizeTextFeature(null);\n        };\n        modal = (React.createElement(FeatureLabelModal, { feature: digitizeTextFeature, onOk: onModalLabelOkInternal, onCancel: onModalLabelCancelInternal, title: modalPromptTitle, okText: modalPromptOkButtonText, cancelText: modalPromptCancelButtonText, maxLabelLineLength: maxLabelLineLength }));\n    }\n    return (React.createElement(\"span\", { className: btnWrapperClass },\n        React.createElement(ToggleButton, { className: finalClassName, pressed: pressed, ...passThroughProps }),\n        modal));\n};\nexport default DrawButton;\n//# sourceMappingURL=DrawButton.js.map"],"names":["active","digitizeLayer","drawInteractionConfig","drawStyle","drawType","onDrawEnd","onDrawStart","map","useMap","layer","usePropOrDefault","DigitizeUtil","undefined","drawInteraction","useOlInteraction","geometryFunction","type","newInteraction","useOlListener","i","evt","defaultClassName","className","maxLabelLineLength","modalPromptCancelButtonText","modalPromptOkButtonText","modalPromptTitle","onModalLabelCancel","onModalLabelOk","pressed","passThroughProps","digitizeTextFeature","setDigitizeTextFeature","finalClassName","btnWrapperClass","modal","FeatureLabelModal","ToggleButton"],"mappings":"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"}