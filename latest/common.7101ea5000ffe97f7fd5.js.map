{"version":3,"file":"common.7101ea5000ffe97f7fd5.js","mappings":"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","sources":["webpack://@terrestris/shogun-gis-client/./src/hooks/useAppDispatch.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useAppSelector.ts","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.less?3a66","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/usePlugins.ts","webpack://@terrestris/shogun-gis-client/./src/components/BasicMapComponent/index.tsx","webpack://@terrestris/shogun-gis-client/./src/plugin/index.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useSHOGunAPIClient.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteWfsTransaction.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteWfsDescribeFeatureType.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useWriteWfsTransaction.ts","webpack://@terrestris/shogun-gis-client/./src/components/MapDrawer/index.less?074d","webpack://@terrestris/shogun-gis-client/./src/components/MapDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteGetFeature.ts","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureGeometryToolbar/index.less?cbd2","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureGeometryToolbar/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/DisplayField/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureForm/index.less?0b49","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureTabs/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/DeleteButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/ResetButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/SaveButton/index.less?fbda","webpack://@terrestris/shogun-gis-client/./src/components/FeedbackIcon/index.less?77c8","webpack://@terrestris/shogun-gis-client/./src/components/FeedbackIcon/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/SaveButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureToolbar/index.less?6e4b","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureToolbar/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureFullForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteWfsTransactionLock.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useGetFeatureInfo.ts","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureSwitch/index.less?2952","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureSwitch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/index.less?c362","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.less?bf45","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/BasicNominatimSearch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/MultiSearch/index.less?3fe9","webpack://@terrestris/shogun-gis-client/./src/utils/generateSolrQuery.ts","webpack://@terrestris/shogun-gis-client/./src/components/MultiSearch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/SearchField/index.less?bf24","webpack://@terrestris/shogun-gis-client/./src/components/SearchField/index.tsx","webpack://@terrestris/shogun-gis-client/./src/utils/getGravatarUrl.ts","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.less?5255","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useVersion.ts","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.less?f429","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.less?b06e","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerConfiguration/index.less?9f82","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerConfiguration/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerDetails/index.less?4108","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerDetails/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/index.less?b9d0","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.less?da3b","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.less?76ea","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Serializer/SHOGunMapFishPrintV3WMSSerializer.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Serializer/SHOGunMapFishPrintV3TiledWMSSerializer.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/CustomFieldInput/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/LayoutSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/OutputFormatSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/ResolutionSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/ScaleSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Shared/Shared.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.less?6377","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/index.less?723a","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/StylingComponent/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useHighlightVectorLayer.ts","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoForm/index.less?d0f3","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/PaginationToolbar/index.less?2293","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/PaginationToolbar/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoTabs/index.less?3c46","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoTabs/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?a4df","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.less?7905","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.less?47fb","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/LayerTreeContextMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.less?c926","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.less?beca","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.less?b016","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.less?e08e","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useRestoreTransientLayers.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useQueryParams.ts","webpack://@terrestris/shogun-gis-client/./src/App.less?984e","webpack://@terrestris/shogun-gis-client/./src/App.tsx","webpack://@terrestris/shogun-gis-client/./src/store/appInfo/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/description/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/legal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/logoPath/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/searchEngines/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/title/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/user/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/store.ts","webpack://@terrestris/shogun-gis-client/./src/index.less?df1e","webpack://@terrestris/shogun-gis-client/./src/bootstrap.tsx","webpack://@terrestris/shogun-gis-client/./src/context/PluginContext.tsx","webpack://@terrestris/shogun-gis-client/./src/context/SHOGunAPIClientContext.tsx","webpack://@terrestris/shogun-gis-client/./src/i18n/index.ts","webpack://@terrestris/shogun-gis-client/./src/i18n/translations.ts","webpack://@terrestris/shogun-gis-client/./src/index.tsx","webpack://@terrestris/shogun-gis-client/./src/store/addLayerModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/editFeature/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/editFeatureDrawerOpen/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/layerDetailsModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/print/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/selectedFeatures/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/toolMenu/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/uploadDataModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/App.less?ee38","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.less?6017","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.less?f940","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureForm/index.less?a2dd","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureGeometryToolbar/index.less?141f","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureSwitch/index.less?c38e","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureToolbar/index.less?512e","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/SaveButton/index.less?8e96","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/index.less?8ba3","webpack://@terrestris/shogun-gis-client/./src/components/FeedbackIcon/index.less?78b5","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.less?a2b7","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.less?b02d","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.less?bd2b","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerConfiguration/index.less?2da8","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerDetails/index.less?acf5","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/index.less?a101","webpack://@terrestris/shogun-gis-client/./src/components/MapDrawer/index.less?bfb2","webpack://@terrestris/shogun-gis-client/./src/components/MultiSearch/index.less?ea03","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.less?68c2","webpack://@terrestris/shogun-gis-client/./src/components/SearchField/index.less?8fd0","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/index.less?d252","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.less?6534","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoForm/index.less?6db1","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoTabs/index.less?fd2b","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?27cc","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/PaginationToolbar/index.less?8e8c","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.less?f3c5","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.less?d8e5","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.less?b29b","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.less?949c","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.less?cb8c","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.less?a168","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.less?25f0","webpack://@terrestris/shogun-gis-client/./src/index.less?2fc8"],"sourcesContent":["import {\n  useDispatch\n} from 'react-redux';\n\nimport type {\n  AppDispatch\n} from '../store/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport default useAppDispatch;\n","import {\n  TypedUseSelectorHook,\n  useSelector\n} from 'react-redux';\n\nimport type {\n  RootState\n} from '../store/store';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport default useAppSelector;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport {\n  Button,\n  Input,\n  Modal,\n  ModalProps,\n  notification,\n  Select,\n  Table\n} from 'antd';\n\nimport {\n  getUid\n} from 'ol';\nimport OlLayerGroup from 'ol/layer/Group';\nimport ImageLayer from 'ol/layer/Image';\nimport TileLayer from 'ol/layer/Tile';\nimport ImageWMSSource from 'ol/source/ImageWMS';\nimport TileWMSSource from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\nimport CapabilitiesUtil from '@terrestris/ol-util/dist/CapabilitiesUtil/CapabilitiesUtil';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport {\n  hide\n} from '../../store/addLayerModal';\n\nimport './index.less';\n\nexport type AddLayerModalProps = {} & Partial<ModalProps>;\n\nexport const AddLayerModal: React.FC<AddLayerModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState(false);\n  const [layers, setLayers] = useState<(ImageLayer<ImageWMSSource> | TileLayer<TileWMSSource>)[]>([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n  const [url, setUrl] = useState(\n    'https://sgx.geodatenzentrum.de/wms_topplus_open'\n  );\n  const [sanitizedUrl, setSanitizedUrl] = useState<string>();\n  const [version, setVersion] = useState<string>('1.3.0');\n\n  const isModalVisible = useAppSelector(state => state.addLayerModal.visible);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    if (!isModalVisible) {\n      return;\n    }\n    setSanitizedUrl(UrlUtil.createValidGetCapabilitiesRequest(url, 'WMS', version));\n  }, [version, isModalVisible, url]);\n\n  const getCapabilities = async () => {\n    if (!sanitizedUrl) {\n      return;\n    }\n    try {\n      setLoading(true);\n\n      const capabilities = await CapabilitiesUtil.getWmsCapabilities(sanitizedUrl);\n      const externalLayers = CapabilitiesUtil.getLayersFromWmsCapabilities(capabilities, 'Title');\n\n      setLayers(externalLayers);\n    } catch (error) {\n      notification.error({\n        message: t('AddLayerModal.errorMessage'),\n        description: t('AddLayerModal.errorDescription')\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const closeModal = () => {\n    setSelectedRowKeys([]);\n    setLayers([]);\n    dispatch(hide());\n  };\n\n  const onAddSelected = () => {\n    const layersToAdd = layers.filter(layer => selectedRowKeys.includes(getUid(layer)));\n    addLayers(layersToAdd);\n  };\n\n  const onAddAll = () => {\n    addLayers(layers);\n  };\n\n  const addLayers = (layersToAdd: (ImageLayer<ImageWMSSource> | TileLayer<TileWMSSource>)[]) => {\n    if (!map) {\n      return;\n    }\n\n    const targetFolderName = t('AddLayerModal.externalWmsFolder');\n    let targetGroup = MapUtil.getLayerByName(map, targetFolderName) as OlLayerGroup;\n\n    if (!targetGroup) {\n      targetGroup = new OlLayerGroup({\n        layers: []\n      });\n      targetGroup.set('name', targetFolderName);\n      const existingGroups = map.getLayerGroup().getLayers();\n      existingGroups.insertAt(existingGroups?.getLength() || 0, targetGroup);\n    }\n\n    layersToAdd.forEach(layerToAdd => {\n      if (!targetGroup.getLayers().getArray().includes(layerToAdd)) {\n        layerToAdd.set('isExternalLayer', true);\n\n        let layerUrl: string | undefined;\n        if (layerToAdd instanceof ImageLayer) {\n          layerUrl = layerToAdd.getSource()?.getUrl();\n        }\n\n        if (layerToAdd instanceof TileLayer) {\n          const urls = layerToAdd.getSource()?.getUrls();\n          layerUrl = urls?.length === 1 ? urls[0] : undefined;\n        }\n\n        const layerConfig = {\n          name: layerToAdd.get('name'),\n          type: layerToAdd instanceof TileLayer ? 'TILEWMS' : 'WMS',\n          opacity: layerToAdd.getOpacity(),\n          sourceConfig: {\n            layerNames: layerToAdd.getSource()?.getParams().LAYERS,\n            url: layerUrl,\n            useBearerToken: false\n          }\n        };\n        layerToAdd.set('layerConfig', layerConfig);\n        targetGroup.getLayers().push(layerToAdd);\n      }\n    });\n\n    closeModal();\n  };\n\n  return (\n    <Modal\n      className=\"add-layer-modal\"\n      title={t('AddLayerModal.title')}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={600}\n      footer={[\n        <Button\n          key=\"add-all\"\n          disabled={layers?.length < 1}\n          onClick={onAddAll}\n        >\n          {t('AddLayerModal.addAllLayers')}\n        </Button>,\n        <Button\n          key=\"add-selected\"\n          disabled={selectedRowKeys?.length < 1}\n          onClick={onAddSelected}\n        >\n          {t('AddLayerModal.addSelectedLayers')}\n        </Button>\n      ]}\n      {...restProps}\n    >\n      <Input.Search\n        placeholder={t('AddLayerModal.inputPlaceholder')}\n        value={url}\n        onChange={(event) => {\n          setUrl(event.target.value);\n        }}\n        onSearch={getCapabilities}\n        enterButton={true}\n        addonBefore={\n          <Select\n            defaultValue='1.3.0'\n            onChange={setVersion}\n            options={[\n              {\n                value: '1.3.0',\n                label: `${t('AddLayerModal.version')} 1.3.0`\n              },\n              {\n                value: '1.1.1',\n                label: `${t('AddLayerModal.version')} 1.1.1`\n              }\n            ]}\n          >\n          </Select>\n        }\n      />\n      <Table\n        loading={loading}\n        columns={[\n          {\n            title: t('AddLayerModal.columnTitle'),\n            render: (text: any, record: any) => {\n              return record.get('title');\n            }\n          }\n        ]}\n        rowKey={(record: any) => getUid(record)}\n        rowSelection={{\n          selectedRowKeys,\n          onChange: setSelectedRowKeys\n        }}\n        pagination={false}\n        dataSource={layers}\n      />\n    </Modal>\n  );\n};\n\nexport default AddLayerModal;\n","import { useContext } from 'react';\n\nimport PluginContext from '../context/PluginContext';\n\nimport { ClientPluginInternal } from '../plugin';\n\nexport const usePlugins = (): ClientPluginInternal[] => {\n  return useContext(PluginContext);\n};\n\nexport default usePlugins;\n","import React, {\n  useEffect\n} from 'react';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport { ObjectEvent as OlObjectEvent } from 'ol/Object';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport MapComponent, {\n  MapComponentProps\n} from '@terrestris/react-geo/dist/Map/MapComponent/MapComponent';\n\nimport usePlugins from '../../hooks/usePlugins';\n\nimport {\n  isMapIntegration\n} from '../../plugin';\n\nexport const BasicMapComponent: React.FC<Partial<MapComponentProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const plugins = usePlugins();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  /**\n   * Updates external layer group name when language changes.\n   */\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const targetGroups = MapUtil.getLayersByProperty(map, 'isExternalLayerGroup', true);\n    if (targetGroups?.length !== 1) {\n      return;\n    }\n    const targetGroup = targetGroups[0];\n    const oldName = targetGroups[0].get('name');\n    targetGroup.set('name', t('AddLayerModal.externalWmsFolder'));\n    const changeEvent = new OlObjectEvent('change:layers', 'name', oldName);\n    targetGroup.dispatchEvent(changeEvent);\n  }, [i18n.language, map, t]);\n\n  const pluginComponents: JSX.Element[] = [];\n\n  if (plugins) {\n    plugins.forEach(plugin => {\n      if (isMapIntegration(plugin.integration)) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        pluginComponents.push(\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  }\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <MapComponent\n      map={map}\n      {...restProps}\n    >\n      {\n        pluginComponents\n      }\n    </MapComponent>\n  );\n};\n\nexport default BasicMapComponent;\n","import type {\n  IconDefinition\n} from '@fortawesome/fontawesome-common-types';\n\nimport type {\n  Reducer\n} from '@reduxjs/toolkit';\n\nimport { CollapsePanelProps } from 'antd';\nimport type OlMap from 'ol/Map';\n\nimport type SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nexport type ClientPluginLocale = {\n  [locale: string]: {\n    translation: {\n      [key: string]: any;\n    };\n  };\n};\n\nexport type ClientPluginComponentProps = {\n  map?: OlMap;\n  client?: SHOGunAPIClient;\n};\n\nexport type ClientPluginIntegration = {\n  /**\n   * The main identifier of the integration point of the plugin.\n   */\n  placement: string;\n};\n\nexport type ClientPluginIntegrationToolMenu = ClientPluginIntegration &\n  Omit<CollapsePanelProps, 'key' | 'header'> & {\n  placement: 'tool-menu';\n  /**\n   * The label for the plugin in the tool menu.\n   */\n  label?: string;\n  /**\n   * The insertion index for the plugin in the tool menu, starting from 0 which is on top.\n   */\n  insertionIndex?: number;\n  /**\n   * The icon for the plugin in the tool menu.\n   */\n  icon?: IconDefinition;\n};\n\nexport type HeaderPlacementOrientation = 'left' | 'center' | 'right';\n\nexport type ClientPluginIntegrationHeader = ClientPluginIntegration & {\n  placement: 'header';\n  /**\n   * The placement orientation for the plugin in the header.\n   */\n  placementOrientation: HeaderPlacementOrientation;\n  /**\n   * The insertion index for the plugin in the header, starting from 0 which is on the left.\n   */\n  insertionIndex?: number;\n};\n\nexport type ClientPluginIntegrationFeatureInfo = ClientPluginIntegration & {\n  placement: 'feature-info';\n  /**\n   * The list of layer names the plugin component should be rendered for. If not\n   * specified, the component will be rendered for all layers.\n   */\n  layers?: string[];\n};\n\nexport type ClientPluginIntegrationMap = ClientPluginIntegration & {\n  placement: 'map';\n};\n\nexport type FooterPlacementOrientation = 'left' | 'right';\n\nexport type ClientPluginIntegrationFooter = ClientPluginIntegration & {\n  placement: 'footer';\n  /**\n  * The placement orientation for the plugin in the footer.\n  */\n  placementOrientation: FooterPlacementOrientation;\n  /**\n  * The insertion index for the plugin in the footer, starting from 0 which is on the left.\n  */\n  insertionIndex?: number;\n};\n\nexport type ClientPluginIntegrations = ClientPluginIntegrationToolMenu | ClientPluginIntegrationHeader |\n  ClientPluginIntegrationFeatureInfo | ClientPluginIntegrationMap | ClientPluginIntegrationFooter;\n\nexport type ClientPlugin = {\n  /**\n   * The key of the plugin, usually used for internal references (e.g. element class names) only.\n   */\n  key: string;\n  /**\n   * The definition of the integration point.\n   */\n  integration: ClientPluginIntegrations;\n  /**\n   * The actual component of the plugin.\n   */\n  component: React.FunctionComponent<ClientPluginComponentProps>;\n  /**\n   * The i18n definition to be used in the plugin.\n   */\n  i18n?: ClientPluginLocale;\n  /**\n   * A set of redux reducers to be used in the plugin.\n   */\n  reducers?: {\n    [key: string]: Reducer;\n  };\n};\n\nexport type ClientPluginInternal = ClientPlugin & {\n  wrappedComponent: React.FunctionComponent<ClientPluginComponentProps>;\n};\n\nexport function isToolMenuIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationToolMenu {\n  return pluginIntegration && pluginIntegration.placement === 'tool-menu';\n}\n\nexport function isHeaderIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationHeader {\n  return pluginIntegration && pluginIntegration.placement === 'header';\n}\n\nexport function isFeatureInfoIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationFeatureInfo {\n  return pluginIntegration && pluginIntegration.placement === 'feature-info';\n}\n\nexport function isMapIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationMap {\n  return pluginIntegration && pluginIntegration.placement === 'map';\n}\n\nexport function isFooterIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationFooter {\n  return pluginIntegration && pluginIntegration.placement === 'footer';\n}\n","import { useContext } from 'react';\n\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nimport SHOGunAPIClientContext from '../context/SHOGunAPIClientContext';\n\nexport const useSHOGunAPIClient = (): SHOGunAPIClient | null => {\n  return useContext(SHOGunAPIClientContext);\n};\n\nexport default useSHOGunAPIClient;\n","import {\n  useCallback\n} from 'react';\n\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type ExecuteWfsTransactionOpts = {\n  layer: WmsLayer;\n  transaction: Node;\n};\n\nexport const useExecuteWfsTransaction = () => {\n  const client = useSHOGunAPIClient();\n\n  const executeWfsTransaction = useCallback(async (opts: ExecuteWfsTransactionOpts) => {\n    let url;\n\n    const source = opts.layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = (source as OlSourceImageWMS).getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = (source as OlSourceTileWMS).getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const defaultHeaders = {\n      'Content-Type': 'application/xml'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: opts.layer?.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders,\n      body: new XMLSerializer().serializeToString(opts.transaction)\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response while executing a WFS-Transaction');\n    }\n\n    const responseText = await response.text();\n\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'text/xml');\n\n    // TODO Make detection more robust\n    const transactionStatusFailed = xmlDoc.getElementsByTagName('wfs:FAILED');\n\n    if (transactionStatusFailed.length > 0) {\n      throw new Error(`Something failed: ${responseText}`);\n    }\n\n    return responseText;\n  }, [client]);\n\n  return executeWfsTransaction;\n};\n\nexport default useExecuteWfsTransaction;\n","import {\n  useCallback\n} from 'react';\n\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type LocalGeometryType = 'MultiPoint' | 'Point' | 'MultiLineString' | 'LineString' | 'MultiPolygon' | 'Polygon';\nexport type GeometryType = 'gml:MultiPoint' | 'gml:Point' | 'gml:MultiLineString' | 'gml:LineString' | 'gml:MultiPolygon' | 'gml:Polygon';\n\nexport type Property = {\n  localType: 'int' | 'number' | 'string' | 'boolean' | 'date' | LocalGeometryType;\n  maxOccurs: 0 | 1;\n  minOccurs: 0 | 1;\n  name: string;\n  nillable: boolean;\n  type: 'xsd:int' | 'xsd:number' | 'xsd:string' | 'xsd:boolean' | 'xsd:date' | GeometryType;\n};\n\nexport type FeatureType = {\n  typeName: string;\n  properties: Property[];\n};\n\nexport type DescribeFeatureType = {\n  elementFormDefault: string;\n  featureTypes: FeatureType[];\n  targetNamespace: string;\n  targetPrefix: string;\n};\n\nexport const isGeometryType = (propertyType: string): propertyType is GeometryType => {\n  const geometryTypes = [\n    'gml:MultiPoint',\n    'gml:Point',\n    'gml:MultiLineString',\n    'gml:LineString',\n    'gml:MultiPolygon',\n    'gml:Polygon'\n  ];\n\n  return geometryTypes.includes(propertyType);\n};\n\nexport const useExecuteWfsDescribeFeatureType = () => {\n  const client = useSHOGunAPIClient();\n\n  const executeWfsDescribeFeatureType = useCallback(async (layer: WmsLayer) => {\n    let url;\n\n    const source = layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = (source as OlSourceImageWMS).getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = (source as OlSourceTileWMS).getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const params = {\n      SERVICE: 'WFS',\n      REQUEST: 'DescribeFeatureType',\n      VERSION: '2.0.0',\n      OUTPUTFORMAT: 'application/json',\n      TYPENAMES: layer.getSource()?.getParams().LAYERS\n    };\n\n    const defaultHeaders = {\n      'Content-Type': 'application/json'\n    };\n\n    const response = await fetch(`${url}?${UrlUtil.objectToRequestString(params)}`, {\n      method: 'GET',\n      headers: layer.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response while executing a WFS-Transaction');\n    }\n\n    return await response.json() as DescribeFeatureType;\n  }, [client]);\n\n  return executeWfsDescribeFeatureType;\n};\n\nexport default useExecuteWfsDescribeFeatureType;\n","import {\n  useCallback\n} from 'react';\n\nimport {\n  FormInstance\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport {\n  isMoment\n} from 'moment';\n\nimport {\n  isEmpty\n} from 'ol/extent';\nimport OlFeature from 'ol/Feature';\nimport OlFormatWFS, {\n  WriteTransactionOptions as OlWriteTransactionOptions\n} from 'ol/format/WFS';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useExecuteWfsDescribeFeatureType, {\n  isGeometryType\n} from './useExecuteWfsDescribeFeatureType';\n\nexport type WriteWfsTransactionOpts = {\n  layer: WmsLayer;\n  upsertFeatures?: OlFeature[];\n  deleteFeatures?: OlFeature[];\n  form?: FormInstance;\n};\n\nexport const useWriteWfsTransaction = () => {\n  const map = useMap();\n  const executeWfsDescribeFeatureType = useExecuteWfsDescribeFeatureType();\n\n  const cleanFormValues = (form: FormInstance) => {\n    const formValues = {...form.getFieldsValue()};\n\n    for (const [key, value] of Object.entries(formValues)) {\n      // Transform undefined to null values.\n      if (value === undefined) {\n        formValues[key] = null;\n      }\n\n      // Filter out read-only fields (which don't have any field instance associated).\n      if (!form.getFieldInstance(key)) {\n        delete formValues[key];\n      }\n\n      // Transform moments back to iso string.\n      if (isMoment(value)) {\n        formValues[key] = value.toISOString();\n      }\n    }\n\n    return formValues;\n  };\n\n  const writeWfsTransaction = useCallback(async (opts: WriteWfsTransactionOpts) => {\n    if (!map) {\n      return;\n    }\n\n    const inserts: OlFeature[] = [];\n    const updates: OlFeature[] = [];\n    const deletes: OlFeature[] = [];\n\n    const describeFeatureType = await executeWfsDescribeFeatureType(opts.layer);\n\n    if (!describeFeatureType) {\n      return;\n    }\n\n    const geomProperty = describeFeatureType.featureTypes[0]?.properties\n      ?.find(property => isGeometryType(property.type));\n\n    let overallUpdateMode = false;\n\n    if (opts.upsertFeatures) {\n      for (const feature of opts.upsertFeatures) {\n        const feat = new OlFeature();\n\n        const geometry = feature.getGeometry()?.clone();\n\n        if (geometry && !isEmpty(geometry.getExtent())) {\n          feat.set(geomProperty?.name || 'geom', geometry);\n          feat.setGeometryName(geomProperty?.name || 'geom');\n        }\n\n        if (opts.form) {\n          feat.setProperties(cleanFormValues(opts.form));\n        }\n\n        const updateMode = !!feature.getId();\n\n        if (updateMode && !overallUpdateMode) {\n          overallUpdateMode = true;\n        }\n\n        if (updateMode) {\n          feat.setId(feature.getId());\n        }\n\n        if (updateMode) {\n          updates.push(feat);\n        } else {\n          inserts.push(feat);\n        }\n      };\n    }\n\n    if (opts.deleteFeatures) {\n      deletes.push(...opts.deleteFeatures);\n    }\n\n    const transactionOpts: OlWriteTransactionOptions = {\n      featureNS: describeFeatureType.targetNamespace,\n      featurePrefix: describeFeatureType.targetPrefix,\n      featureType: opts.layer.getSource()?.getParams().LAYERS,\n      srsName: map.getView().getProjection().getCode(),\n      version: '1.1.0',\n      nativeElements: []\n    };\n\n    const format = new OlFormatWFS();\n\n    const transaction = format.writeTransaction(inserts, updates, deletes, transactionOpts);\n\n    if (overallUpdateMode && ClientConfiguration.wfsLockFeatureEnabled) {\n      const rootNode = transaction.getRootNode() as Element;\n      const lockId = document.createElementNS('http://www.opengis.net/wfs', 'LockId');\n      const lockIdValue = document.createTextNode('GeoServer');\n      lockId.appendChild(lockIdValue);\n      rootNode.appendChild(lockId);\n    }\n\n    return transaction;\n  }, [executeWfsDescribeFeatureType, map]);\n\n  return writeWfsTransaction;\n};\n\nexport default useWriteWfsTransaction;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport {\n  Drawer\n} from 'antd';\n\nimport type {\n  DrawerProps\n} from 'antd/es/drawer';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\nexport type MapDrawerProps = DrawerProps & {};\n\nexport const MapDrawer: React.FC<MapDrawerProps> = ({\n  open,\n  children,\n  ...passThroughProps\n}) => {\n\n  const map = useMap();\n\n  useEffect(() => {\n    document.querySelectorAll('#map')[0]?.classList.toggle('bisected', !!open);\n  }, [open]);\n\n  const onAfterDrawerOpenChange = () => {\n    map?.updateSize();\n  };\n\n  return (\n    <Drawer\n      className=\"map-drawer\"\n      mask={false}\n      open={open}\n      placement=\"right\"\n      width={getComputedStyle(document.documentElement).getPropertyValue('--editDrawerWidth')}\n      afterOpenChange={onAfterDrawerOpenChange}\n      {...passThroughProps}\n    >\n      {children}\n    </Drawer>\n  );\n};\n\nexport default MapDrawer;\n","import {\n  useCallback\n} from 'react';\n\nimport {\n  FeatureCollection\n} from 'geojson';\n\nimport OlFormatFilter from 'ol/format/filter/Filter';\nimport OlFormatWFS from 'ol/format/WFS';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useExecuteWfsDescribeFeatureType from './useExecuteWfsDescribeFeatureType';\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type GetFeatureOpts = {\n  layer: WmsLayer;\n  filter?: OlFormatFilter;\n};\n\nexport const useExecuteGetFeature = () => {\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const executeWfsDescribeFeatureType = useExecuteWfsDescribeFeatureType();\n\n  const executeGetFeature = useCallback(async (opts: GetFeatureOpts) => {\n    if (!map) {\n      return;\n    }\n\n    const describeFeatureType = await executeWfsDescribeFeatureType(opts.layer);\n\n    if (!describeFeatureType) {\n      return;\n    }\n\n    let url;\n\n    const source = opts.layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = (source as OlSourceImageWMS).getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = (source as OlSourceTileWMS).getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const featureRequest = new OlFormatWFS().writeGetFeature({\n      srsName: map.getView().getProjection().getCode(),\n      featureNS: describeFeatureType.targetNamespace,\n      featurePrefix: describeFeatureType.targetPrefix,\n      featureTypes: [source?.getParams().LAYERS],\n      outputFormat: 'application/json',\n      filter: opts.filter\n    });\n\n    const defaultHeaders = {\n      'Content-Type': 'application/json'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: opts.layer?.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders,\n      body: new XMLSerializer().serializeToString(featureRequest)\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response');\n    }\n\n    return await response.json() as FeatureCollection;\n  }, [client, executeWfsDescribeFeatureType, map]);\n\n  return executeGetFeature;\n};\n\nexport default useExecuteGetFeature;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\n\nimport {\n  faPencil,\n  faTrash,\n  faDrawPolygon,\n  faUndo\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport { TooltipPlacement } from 'antd/es/tooltip';\nimport {\n  FeatureCollection,\n  Feature\n} from 'geojson';\nimport { t } from 'i18next';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport { isEmpty as isEmptyOlExtent } from 'ol/extent';\nimport OlFormatGeoJson from 'ol/format/GeoJSON';\nimport OlGeometry from 'ol/geom/Geometry';\nimport { DrawEvent as OlDrawEvent } from 'ol/interaction/Draw';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport DeleteButton from '@terrestris/react-geo/dist/Button/DeleteButton/DeleteButton';\nimport DrawButton from '@terrestris/react-geo/dist/Button/DrawButton/DrawButton';\nimport ModifyButton from '@terrestris/react-geo/dist/Button/ModifyButton/ModifyButton';\nimport SimpleButton from '@terrestris/react-geo/dist/Button/SimpleButton/SimpleButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport Toolbar, { ToolbarProps } from '@terrestris/react-geo/dist/Toolbar/Toolbar';\n\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport './index.less';\nimport useAppSelector from '../../../hooks/useAppSelector';\n\nexport type EditFeatureGeometryToolbarProps = ToolbarProps & {\n  feature: Feature;\n  historyLength?: number;\n};\n\ntype DrawType = 'Point' | 'LineString' | 'Polygon';\n\ntype EditHistory = {\n  past: FeatureCollection[];\n  future: FeatureCollection[];\n};\nexport const EditFeatureGeometryToolbar: React.FC<EditFeatureGeometryToolbarProps> = ({\n  feature,\n  historyLength = 10\n}) => {\n\n  const editHistory = useRef<EditHistory>({\n    past: [],\n    future: []\n  });\n\n  const map = useMap();\n\n  const [editLayer, setEditLayer] = useState<OlLayerVector<OlSourceVector<OlGeometry>>>();\n  const [, setRevision] = useState<number>(0);\n\n  const gjFormat = useMemo(() => new OlFormatGeoJson(), []);\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    if (!editLayer) {\n      setEditLayer(DigitizeUtil.getDigitizeLayer(map));\n    }\n\n    return () => {\n      if (editLayer) {\n        map?.removeLayer(editLayer);\n      }\n    };\n  }, [editLayer, map]);\n\n  useEffect(() => {\n    if (editLayer && feature?.id) {\n      editLayer.getSource()?.clear();\n      const olFeat = gjFormat.readFeature(feature);\n      const source = editLayer.getSource() as OlSourceVector;\n      source.addFeature(olFeat);\n      setRevision(r => r + 1);\n\n      if (!isEmptyOlExtent(source.getExtent())) {\n        map?.getView().fit(source.getExtent(), {\n          padding: [50, 50, 50, 50]\n        });\n      }\n    }\n  }, [feature, editLayer, gjFormat, map]);\n\n  const undoEdit = () => {\n\n    const editSource = editLayer?.getSource();\n    const features = editSource?.getFeatures();\n\n    if (!features) {\n      return;\n    }\n\n    const clone: FeatureCollection = gjFormat.writeFeaturesObject(features);\n    const previousSource = editHistory.current.past[editHistory.current.past.length - 1];\n    if (!_isEmpty(previousSource)) {\n      editSource?.clear();\n      editSource?.addFeatures(gjFormat.readFeatures(previousSource));\n      editHistory.current = {\n        past: editHistory.current.past.slice(0, -1),\n        future: [...editHistory.current.future, clone].slice(-historyLength)\n      };\n      setRevision(r => r + 1);\n    }\n  };\n\n  const redoEdit = () => {\n\n    const editSource = editLayer?.getSource();\n    const features = editSource?.getFeatures();\n\n    if (!features) {\n      return;\n    }\n\n    const clone = gjFormat.writeFeaturesObject(features);\n    const nextSource = editHistory.current.future[editHistory.current.future.length - 1];\n    if (!_isEmpty(nextSource)) {\n      editSource?.clear();\n      editSource?.addFeatures(gjFormat.readFeatures(nextSource));\n\n      editHistory.current = {\n        future: editHistory.current.future.slice(0, -1),\n        past: [...editHistory.current.past, clone].slice(-historyLength)\n      };\n      setRevision(r => r + 1);\n    }\n  };\n\n  const onDrawEnd = (e: OlDrawEvent) => {\n    updateRevision();\n    if (!feature.geometry.type.toLocaleLowerCase().startsWith('multi')) {\n      // replace the existing geometry by the new one\n      editLayer?.getSource()?.clear();\n    }\n  };\n\n  const updateRevision = () => {\n\n    const features = editLayer?.getSource()?.getFeatures();\n\n    if (!features) {\n      return;\n    }\n\n    const clone: FeatureCollection = gjFormat.writeFeaturesObject(features);\n    editHistory.current = {\n      ...editHistory.current,\n      past: [...editHistory.current.past, clone].slice(-10)\n    };\n    setRevision(r => r + 1);\n  };\n\n  const btnTooltipProps = {\n    tooltipPlacement: 'left' as TooltipPlacement,\n    tooltipProps: {\n      mouseEnterDelay: 0.5\n    }\n  };\n\n  if (!editLayer) {\n    return <></>;\n  }\n\n  return (\n    <Toolbar\n      className=\"geometry-edit-tb\"\n      alignment=\"vertical\"\n    >\n      <ToggleGroup>\n        {\n          allowedEditMode.includes('CREATE') ?\n            <DrawButton\n              icon={\n                <FontAwesomeIcon icon={faPencil} />\n              }\n              pressedIcon={\n                <FontAwesomeIcon icon={faPencil} />\n              }\n              name=\"draw\"\n              digitizeLayer={editLayer}\n              tooltip={t('EditFeatureGeometryToolbar.draw')}\n              drawType={feature.geometry.type as DrawType}\n              onDrawEnd={onDrawEnd}\n              {...btnTooltipProps}\n            />\n            : <></>\n        }\n        {\n          allowedEditMode.includes('UPDATE') ?\n            <ModifyButton\n              icon={\n                <FontAwesomeIcon icon={faDrawPolygon} />\n              }\n              pressedIcon={\n                <FontAwesomeIcon icon={faDrawPolygon} />\n              }\n              name=\"edit\"\n              digitizeLayer={editLayer}\n              tooltip={t('EditFeatureGeometryToolbar.edit')}\n              onModifyStart={updateRevision}\n              onModifyEnd={updateRevision}\n              onTranslateEnd={updateRevision}\n              {...btnTooltipProps}\n            />\n            : <></>\n        }\n        {\n          allowedEditMode.includes('DELETE') ?\n            <DeleteButton\n              icon={\n                <FontAwesomeIcon icon={faTrash} />\n              }\n              pressedIcon={\n                <FontAwesomeIcon icon={faTrash} />\n              }\n              name=\"delete\"\n              digitizeLayer={editLayer}\n              tooltip={t('EditFeatureGeometryToolbar.delete')}\n              onFeatureRemove={updateRevision}\n              {...btnTooltipProps}\n            />\n            : <></>\n        }\n      </ToggleGroup>\n      <SimpleButton\n        icon={\n          <FontAwesomeIcon icon={faUndo} />\n        }\n        tooltip={t('EditFeatureGeometryToolbar.undo')}\n        onClick={undoEdit}\n        disabled={editHistory.current.past?.length === 0}\n        {...btnTooltipProps}\n      />\n      <SimpleButton\n        icon={\n          <FontAwesomeIcon\n            icon={faUndo}\n            flip=\"horizontal\"\n          />\n        }\n        tooltip={t('EditFeatureGeometryToolbar.redo')}\n        onClick={redoEdit}\n        disabled={editHistory.current.future?.length === 0}\n        {...btnTooltipProps}\n      />\n    </Toolbar>\n\n  );\n};\n\nexport default EditFeatureGeometryToolbar;\n","import React from 'react';\n\nimport {\n  Typography\n} from 'antd';\n\nimport {\n  isMoment\n} from 'moment';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nexport type ValueType = string | number | boolean | moment.Moment;\n\nexport type DisplayFieldProps = {\n  format?: string;\n  suffix?: string;\n  value?: ValueType | ValueType[];\n};\n\nexport const DisplayField: React.FC<DisplayFieldProps> = ({\n  format = 'DD.MM.YYYY',\n  suffix,\n  value,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const {\n    t\n  } = useTranslation();\n\n  let displayText: string = '';\n\n  if (typeof value === 'string') {\n    displayText = value;\n  }\n\n  if (typeof value === 'boolean') {\n    displayText = value ? t('DisplayField.yesText') : t('DisplayField.noText');\n  }\n\n  if (Number.isFinite(value)) {\n    displayText = new Intl.NumberFormat().format(Number(value));\n  }\n\n  if (isMoment(value)) {\n    displayText = value.format(format);\n  }\n\n  if (Array.isArray(value)) {\n    displayText = value.join(', ');\n  }\n\n  return (\n    <Typography.Text\n      className=\"displayfield\"\n      {...passThroughProps}\n    >\n      {displayText}{displayText && suffix ? ` ${suffix}` : ''}\n    </Typography.Text>\n  );\n};\n\nexport default DisplayField;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  Input,\n  InputNumber,\n  DatePicker,\n  Select,\n  Switch,\n  Checkbox,\n  Form,\n  FormItemProps\n} from 'antd';\n\nimport {\n  FormInstance,\n  FormProps\n} from 'antd/lib/form/Form';\n\nimport _debounce from 'lodash/debounce';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport {\n  PropertyFormItemEditConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport {\n  setFormDirty\n} from '../../../store/editFeature';\nimport DisplayField from '../../DisplayField';\n\nimport './index.less';\n\nexport type EditFeatureFormProps = FormProps & {\n  formConfig?: PropertyFormItemEditConfig[];\n  form: FormInstance;\n};\n\nexport const EditFeatureForm: React.FC<EditFeatureFormProps> = ({\n  formConfig,\n  form,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const dispatch = useAppDispatch();\n\n  const formDirty = useAppSelector(\n    state => state.editFeature.formDirty\n  );\n\n  const createFormItem = (fieldCfg: PropertyFormItemEditConfig): React.ReactNode => {\n    let field: React.ReactNode;\n    if (fieldCfg.readOnly) {\n      field = createReadOnlyComponent(fieldCfg);\n    } else if (fieldCfg.component) {\n      field = createFieldComponent(fieldCfg);\n    } else {\n      Logger.warn('FieldConfig is missing `readOnly`, `component` or `dataType` property.');\n      field = (\n        <Input\n          key={fieldCfg.propertyName}\n          placeholder=\"\"\n        />\n      );\n    }\n\n    const formItemProps: FormItemProps = {\n      rules: []\n    };\n\n    formItemProps.rules = [{\n      required: fieldCfg.required\n    }];\n\n    if ((fieldCfg.component === 'SWITCH' || fieldCfg.component === 'CHECKBOX') && !fieldCfg.readOnly) {\n      formItemProps.valuePropName = 'checked';\n    }\n\n    if (fieldCfg.component === 'UPLOAD' && !fieldCfg.readOnly) {\n      formItemProps.valuePropName = 'fileList';\n    }\n\n    return (\n      <Form.Item\n        key={fieldCfg.propertyName}\n        name={fieldCfg.propertyName}\n        label={fieldCfg.displayName || fieldCfg.propertyName}\n        {...formItemProps}\n        {...fieldCfg.fieldProps}\n      >\n        {field}\n      </Form.Item>\n    );\n  };\n\n  const createReadOnlyComponent = (fieldConfig: PropertyFormItemEditConfig): React.ReactNode => {\n    return (\n      <DisplayField\n        {...fieldConfig.fieldProps}\n      />\n    );\n  };\n\n  const createFieldComponent = (fieldCfg: PropertyFormItemEditConfig): React.ReactNode => {\n    switch (fieldCfg.component) {\n      case 'CHECKBOX':\n        return (\n          <Checkbox\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'DATE':\n        return (\n          <DatePicker\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'DISPLAY':\n        return (\n          <span {...fieldCfg?.fieldProps} />\n        );\n      case 'INPUT':\n        return (\n          <Input\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'NUMBER':\n        return (\n          <InputNumber\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'SELECT':\n        return (\n          <Select\n            allowClear={true}\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'SWITCH':\n        return (\n          <Switch\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'TEXTAREA':\n        return (\n          <Input.TextArea\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      // TODO Before we allow uploading we should check all side effects.\n      // case 'UPLOAD':\n      //   return (\n      //     <Upload\n      //       {...fieldCfg?.fieldProps}\n      //     >\n      //       <Button>Upload</Button>\n      //     </Upload>\n      //   );\n      default:\n        Logger.error(`Component type \"${fieldCfg?.component}\" is not supported`);\n        return <></>;\n    }\n  };\n\n  const onValuesChange = async (changedValues: any) => {\n    if (changedValues && !formDirty) {\n      dispatch(setFormDirty(true));\n    }\n  };\n\n  return (\n    <Form\n      className=\"edit-feature-form\"\n      form={form}\n      labelCol={{\n        span: 8\n      }}\n      labelAlign=\"left\"\n      labelWrap\n      onValuesChange={_debounce(onValuesChange, 250)}\n      {...passThroughProps}\n    >\n      { formConfig?.map(createFormItem) }\n    </Form>\n  );\n};\n\nexport default EditFeatureForm;\n","import React from 'react';\n\nimport {\n  Tabs,\n  TabsProps\n} from 'antd';\n\nimport {\n  FormInstance\n} from 'antd/lib/form/Form';\n\nimport {\n  Tab\n} from 'rc-tabs/lib/interface';\n\nimport {\n  PropertyFormItemEditConfig,\n  PropertyFormTabConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport EditFeatureForm from '../EditFeatureForm';\n\nexport type EditFeatureTabsProps = TabsProps & {\n  tabConfig?: PropertyFormTabConfig<PropertyFormItemEditConfig>[];\n  form: FormInstance;\n  initialValues?: Record<string, any>;\n};\n\nexport const EditFeatureTabs: React.FC<EditFeatureTabsProps> = ({\n  tabConfig,\n  form,\n  initialValues,\n  ...passThroughProps\n}) => {\n\n  const items = tabConfig?.map((config, idx) => {\n    return {\n      label: config.title,\n      key: `${idx}`,\n      forceRender: true,\n      children: (\n        <EditFeatureForm\n          name={config.title}\n          form={form}\n          initialValues={initialValues}\n          formConfig={config.children}\n        />\n      )\n    } as Tab;\n  });\n\n  return (\n    <Tabs\n      items={items}\n      {...passThroughProps}\n    />\n  );\n};\n\nexport default EditFeatureTabs;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faTrash\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  ButtonProps,\n  Popconfirm\n} from 'antd';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useExecuteWfsTransaction from '../../../hooks/useExecuteWfsTransaction';\nimport useWriteWfsTransaction from '../../../hooks/useWriteWfsTransaction';\n\nexport type DeleteButtonProps = ButtonProps & {\n  feature: Feature;\n  layer: WmsLayer;\n  onError?: (error: unknown) => void;\n  onSuccess?: () => void;\n};\n\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n  feature,\n  layer,\n  onError = () => {},\n  onSuccess = () => {},\n  ...passThroughProps\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const writeWfsTransaction = useWriteWfsTransaction();\n  const executeWfsTransaction = useExecuteWfsTransaction();\n\n  const onConfirmDelete = async () => {\n    if (!map) {\n      return;\n    }\n\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const olFeature = new OlFormatGeoJSON().readFeature(feature);\n\n      const transaction = await writeWfsTransaction({\n        deleteFeatures: [olFeature],\n        layer: layer\n      });\n\n      if (!transaction) {\n        return;\n      }\n\n      await executeWfsTransaction({\n        layer: layer,\n        transaction: transaction\n      });\n\n      layer.getSource()?.refresh();\n\n      onSuccess();\n    } catch (error) {\n      Logger.error(error);\n\n      onError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Popconfirm\n      title={t('DeleteButton.confirm')}\n      onConfirm={onConfirmDelete}\n      placement='bottomRight'\n    >\n      <Button\n        type='primary'\n        loading={loading}\n        disabled={!feature.id}\n        danger\n        icon={(\n          <FontAwesomeIcon\n            icon={faTrash}\n          />\n        )}\n        {...passThroughProps}\n      >\n        {\n          t('DeleteButton.title')\n        }\n      </Button>\n    </Popconfirm>\n  );\n};\n\nexport default DeleteButton;\n","import React from 'react';\n\nimport {\n  faRotateLeft\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  ButtonProps\n} from 'antd';\n\nimport {\n  FormInstance\n} from 'antd/lib/form/Form';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport OlFormatGeoJson from 'ol/format/GeoJSON';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport { DigitizeUtil } from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport {\n  setFormDirty\n} from '../../../store/editFeature';\n\nexport type ResetButtonProps = Omit<ButtonProps, 'form'> & {\n  feature: Feature;\n  form: FormInstance;\n};\n\nexport const ResetButton: React.FC<ResetButtonProps> = ({\n  feature,\n  form,\n  ...passThroughProps\n}) => {\n\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const dispatch = useAppDispatch();\n\n  const onClick = () => {\n    form.resetFields();\n    dispatch(setFormDirty(false));\n\n    if (map) {\n      const editLayer = DigitizeUtil.getDigitizeLayer(map);\n      if (editLayer) {\n        editLayer.getSource()?.clear();\n        const format = new OlFormatGeoJson();\n        const olFeat = format.readFeature(feature);\n        editLayer.getSource()?.addFeature(olFeat);\n      }\n    }\n  };\n\n  return (\n    <Button\n      type='primary'\n      onClick={onClick}\n      icon={(\n        <FontAwesomeIcon\n          icon={faRotateLeft}\n        />\n      )}\n      {...passThroughProps}\n    >\n      {\n        t('ResetButton.title')\n      }\n    </Button>\n  );\n};\n\nexport default ResetButton;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport './index.less';\n\nexport type FeedbackIconProps = {\n  loadComplete: boolean;\n};\n\nexport const FeedbackIcon: React.FC<FeedbackIconProps> = ({\n  loadComplete = false\n}) => {\n\n  return (\n    <div className={loadComplete ? 'feedback-icon' : 'feedback-icon hidden'}>\n      <div className={loadComplete ? 'checkmark' : 'checkmark-hidden'} />\n    </div>\n  );\n};\n\nexport default FeedbackIcon;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faFloppyDisk\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  ButtonProps\n} from 'antd';\n\nimport {\n  FormInstance\n} from 'antd/lib/form/Form';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useExecuteWfsTransaction from '../../../hooks/useExecuteWfsTransaction';\nimport useWriteWfsTransaction from '../../../hooks/useWriteWfsTransaction';\nimport {\n  setFormDirty\n} from '../../../store/editFeature';\n\nimport './index.less';\nimport FeedbackIcon from '../../FeedbackIcon';\n\nexport type SaveButtonProps = Omit<ButtonProps, 'form'> & {\n  form: FormInstance;\n  layer: WmsLayer;\n  onError?: (error: unknown) => void;\n  onSuccess?: (response?: string) => void;\n};\n\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n  form,\n  layer,\n  onError = () => {},\n  onSuccess = () => {},\n  ...passThroughProps\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [saveCompleted, setSaveCompleted] = useState(false);\n\n  const map = useMap();\n\n  const writeWfsTransaction = useWriteWfsTransaction();\n  const executeWfsTransaction = useExecuteWfsTransaction();\n\n  const dispatch = useAppDispatch();\n\n  const formDirty = useAppSelector(\n    state => state.editFeature.formDirty\n  );\n\n  const {\n    t\n  } = useTranslation();\n\n  const onClick = async () => {\n    if (!map) {\n      return;\n    }\n\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    const editLayer = DigitizeUtil.getDigitizeLayer(map);\n\n    if (!editLayer) {\n      Logger.error('Cannot find the digitize layer');\n      return;\n    }\n\n    const features = editLayer.getSource()?.getFeatures();\n\n    if (!features || features.length === 0) {\n      Logger.error('Cannot save feature without geometry');\n      return;\n    };\n\n    try {\n      await form.validateFields();\n    } catch (error) {\n      Logger.warn('Validation has failed: ', error);\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const transaction = await writeWfsTransaction({\n        upsertFeatures: features,\n        form: form,\n        layer: layer\n      });\n\n      if (!transaction) {\n        return;\n      }\n\n      const result = await executeWfsTransaction({\n        layer: layer,\n        transaction: transaction\n      });\n\n      layer.getSource()?.refresh();\n\n      setSaveCompleted(true);\n      setTimeout(() => {\n        setSaveCompleted(false);\n      }, 3000);\n\n      onSuccess(result);\n    } catch (error) {\n      Logger.error(error);\n\n      onError(error);\n    } finally {\n      setLoading(false);\n      dispatch(setFormDirty(false));\n    }\n  };\n\n  return (\n    <Button\n      className='save-button'\n      type='primary'\n      onClick={onClick}\n      loading={loading}\n      disabled={!formDirty}\n      icon={(\n        <FontAwesomeIcon\n          icon={faFloppyDisk}\n        />\n      )}\n      {...passThroughProps}\n    >\n      {\n        t('SaveButton.title')\n      }\n      <FeedbackIcon loadComplete={saveCompleted} />\n    </Button>\n  );\n};\n\nexport default SaveButton;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  FormInstance\n} from 'antd';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppSelector from '../../../hooks/useAppSelector';\n\nimport DeleteButton from '../DeleteButton';\nimport ResetButton from '../ResetButton';\nimport SaveButton from '../SaveButton';\n\nimport './index.less';\n\nexport type EditFeatureToolbarProps = {\n  feature: Feature;\n  layer: WmsLayer;\n  form: FormInstance;\n  onSaveSuccess?: (responseText?: string) => void;\n  onSaveError?: (error: unknown) => void;\n  onDeleteSuccess?: () => void;\n  onDeleteError?: (error: unknown) => void;\n};\n\nexport const EditFeatureToolbar: React.FC<EditFeatureToolbarProps> = ({\n  feature,\n  layer,\n  form,\n  onSaveSuccess = () => {},\n  onSaveError = () => {},\n  onDeleteSuccess = () => {},\n  onDeleteError = () => {}\n}) => {\n  const allowedEditMode = useAppSelector(state => state.editFeature.userEditMode);\n\n  return (\n    <div\n      className='edit-feature-toolbar'\n    >\n      {\n        allowedEditMode.includes('CREATE') ||\n        allowedEditMode.includes('UPDATE') ?\n          <>\n            <ResetButton\n              feature={feature}\n              form={form}\n            />\n            <SaveButton\n              form={form}\n              layer={layer}\n              onSuccess={onSaveSuccess}\n              onError={onSaveError}\n            />\n          </>: <></>\n      }\n      {\n        allowedEditMode.includes('DELETE') &&\n        <DeleteButton\n          feature={feature}\n          layer={layer}\n          onSuccess={onDeleteSuccess}\n          onError={onDeleteError}\n        />\n      }\n    </div>\n  );\n};\n\nexport default EditFeatureToolbar;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Alert\n} from 'antd';\nimport {\n  useForm\n} from 'antd/lib/form/Form';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport moment from 'moment';\n\nimport {\n  equalTo\n} from 'ol/format/filter';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  PropertyFormItemEditConfig,\n  PropertyFormTabConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useExecuteGetFeature from '../../../hooks/useExecuteGetFeature';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport {\n  setFeature\n} from '../../../store/editFeature';\n\nimport EditFeatureGeometryToolbar from '../EditFeatureGeometryToolbar';\nimport EditFeatureTabs from '../EditFeatureTabs';\nimport EditFeatureToolbar from '../EditFeatureToolbar';\n\nexport type EditFeatureFullFormProps = {\n  feature: Feature;\n  layer: WmsLayer;\n};\n\nexport const EditFeatureFullForm: React.FC<EditFeatureFullFormProps> = ({\n  feature,\n  layer\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const executeGetFeature = useExecuteGetFeature();\n\n  const [tabConfig, setTabConfig] = useState<PropertyFormTabConfig<PropertyFormItemEditConfig>[]>();\n  const [initialValues, setInitialValues] = useState<Record<string, any>>();\n  const [errorMsg, setErrorMsg] = useState<string>();\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  const [form] = useForm();\n  const map = useMap();\n  const dispatch = useAppDispatch();\n  const client = useSHOGunAPIClient();\n\n  const reloadFeature = useCallback(async (id: string) => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    const updatedFeatures = await executeGetFeature({\n      layer: layer,\n      filter: equalTo('id', id)\n    });\n\n    if (\n      updatedFeatures?.features[0]\n    ) {\n      dispatch(setFeature(updatedFeatures?.features[0]));\n    }\n  }, [dispatch, executeGetFeature, layer]);\n\n  const update = useCallback(async () => {\n    if (!map || !client) {\n      return;\n    }\n\n    let editFormConfig = layer.get('editFormConfig') as PropertyFormTabConfig<PropertyFormItemEditConfig>[];\n\n    if (editFormConfig?.length === 0) {\n      Logger.warn(`Layer ${layer.get('name')} has no 'editFormConfig' set`);\n      return;\n    }\n\n    const properties = cloneDeep(feature?.properties) || {};\n\n    Object.entries(properties).forEach(([key, value]) => {\n      const tabConfigs = editFormConfig?.filter(tabCfg => {\n        return tabCfg.children?.find(formCfg => formCfg.propertyName === key);\n      });\n\n      if (tabConfigs.length > 1) {\n        Logger.warn(`Property ${key} is configured in multiple tabs. Is this intended?`);\n      }\n\n      if (tabConfigs && tabConfigs[0]) {\n        const isDate = tabConfigs[0].children?.find(cfg => {\n          return cfg.propertyName === key && cfg.component === 'DATE';\n        });\n\n        if (isDate) {\n          properties[key] = moment(value);\n        }\n\n        const isUpload = tabConfigs[0].children?.find(cfg => {\n          return cfg.propertyName === key && cfg.component === 'UPLOAD';\n        });\n\n        if (isUpload) {\n          properties[key] = [{\n            name: value,\n            status: 'done'\n          }];\n        }\n      }\n    });\n\n    form.resetFields();\n    form.setFieldsValue(properties);\n\n    setTabConfig(editFormConfig);\n    setInitialValues(properties);\n  }, [map, client, layer, feature?.properties, form]);\n\n  useEffect(() => {\n    update();\n  }, [update]);\n\n  const onSaveSuccess = (responseText?: string) => {\n    if (!responseText) {\n      return;\n    }\n    setErrorMsg(undefined);\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'text/xml');\n\n    // get feature id from response\n    const featureId = xmlDoc.getElementsByTagName('ogc:FeatureId');\n    const idString = featureId.item(0)?.getAttribute('fid');\n    const id = idString?.split('.')[1];\n    if (id) {\n      reloadFeature(id);\n    }\n  };\n\n  const onSaveError = () => {\n    setErrorMsg(t('EditFeatureFullForm.saveErrorMsg'));\n  };\n\n  const onDeleteSuccess = () => {\n    setErrorMsg(undefined);\n    dispatch(setFeature(null));\n  };\n\n  const onDeleteError = () => {\n    setErrorMsg(t('EditFeatureFullForm.deleteErrorMsg'));\n  };\n\n  return (\n    <>\n      <EditFeatureGeometryToolbar\n        feature={feature}\n      />\n      {\n        errorMsg && (\n          <Alert\n            className=\"error-alert\"\n            message={errorMsg}\n            type=\"error\"\n            showIcon\n          />\n        )\n      }\n      <EditFeatureToolbar\n        feature={feature}\n        layer={layer}\n        form={form}\n        onSaveSuccess={onSaveSuccess}\n        onSaveError={onSaveError}\n        onDeleteSuccess={onDeleteSuccess}\n        onDeleteError={onDeleteError}\n      />\n      <EditFeatureTabs\n        tabConfig={tabConfig}\n        initialValues={initialValues}\n        form={form}\n      />\n    </>\n  );\n};\n\nexport default EditFeatureFullForm;\n","import {\n  useCallback\n} from 'react';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type ExecuteWfsLockOpts = {\n  layer: WmsLayer;\n  feature: Feature;\n};\n\nexport const useExecuteWfsLockFeature = () => {\n  const client = useSHOGunAPIClient();\n\n  const writeWfsLockFeature = (opts: ExecuteWfsLockOpts) => {\n    const featureId = opts.feature.id;\n    const featureProperties = opts.feature.properties;\n\n    if (!featureId || !featureProperties) {\n      Logger.warn('Either the id of the feature or its properties (or even both) aren\\'t available');\n      return;\n    }\n\n    let id: number;\n    if (typeof featureId === 'number') {\n      id = featureId;\n    } else {\n      id = parseInt(featureId.split('.')[1], 10);\n    }\n\n    const match = Object.entries(featureProperties).find(([, value]) => (value === id || value === id.toString()));\n\n    if (!match) {\n      Logger.warn('Count not detect the id property');\n      return;\n    }\n\n    const idProperty = match[0];\n\n    const typeName = opts.layer.getSource()?.getParams().LAYERS;\n\n    const lockFeatureDoc = document.createElementNS('http://www.opengis.net/wfs/2.0', 'LockFeature');\n\n    lockFeatureDoc.setAttribute('service', 'WFS');\n    lockFeatureDoc.setAttribute('version', '2.0.0');\n    // Expiry in seconds.\n    lockFeatureDoc.setAttribute('expiry', '300');\n    lockFeatureDoc.setAttribute('lockAction', 'SOME');\n\n    const queryElement = document.createElementNS('http://www.opengis.net/wfs/2.0', 'Query');\n    queryElement.setAttribute('typeNames', typeName);\n\n    const filterElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'Filter');\n    const isEqualToElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'PropertyIsEqualTo');\n\n    const valueReferenceElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'ValueReference');\n    const valueReferenceValue = document.createTextNode(idProperty);\n    valueReferenceElement.appendChild(valueReferenceValue);\n\n    const literalElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'Literal');\n    const literalValue = document.createTextNode(id.toString());\n    literalElement.appendChild(literalValue);\n\n    isEqualToElement.appendChild(valueReferenceElement);\n    isEqualToElement.appendChild(literalElement);\n\n    filterElement.appendChild(isEqualToElement);\n\n    queryElement.appendChild(filterElement);\n\n    lockFeatureDoc.appendChild(queryElement);\n\n    return lockFeatureDoc;\n  };\n\n  const executeWfsLockFeature = useCallback(async (opts: ExecuteWfsLockOpts) => {\n    let url;\n\n    const source = opts.layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = (source as OlSourceImageWMS).getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = (source as OlSourceTileWMS).getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const lockFeatureDoc = writeWfsLockFeature({\n      layer: opts.layer,\n      feature: opts.feature\n    });\n\n    if (!lockFeatureDoc) {\n      return;\n    }\n\n    const defaultHeaders = {\n      'Content-Type': 'application/xml'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: opts.layer?.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders,\n      body: new XMLSerializer().serializeToString(lockFeatureDoc)\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response while executing a WFS-LockFeature');\n    }\n\n    const responseText = await response.text();\n\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'text/xml');\n\n    // TODO Make detection more robust\n    const transactionLockFailed = xmlDoc.getElementsByTagName('wfs:FeaturesNotLocked');\n\n    if (transactionLockFailed.length > 0) {\n      throw new Error(`Error while locking a feature: ${responseText}`);\n    }\n\n    return responseText;\n  }, [client]);\n\n  return executeWfsLockFeature;\n};\n\nexport default useExecuteWfsLockFeature;\n","import {\n  useCallback,\n  useEffect\n} from 'react';\n\nimport {\n  FeatureCollection\n} from 'geojson';\n\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport const useGetFeatureInfo = (layer?: WmsLayer, onSuccess?: (featureCollection: FeatureCollection) => void, onFailure?: () => void) => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n\n  const onSingleClick = useCallback(async (evt: MapBrowserEvent<MouseEvent>) => {\n    if (!map || !layer) {\n      return;\n    }\n\n    const coords = evt.coordinate;\n\n    const viewResolution = map.getView().getResolution();\n\n    if (!viewResolution) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const url = source?.getFeatureInfoUrl(\n      coords,\n      viewResolution,\n      map.getView().getProjection(),\n      {\n        INFO_FORMAT: 'application/json',\n        BUFFER: 10\n      }\n    );\n\n    const defaultHeaders = {\n      'Content-Type': 'application/json'\n    };\n\n    if (!url) {\n      return;\n    }\n\n    try {\n      map.getTargetElement().style.cursor = 'wait';\n\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: layer.get('useBearerToken') ? {\n          ...defaultHeaders,\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : defaultHeaders\n      });\n\n      if (!response.ok) {\n        throw new Error('No successful response');\n      }\n\n      const featureCollection: FeatureCollection = await response.json();\n\n      if (onSuccess) {\n        onSuccess(featureCollection);\n      }\n    } catch (error) {\n      Logger.error('Error: ', error);\n\n      if (onFailure) {\n        onFailure();\n      }\n    } finally {\n      map.getTargetElement().style.cursor = '';\n    }\n  }, [client, layer, map, onSuccess, onFailure]);\n\n  const onPointerMove = useCallback((evt: MapBrowserEvent<MouseEvent>) => {\n    if (!map || !layer) {\n      return;\n    }\n\n    if (evt.dragging) {\n      return;\n    }\n\n    const data = layer.getData(evt.pixel);\n\n    if (!(data instanceof Uint8ClampedArray)) {\n      return;\n    }\n\n    const hit = data && data[3] > 0;\n\n    map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n  }, [layer, map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    map.on('pointermove', onPointerMove);\n    map.on('singleclick', onSingleClick);\n\n    return () => {\n      map.un('pointermove', onPointerMove);\n      map.un('singleclick', onSingleClick);\n    };\n  }, [map, onPointerMove, onSingleClick]);\n};\n\nexport default useGetFeatureInfo;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  Button\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useExecuteWfsDescribeFeatureType, {\n  isGeometryType\n} from '../../../hooks/useExecuteWfsDescribeFeatureType';\nimport useExecuteWfsLockFeature from '../../../hooks/useExecuteWfsTransactionLock';\nimport useGetFeatureInfo from '../../../hooks/useGetFeatureInfo';\n\nimport {\n  setFeature\n} from '../../../store/editFeature';\n\nimport './index.less';\n\nexport type EditFeatureSwitchProps = {\n  layer: WmsLayer;\n  onLockSuccess?: (responseText: string) => void;\n  onLockError?: (error: unknown) => void;\n  onCreate?: () => void;\n};\n\nexport const EditFeatureSwitch: React.FC<EditFeatureSwitchProps> = ({\n  layer,\n  onLockSuccess = () => {},\n  onLockError = () => {},\n  onCreate = () => {}\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const executeWfsDescribeFeatureType = useExecuteWfsDescribeFeatureType();\n  const executeWfsLockFeature = useExecuteWfsLockFeature();\n  const dispatch = useAppDispatch();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  useGetFeatureInfo(layer, async (featureCollection) => {\n    if (\n      featureCollection.features.length &&\n      (allowedEditMode.includes('UPDATE') || allowedEditMode.includes('DELETE'))\n    ) {\n\n      const feature = featureCollection.features[0];\n\n      if (!layer || !feature) {\n        return;\n      }\n\n      if (ClientConfiguration.wfsLockFeatureEnabled) {\n        try {\n          const response = await executeWfsLockFeature({\n            layer: layer,\n            feature: feature\n          });\n\n          if (!response) {\n            return;\n          }\n\n          dispatch(setFeature(feature));\n\n          onLockSuccess(response);\n        } catch (error) {\n          onLockError(error);\n        }\n      } else {\n        dispatch(setFeature(feature));\n      }\n    }\n  });\n\n  const getGeometryType = async () => {\n    if (!map || !layer) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const describeFeatureType = await executeWfsDescribeFeatureType(layer);\n\n      if (!describeFeatureType) {\n        return;\n      }\n\n      // We expect a single featureType here.\n      const geomProperty = describeFeatureType.featureTypes[0]?.properties\n        ?.find(property => isGeometryType(property.type));\n\n      switch (geomProperty?.type) {\n        case 'gml:MultiPoint':\n          return 'MultiPoint';\n        case 'gml:Point':\n          return 'Point';\n        case 'gml:MultiLineString':\n          return 'MultiLineString';\n        case 'gml:LineString':\n          return 'LineString';\n        case 'gml:MultiPolygon':\n          return 'MultiPolygon';\n        case 'gml:Polygon':\n          return 'Polygon';\n        default:\n          break;\n      }\n    } catch (error) {\n      Logger.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onCreateClick = async () => {\n    const geomType = await getGeometryType();\n\n    if (!geomType) {\n      return;\n    }\n\n    dispatch(setFeature({\n      type: 'Feature',\n      properties: {},\n      geometry: {\n        type: geomType,\n        coordinates: []\n      }\n    }));\n\n    onCreate();\n  };\n\n  return (\n    <div className=\"edit-feature-switch\">\n      {allowedEditMode.includes('CREATE') && (\n        <>\n          {\n            allowedEditMode.includes('UPDATE') &&\n            <div>{t('EditFeatureSwitch.usageHint')}</div>\n          }\n          <Button\n            loading={loading}\n            onClick={onCreateClick}\n          >\n            {t('EditFeatureSwitch.createFeature')}\n          </Button>\n        </>\n      )}\n      {!allowedEditMode.includes('CREATE') &&\n        (allowedEditMode.includes('UPDATE') ||\n        allowedEditMode.includes('DELETE')) && (\n        <div>{t('EditFeatureSwitch.limitedUsageHint')}</div>\n      )}\n    </div>\n  );\n};\n\nexport default EditFeatureSwitch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Alert, Modal\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport OlFeature from 'ol/Feature';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useExecuteWfsTransaction from '../../hooks/useExecuteWfsTransaction';\nimport useWriteWfsTransaction from '../../hooks/useWriteWfsTransaction';\n\nimport {\n  reset\n} from '../../store/editFeature';\nimport {\n  hide as hideEditFeatureDrawer\n} from '../../store/editFeatureDrawerOpen';\n\nimport MapDrawer, {\n  MapDrawerProps\n} from '../MapDrawer';\n\nimport EditFeatureFullForm from './EditFeatureFullForm';\nimport EditFeatureSwitch from './EditFeatureSwitch';\n\nimport './index.less';\n\nexport type EditFeatureDrawerProps = MapDrawerProps & {};\n\nexport const EditFeatureDrawer: React.FC<EditFeatureDrawerProps> = ({\n  ...passThroughProps\n}) => {\n  const {\n    t\n  } = useTranslation();\n\n  const [layer, setLayer] = useState<WmsLayer>();\n  const [isFeatureLocked, setIsFeatureLocked] = useState<boolean>(false);\n  const [drawerTitle, setDrawerTitle] = useState<string>(t('EditFeatureDrawer.featureEditor'));\n\n  const isDrawerOpen = useAppSelector(state => state.editFeatureDrawerOpen);\n  const layerId = useAppSelector(state => state.editFeature.layerId);\n  const feature = useAppSelector(state => state.editFeature.feature);\n\n  const map = useMap();\n  const dispatch = useAppDispatch();\n  const writeWfsTransaction = useWriteWfsTransaction();\n  const executeWfsTransaction = useExecuteWfsTransaction();\n\n  useEffect(() => {\n    if (!map || !layerId) {\n      return;\n    }\n\n    const olLayer = MapUtil.getLayerByOlUid(map, layerId);\n\n    if (!olLayer || !isWmsLayer(olLayer)) {\n      Logger.warn(`Could not find layer with id ${layerId}`);\n      return;\n    }\n\n    setDrawerTitle(`${t('EditFeatureDrawer.featureEditor')} - ${olLayer.get('name')}`);\n    setLayer(olLayer);\n  }, [map, layerId, t]);\n\n  const releaseLock = async () => {\n    if (!layer || !feature || !feature.id || !ClientConfiguration.wfsLockFeatureEnabled) {\n      return;\n    }\n\n    try {\n      const feat = new OlFeature();\n      feat.setId(feature.id);\n\n      const transaction = await writeWfsTransaction({\n        layer: layer,\n        deleteFeatures: [],\n        upsertFeatures: [feat]\n      });\n\n      if (!transaction) {\n        return;\n      }\n\n      await executeWfsTransaction({\n        layer: layer,\n        transaction: transaction\n      });\n    } catch (error) {\n      Logger.error('Error while releasing the lock on the feature');\n    }\n  };\n\n  const closeDrawer = async () => {\n    await releaseLock();\n\n    dispatch(hideEditFeatureDrawer());\n    dispatch(reset());\n    setIsFeatureLocked(false);\n  };\n\n  const onDrawerClose = () => {\n    if (layer && feature) {\n      Modal.confirm({\n        maskClosable: false,\n        title: t('EditFeatureDrawer.closeDrawerWarnTitle'),\n        content: t('EditFeatureDrawer.closeDrawerWarnContent'),\n        okType: 'danger',\n        onOk: closeDrawer\n      });\n    } else {\n      closeDrawer();\n    }\n  };\n\n  const onLockSuccess = () => {\n    setIsFeatureLocked(false);\n  };\n\n  const onLockError = () => {\n    setIsFeatureLocked(true);\n  };\n\n  const onCreate = () => {\n    setIsFeatureLocked(false);\n  };\n\n  return (\n    <MapDrawer\n      className=\"map-drawer edit-feature-drawer\"\n      onClose={onDrawerClose}\n      open={isDrawerOpen}\n      title={drawerTitle}\n      {...passThroughProps}\n    >\n      {\n        !layer && (\n          <Alert\n            message={t('EditFeatureDrawer.noLayerFoundError')}\n            type=\"error\"\n            showIcon\n          />\n        )\n      }\n      {\n        isFeatureLocked && (\n          <Alert\n            message={t('EditFeatureDrawer.isFeatureLockedErrorMsg')}\n            type=\"error\"\n            showIcon\n          />\n        )\n      }\n      {\n        layer && layerId && !feature &&\n        <EditFeatureSwitch\n          layer={layer}\n          onLockSuccess={onLockSuccess}\n          onLockError={onLockError}\n          onCreate={onCreate}\n        />\n      }\n      {\n        layer && feature &&\n        <EditFeatureFullForm\n          feature={feature}\n          layer={layer}\n        />\n      }\n    </MapDrawer>\n  );\n};\n\nexport default EditFeatureDrawer;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect } from 'react';\n\nimport {\n  Button, Divider\n} from 'antd';\n\nimport OlControlMousePosition from 'ol/control/MousePosition';\nimport OlControlScaleLine from 'ol/control/ScaleLine';\nimport { createStringXY } from 'ol/coordinate';\n\nimport { useTranslation } from 'react-i18next';\n\nimport ScaleCombo from '@terrestris/react-geo/dist/Field/ScaleCombo/ScaleCombo';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport { usePlugins } from '../../hooks/usePlugins';\n\nimport {\n  FooterPlacementOrientation,\n  isFooterIntegration\n} from '../../plugin';\nimport { Legal } from '../../store/legal';\n\nexport interface FooterProps extends React.ComponentProps<'div'> { }\n\nexport const Footer: React.FC<FooterProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const plugins = usePlugins();\n  const { t } = useTranslation();\n\n  const legalInformation: Legal = useAppSelector(state => state.legal);\n  const map = useMap();\n\n  const insertPlugins = (itemPosition: FooterPlacementOrientation, items: JSX.Element[]) => {\n    plugins.forEach(plugin => {\n      if (isFooterIntegration(plugin.integration) && plugin.integration?.placementOrientation === itemPosition) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        items.splice(plugin.integration?.insertionIndex || 0, 0,\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map\n      .getControls()\n      .getArray()\n      .find(control => control instanceof OlControlScaleLine);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlScaleLine({\n        target: 'scale-line-container'\n      })\n    );\n  }, [map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map\n      .getControls()\n      .getArray()\n      .find(control => control instanceof OlControlMousePosition);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlMousePosition({\n        coordinateFormat: createStringXY(2),\n        projection: map.getView().getProjection(),\n        target: 'mouse-position'\n      })\n    );\n  }, [map]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  const getLeftItems = () => {\n    const items = [\n      <div\n        key=\"scale-line-container\"\n        id=\"scale-line-container\"\n      />,\n      <Divider\n        key=\"scale-line-divider\"\n        type=\"vertical\"\n      />,\n      <div\n        key=\"scale-combo-container\"\n        className=\"scale-combo\"\n      >\n        {t('Footer.scale')}:&nbsp;\n        <ScaleCombo\n          map={map}\n        />\n        <Divider\n          type=\"vertical\"\n        />\n      </div>,\n      <div\n        key=\"reference-system-container\"\n        className=\"reference-system\"\n      >\n        {t('Footer.refSystem')}: {map.getView().getProjection().getCode()}\n        <Divider\n          type=\"vertical\"\n        />\n      </div>,\n      <div\n        key=\"mouse-position-container\"\n        className=\"mouse-position-wrapper\"\n      >\n        {t('Footer.mousePosition')}:&nbsp;\n        <div\n          id=\"mouse-position\"\n          className=\"mouse-position\"\n        />\n      </div>\n    ];\n\n    insertPlugins('left', items);\n\n    return items;\n  };\n\n  const getRightItems = () => {\n    const items = [\n      <Button\n        key=\"open-contact\"\n        onClick={openContactModal}\n        type=\"link\"\n      >\n        {t('Footer.contact')}\n      </Button>,\n      <Button\n        key=\"open-imprint\"\n        onClick={openImprintModal}\n        type=\"link\"\n      >\n        {t('Footer.imprint')}\n      </Button>,\n      <Button\n        key=\"open-privacy\"\n        onClick={openPrivacyModal}\n        type=\"link\"\n      >\n        {t('Footer.privacypolicy')}\n      </Button>\n    ];\n\n    if (plugins.length > 0) {\n      insertPlugins('right', items);\n    }\n\n    return items;\n  };\n\n  const openContactModal = (): void => {\n    window.open(legalInformation.contact, '_blank');\n  };\n\n  const openImprintModal = (): void => {\n    window.open(legalInformation.imprint, '_blank');\n  };\n\n  const openPrivacyModal = (): void => {\n    window.open(legalInformation.privacy, '_blank');\n  };\n\n  return (\n    <div\n      className=\"footer\"\n      {...restProps}\n    >\n      <div\n        className=\"item-container left-items\"\n      >\n        {\n          getLeftItems()\n        }\n      </div>\n      <div\n        className=\"item-container right-items\"\n      >\n        {\n          getRightItems()\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, {\n  useEffect, useState\n} from 'react';\n\nimport {\n  Extent as OlExtent\n} from 'ol/extent';\nimport {\n  transformExtent\n} from 'ol/proj';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport NominatimSearch, {\n  NominatimSearchProps\n} from '@terrestris/react-geo/dist/Field/NominatimSearch/NominatimSearch';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport const BasicNominatimSearch: React.FC<Partial<NominatimSearchProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n  const [viewBox, setViewBox] = useState<string>();\n\n  useEffect(() => {\n    const mapViewProjection = map?.getView().getProjection();\n    const extent: OlExtent = map?.getView()?.get('extent');\n    if (extent) {\n      const transformedExtent = transformExtent(extent, mapViewProjection, 'EPSG:4326');\n      setViewBox(transformedExtent.toString());\n    }\n  }, [map]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <NominatimSearch\n      map={map}\n      countryCodes={''}\n      allowClear={true}\n      nominatimBaseUrl={'https://nominatim.terrestris.de/search.php?'}\n      placeholder={t('Nominatim.placeholder')}\n      viewBox={viewBox ? viewBox : ''}\n      {...restProps}\n    />\n  );\n};\n\nexport default BasicNominatimSearch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import Map from 'ol/Map';\n\nimport { isWmsLayer } from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  SearchConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nexport interface SolrQueryProps {\n  searchValue: string;\n  map: Map;\n}\n\ntype SolrQuery = {\n  query: string;\n  fieldList?: string;\n};\n\n/**\n * Generates a solr search query based on the `searchConfiguration` and `searchable` properties of each layer. This\n * currently considers all layers which are part of the layer tree / map.\n */\nexport const generateSolrQuery = ({\n  searchValue,\n  map\n}: SolrQueryProps): SolrQuery[] => {\n  // parse searchValue into an array of search terms,\n  // removing special characters and white spaces\n  let parts = searchValue.trim()\n    .replaceAll(/[()\\\\\\-_./\\/]/g, ' ')\n    .split(' ')\n    .map(s => s.trim())\n    .filter(s => s !== '');\n\n  const subQueriesPerLayer: SolrQuery[] = [];\n  const layers = map.getAllLayers();\n  layers.forEach(layer => {\n    if (layer.get('searchable') && isWmsLayer(layer)) {\n      const searchConfig = layer.get('searchConfig') as SearchConfig;\n      const fullLayerName = layer.getSource()?.getParams().LAYERS;\n      if (searchConfig?.attributes) {\n        // search only configured attributes\n        subQueriesPerLayer.push({\n          query: `(featureType:\"${fullLayerName}\" AND (${generateFuzzySearchQuery(parts)}))`,\n          fieldList: searchConfig.attributes.join(' ')\n        });\n      } else {\n        // search all attributes of this layer\n        subQueriesPerLayer.push({\n          query: `(featureType:\"${fullLayerName}\" AND (${generateFuzzySearchQuery(parts)}))`\n        });\n      }\n    }\n  });\n  return subQueriesPerLayer;\n};\n\n/**\n * Applies operators for wildcard and fuzzy search to a solr (sub)query for multiple search terms.\n * @param searchParts The search input which may consist of multiple search terms, e.g. [\"foo\", \"bar\"]\n */\nconst generateFuzzySearchQuery = (\n  searchParts: string[]\n): string => {\n  const subQueries = searchParts.map(part => {\n    return `(${part.trim()}*^3 OR *${part.trim()}*^2 OR ${part.trim()}~1)`;\n  });\n  return subQueries.join(' AND ');\n};\n\nexport default generateSolrQuery;\n","import React, {\n  useCallback,\n  useEffect, useMemo, useRef, useState\n} from 'react';\n\nimport {\n  EditOutlined,\n  LoadingOutlined,\n  SearchOutlined,\n  SettingOutlined\n} from '@ant-design/icons';\nimport {\n  Button,\n  Checkbox,\n  Dropdown,\n  Empty,\n  Input,\n  InputProps,\n  Tooltip\n} from 'antd';\n\nimport _groupBy from 'lodash/groupBy';\n\nimport { getUid } from 'ol';\nimport {\n  Extent as OlExtent\n} from 'ol/extent';\nimport OlFeature from 'ol/Feature';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlFormatWKT from 'ol/format/WKT';\nimport OlGeometry from 'ol/geom/Geometry';\nimport { transformExtent } from 'ol/proj';\nimport OlStyleCircle from 'ol/style/Circle';\nimport OlStyleFill from 'ol/style/Fill';\nimport OlStyleStroke from 'ol/style/Stroke';\nimport OlStyle from 'ol/style/Style';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport { NominatimPlace } from '@terrestris/react-geo/dist/Field/NominatimSearch/NominatimSearch';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport SearchResultsPanel, {\n  Category as ResultCategory\n} from '@terrestris/react-geo/dist/Panel/SearchResultsPanel/SearchResultsPanel';\n\nimport {\n  SearchConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport './index.less';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nimport {\n  setLayerId\n} from '../../store/editFeature';\n\nimport {\n  show as showEditFeatureDrawer\n} from '../../store/editFeatureDrawerOpen';\n\nimport generateSolrQuery from '../../utils/generateSolrQuery';\n\ninterface MultiSearchProps extends InputProps {\n  useNominatim: boolean;\n  delay?: number;\n  minChars?: number;\n  solrSearchBasePath?: string;\n  useSolrHighlighting?: boolean;\n};\n\nexport type DataSearchResult = {\n  [key: string]: string | string[] | number[];\n};\n\nexport type HighlightingResult = {\n  [key: string]: string;\n};\n\nexport type HighlightingResults = {\n  [key: string]: HighlightingResult;\n};\n\nconst isFulfilled = <T, >(p: PromiseSettledResult<T>): p is PromiseFulfilledResult<T> => p.status === 'fulfilled';\n\nexport type SolrQueryConfig = {\n  q: string;\n  fq?: string;\n  defType?: 'lucene' | 'dismax' | 'edismax';\n  qf?: string;\n  rows?: number;\n  hl?: boolean;\n  'hl.fl'?: string;\n  'hl.tag.pre'?: string;\n  'hl.tag.post'?: string;\n  'hl.requireFieldMatch'?: boolean;\n};\n\nexport const MultiSearch: React.FC<MultiSearchProps> = ({\n  useNominatim,\n  useSolrHighlighting = true,\n  delay = 1000,\n  minChars = 3,\n  solrSearchBasePath = '/search/query'\n}): JSX.Element => {\n\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useAppDispatch();\n\n  const clickAwayRef = useRef<HTMLDivElement>(null);\n\n  const [searchNominatim, setSearchNominatim] = useState<boolean>(useNominatim);\n  const [searchData, setSearchData] = useState<boolean>(true);\n  const [useViewBox, setUseViewBox] = useState<boolean>(true);\n  const [searchValue, setSearchValue] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [resultsVisible, setResultsVisible] = useState<boolean>(false);\n  const [settingsVisible, setSettingsVisible] = useState<boolean>(false);\n  const [dataSearchResults, setDataSearchResults] = useState<DataSearchResult[]>([]);\n  const [highlightingResults, setHighlightingResults] = useState<HighlightingResults>({});\n  const [nominatimResults, setNominatimResults] = useState<NominatimPlace[]>([]);\n  const [searchResults, setSearchResults] = useState<ResultCategory[]>([]);\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  useEffect(() => {\n    window.addEventListener('mousedown', handleClickAway);\n\n    return () => {\n      window.removeEventListener('mousedown', handleClickAway);\n    };\n  }, []);\n\n  const handleClickAway = (e: Event) => {\n    const parents = [];\n    let target = e.target;\n    while (target) {\n      parents.unshift(target);\n      target = (target as Node).parentNode;\n    }\n\n    if ((clickAwayRef.current && ((clickAwayRef.current as Element).contains(e.target as Node)))) {\n      return;\n    }\n\n    setResultsVisible(false);\n  };\n\n  const settingsMenu = useMemo(() => {\n    return {\n      items: [{\n        label: (\n          <Checkbox\n            checked={useViewBox}\n            onChange={e => setUseViewBox(e.target.checked)}\n          >\n            {t('MultiSearch.searchInViewBox')}\n          </Checkbox>\n        ),\n        key: 'viewbox'\n      }, {\n        label: (\n          <Checkbox\n            checked={searchData}\n            onChange={e => setSearchData(e.target.checked)}\n          >\n            {t('MultiSearch.searchData')}\n          </Checkbox>\n        ),\n        key: 'data'\n      }, {\n        label: (\n          <Checkbox\n            checked={searchNominatim}\n            onChange={e => setSearchNominatim(e.target.checked)}\n          >\n            {t('MultiSearch.searchNominatim')}\n          </Checkbox>\n        ),\n        key: 'nominatim'\n      }]\n    };\n  }, [searchData, searchNominatim, useViewBox, t]);\n\n  const performSearch = useCallback(async () => {\n    if (searchValue.length < minChars) {\n      resetSearch();\n      return;\n    }\n\n    if (!searchData && !searchNominatim) {\n      return;\n    }\n\n    setLoading(true);\n    setNominatimResults([]);\n    setDataSearchResults([]);\n    setHighlightingResults({});\n\n    let response;\n    let viewBox: OlExtent | null = null;\n\n    if (useViewBox) {\n      const mapViewProjection = map?.getView().getProjection();\n      const extent = map?.getView()?.calculateExtent();\n      if (extent) {\n        viewBox = transformExtent(extent, mapViewProjection, 'EPSG:4326');\n      }\n    }\n\n    if (searchData && map) {\n      try {\n        const searchUrl = new URL(`${window.location.origin}${solrSearchBasePath}`);\n        const queriesPerLayer = generateSolrQuery({\n          searchValue,\n          map\n        });\n\n        const promises = queriesPerLayer.map(q => {\n          const solrQueryConfig: SolrQueryConfig = {\n            q: q.query,\n            rows: 100,\n            defType: 'edismax'\n          };\n\n          if (q.fieldList) {\n            solrQueryConfig.qf = q.fieldList;\n          } else {\n            solrQueryConfig.qf = 'search';\n          }\n\n          if (useViewBox && viewBox) {\n            const bboxFilter = `geometry:[${viewBox[1]},${viewBox[0]} TO ${viewBox[3]},${viewBox[2]}]`;\n            solrQueryConfig.fq = bboxFilter;\n          }\n\n          if (useSolrHighlighting) {\n            solrQueryConfig.hl = true;\n            solrQueryConfig['hl.fl'] = '*';\n            solrQueryConfig['hl.tag.pre'] = '<b>';\n            solrQueryConfig['hl.tag.post'] = '</b>';\n            solrQueryConfig['hl.requireFieldMatch'] = true;\n          }\n\n          const defaultHeaders = {\n            'Content-Type': 'application/json'\n          };\n\n          return fetch(searchUrl.href, {\n            method: 'POST',\n            headers: {\n              ...defaultHeaders,\n              ...getBearerTokenHeader(client?.getKeycloak())\n            },\n            body: JSON.stringify(solrQueryConfig)\n          });\n        });\n\n        const results = await Promise.allSettled(promises.map(async pr => {\n          const res = await pr;\n          return res.json();\n        }));\n\n        const successfulResults = results.filter(isFulfilled);\n        const dataResults = successfulResults.flatMap(sR => sR.value?.response?.docs);\n        const hlResults = Object.assign({}, ...successfulResults.map(sr => sr.value?.highlighting));\n\n        setDataSearchResults(dataResults);\n        setHighlightingResults(hlResults);\n      } catch (error) {\n        setDataSearchResults([]);\n        setHighlightingResults({});\n        logger.error('Error while fetching the layer search results: ', error);\n      } finally {\n        if (!searchNominatim) {\n          setLoading(false);\n        }\n      }\n    }\n\n    if (searchNominatim) {\n      try {\n        const nominatimUrl = new URL('https://nominatim.terrestris.de/search');\n        nominatimUrl.searchParams.set('q', searchValue);\n        nominatimUrl.searchParams.set('format', 'json');\n        nominatimUrl.searchParams.set('polygon_geojson', '1');\n\n        if (useViewBox && viewBox) {\n          nominatimUrl.searchParams.set('viewbox', viewBox.toString());\n          nominatimUrl.searchParams.set('bounded', '1');\n        }\n        response = await fetch(nominatimUrl.href);\n        setNominatimResults(await response.json());\n      }\n      catch (error) {\n        setNominatimResults([]);\n        logger.error('Error while fetching the nominatim results: ', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  }, [searchValue, minChars, searchData, searchNominatim, useViewBox, map, solrSearchBasePath, useSolrHighlighting, client]);\n\n  const replaceTemplates = (template: string, data: DataSearchResult): string => {\n    const pattern = /{\\s*(\\w+?)\\s*}/g; // regex for template string with values in brackets, e.g. {name}\n    return template.replace(pattern, (_, token) => data[token]?.toString() || '');\n  };\n\n  const getFeatureTitle = useCallback((dsResult: DataSearchResult, highlightResult?: HighlightingResult): string => {\n    if (!map) {\n      return '';\n    }\n\n    const layer = MapUtil.getLayerByNameParam(map, dsResult.featureType[0] as string);\n    const searchConfig = layer?.get('searchConfig') as SearchConfig;\n\n    const blacklistedAttributes = [\n      'category',\n      'id',\n      'featureType',\n      'geometry',\n      'search'\n    ];\n\n    let title: string = '';\n\n    if (searchConfig?.displayTemplate) {\n      return replaceTemplates(searchConfig.displayTemplate, dsResult);\n    }\n\n    if (highlightResult) {\n      const filteredHighlightKeys = Object.keys(highlightResult).filter(key => !blacklistedAttributes.includes(key));\n      if (filteredHighlightKeys.length > 0) {\n        const highlightValue = highlightResult[filteredHighlightKeys[0]];\n        return `${highlightValue} [${filteredHighlightKeys[0]}]`;\n      }\n    }\n\n    Object.keys(dsResult)\n      .filter(key => !blacklistedAttributes.includes(key))\n      .forEach(propKey => {\n        let propValue = dsResult[propKey]?.toString();\n        if (!title && propValue.toLowerCase().indexOf(searchValue?.toLowerCase()) > -1) {\n          // show matched value followed by the attribute name in square brackets (e.g. '53111 Bonn [city]')\n          title = `${propValue} [${propKey}]`;\n        }\n      });\n\n    if (!title) {\n      // fallback -> should never happen after adding of the valid layer search config\n      title = dsResult.id as string;\n    }\n\n    return title;\n  }, [searchValue, map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    let updatedResults: ResultCategory[] = [];\n\n    if (nominatimResults.length > 0) {\n\n      const geoJsonFormat = new OlFormatGeoJSON();\n      const nFeats = nominatimResults.map(f => {\n        const olFeat = geoJsonFormat.readFeature(f.geojson, {\n          dataProjection: 'EPSG:4326',\n          featureProjection: map.getView().getProjection()\n        });\n        olFeat.set('title', f.display_name);\n        return olFeat;\n      });\n\n      const nResults: ResultCategory = {\n        title: t('MultiSearch.nominatimTitle'),\n        features: nFeats\n      };\n      updatedResults.push(nResults);\n    }\n\n    if (dataSearchResults?.length > 0) {\n\n      const wktFormat = new OlFormatWKT();\n      // 1. group by category\n      const categories = _groupBy(dataSearchResults, res => res.category[0]);\n      // 2. build features\n      Object.keys(categories).forEach(category => {\n        const features = categories[category].map(dsResult => {\n          if (!dsResult.geometry?.[0]) {\n            return;\n          }\n          const id = dsResult.id as string;\n\n          const geometry = wktFormat.readGeometry(dsResult.geometry[0], {\n            dataProjection: 'EPSG:4326',\n            featureProjection: map.getView().getProjection()\n          });\n          const olFeat = new OlFeature({\n            geometry\n          });\n          olFeat.set('title', getFeatureTitle(dsResult, highlightingResults?.[id]));\n          let ftName;\n          if (dsResult.featureType?.[0]) {\n            const layer = MapUtil.getLayerByNameParam(map, dsResult.featureType?.[0] as string);\n            if (layer) {\n              olFeat.set('layer', layer);\n              ftName = layer.get('name');\n            }\n          } else {\n            ftName = id.substring(0, id.lastIndexOf('_'));\n          }\n          olFeat.set('ftName', ftName);\n          return olFeat;\n        }).filter(f => f) as OlFeature<OlGeometry>[];\n        const resultCategory: ResultCategory = {\n          title: category,\n          features\n        };\n        updatedResults.push(resultCategory);\n      });\n    }\n\n    setResultsVisible(true);\n    setSearchResults(updatedResults);\n\n  }, [dataSearchResults, highlightingResults, nominatimResults, map, getFeatureTitle, t]);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      performSearch();\n    }, delay);\n\n    return () => clearTimeout(timeout);\n\n  }, [performSearch, delay]);\n\n  const resetSearch = () => {\n    setDataSearchResults([]);\n    setNominatimResults([]);\n  };\n\n  const actionsCreator = (item: any) => {\n    const feat = item.feature;\n    const layer = feat.get('layer');\n\n    if (!layer?.get('editable')) {\n      return;\n    }\n\n    const onEditFeatureBtnClick = () => {\n      dispatch(setLayerId(getUid(layer)));\n      dispatch(showEditFeatureDrawer());\n      setResultsVisible(false);\n    };\n\n    if (\n      allowedEditMode.includes('CREATE') ||\n      allowedEditMode.includes('DELETE') ||\n      allowedEditMode.includes('UPDATE')\n    ) {\n      return [\n        <Tooltip\n          key=\"edit\"\n          title={t('EditFeatureButton.title')}\n          placement=\"bottom\"\n        >\n          <Button\n            onClick={onEditFeatureBtnClick}\n            icon={<EditOutlined />}\n          />\n        </Tooltip>\n      ];\n    } else {\n      return [<></>];\n    }\n  };\n\n  const layerStyle = useMemo(() => (\n    new OlStyle({\n      stroke: new OlStyleStroke({\n        color: 'rgb(255,0,0)',\n        width: 2\n      }),\n      fill: new OlStyleFill({\n        color: 'rgba(255,255,255, 0.5)'\n      }),\n      image: new OlStyleCircle({\n        radius: 10,\n        fill: new OlStyleFill({\n          color: 'rgba(255,255,255, 0.5)'\n        }),\n        stroke: new OlStyleStroke({\n          color: 'rgb(255,0,0)',\n          width: 3\n        })\n      })\n    })\n  ), []);\n\n  const resultRenderer = () => {\n    if (searchValue.length < 2 || !resultsVisible || loading || !dataSearchResults) {\n      return null;\n    }\n\n    const numTotal = nominatimResults.length + dataSearchResults.length;\n\n    if (numTotal === 0) {\n      return (\n        <div\n          className='no-search-result-div'\n        >\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <SearchResultsPanel\n        searchResults={searchResults}\n        numTotal={numTotal}\n        accordion\n        searchTerms={searchValue.split(' ')}\n        actionsCreator={actionsCreator}\n        layerStyle={layerStyle}\n      />\n    );\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <div ref={clickAwayRef}>\n      <Input\n        value={searchValue}\n        disabled={!searchData && !searchNominatim}\n        onChange={event => {\n          setLoading(event.target.value !== '');\n          setSearchValue(event.target.value);\n        }}\n        allowClear\n        addonAfter={\n          <Dropdown\n            placement=\"bottomRight\"\n            menu={settingsMenu}\n            trigger={['click']}\n            onOpenChange={setSettingsVisible}\n            open={settingsVisible}\n          >\n            <SettingOutlined />\n          </Dropdown >\n        }\n        onFocus={() => setResultsVisible(true)}\n        placeholder={t('MultiSearch.searchPlaceholder')}\n        prefix={<SearchOutlined />}\n        suffix={loading ? <LoadingOutlined /> : null}\n      />\n      {resultRenderer()}\n    </div>\n  );\n};\n\nexport default MultiSearch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  InputProps\n} from 'antd/lib/input';\n\nimport logger from '@terrestris/base-util/dist/Logger';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport BasicNominatimSearch from '../BasicNominatimSearch';\nimport MultiSearch from '../MultiSearch';\n\nimport './index.less';\n\ninterface SearchFieldProps extends InputProps { };\n\nexport const SearchField: React.FC<SearchFieldProps> = (): JSX.Element => {\n\n  const useNominatim = useAppSelector((state) => state.searchEngines.includes('nominatim'));\n  const useSolr = useAppSelector((state) => state.searchEngines.includes('solr'));\n\n  if (!useNominatim && !useSolr) {\n    logger.warn('Neither nominatim nor solr search is configured.');\n    return <></>;\n  }\n\n  return (\n    <div className=\"search\">\n      {\n        useSolr ?\n          <MultiSearch\n            useNominatim={useNominatim}\n          /> :\n          <BasicNominatimSearch />\n      }\n    </div>\n  );\n};\n\nexport default SearchField;\n","import md5 from 'js-md5';\n\nexport interface GravatarProps {\n  email: string;\n  size?: number;\n  rating?: 'g' | 'pg' | 'r' | 'x';\n  defaultImage?: '404' | 'mp' | 'identicon' | 'monsterid' | 'wavatar' | 'retro' | 'robohash' | 'blank';\n  force?: boolean;\n}\n\nconst GRAVATAR_BASE_URL = 'https://www.gravatar.com/avatar/';\n\n/**\n * https://de.gravatar.com/site/implement/images/\n */\nexport const getGravatarUrl = ({\n  email = '',\n  size = 80,\n  rating = 'g',\n  defaultImage = 'identicon',\n  force = false\n}: GravatarProps): string => {\n  const lowerCaseEmail = email.toLowerCase();\n  const hash = md5(lowerCaseEmail);\n\n  let url = `${GRAVATAR_BASE_URL}${hash}?s=${size}&r=${rating}&d=${defaultImage}`;\n\n  if (force) {\n    url = `${url}&f=y`;\n  }\n\n  return url;\n};\n\nexport default getGravatarUrl;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  Modal,\n  Statistic\n} from 'antd';\n\nimport {\n  ModalProps\n} from 'antd/lib/modal';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport useAppSelector from '../../hooks/useAppSelector';\n\nimport {\n  useClientVersion\n} from '../../hooks/useVersion';\n\nimport './index.less';\n\ninterface ApplicationInfoProps extends ModalProps {\n  opener?: JSX.Element;\n}\n\nexport const ApplicationInfo: React.FC<ApplicationInfoProps> = ({\n  opener,\n  ...restProps\n}) => {\n  const {\n    t\n  } = useTranslation();\n\n  const appInfo = useAppSelector(state => state.appInfo);\n  const logoPath = useAppSelector(state => state.logoPath);\n  const appDescription = useAppSelector(state => state.description);\n\n  const [isVisible, setVisible] = useState<boolean>(false);\n\n  const toggleVisibility = () => {\n    setVisible(!isVisible);\n  };\n\n  let Opener;\n  if (opener) {\n    Opener = React.cloneElement(\n      opener,\n      {\n        onClick: toggleVisibility\n      }\n    );\n  } else {\n    Opener = <button onClick={toggleVisibility}>Open</button>;\n  }\n\n  return (\n    <>\n      {\n        Opener\n      }\n      <Modal\n        className='application-info'\n        title={t('ApplicationInfo.title')}\n        centered={true}\n        open={isVisible}\n        onOk={toggleVisibility}\n        onCancel={toggleVisibility}\n        footer={null}\n        {...restProps}\n      >\n        <img\n          className=\"logo\"\n          src={logoPath}\n        />\n        <div\n          className=\"description\"\n        >\n          {appDescription}\n        </div>\n        <Statistic\n          title={t('ApplicationInfo.clientVersionTitle')}\n          value={useClientVersion()}\n        />\n        {\n          (appInfo.version && appInfo.buildTime) &&\n          <Statistic\n            title={t('ApplicationInfo.backendVersionTitle')}\n            value={`${appInfo.version} (${appInfo.buildTime})`}\n          />\n        }\n      </Modal>\n    </>\n  );\n};\n\nexport default ApplicationInfo;\n","export const useClientVersion = () => {\n  return PROJECT_VERSION;\n};\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faInfo,\n  faUserCog,\n  faSignOut,\n  faSignIn,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  ItemType\n} from 'antd/lib/menu/hooks/useItems';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport {\n  MenuInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport UserChip from '@terrestris/react-geo/dist/UserChip/UserChip';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport {\n  getGravatarUrl\n} from '../../utils/getGravatarUrl';\n\nimport ApplicationInfo from '../ApplicationInfo';\n\nimport './index.less';\n\ninterface OwnProps { }\n\ntype UserProps = OwnProps;\n\nexport const UserMenu: React.FC<UserProps> = (): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const client = useSHOGunAPIClient();\n  const keycloak = client?.getKeycloak();\n\n  const user = useAppSelector((state) => state.user);\n\n  const onMenuClick = (evt: MenuInfo) => {\n    switch (evt.key) {\n      case 'settings':\n        if (keycloak) {\n          keycloak.accountManagement();\n        }\n        break;\n      case 'info':\n        // Don't do anything, visible state will be handled by the menu itself.\n        break;\n      case 'login':\n        if (keycloak) {\n          keycloak.login();\n        }\n        break;\n      case 'logout':\n        if (keycloak) {\n          keycloak.logout();\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const getMenu = () => {\n    const login: ItemType = {\n      key: 'login',\n      icon: (\n        <FontAwesomeIcon\n          icon={faSignIn}\n        />\n      ),\n      label: t('UserMenu.loginMenuTitle')\n    };\n\n    const username: ItemType = {\n      key: 'username',\n      label: (\n        <div\n          className=\"user-name\"\n        >\n          <span>\n            {\n              user.providerDetails?.email\n            }\n          </span>\n        </div>\n      )\n    };\n\n    const divider: ItemType = {\n      type: 'divider'\n    };\n\n    const settings: ItemType = {\n      key: 'settings',\n      icon: (\n        <FontAwesomeIcon\n          icon={faUserCog}\n        />\n      ),\n      label: t('UserMenu.settingsMenuTitle')\n    };\n\n    const info: ItemType = {\n      key: 'info',\n      icon: (\n        <FontAwesomeIcon\n          icon={faInfo}\n        />\n      ),\n      label: (\n        <ApplicationInfo\n          opener={\n            <span\n              className=\"info-opener\"\n            >\n              {t('UserMenu.infoMenuTitle')}\n            </span>\n          }\n        />\n      )\n    };\n\n    const logout: ItemType = {\n      key: 'logout',\n      icon: (\n        <FontAwesomeIcon\n          icon={faSignOut}\n        />\n      ),\n      label: t('UserMenu.logoutMenuTitle')\n    };\n\n    const items: ItemType[] = [];\n\n    if (_isEmpty(user)) {\n      if (ClientConfiguration.keycloak?.enabled) {\n        items.push(login);\n      }\n      items.push(info);\n    } else {\n      const accountRoles = keycloak?.tokenParsed?.resource_access?.account?.roles;\n      const hasUserManagementAccess = Array.isArray(accountRoles) && accountRoles.indexOf('manage-account') > -1;\n      const itemsForLoggedInUser = hasUserManagementAccess ? [\n        username,\n        divider,\n        settings,\n        info,\n        divider,\n        logout\n      ] : [\n        username,\n        divider,\n        info,\n        divider,\n        logout\n      ];\n\n      items.push(...itemsForLoggedInUser);\n    }\n\n    return {\n      items,\n      onClick: onMenuClick\n    };\n  };\n\n  return (\n    <UserChip\n      size={'small'}\n      imageSrc={getGravatarUrl({\n        email: user.providerDetails?.email || '',\n        size: 28\n      })}\n      userName={\n        <FontAwesomeIcon\n          icon={faAngleDown}\n        />\n      }\n      userMenu={getMenu()}\n    />\n  );\n};\n\nexport default UserMenu;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  useAppSelector\n} from '../../hooks/useAppSelector';\nimport {\n  usePlugins\n} from '../../hooks/usePlugins';\n\nimport {\n  HeaderPlacementOrientation,\n  isHeaderIntegration\n} from '../../plugin';\nimport SearchField from '../SearchField';\n\nimport UserMenu from '../UserMenu';\n\nimport './index.less';\n\nexport interface HeaderProps extends React.ComponentProps<'div'> { };\n\nexport const Header: React.FC<HeaderProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const title = useAppSelector((state) => state.title);\n  const logoPath = useAppSelector((state) => state.logoPath);\n  const plugins = usePlugins();\n\n  const insertPlugins = (itemPosition: HeaderPlacementOrientation, items: JSX.Element[]) => {\n    plugins.forEach(plugin => {\n      if (isHeaderIntegration(plugin.integration) && plugin.integration?.placementOrientation === itemPosition) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        items.splice(plugin.integration?.insertionIndex || 0, 0,\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  };\n\n  const getLeftItems = () => {\n    const items = [(\n      <img\n        key=\"logo\"\n        className=\"logo\"\n        src={logoPath}\n      />\n    ), (\n      <div\n        key=\"title\"\n        className=\"title\"\n      >\n        {title}\n      </div>\n    )];\n\n    insertPlugins('left', items);\n\n    return items;\n  };\n\n  const getCenterItems = () => {\n    const items = [\n      <SearchField\n        key=\"search\"\n      />\n    ];\n\n    insertPlugins('center', items);\n\n    return items;\n  };\n\n  const getRightItems = () => {\n    const items = [\n      <UserMenu\n        key=\"user-menu\"\n      />\n    ];\n\n    insertPlugins('right', items);\n\n    return items;\n  };\n\n  return (\n    <div\n      className=\"header\"\n      {...restProps}\n    >\n      <div\n        className=\"item-container left-items\"\n      >\n        {\n          getLeftItems()\n        }\n      </div>\n      <div\n        className=\"item-container center-items\"\n      >\n        {\n          getCenterItems()\n        }\n      </div>\n      <div\n        className=\"item-container right-items\"\n      >\n        {\n          getRightItems()\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\n\nimport {\n  Alert,\n  Spin\n} from 'antd';\n\nimport OlLayer from 'ol/layer/Layer';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport './index.less';\n\nexport type LayerConfigurationProps = React.ComponentProps<'pre'> & {\n  layer?: OlLayer;\n};\n\nexport const LayerConfiguration: React.FC<LayerConfigurationProps> = ({\n  layer,\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [layerConfiguration, setLayerConfiguration] = useState<Layer>();\n\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const getLayerConfiguration = useCallback(async () => {\n    try {\n      setLoading(true);\n      setErrorMessage('');\n\n      if (!layer || !layer.get('shogunId')) {\n        throw new Error('No layer provided or the layer has no shogunId set');\n      }\n\n      const conf = await client?.layer().findOne(layer.get('shogunId'));\n\n      setLayerConfiguration(conf);\n    } catch (error) {\n      Logger.error(error);\n      setErrorMessage(t('LayerConfiguration.errorMessage'));\n    } finally {\n      setLoading(false);\n    }\n  }, [t, client, layer]);\n\n  useEffect(() => {\n    getLayerConfiguration();\n  }, [getLayerConfiguration]);\n\n  if (errorMessage) {\n    return (\n      <Alert\n        type=\"error\"\n        closable={true}\n        message={errorMessage}\n      />\n    );\n  }\n\n  return (\n    <Spin\n      spinning={loading}\n    >\n      <pre\n        className=\"layer-configuration\"\n        {...restProps}\n      >\n        <code>\n          {\n            JSON.stringify(layerConfiguration, null, '  ')\n          }\n        </code>\n      </pre>\n    </Spin>\n  );\n};\n\nexport default LayerConfiguration;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\n\nimport {\n  Alert,\n  Form,\n  FormProps,\n  Spin\n} from 'antd';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayer from 'ol/layer/Layer';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport CapabilitiesUtil from '@terrestris/ol-util/dist/CapabilitiesUtil/CapabilitiesUtil';\n\nimport {\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport './index.less';\n\nexport type LayerDetailsProps = Partial<FormProps> & {\n  layer?: OlLayer;\n};\n\nexport const LayerDetails: React.FC<LayerDetailsProps> = ({\n  layer,\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [capabilities, setCapabilities] = useState<any>();\n  const [errorMessage, setErrorMessage] = useState<string>();\n\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const getCapabilities = useCallback(async () => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setErrorMessage('');\n      setCapabilities(undefined);\n\n      const capa = await CapabilitiesUtil.getWmsCapabilitiesByLayer(\n        (layer as OlLayerImage<OlSourceImageWMS> | OlLayerTile<OlSourceTileWMS>), {\n          headers: {\n            ...layer.get('useBearerToken') ? {\n              ...getBearerTokenHeader(client?.getKeycloak())\n            } : undefined\n          }\n        });\n\n      setCapabilities(capa);\n    } catch (error) {\n      Logger.error(error);\n      setErrorMessage(t('LayerDetails.errorMessage'));\n    } finally {\n      setLoading(false);\n    }\n  }, [t, client, layer]);\n\n  useEffect(() => {\n    getCapabilities();\n  }, [getCapabilities]);\n\n  const getLayerName = () => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    return layer.getSource()?.getParams().LAYERS;\n  };\n\n  const getCapabilitiesUrl = () => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    let layerUrl;\n    if (layer.getSource() instanceof OlSourceImageWMS) {\n      layerUrl = (layer.getSource() as OlSourceImageWMS).getUrl();\n    }\n    if (layer.getSource() instanceof OlSourceTileWMS) {\n      const urls = (layer.getSource() as OlSourceTileWMS).getUrls();\n      layerUrl = urls ? urls[0] : undefined;\n    }\n\n    if (layerUrl) {\n      return UrlUtil.createValidGetCapabilitiesRequest(layerUrl, 'WMS', '1.3.0');\n    }\n  };\n\n  const getCapabilitiesLayer = () => {\n    const layers: any[] = capabilities?.Capability?.Layer?.Layer;\n    const layerName = getLayerName();\n\n    const lay = layers?.find(l => l.Name === layerName);\n\n    return lay;\n  };\n\n  const getBBox = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.EX_GeographicBoundingBox?.join(', ');\n  };\n\n  const getMinScale = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.MinScaleDenominator;\n  };\n\n  const getMaxScale = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.MaxScaleDenominator;\n  };\n\n  const getAbstract = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.Abstract;\n  };\n\n  const getServiceAbstract = () => {\n    return capabilities?.Service?.Abstract;\n  };\n\n  const getContact = () => {\n    return capabilities?.Service?.ContactInformation?.ContactElectronicMailAddress;\n  };\n\n  const getLayerTitle = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.Title;\n  };\n\n  const getAccessConstraints = () => {\n    return capabilities?.Service?.AccessConstraints;\n  };\n\n  if (errorMessage) {\n    return (\n      <Alert\n        type=\"error\"\n        closable={true}\n        message={errorMessage}\n      />\n    );\n  }\n\n  return (\n    <Spin\n      spinning={loading}\n    >\n      <Form\n        className=\"layer-details\"\n        layout=\"horizontal\"\n        size=\"small\"\n        labelAlign=\"left\"\n        labelWrap={true}\n        labelCol={{\n          flex: '150px'\n        }}\n        {...restProps}\n      >\n        <Form.Item\n          name=\"layerName\"\n          label={t('LayerDetails.layerNameLabel')}\n        >\n          <span>{getLayerName() ? getLayerName() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"layerTitle\"\n          label={t('LayerDetails.layerTitleLabel')}\n        >\n          <span>{getLayerTitle() ? getLayerTitle() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"service-abstract\"\n          label={t('LayerDetails.serviceAbstractLabel')}\n        >\n          <span>{getServiceAbstract() ? getServiceAbstract() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"abstract\"\n          label={t('LayerDetails.abstractLabel')}\n        >\n          <span>{getAbstract() ? getAbstract() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"accessConstraints\"\n          label={t('LayerDetails.accessConstraintsLabel')}\n        >\n          <span>{getAccessConstraints() ? getAccessConstraints() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"CapabilitiesUrl\"\n          label={t('LayerDetails.capabilitiesUrlLabel')}\n        >\n          <a href={getCapabilitiesUrl()}>{getCapabilitiesUrl()}</a>\n        </Form.Item>\n        <Form.Item\n          name=\"contact\"\n          label={t('LayerDetails.contactLabel')}\n        >\n          {getContact() ? <a href={`mailto:${getContact()}`}>{getContact()}</a> : <span>{t('LayerDetails.noDataPlaceholder')}</span>}\n        </Form.Item>\n        <Form.Item\n          name=\"minScale\"\n          label={t('LayerDetails.minScaleLabel')}\n        >\n          <span>{getMinScale() ? getMinScale() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"maxScale\"\n          label={t('LayerDetails.maxScaleLabel')}\n        >\n          <span>{getMaxScale() ? getMaxScale() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"bbox\"\n          label={t('LayerDetails.bboxLabel')}\n        >\n          <span>{getBBox() ? getBBox() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n      </Form>\n    </Spin>\n  );\n};\n\nexport default LayerDetails;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport {\n  FileTextOutlined\n} from '@ant-design/icons';\n\nimport {\n  Button,\n  Modal,\n  ModalProps,\n  Tooltip\n} from 'antd';\n\nimport OlLayer from 'ol/layer/Layer';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\n\nimport {\n  hide as hideLayerDetailsModal,\n  setLayer as setDetailsLayer\n} from '../../store/layerDetailsModal';\n\nimport LayerConfiguration from './LayerConfiguration';\nimport LayerDetails from './LayerDetails';\n\nimport './index.less';\n\nexport type LayerDetailsModalProps = {} & Partial<ModalProps>;\n\nexport const LayerDetailsModal: React.FC<LayerDetailsModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [layer, setLayer] = useState<OlLayer>();\n  const [configurationVisible, setConfigurationVisible] = useState<boolean>(false);\n\n  const isModalVisible = useAppSelector(state => state.layerDetailsModal.visible);\n  const layerId = useAppSelector(state => state.layerDetailsModal.layerId);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    if (!layerId) {\n      setLayer(undefined);\n      return;\n    }\n\n    const l = MapUtil.getLayerByOlUid(map, layerId);\n\n    if (!(l instanceof OlLayer)) {\n      return;\n    }\n\n    setLayer(l);\n  }, [map, layerId]);\n\n  const closeModal = () => {\n    dispatch(hideLayerDetailsModal());\n    dispatch(setDetailsLayer(undefined));\n  };\n\n  const onShowConfigurationClick = () => {\n    setConfigurationVisible(!configurationVisible);\n  };\n\n  return (\n    <Modal\n      className=\"layer-details-modal\"\n      title={(\n        <div\n          className=\"title-group\"\n        >\n          <span>{t('LayerDetailsModal.title', {\n            layerName: layer?.get('name')\n          })}\n          </span>\n          {\n            layer?.get('shogunId') && (\n              <Tooltip\n                title={configurationVisible ?\n                  t('LayerDetailsModal.internalConfigurationButtonTooltip') :\n                  t('LayerDetailsModal.internalConfigurationButtonTooltipPressed')\n                }\n              >\n                <Button\n                  type=\"link\"\n                  className={configurationVisible ? 'pressed' : ''}\n                  icon={<FileTextOutlined />}\n                  onClick={onShowConfigurationClick}\n                />\n              </Tooltip>\n            )\n          }\n        </div>\n      )}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={800}\n      footer={false}\n      {...restProps}\n    >\n      <LayerDetails\n        layer={layer}\n        hidden={configurationVisible}\n      />\n      {\n        layer?.get('shogunId') && (\n          <LayerConfiguration\n            layer={layer}\n            hidden={!configurationVisible}\n          />\n        )\n      }\n    </Modal>\n  );\n};\n\nexport default LayerDetailsModal;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport './index.less';\n\nimport {\n  Select\n} from 'antd';\n\nconst {\n  Option\n} = Select;\n\nimport i18n from '../../i18n';\n\nexport const LanguageSelect = () => {\n  const supportedLanguages = Object.keys(i18n.services.resourceStore.data);\n\n  const onLanguageChange = (lang: string) => {\n    i18n.changeLanguage(lang);\n  };\n\n  return (\n    <div className=\"language-select\">\n      <Select\n        defaultValue={i18n.language || 'en'}\n        onChange={onLanguageChange}\n      >\n        {\n          supportedLanguages.map(supportedLanguage => {\n            return (\n              <Option\n                key={supportedLanguage}\n                value={supportedLanguage}\n              >\n                {supportedLanguage.toUpperCase()}\n              </Option>\n            );\n          })\n        }\n      </Select>\n    </div>\n  );\n};\n\nexport default LanguageSelect;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect, useState, useMemo\n} from 'react';\n\nimport {\n  CopyOutlined,\n  MailOutlined,\n  TwitterOutlined,\n  WhatsAppOutlined\n} from '@ant-design/icons';\nimport {\n  Input, Tooltip, message\n} from 'antd';\nimport copy from 'copy-to-clipboard';\nimport {\n  EventsKey\n} from 'ol/events';\nimport BaseLayer from 'ol/layer/Base';\nimport LayerGroup from 'ol/layer/Group';\nimport ImageLayer from 'ol/layer/Image';\nimport TileLayer from 'ol/layer/Tile';\nimport {\n  unByKey\n} from 'ol/Observable';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport PermalinkUtil from '@terrestris/ol-util/dist/PermalinkUtil/PermalinkUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\n\nimport './index.less';\n\ninterface DefaultPermalinkProps { }\n\nexport interface PermalinkProps extends Partial<DefaultPermalinkProps> { }\n\nexport const Permalink: React.FC<PermalinkProps> = () => {\n  const map = useMap();\n  const layerAttributes = useMemo(() => [\n    'layerConfig',\n    'isExternalLayer',\n    'isUploadedLayer',\n    'groupName'\n  ], []);\n  const {\n    t\n  } = useTranslation();\n\n  const initialPermalink = map ? PermalinkUtil.getLink(\n    map,\n    ';',\n    l => l.get('name'),\n    l => (l instanceof TileLayer || l instanceof ImageLayer) && l.getVisible(),\n    layerAttributes\n  ) : '';\n\n  const [permalink, setPermalink] = useState(initialPermalink);\n\n  const mailSubject = 'SHOGun Web-GIS';\n  const mailBody = `Hey,\\r\\ncheck out the layer-composition I created:\\r\\n\\r\\n${permalink}`;\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n    let eventKeys: EventsKey[] = [];\n\n    const identifierFunction = (l: BaseLayer) => l.get('name');\n    const filterFunction = (l: BaseLayer) => (l instanceof TileLayer || l instanceof ImageLayer) && l.getVisible();\n    const updatePermalink = () => {\n      setPermalink(PermalinkUtil.getLink(\n        map,\n        ';',\n        identifierFunction,\n        filterFunction,\n        layerAttributes\n      ));\n    };\n\n    const updateLayerConfig = () => {\n      const externalLayers = map.getAllLayers().filter(l => l.get('isExternalLayer') || l.get('isUploadedLayer'));\n      externalLayers.forEach(externalLayer => {\n        const layerConfig = externalLayer.get('layerConfig') as Layer;\n        if (layerConfig) {\n          if (layerConfig.clientConfig) {\n            layerConfig.clientConfig.opacity = externalLayer.getOpacity();\n          } else {\n            layerConfig.clientConfig = {\n              opacity: externalLayer.getOpacity()\n            };\n          }\n          externalLayer.set('layerConfig', layerConfig);\n        }\n      });\n      updatePermalink();\n    };\n\n    const registerLayerCallback = (layerGroup: LayerGroup) => {\n      const layersInGroup = layerGroup.getLayers().getArray();\n      for (let i = 0; i < layersInGroup.length; i++) {\n        const layerInGroup = layersInGroup[i];\n\n        if (layerInGroup instanceof LayerGroup) {\n          registerLayerCallback(layerInGroup);\n        } else {\n          let eventKeyVisibility = layerInGroup.on('change:visible', updatePermalink);\n          let eventKeyOpacity = layerInGroup.on('change:opacity', updateLayerConfig);\n          eventKeys.push(eventKeyVisibility, eventKeyOpacity);\n        }\n      }\n    };\n\n    const listenerKeyCenter = map.getView().on('change:center', updatePermalink);\n    const listenerKeyResolution = map.getView().on('change:resolution', updatePermalink);\n\n    let mapLayerGroup = map.getLayerGroup();\n    registerLayerCallback(mapLayerGroup);\n    updateLayerConfig();\n\n    return () => {\n      unByKey(listenerKeyCenter);\n      unByKey(listenerKeyResolution);\n      unByKey(eventKeys);\n    };\n  }, [layerAttributes, map, t]);\n\n  function onTwitterClick() {\n    const twitterUrl = new URL('https://twitter.com/intent/tweet');\n    twitterUrl.searchParams.set('url', mailBody);\n    window.open(twitterUrl);\n  }\n\n  function onWhatsAppClick() {\n    const whatsAppUrl = new URL('https://wa.me');\n    whatsAppUrl.searchParams.set('text', mailBody);\n    window.open(whatsAppUrl);\n  }\n\n  function onMailClick() {\n    const mailToUrl = new URL('mailto:');\n    mailToUrl.searchParams.set('subject', mailSubject);\n    mailToUrl.searchParams.set('body', mailBody);\n    window.open(mailToUrl.toString().replace(/\\+/g, '%20'), '_self');\n  }\n\n  function onCopyClick() {\n    const success = copy(permalink);\n    if (success) {\n      message.info(t('Permalink.copiedToClipboard'));\n    } else {\n      message.info(t('Permalink.copyToClipboardFailed'));\n    }\n  }\n\n  return (\n    <div className=\"permalink-wrapper\">\n      <div className=\"icons\">\n        <Tooltip title={t('Permalink.twitterTooltip')}>\n          <TwitterOutlined onClick={onTwitterClick} />\n        </Tooltip>\n        <Tooltip title={t('Permalink.whatsAppTooltip')}>\n          <WhatsAppOutlined onClick={onWhatsAppClick} />\n        </Tooltip>\n        <Tooltip title={t('Permalink.mailTooltip')}>\n          <MailOutlined onClick={onMailClick} />\n        </Tooltip>\n      </div>\n      <div className=\"link\">\n        <Input value={permalink}\n          readOnly\n        />\n        <Tooltip title={t('Permalink.copyTooltip')}>\n          <CopyOutlined onClick={onCopyClick} />\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nexport default Permalink;\n","import OlLayer from 'ol/layer/Layer';\n\nimport MapFishPrintV3WMSSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3WMSSerializer';\n\nexport class SHOGunMapFishPrintV3WMSSerializer extends MapFishPrintV3WMSSerializer {\n\n  serialize(layer: OlLayer, opts?: any) {\n    const serialized: any = super.serialize(layer, opts);\n\n    if (serialized.baseURL.startsWith('/geoserver/ows')) {\n      serialized.baseURL = `http://shogun-geoserver:8080${serialized.baseURL}`;\n    }\n\n    if (serialized.baseURL.startsWith('/geoserver/SHOGUN')) {\n      serialized.baseURL = `http://shogun-geoserver:8080${serialized.baseURL}`;\n    }\n\n    return serialized;\n  }\n}\n\nexport default SHOGunMapFishPrintV3WMSSerializer;\n","import defaultsDeep from 'lodash/defaultsDeep';\n\nimport OlLayer from 'ol/layer/Layer';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport MapFishPrintV3TiledWMSSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3TiledWMSSerializer';\n\nimport SHOGunMapFishPrintV3WMSSerializer from './SHOGunMapFishPrintV3WMSSerializer';\n\nexport class SHOGunMapFishPrintV3TiledWMSSerializer extends SHOGunMapFishPrintV3WMSSerializer {\n\n  serialize(layer: OlLayer<OlSourceTileWMS>, opts: any) {\n    const optsToApply = {\n      tileSize: [512, 512],\n      ...opts\n    };\n\n    const source = layer.getSource();\n\n    if (!source || !this.validateSource(source)) {\n      return;\n    }\n\n    const serialized = {\n      ...super.serialize(layer, optsToApply),\n      ...{\n        type: MapFishPrintV3TiledWMSSerializer.TYPE_WMS\n      },\n      ...opts\n    };\n\n    return serialized;\n  }\n}\n\nexport default SHOGunMapFishPrintV3TiledWMSSerializer;\n","import React, {\n  useEffect, useState\n} from 'react';\n\nimport { Input } from 'antd';\nimport { InputProps } from 'antd/lib/input';\n\nimport _isNil from 'lodash/isNil';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport { addCustomParam } from '../../../store/print';\n\ninterface CustomFieldInputProps extends InputProps {}\n\nexport const CustomFieldInput: React.FC<CustomFieldInputProps> = ({\n  value,\n  id,\n  placeholder,\n  maxLength,\n  ...restProps\n}): JSX.Element => {\n\n  const [inputText, setInputText] = useState<any>(value);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (!_isNil(id)) {\n      dispatch(addCustomParam({\n        [id]: inputText\n      }));\n    }\n  }, [inputText, id, dispatch]);\n\n  useEffect(() => {\n    setInputText(value);\n  }, [value]);\n\n  return (\n    <Input\n      id={id}\n      value={inputText}\n      onChange={(event) => setInputText(event.target.value)}\n      placeholder={placeholder}\n      maxLength={maxLength}\n      showCount={!!(maxLength && maxLength > 1)}\n      {...restProps}\n    />\n  );\n};\n\nexport default CustomFieldInput;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport {\n  Layout\n} from '../';\n\nexport interface LayoutSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const LayoutSelect: React.FC<LayoutSelectProps> = ({\n  printManager,\n  placeholder = 'Bitte wählen Sie eine Vorlage aus',\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [layout, setLayout] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setLayout(layout);\n    }\n  }, [printManager, layout]);\n\n  useEffect(() => {\n    setLayout(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={layout}\n      onChange={setLayout}\n      {...restProps}\n    >\n      {\n        printManager?.getLayouts().map((l: Layout) => (\n          <Select.Option\n            key={l.name}\n            value={l.name}\n          >\n            {l.name}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default LayoutSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface OutputFormatSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n  outputFormats: string[];\n}\n\nexport const OutputFormatSelect: React.FC<OutputFormatSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  outputFormats,\n  ...restProps\n}): JSX.Element => {\n\n  const [outputFormat, setOutputFormat] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setOutputFormat(outputFormat);\n    }\n  }, [printManager, outputFormat]);\n\n  useEffect(() => {\n    setOutputFormat(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={outputFormat}\n      onChange={setOutputFormat}\n      {...restProps}\n    >\n      {\n        outputFormats.map((f: string) => (\n          <Select.Option\n            key={f}\n            value={f}\n          >\n            {f.toLocaleUpperCase()}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default OutputFormatSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface ResolutionSelectProps extends SelectProps<number> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const ResolutionSelect: React.FC<ResolutionSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [resolution, setResolution] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setDpi(resolution);\n    }\n  }, [printManager, resolution]);\n\n  useEffect(() => {\n    setResolution(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={resolution}\n      onChange={setResolution}\n      {...restProps}\n    >\n      {\n        printManager?.getDpis().map((d: number) => (\n          <Select.Option\n            key={d}\n            value={d}\n          >\n            {`${d} DPI`}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default ResolutionSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport interface ScaleSelectProps extends SelectProps<number> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const ScaleSelect: React.FC<ScaleSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const map = useMap();\n\n  const [scale, setScale] = useState<number>(0);\n\n  useEffect(() => {\n    if (printManager && scale) {\n      printManager.setScale(scale);\n    }\n  }, [printManager, scale]);\n\n  useEffect(() => {\n    const updateScale = () => {\n      const pmScale = printManager.getScale();\n      if (pmScale) {\n        setScale(pmScale);\n      }\n    };\n    const transformInteraction = map?.getInteractions().getArray().find(i => {\n      return i.get('name') === MapFishPrintV3Manager.TRANSFORM_INTERACTION_NAME;\n    });\n\n    if (printManager && transformInteraction) {\n      if (transformInteraction) {\n        // @ts-ignore\n        transformInteraction.on('scaling', updateScale);\n\n        return () => {\n          // @ts-ignore\n          transformInteraction.un('scaling', updateScale);\n        };\n      }\n    }\n  }, [printManager, map]);\n\n  useEffect(() => {\n    if (value) {\n      setScale(value);\n    }\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={scale}\n      onChange={setScale}\n      {...restProps}\n    >\n      {\n        printManager?.getScales().map((s: number) => (\n          <Select.Option\n            key={s}\n            value={s}\n          >\n            {`1 : ${s.toLocaleString()}`}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default ScaleSelect;\n","import OlLayer from 'ol/layer/Layer';\nimport OlRendererLayer from 'ol/renderer/Layer';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSource from 'ol/source/Source';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport Shared from '@terrestris/mapfish-print-manager/dist/util/Shared';\n\nShared.getLegendGraphicUrl = (layer: OlLayer<OlSource, OlRendererLayer<any>>): string => {\n  if (layer.get('legendUrl')) {\n    return layer.get('legendUrl');\n  }\n\n  if (layer.getSource() instanceof OlSourceTileWMS ||\n    layer.getSource() instanceof OlSourceImageWMS) {\n\n    const customParams: any = layer.get('customPrintLegendParams');\n    const source: any = layer.getSource();\n\n    const {\n      LAYERS,\n      VERSION,\n      FORMAT\n    } = source.getParams();\n\n    let url: string = source instanceof OlSourceImageWMS ?\n      source.getUrl() :\n      source.getUrls()[0];\n\n    if (url.startsWith('/geoserver/ows')) {\n      url = `http://shogun-geoserver:8080${url}`;\n    }\n\n    const params: any = {\n      LAYER: LAYERS.split(',')[0],\n      VERSION: VERSION || '1.3.0',\n      SERVICE: 'WMS',\n      REQUEST: 'GetLegendGraphic',\n      FORMAT: FORMAT || 'image/png',\n      ...customParams\n    };\n\n    const queryParams = Object.keys(params).map(key => {\n      return `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`;\n    }).join('&');\n\n    if (url.startsWith('/geoserver/SHOGUN')) {\n      url = `http://shogun-geoserver:8080${url}/service?`;\n      return `${url}${queryParams}`;\n    }\n\n    if (url.endsWith('?')) {\n      return `${url}${queryParams}`;\n    } else {\n      return `${url}?${queryParams}`;\n    }\n  }\n\n  return '';\n};\n","import React, {\n  useCallback, useEffect, useState\n} from 'react';\n\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n  Alert, Button, Form\n} from 'antd';\nimport { FormProps } from 'antd/lib/form/Form';\nimport ClientConfiguration from 'clientConfig';\nimport _isNil from 'lodash/isNil';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayer from 'ol/layer/Layer';\nimport OlSource from 'ol/source/Source';\n\nimport { useTranslation } from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport { MapFishPrintV3Manager } from '@terrestris/mapfish-print-manager';\nimport { MapFishPrintV3ManagerOpts } from '@terrestris/mapfish-print-manager/dist/manager/MapFishPrintV3Manager';\nimport MapFishPrintV3GeoJsonSerializer\n  from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3GeoJsonSerializer';\nimport MapFishPrintV3OSMSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3OSMSerializer';\nimport MapFishPrintV3WMTSSerializer\n  from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3WMTSSerializer';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport { useMap } from '@terrestris/react-geo/dist/Hook/useMap';\nimport { getBearerTokenHeader } from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport SHOGunMapFishPrintV3TiledWMSSerializer from '../PrintForm/Serializer/SHOGunMapFishPrintV3TiledWMSSerializer';\nimport SHOGunMapFishPrintV3WMSSerializer from '../PrintForm/Serializer/SHOGunMapFishPrintV3WMSSerializer';\n\nimport CustomFieldInput from './CustomFieldInput';\nimport LayoutSelect from './LayoutSelect';\nimport OutputFormatSelect from './OutputFormatSelect';\nimport ResolutionSelect from './ResolutionSelect';\nimport ScaleSelect from './ScaleSelect';\n\nimport '../PrintForm/Shared/Shared';\n\nexport interface Layout {\n  name: string;\n  attributes: any[];\n}\n\nexport interface PrintFormProps extends Omit<FormProps, 'form'> {\n  active: boolean;\n  customPrintScales?: number[];\n  layerBlackList?: string[];\n  layouts?: Layout[];\n  outputFormats?: string[];\n}\n\nexport const PrintForm: React.FC<PrintFormProps> = ({\n  active,\n  customPrintScales = [],\n  layerBlackList = [],\n  outputFormats=['pdf', 'png'],\n  ...restProps\n}): JSX.Element => {\n\n  const [form] = Form.useForm();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  const map = useMap();\n\n  const currentLanguageCode = i18n.language;\n\n  const client = useSHOGunAPIClient();\n\n  const customMapParams = useAppSelector(state => state.print.customMapParams);\n  const customParams = useAppSelector(state => state.print.customParams);\n\n  const [printManager, setPrintManager] = useState<MapFishPrintV3Manager | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMsg, setErrorMsg] = useState<string | null>(null);\n\n  const layerFilter = useCallback((l: OlLayer<OlSource>) => {\n    if (!map) {\n      return;\n    }\n\n    const layerName = l.get('name');\n\n    return layerName && !layerBlackList.includes(layerName) &&\n      l.getVisible() && !(l instanceof OlLayerGroup) &&\n      MapUtil.layerInResolutionRange(l, map);\n  }, [map, layerBlackList]);\n\n  const legendFilter = useCallback((l: OlLayer<OlSource>) => {\n    if (_isNil(map)) {\n      return false;\n    }\n    const layerName = l.get('name');\n    const notBlacklisted = !layerBlackList.includes(layerName);\n    const notHidden = !l.get('hideLegendInPrint');\n    const visible = l.getVisible() && MapUtil.layerInResolutionRange(l, map);\n    const printableLayer = !(l instanceof OlLayerGroup);\n\n    if (notBlacklisted && notHidden && visible && printableLayer) {\n      const res = map?.getView().getResolution();\n      if (res) {\n        l.set('customPrintLegendParams', {\n          SCALE: MapUtil.getScaleForResolution(res, 'm')\n        });\n      }\n      return true;\n    }\n    return false;\n  }, [map, layerBlackList]);\n\n  const initializeMapProvider = useCallback(async () => {\n    if (_isNil(map)) {\n      return;\n    }\n    let pManagerOpts: MapFishPrintV3ManagerOpts = {\n      url: ClientConfiguration.print?.url || '/print',\n      map,\n      customPrintScales: map\n        ?.getView()\n        ?.getResolutions()\n        ?.map((d: number | undefined) => {\n          const units = map?.getView()?.getProjection()?.getUnits();\n          if (typeof d !== 'undefined') {\n            const scale = MapUtil.getScaleForResolution(d, units);\n            if (typeof scale !== 'undefined') {\n              return MapUtil.roundScale(scale);\n            }\n          }\n          return undefined;\n        })\n        .filter((scale: number | undefined) => typeof scale !== 'undefined')\n        ?.reverse() as number[] | undefined,\n      timeout: 60000,\n      layerFilter,\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak())\n      },\n      transformOpts: {\n        rotate: false\n      },\n      serializers: [\n        new MapFishPrintV3GeoJsonSerializer(),\n        new MapFishPrintV3OSMSerializer(),\n        new MapFishPrintV3WMTSSerializer(),\n        new SHOGunMapFishPrintV3WMSSerializer(),\n        new SHOGunMapFishPrintV3TiledWMSSerializer()\n      ],\n      legendFilter\n    };\n\n    if (customPrintScales.length > 0) {\n      pManagerOpts = {\n        ...pManagerOpts,\n        ...{\n          customPrintScales: customPrintScales.reverse()\n        }\n      };\n    }\n\n    const pManager: MapFishPrintV3Manager = new MapFishPrintV3Manager(pManagerOpts);\n\n    try {\n      await pManager.init();\n\n      // Use locale print app if available.\n      // Implies that a print app with the language code exists.\n      const apps = pManager.getPrintApps();\n\n      if (apps && currentLanguageCode && apps.includes(currentLanguageCode)) {\n        await pManager.setPrintApp(currentLanguageCode);\n      }\n\n      pManager.setOutputFormat(pManager.getOutputFormats()[0]);\n      pManager.setDpi(pManager.getDpis()[0]);\n      pManager.setLayout(pManager.getLayouts()[0]?.name);\n\n      setPrintManager(pManager);\n    } catch (error) {\n      setErrorMsg(() => t('PrintForm.managerErrorMessage'));\n      Logger.error('Could not initialize print manager: ', error);\n    }\n  }, [client, layerFilter, legendFilter, map, t, customPrintScales, currentLanguageCode]);\n\n  useEffect(() => {\n    if (active) {\n      if (!printManager) {\n        initializeMapProvider();\n      }\n    } else {\n      printManager?.shutdownManager();\n      setPrintManager(null);\n    }\n  }, [printManager, active, initializeMapProvider]);\n\n  useEffect(() => {\n    if (printManager) {\n      if (customParams) {\n        printManager.setCustomParams(customParams);\n      }\n      if (customMapParams) {\n        printManager.setCustomMapParams(customMapParams);\n      }\n    }\n  }, [printManager, customParams, customMapParams]);\n\n  const onDownloadClick = async () => {\n    try {\n      setErrorMsg(null);\n      setLoading(true);\n\n      if (!printManager) {\n        return;\n      }\n\n      const downloadUrl = await printManager.print(false);\n\n      if (!downloadUrl) {\n        throw new Error('No download URL available, the job has failed.');\n      }\n\n      window.open(downloadUrl);\n    } catch (error: any) {\n      setErrorMsg(t('PrintForm.printJobErrorMsg') || null);\n      Logger.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onAlertClose = () => {\n    setErrorMsg(null);\n  };\n\n  return (\n    <div className=\"print\">\n      {\n        errorMsg &&\n        <Alert\n          className=\"print-alert\"\n          message={errorMsg}\n          type=\"error\"\n          closable\n          showIcon\n          onClose={onAlertClose}\n        />\n      }\n      {\n        printManager?.isInitiated() && (\n          <>\n            <Form\n              form={form}\n              className=\"print-form\"\n              labelAlign=\"left\"\n              labelCol={{\n                flex: '90px'\n              }}\n              {...restProps}\n            >\n              <Form.Item\n                name=\"title\"\n                label={t('PrintForm.title')}\n                initialValue={t('PrintForm.initialTitle')}\n              >\n                <CustomFieldInput\n                  maxLength={50}\n                  placeholder={t('PrintForm.titlePlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"comment\"\n                label={t('PrintForm.comment')}\n              >\n                <CustomFieldInput\n                  maxLength={200}\n                  placeholder={t('PrintForm.commentPlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"layout\"\n                label={t('PrintForm.layout')}\n                initialValue={printManager?.getLayouts()[0]?.name}\n              >\n                <LayoutSelect\n                  printManager={printManager}\n                />\n              </Form.Item>\n              <Form.Item\n                name='scale'\n                label={t('PrintForm.scale')}\n                initialValue={printManager?.getClosestScaleToFitMap()}\n              >\n                <ScaleSelect\n                  printManager={printManager}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"dpi\"\n                label={t('PrintForm.dpi')}\n                initialValue={printManager.getDpis()[0]}\n              >\n                <ResolutionSelect\n                  printManager={printManager}\n                  placeholder={t('PrintForm.resolutionPlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"format\"\n                label={t('PrintForm.format')}\n                initialValue=\"pdf\"\n              >\n                <OutputFormatSelect\n                  printManager={printManager}\n                  outputFormats={outputFormats}\n                  placeholder={t('PrintForm.outputFormatPlaceholder')}\n                />\n              </Form.Item>\n            </Form>\n            <Button\n              className='print-button tool-menu-button'\n              disabled={!printManager?.isInitiated()}\n              icon={<FontAwesomeIcon icon={faDownload} />}\n              loading={loading}\n              onClick={onDownloadClick}\n            >\n              {t('PrintForm.downloadBtnText')}\n            </Button>\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default PrintForm;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import * as React from 'react';\n\nimport {\n  useEffect,\n  useState\n} from 'react';\n\nimport CardStyle, {\n  CardStyleProps\n} from 'geostyler/dist/Component/CardStyle/CardStyle';\n\nimport OlParser from 'geostyler-openlayers-parser';\n\nimport {\n  Style as GsStyle\n} from 'geostyler-style';\n\nimport OlFeature from 'ol/Feature';\n\nimport OlLayerVector from 'ol/layer/Vector';\n\nimport VectorSource from 'ol/source/Vector';\n\nimport {\n  StyleFunction,\n  StyleLike as OlStyleLike\n} from 'ol/style/Style';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport type StylingComponentProps = CardStyleProps & {};\n\nexport const StylingComponent: React.FC<StylingComponentProps> = ({\n  ...passThroughProps\n}): JSX.Element => {\n\n  const defaultStyle: GsStyle = {\n    name: 'Default Style',\n    rules: [{\n      name: 'Area',\n      symbolizers: [{\n        kind: 'Fill',\n        color: '#00b72b',\n        outlineOpacity: 0.8,\n        opacity: 0.5,\n        fillOpacity: 0.8,\n        outlineWidth: 2,\n        outlineColor: '#00b72b'\n      }]\n    }, {\n      name: 'Line',\n      symbolizers: [{\n        kind: 'Line',\n        color: '#00b72b',\n        width: 2,\n        opacity: 0.8\n      }]\n    }, {\n      name: 'Point',\n      symbolizers: [{\n        kind: 'Mark',\n        wellKnownName: 'circle',\n        color: '#00b72b',\n        strokeColor: '#00b72b',\n        strokeOpacity: 0.8,\n        opacity: 0.5,\n        radius: 7\n      }],\n      filter: [\n        '==',\n        'label',\n        'undefined'\n      ]\n    }, {\n      name: 'Text',\n      symbolizers: [{\n        kind: 'Text',\n        label: '{{label}}',\n        size: 12,\n        font: [\n          'sans-serif'\n        ],\n        opacity: 0.8,\n        color: '#00b72b',\n        offset: [\n          5,\n          5\n        ],\n        haloColor: '#00b72b',\n        haloWidth: 1\n      }],\n      filter: [\n        '!=',\n        'label',\n        'undefined'\n      ]\n    }]\n  };\n\n  const [style, setStyle] = useState<GsStyle>(defaultStyle);\n\n  const map = useMap();\n\n  useEffect(() => {\n    if (!style || !map) {\n      return;\n    }\n\n    const olParser = new OlParser();\n\n    let drawVectorLayer = MapUtil.getLayerByName(map, 'react-geo_digitize') as OlLayerVector<VectorSource>;\n\n    const parseStyles = async () => {\n      let olStylePolygon: OlStyleLike;\n      let olStyleLineString: OlStyleLike;\n      let olStylePoint: OlStyleLike;\n      let olStyleText: OlStyleLike;\n\n      for (const rule of style.rules) {\n        const newStyle: GsStyle = {\n          name: '',\n          rules: [rule]\n        };\n\n        const olStyle = await olParser.writeStyle(newStyle);\n\n        if (!olStyle.output) {\n          return;\n        }\n\n        if (rule.symbolizers[0].kind === 'Fill') {\n          olStylePolygon = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Text') {\n          olStyleText = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Line') {\n          olStyleLineString = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Mark') {\n          olStylePoint = olStyle.output;\n        }\n      }\n\n      const drawLayerStyleFunction = (feature: OlFeature, resolution: number) => {\n        const geometryType = feature.getGeometry()?.getType();\n\n        if (!geometryType) {\n          return;\n        }\n\n        if (['MultiPolygon', 'Polygon', 'Circle'].includes(geometryType)) {\n          return typeof olStylePolygon === 'function' ? olStylePolygon(feature, resolution) : olStylePolygon;\n        }\n\n        if (['MultiLineString', 'LineString'].includes(geometryType)) {\n          return typeof olStyleLineString === 'function' ? olStyleLineString(feature, resolution) : olStyleLineString;\n        }\n\n        if (['MultiPoint', 'Point'].includes(geometryType)) {\n          if (feature.get('label')) {\n            return typeof olStyleText === 'function' ? olStyleText(feature, resolution) : olStyleText;\n          }\n\n          return typeof olStylePoint === 'function' ? olStylePoint(feature, resolution) : olStylePoint;\n        }\n      };\n\n      drawVectorLayer.setStyle(drawLayerStyleFunction as StyleFunction);\n    };\n\n    parseStyles();\n  }, [style, map]);\n\n  return (\n    <CardStyle\n      style={style}\n      onStyleChange={setStyle}\n      {...passThroughProps}\n    />\n  );\n};\n\nexport default StylingComponent;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faPaintBrush\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Drawer,\n  DrawerProps\n} from 'antd';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport './index.less';\n\nimport StylingComponent from './StylingComponent';\n\nexport type StylingDrawerProps = DrawerProps & {};\n\nexport const StylingDrawer: React.FC<StylingDrawerProps> = ({\n  ...passThroughProps\n}): JSX.Element => {\n\n  const [open, setOpen] = useState(false);\n\n  const {\n    t\n  } = useTranslation();\n\n  const showDrawer = () => {\n    setOpen(true);\n  };\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button\n        type=\"link\"\n        onClick={showDrawer}\n        icon={<FontAwesomeIcon icon={faPaintBrush} />}\n      >\n        {t('StylingDrawer.pickColor')}\n      </Button>\n      <Drawer\n        title={t('StylingDrawer.title')}\n        placement=\"right\"\n        onClose={onClose}\n        open={open}\n        mask={false}\n        width={'45vw'}\n        className=\"color-pick-drawer\"\n        {...passThroughProps}\n      >\n        <StylingComponent />\n      </Drawer>\n    </>\n  );\n};\n\nexport default StylingDrawer;\n","import React, {\n  ChangeEvent\n} from 'react';\n\nimport {\n  faDrawPolygon,\n  faGripLines,\n  faCircle,\n  faFont,\n  faSquare,\n  faPenToSquare,\n  faUpload,\n  faTrash,\n  faDownload\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Feature\n} from 'ol';\nimport GeoJSON from 'ol/format/GeoJSON';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport DeleteButton from '@terrestris/react-geo/dist/Button/DeleteButton/DeleteButton';\nimport DrawButton from '@terrestris/react-geo/dist/Button/DrawButton/DrawButton';\nimport ModifyButton from '@terrestris/react-geo/dist/Button/ModifyButton/ModifyButton';\nimport SimpleButton from '@terrestris/react-geo/dist/Button/SimpleButton/SimpleButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\nimport UploadButton from '@terrestris/react-geo/dist/Button/UploadButton/UploadButton';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport './index.less';\n\nimport StylingDrawer from './StylingDrawer';\n\ninterface DefaultDrawProps {\n  showDrawPoint?: boolean;\n  showDrawLine?: boolean;\n  showDrawPolygon?: boolean;\n  showDrawCircle?: boolean;\n  showDrawRectangle?: boolean;\n  showDrawAnnotation?: boolean;\n  showModifyFeatures?: boolean;\n  showUploadFeatures?: boolean;\n  showDownloadFeatures?: boolean;\n  showDeleteFeatures?: boolean;\n}\n\nexport interface DrawProps extends Partial<DefaultDrawProps> { }\n\nexport const Draw: React.FC<DrawProps> = ({\n  showDrawPoint,\n  showDrawLine,\n  showDrawPolygon,\n  showDrawCircle,\n  showDrawRectangle,\n  showDrawAnnotation,\n  showModifyFeatures,\n  showUploadFeatures,\n  showDownloadFeatures,\n  showDeleteFeatures\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const onGeoJSONDownload = () => {\n    const clonedFeatures: Feature[] = [];\n    if (map) {\n      const mapProjection = map.getView().getProjection().getCode();\n      const digitizeLayer = DigitizeUtil.getDigitizeLayer(map);\n      const digitizedFeatures = digitizeLayer.getSource()?.getFeatures();\n      if (digitizedFeatures && digitizedFeatures.length > 0) {\n        digitizedFeatures.forEach(feat => {\n          const clonedFeature = feat.clone();\n          clonedFeature.getGeometry()?.transform(mapProjection, 'EPSG:4326');\n          clonedFeatures.push(clonedFeature);\n        });\n        const geoJSON = new GeoJSON().writeFeatures(clonedFeatures);\n\n        const fileToDownload = new Blob([geoJSON], {\n          type: 'application/geo+json'\n        });\n\n        // download the file\n        const url = window.URL.createObjectURL(fileToDownload);\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'exportedFeatures.geojson');\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n  };\n\n  const onUploadChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const uploadedFiles = e.target.files;\n    if (\n      (uploadedFiles && uploadedFiles.length === 1) &&\n      (\n        uploadedFiles[0].type === 'application/geo+json' ||\n        uploadedFiles[0].type === 'application/geojson' ||\n        uploadedFiles[0].name.includes('.geojson') ||\n        uploadedFiles[0].name.includes('.json')\n      )\n    ) {\n      onGeoJSONUpload(uploadedFiles[0]);\n    }\n  };\n\n  const onGeoJSONUpload = (geoJSONFile: File) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      const geoJSONFeatures = new GeoJSON().readFeatures(fileReader.result);\n\n      if (map) {\n        const mapProjection = map.getView().getProjection().getCode();\n        geoJSONFeatures.forEach(feat => {\n          feat.getGeometry()?.transform('EPSG:4326', mapProjection);\n        });\n        const digitizeLayer = DigitizeUtil.getDigitizeLayer(map);\n        const digitizeLayerSource = digitizeLayer.getSource();\n        digitizeLayerSource?.addFeatures(geoJSONFeatures);\n      }\n    };\n\n    fileReader.readAsText(geoJSONFile);\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <ToggleGroup>\n\n      {showDrawPoint ? (\n        <DrawButton\n          name=\"draw-point\"\n          drawType=\"Point\"\n          type=\"link\"\n          pressed={false}\n        >\n          <FontAwesomeIcon\n            icon={faCircle}\n          />\n          <span\n            className=\"draw-point\"\n          >\n            {t('Draw.point')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawLine ? (\n        <DrawButton\n          name=\"draw-line\"\n          drawType=\"LineString\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faGripLines}\n          />\n          <span\n            className=\"draw-line\"\n          >\n            {t('Draw.line')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawPolygon ? (\n        <DrawButton\n          name=\"draw-polygon\"\n          drawType=\"Polygon\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faDrawPolygon}\n          />\n          <span\n            className=\"draw-polygon\"\n          >\n            {t('Draw.polygon')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawCircle ? (\n        <DrawButton\n          name=\"draw-circle\"\n          drawType=\"Circle\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faCircle}\n          />\n          <span\n            className=\"draw-circle\"\n          >\n            {t('Draw.circle')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawRectangle ? (\n        <DrawButton\n          name=\"draw-rectangle\"\n          drawType=\"Rectangle\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faSquare}\n          />\n          <span\n            className=\"draw-rectangle\"\n          >\n            {t('Draw.rectangle')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawAnnotation ? (\n        <DrawButton\n          name=\"draw-text\"\n          drawType=\"Text\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faFont}\n          />\n          <span\n            className=\"draw-text\"\n          >\n            {t('Draw.text')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showModifyFeatures ? (\n        <ModifyButton\n          name=\"draw-modify\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faPenToSquare}\n          />\n          <span\n            className=\"draw-modify\"\n          >\n            {t('Draw.modify')}\n          </span>\n        </ModifyButton>\n      ) : <></>}\n\n      {showUploadFeatures ? (\n        <UploadButton\n          name=\"draw-upload\"\n          onChange={onUploadChange}\n          type=\"link\"\n        >\n          <SimpleButton\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faUpload}\n            />\n            <span\n              className=\"draw-upload\"\n            >\n              {t('Draw.upload')}\n            </span>\n          </SimpleButton>\n        </UploadButton>\n      ) : <></>}\n\n      {showDownloadFeatures ? (\n        <SimpleButton\n          name=\"draw-export\"\n          onClick={onGeoJSONDownload}\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faDownload}\n          />\n          <span\n            className=\"draw-export\"\n          >\n            {t('Draw.export')}\n          </span>\n        </SimpleButton>\n      ) : <></>}\n\n      {showDeleteFeatures ? (\n        <DeleteButton\n          name=\"draw-delete\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faTrash}\n          />\n          <span\n            className=\"draw-delete\"\n          >\n            {t('Draw.delete')}\n          </span>\n        </DeleteButton>\n      ) : <></>}\n      <StylingDrawer />\n    </ToggleGroup>\n  );\n};\n\nexport default Draw;\n","import {\n  useCallback,\n  useEffect\n} from 'react';\n\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\nimport OlStyleCircle from 'ol/style/Circle';\nimport OlStyleFill from 'ol/style/Fill';\nimport OlStyleStroke from 'ol/style/Stroke';\nimport OlStyle from 'ol/style/Style';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport type HighlightVectorLayerOpts = {\n  layerName: string;\n};\n\nexport const useHighlightVectorLayer = (opts: HighlightVectorLayerOpts) => {\n  const map = useMap();\n\n  const initVectorLayer = useCallback(async () => {\n    if (!map) {\n      return;\n    }\n\n    if (MapUtil.getLayerByName(map, opts.layerName)) {\n      return;\n    }\n\n    const source = new OlSourceVector();\n\n    const fill = new OlStyleFill({\n      color: 'rgba(255, 255, 255, 0.15)'\n    });\n    const stroke = new OlStyleStroke({\n      color: 'rgba(209, 70, 47, 1)',\n      width: 2\n    });\n    const featureStyle = new OlStyle({\n      fill,\n      stroke,\n      image: new OlStyleCircle({\n        radius: 5,\n        fill,\n        stroke\n      })\n    });\n\n    const layer = new OlLayerVector({\n      source: source,\n      style: featureStyle\n    });\n\n    layer.set('name', opts.layerName);\n\n    map.addLayer(layer);\n  }, [map, opts.layerName]);\n\n  const deinitVectorLayer = useCallback(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, opts.layerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    map.removeLayer(vectorLayer);\n  }, [map, opts.layerName]);\n\n  useEffect(() => {\n    initVectorLayer();\n\n    return () => deinitVectorLayer();\n  }, [deinitVectorLayer, initVectorLayer]);\n};\n\nexport default useHighlightVectorLayer;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport {\n  Form,\n  FormProps\n} from 'antd';\n\nimport {\n  useForm\n} from 'antd/lib/form/Form';\n\nimport OlFeature from 'ol/Feature';\n\nimport {\n  PropertyFormItemReadConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport DisplayField from '../../../DisplayField';\n\nimport './index.less';\n\nexport type FeatureInfoFormProps = FormProps & {\n  formConfig?: PropertyFormItemReadConfig[];\n  feature: OlFeature;\n};\n\nexport const FeatureInfoForm: React.FC<FeatureInfoFormProps> = ({\n  formConfig,\n  feature,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const [form] = useForm();\n\n  useEffect(() => {\n    form.setFieldsValue(feature.getProperties());\n  }, [feature, form]);\n\n  const createFormItem = (fieldCfg: any) => {\n    let field: React.ReactNode;\n\n    const createReadOnlyComponent = (fieldConfig: any) => {\n      return (\n        <DisplayField\n          {...fieldConfig.fieldProps}\n        />\n      );\n    };\n\n    field = createReadOnlyComponent(fieldCfg);\n\n    return (\n      <Form.Item\n        key={fieldCfg.propertyName}\n        name={fieldCfg.propertyName}\n        label={fieldCfg.displayName || fieldCfg.propertyName}\n        {...fieldCfg.fieldProps}\n      >\n        {field}\n      </Form.Item>\n    );\n  };\n\n  return (\n    <Form\n      className=\"feature-info-form\"\n      form={form}\n      labelCol={{\n        span: 8\n      }}\n      labelAlign=\"left\"\n      labelWrap\n      {...passThroughProps}\n    >\n      {formConfig?.map(createFormItem)}\n    </Form>\n  );\n\n};\n\nexport default FeatureInfoForm;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faClipboardCheck,\n  faClipboardList\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Pagination,\n  PaginationProps,\n  Tooltip\n} from 'antd';\n\nimport copy from 'copy-to-clipboard';\n\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isFinite from 'lodash/isFinite';\n\nimport OlFeature from 'ol/Feature';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlGeometry from 'ol/geom/Geometry';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport './index.less';\n\nexport type PaginationToolbarProps = {\n  features: OlFeature[];\n  selectedFeature: OlFeature;\n  exportFilter?: (propertyName: string, propertyValue: string) => boolean;\n} & PaginationProps;\n\nexport const PaginationToolbar: React.FC<PaginationToolbarProps> = ({\n  features,\n  selectedFeature,\n  exportFilter,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const {\n    t\n  } = useTranslation();\n\n  const onCopyAsGeoJSONClick = () => {\n    if (!selectedFeature) {\n      return;\n    }\n\n    const selectedFeatureClone = selectedFeature.clone();\n\n    if (exportFilter) {\n      const propertyEntries = Object.entries(selectedFeatureClone.getProperties());\n      const filteredPropertyEntries = propertyEntries.filter(([key, value]) => exportFilter(key, value));\n\n      for (const [key, value] of propertyEntries) {\n        if (value instanceof OlGeometry) {\n          continue;\n        }\n\n        selectedFeatureClone.unset(key);\n      }\n\n      selectedFeatureClone.setProperties(Object.fromEntries(filteredPropertyEntries));\n    }\n\n    copy(new OlFormatGeoJSON().writeFeature(selectedFeatureClone));\n  };\n\n  const onCopyAsObjectClick = () => {\n    if (!selectedFeature) {\n      return;\n    }\n\n    let props = Object.entries(_cloneDeep(selectedFeature.getProperties()))\n      .filter(([, value]) => !(value instanceof OlGeometry));\n\n    if (exportFilter) {\n      props = props.filter(([key, value]) => exportFilter(key, value));\n    }\n\n    copy(JSON.stringify(Object.fromEntries(props)));\n  };\n\n  return (\n    <div\n      className=\"pagination-toolbar\"\n    >\n      <Pagination\n        simple\n        total={features.length}\n        size=\"small\"\n        pageSize={1}\n        {...passThroughProps}\n      />\n      <div\n        className=\"copy-buttons\"\n      >\n        <Tooltip\n          title={t('PaginationToolbar.copyAsGeoJson')}\n        >\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            onClick={onCopyAsGeoJSONClick}\n            icon={<FontAwesomeIcon icon={faClipboardCheck} />}\n          />\n        </Tooltip>\n        <Tooltip\n          title={t('PaginationToolbar.copyAsObject')}\n        >\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            onClick={onCopyAsObjectClick}\n            icon={<FontAwesomeIcon icon={faClipboardList} />}\n          />\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nexport default PaginationToolbar;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Tabs,\n  TabsProps\n} from 'antd';\n\nimport OlFeature from 'ol/Feature';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  Tab\n} from 'rc-tabs/lib/interface';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  PropertyFormItemReadConfig,\n  PropertyFormTabConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useHighlightVectorLayer from '../../../../hooks/useHighlightVectorLayer';\n\nimport FeatureInfoForm from '../FeatureInfoForm';\nimport PaginationToolbar from '../PaginationToolbar';\n\nimport './index.less';\n\nexport type FeatureInfoTabsProps = TabsProps & {\n  features: OlFeature[];\n  layerName: string;\n  tabConfig?: PropertyFormTabConfig<PropertyFormItemReadConfig>[];\n};\n\nexport const FeatureInfoTabs: React.FC<FeatureInfoTabsProps> = ({\n  features,\n  layerName,\n  tabConfig,\n  ...passThroughProps\n}) => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n\n  const map = useMap();\n\n  const vectorLayerName = `selection-layer-${layerName}`;\n\n  useHighlightVectorLayer({\n    layerName: vectorLayerName\n  });\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    setCurrentPage(1);\n\n    if (features.length > 0) {\n      setSelectedFeature(features[0]);\n    }\n  }, [features, map, vectorLayerName]);\n\n  useEffect(() => {\n    if (!selectedFeature || !map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    vectorLayer.getSource()?.addFeature(selectedFeature);\n  }, [selectedFeature, map, vectorLayerName]);\n\n  const onChange = (page: number) => {\n    if (page < 1) {\n      return;\n    }\n\n    setCurrentPage(page);\n    setSelectedFeature(features[page - 1]);\n  };\n\n  if (!tabConfig || !selectedFeature) {\n    return <></>;\n  }\n\n  const exportFilter = (propertyName: string) => {\n    let match = false;\n\n    for (const conf of tabConfig) {\n      if (!conf.children) {\n        continue;\n      }\n\n      for (const child of conf.children) {\n        if (child.propertyName === propertyName) {\n          match = true;\n          break;\n        }\n      }\n    }\n\n    return match;\n  };\n\n  const items = tabConfig\n    .filter(config => config !== undefined)\n    .map((config, idx) => {\n      return {\n        label: config.title,\n        key: `${idx}`,\n        forceRender: true,\n        children: (\n          <FeatureInfoForm\n            name={config.title}\n            feature={selectedFeature}\n            formConfig={config.children}\n          />\n        )\n      } as Tab;\n    });\n\n  return (\n    <div\n      className=\"feature-info-tabs\"\n    >\n      <PaginationToolbar\n        features={features}\n        selectedFeature={selectedFeature}\n        current={currentPage}\n        onChange={onChange}\n        exportFilter={exportFilter}\n      />\n      <Tabs\n        items={items}\n        {...passThroughProps}\n      />\n    </div>\n  );\n};\n\nexport default FeatureInfoTabs;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  TableProps\n} from 'antd';\n\nimport _isFinite from 'lodash/isFinite';\n\nimport OlFeature from 'ol/Feature';\nimport OlGeometry from 'ol/geom/Geometry';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport PropertyGrid from '@terrestris/react-geo/dist/Grid/PropertyGrid/PropertyGrid';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useHighlightVectorLayer from '../../../../hooks/useHighlightVectorLayer';\n\nimport PaginationToolbar from '../PaginationToolbar';\n\nimport './index.less';\n\nexport type FeatureInfoPropertyGridProps = {\n  features: OlFeature[];\n  layerName: string;\n} & TableProps<OlFeature>;\n\nexport const FeatureInfoPropertyGrid: React.FC<FeatureInfoPropertyGridProps> = ({\n  features,\n  layerName,\n  ...restProps\n}): JSX.Element => {\n  const [currentPage, setCurrentPage] = useState<number>();\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n  const [blacklistedAttributes, setBlacklistedAttributes] = useState<string[]>([]);\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  const vectorLayerName = `selection-layer-${layerName}`;\n\n  useHighlightVectorLayer({\n    layerName: vectorLayerName\n  });\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    setCurrentPage(1);\n\n    if (features.length > 0) {\n      setSelectedFeature(features[0]);\n    }\n  }, [features, map, vectorLayerName]);\n\n  useEffect(() => {\n    if (!selectedFeature || !map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    const geomAttributes = Object.entries(selectedFeature.getProperties())\n      .filter(([, value]) => value instanceof OlGeometry)\n      .map(([key]) => key);\n\n    setBlacklistedAttributes(geomAttributes);\n\n    vectorLayer.getSource()?.clear();\n    vectorLayer.getSource()?.addFeature(selectedFeature);\n  }, [selectedFeature, map, vectorLayerName]);\n\n  const onChange = (page: number) => {\n    setCurrentPage(page);\n    setSelectedFeature(features[page - 1]);\n  };\n\n  if (!selectedFeature) {\n    return <></>;\n  }\n\n  const attributeFilter = selectedFeature.getKeys()\n    .filter((prop: string | number | boolean) => {\n      return !blacklistedAttributes.includes((prop as string).toLocaleLowerCase());\n    });\n\n  return (\n    <PropertyGrid\n      className=\"property-grid\"\n      feature={selectedFeature}\n      attributeFilter={attributeFilter}\n      size=\"small\"\n      sticky={true}\n      title={() => (\n        <PaginationToolbar\n          features={features}\n          selectedFeature={selectedFeature}\n          current={currentPage}\n          onChange={onChange}\n        />\n      )}\n      columns={[{\n        title: t('FeaturePropertyGrid.key'),\n        dataIndex: 'attributeName',\n        key: 'attributeName',\n        width: '50%',\n        ellipsis: true,\n        defaultSortOrder: 'ascend',\n        sorter: (a, b) => a.key.localeCompare(b.key)\n      }, {\n        title: t('FeaturePropertyGrid.value'),\n        dataIndex: 'attributeValue',\n        key: 'attributeValue',\n        width: '50%',\n        ellipsis: true\n      }]}\n      scroll={{\n        scrollToFirstRowOnChange: true,\n        y: 'calc(100% - 90px)'\n      }}\n      {...restProps}\n    />\n  );\n};\n\nexport default FeatureInfoPropertyGrid;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Tabs,\n  FormProps,\n  Spin\n} from 'antd';\n\nimport {\n  getUid\n} from 'ol';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlLayerBase from 'ol/layer/Base';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  Tab\n} from 'rc-tabs/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport CoordinateInfo, {\n  CoordinateInfoState,\n  CoordinateInfoProps\n} from '@terrestris/react-geo/dist/CoordinateInfo/CoordinateInfo';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  isWmsLayer,\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport usePlugins from '../../../hooks/usePlugins';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport {\n  isFeatureInfoIntegration\n} from '../../../plugin';\n\nimport {\n  SelectedFeatures,\n  setSelectedFeatures\n} from '../../../store/selectedFeatures';\n\nimport FeatureInfoTabs from './FeatureInfoTabs';\nimport FeatureInfoPropertyGrid from './FeaturePropertyGrid';\n\nimport './index.less';\n\nexport type FeatureInfoProps = FormProps & {\n  enabled?: boolean;\n} & Partial<CoordinateInfoProps>;\n\nexport const FeatureInfo: React.FC<FeatureInfoProps> = ({\n  enabled,\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const plugins = usePlugins();\n  const dispatch = useAppDispatch();\n\n  const [queryLayers, setQueryLayers] = useState<WmsLayer[]>([]);\n\n  const layerFilter = (layer: OlLayerBase) => {\n    if (!layer.get('hoverable')) {\n      return false;\n    }\n    if (layer instanceof OlLayerImage && layer.getSource() instanceof OlSourceImageWMS) {\n      return true;\n    }\n    return layer instanceof OlLayerTile && layer.getSource() instanceof OlSourceTileWMS;\n  };\n\n  const updateQueryLayers = useCallback(() => {\n    if (!map) {\n      return;\n    }\n\n    const layerCandidates = MapUtil.getAllLayers(map, layerFilter) as WmsLayer[];\n    setQueryLayers(layerCandidates.filter(l => l.getVisible()));\n  }, [map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    updateQueryLayers();\n\n    const mapLayers = MapUtil.getAllLayers(map, layerFilter) as WmsLayer[];\n    mapLayers.forEach(l => l.on('change:visible', updateQueryLayers));\n\n    return () => {\n      mapLayers.forEach(l => l.un('change:visible', updateQueryLayers));\n    };\n\n  }, [map, updateQueryLayers]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  const resultRenderer = (coordinateInfoState: CoordinateInfoState) => {\n    const features = coordinateInfoState.features;\n    const loading = coordinateInfoState.loading;\n\n    if (Object.keys(features).length === 0) {\n      return (\n        <span className='usage-hint'>\n          {t('FeatureInfo.usageHint')}\n        </span>\n      );\n    }\n\n    const items: Tab[] = [];\n\n    Object.keys(features).forEach(layerName => {\n      let pluginRendererAvailable = false;\n\n      const mapLayer = map.getAllLayers().find(l => {\n        if (isWmsLayer(l)) {\n          const source = (l as WmsLayer).getSource();\n          const unqualifiedMapLayerName = getUnqualifiedLayerName(source?.getParams().LAYERS);\n          const unqualifiedLayerName = getUnqualifiedLayerName(layerName);\n\n          return unqualifiedLayerName === unqualifiedMapLayerName;\n        }\n        return false;\n      });\n\n      plugins.forEach(plugin => {\n        if (isFeatureInfoIntegration(plugin.integration) &&\n          ((Array.isArray(plugin.integration.layers) && plugin.integration.layers.includes(layerName)) ||\n            !plugin.integration.layers)) {\n          const {\n            key,\n            wrappedComponent: WrappedPluginComponent\n          } = plugin;\n\n          items.push({\n            label: layerName,\n            key: layerName,\n            children: (\n              <WrappedPluginComponent\n                key={key}\n              />\n            )\n          });\n\n          pluginRendererAvailable = true;\n        }\n      });\n\n      if (!pluginRendererAvailable) {\n        items.push({\n          label: mapLayer?.get('name') || layerName,\n          key: layerName,\n          children: (\n            <div\n              key={layerName}\n            >\n              {\n                mapLayer?.get('featureInfoFormConfig') ?\n                  <FeatureInfoTabs\n                    tabConfig={mapLayer?.get('featureInfoFormConfig')}\n                    features={features[layerName]}\n                    layerName={layerName}\n                  /> :\n                  <FeatureInfoPropertyGrid\n                    features={features[layerName]}\n                    layerName={layerName}\n                  />\n              }\n            </div>\n          )\n        });\n      }\n    });\n\n    return (\n      <Spin\n        spinning={loading}\n      >\n        <Tabs\n          destroyInactiveTabPane={true}\n          items={items}\n        />\n      </Spin>\n    );\n  };\n\n  const getUnqualifiedLayerName = (layerName: string) => {\n    return layerName.split(':').length > 1 ?\n      layerName.split(':')[1] :\n      layerName.split(':')[0];\n  };\n\n  if (!enabled) {\n    return <></>;\n  }\n\n  const getFetchOpts = () => {\n    const opts: {\n      [uid: string]: RequestInit;\n    } = {};\n\n    queryLayers.forEach(layer => {\n      const layerUid = getUid(layer);\n      opts[layerUid] = {\n        headers: {\n          ...layer.get('useBearerToken') ? {\n            ...getBearerTokenHeader(client?.getKeycloak())\n          } : undefined\n        }\n      };\n    });\n\n    return opts;\n  };\n\n  const onSuccess = (coordinateInfoState: CoordinateInfoState) => {\n    const features = coordinateInfoState.features;\n\n    const serializedFeatures: SelectedFeatures = {};\n    Object.entries(features).forEach(entry => {\n      const layerName = entry[0];\n      const selectedFeatures = entry[1];\n\n      serializedFeatures[layerName] = new OlFormatGeoJSON().writeFeatures(selectedFeatures);\n    });\n\n    dispatch(setSelectedFeatures(serializedFeatures));\n  };\n\n  return (\n    <div className='feature-info-panel'>\n      <CoordinateInfo\n        featureCount={10}\n        map={map}\n        queryLayers={queryLayers}\n        resultRenderer={resultRenderer}\n        fetchOpts={getFetchOpts()}\n        onSuccess={onSuccess}\n        {...restProps}\n      />\n    </div>\n  );\n};\n\nexport default FeatureInfo;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  faClock\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Divider\n} from 'antd';\n\nimport moment from 'moment';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport TimeSlider, {\n  TimeSliderProps\n} from '@terrestris/react-geo/dist/Slider/TimeSlider/TimeSlider';\n\nimport './index.less';\n\ninterface WmsTimeSliderProps extends Omit<TimeSliderProps, 'min' | 'max' | 'marks' | 'useRange' |\n  'onChange' | 'defaultValue' | 'value' | 'formatString'> {\n  layer: OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>;\n}\n\nexport const WmsTimeSlider: React.FC<WmsTimeSliderProps> = ({\n  layer,\n  ...passThroughProps\n}) => {\n  const [value, setValue] = useState<string | [string, string]>(layer.getSource()?.getParams().TIME);\n  const [min, setMin] = useState<string>();\n  const [max, setMax] = useState<string>();\n  const [marks, setMarks] = useState<Record<string | number, string> | undefined>();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    const dimension = layer.get('dimension');\n\n    if (!dimension) {\n      return;\n    }\n\n    let timeValues;\n    if (dimension.values) {\n      timeValues = dimension.values.split(',');\n    }\n\n    if (!timeValues || timeValues.length === 0) {\n      return;\n    }\n\n    setMin(timeValues[0]);\n    setMax(timeValues[timeValues.length - 1]);\n    setValue(timeValues[timeValues.length - 1]);\n\n    const m: Record<string | number, string> = {};\n    timeValues.forEach((val: string, idx: number) => {\n      m[val] = moment(val).format('YYYY-MM-DD');\n    });\n\n    setMarks(m);\n\n    if (timeValues.default === 'current') {\n      let nearest: [number, string] = [NaN, ''];\n      Object.values(m).forEach(d => {\n        let diff = moment().diff(moment(d));\n\n        if (diff < nearest[0]) {\n          nearest = [diff, d];\n        }\n      });\n\n      setValue(nearest[1]);\n    }\n  }, [layer]);\n\n  const onChange = (val: string | [string, string]) => {\n    setValue(val);\n\n    layer.getSource()?.updateParams({\n      TIME: val\n    });\n  };\n\n  return (\n    <div\n      className=\"wms-time-slider\"\n    >\n      <Divider>\n        <FontAwesomeIcon\n          icon={faClock}\n        />\n        {t('WmsTimeSlider.title')}\n      </Divider>\n      {\n        marks ?\n          <TimeSlider\n            min={min}\n            max={max}\n            marks={marks}\n            value={value}\n            onChange={onChange}\n            step={null}\n            {...passThroughProps}\n          /> :\n          <span>\n            {t('WmsTimeSlider.default')}\n          </span>\n      }\n    </div>\n  );\n};\n\nexport default WmsTimeSlider;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faEllipsisV\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Dropdown,\n  DropDownProps,\n  notification,\n  Spin\n} from 'antd';\nimport {\n  ItemType\n} from 'antd/lib/menu/hooks/useItems';\n\nimport {\n  getUid\n} from 'ol';\nimport OlLayerBase from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport {\n  transformExtent\n} from 'ol/proj';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  MenuInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport LayerUtil from '@terrestris/ol-util/dist/LayerUtil/LayerUtil';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  DownloadConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../../../hooks/useSHOGunAPIClient';\n\nimport {\n  setLayerId,\n  setFeature\n} from '../../../../store/editFeature';\nimport {\n  show as showEditFeatureDrawer\n} from '../../../../store/editFeatureDrawerOpen';\n\nimport {\n  setLayer as setLayerDetailsLayer,\n  show as showLayerDetailsModal\n} from '../../../../store/layerDetailsModal';\n\nexport type LayerTreeContextMenuProps = {\n  layer: OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>;\n  visibleLegendsIds: string[];\n  setVisibleLegendsIds: (ids: string[]) => void;\n} & Partial<DropDownProps>;\n\nexport const LayerTreeContextMenu: React.FC<LayerTreeContextMenuProps> = ({\n  layer,\n  visibleLegendsIds,\n  setVisibleLegendsIds,\n  ...restProps\n}): JSX.Element => {\n\n  const [settingsVisible, setSettingsVisible] = useState<boolean>(false);\n  const [extentLoading, setExtentLoading] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  const downloadConfig: DownloadConfig[] = layer.get('downloadConfig') ?? null;\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  const onContextMenuItemClick = (evt: MenuInfo): void => {\n    if (evt?.key.startsWith('downloadLayer')) {\n      const url = evt.key.split('|')[1];\n      downloadLayer(decodeURI(url));\n    }\n    switch (evt?.key) {\n      case 'zoomToExtent':\n        zoomToLayerExtent();\n        break;\n      case 'removeExternal':\n        removeExternalLayer();\n        break;\n      case 'toggleLegend':\n        const legendId: string = getUid(layer);\n        const newLegendIds = [...visibleLegendsIds];\n        if (newLegendIds.includes(legendId)) {\n          newLegendIds.splice(newLegendIds.indexOf(legendId), 1);\n        } else {\n          newLegendIds.push(legendId);\n        }\n        setVisibleLegendsIds(newLegendIds);\n        break;\n      case 'editLayer':\n        dispatch(setFeature(null));\n        dispatch(setLayerId(getUid(layer)));\n        dispatch(showEditFeatureDrawer());\n        break;\n      case 'layerDetails':\n        dispatch(setLayerDetailsLayer(getUid(layer)));\n        dispatch(showLayerDetailsModal());\n        break;\n      default:\n        break;\n    }\n    setSettingsVisible(false);\n  };\n\n  const zoomToLayerExtent = async (): Promise<void> => {\n    if (!map) {\n      return;\n    }\n\n    setExtentLoading(true);\n\n    try {\n      let extent = await LayerUtil.getExtentForLayer(layer, {\n        headers: layer.get('useBearerToken') ? {\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : {}\n      });\n      extent = transformExtent(extent, 'EPSG:4326', map.getView().getProjection());\n      map.getView().fit(extent);\n    } catch (error) {\n      Logger.error(error);\n      notification.error({\n        message: t('LayerTreeContextMenu.extentError')\n      });\n    } finally {\n      setExtentLoading(false);\n    }\n  };\n\n  const getParentLayerGroups = (l: OlLayerBase): OlLayerGroup[] => {\n    if (!map) {\n      return [];\n    }\n\n    const layerGroups = getAllLayerGroups(map.getLayerGroup())\n      .filter(layerGroup => layerGroup.getLayers().getArray().includes(l));\n\n    return layerGroups;\n  };\n\n  const getAllLayerGroups = (layerGroup: OlLayerGroup): OlLayerGroup[] => {\n    const layerGroups = [layerGroup];\n\n    for (const l of layerGroup.getLayers().getArray()) {\n      if (l instanceof OlLayerGroup) {\n        layerGroups.push(...getAllLayerGroups(l));\n      }\n    }\n\n    return layerGroups;\n  };\n\n  const removeLayer = (l: OlLayerBase) => {\n    const parentGroups = getParentLayerGroups(l);\n\n    parentGroups.forEach(parentGroup => parentGroup.getLayers().remove(l));\n  };\n\n  const removeExternalLayer = () => {\n    if (!map) {\n      return;\n    }\n\n    removeLayer(layer);\n\n    const externalLayerGroup = MapUtil.getLayerByName(map, t('AddLayerModal.externalWmsFolder')) as OlLayerGroup;\n    const uploadedLayerGroup = MapUtil.getLayerByName(map, t('UploadDataModal.uploadedDataFolder')) as OlLayerGroup;\n\n    if (externalLayerGroup && externalLayerGroup.getLayers().getLength() === 0) {\n      removeLayer(externalLayerGroup);\n    }\n\n    if (uploadedLayerGroup && uploadedLayerGroup.getLayers().getLength() === 0) {\n      removeLayer(uploadedLayerGroup);\n    }\n  };\n\n  const downloadLayer = async (url: string) => {\n    if (!layer) {\n      return;\n    }\n    const reqOpts = {\n      method: 'GET',\n      headers: {\n        ...layer.get('useBearerToken') ? {\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : undefined\n      }\n    };\n\n    const res = await fetch(url, reqOpts);\n    const blob = await res.blob();\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.setAttribute('download', layer.get('name'));\n    a.click();\n  };\n\n  let dropdownMenuItems: ItemType[] = [];\n\n  if (isWmsLayer(layer)) {\n    dropdownMenuItems.push({\n      label: (\n        <Spin\n          spinning={extentLoading}\n        >\n          {t('LayerTreeContextMenu.layerZoomToExtent')}\n        </Spin>\n      ),\n      key: 'zoomToExtent'\n    });\n  }\n\n  if (isWmsLayer(layer) && layer.getVisible()) {\n    const legendVisible = visibleLegendsIds.includes(getUid(layer));\n\n    dropdownMenuItems.push({\n      label: legendVisible ? t('LayerTreeContextMenu.hideLegend') : t('LayerTreeContextMenu.showLegend'),\n      key: 'toggleLegend'\n    });\n  }\n\n  if (layer.get('isExternalLayer') || layer.get('isUploadedLayer')) {\n    dropdownMenuItems.push({\n      label: t('LayerTreeContextMenu.removeLayer'),\n      key: 'removeExternal'\n    });\n  }\n\n  if (downloadConfig) {\n    const downloadItems = downloadConfig.map((dlConfig: DownloadConfig) => {\n      return {\n        label: t('LayerTreeContextMenu.downloadLayer', {\n          formatName: dlConfig.formatName ?? 'XML'\n        }),\n        key: `downloadLayer|${encodeURI(dlConfig.downloadUrl)}`\n      };\n    });\n    dropdownMenuItems.push(...downloadItems);\n  }\n\n  if (\n    layer.get('editable') &&\n    (allowedEditMode.includes('CREATE') ||\n      allowedEditMode.includes('UPDATE') ||\n      allowedEditMode.includes('DELETE'))\n  ) {\n    dropdownMenuItems.push({\n      label: t('LayerTreeContextMenu.editLayer'),\n      key: 'editLayer'\n    });\n  }\n\n  dropdownMenuItems.push({\n    label: t('LayerTreeContextMenu.layerDetails'),\n    key: 'layerDetails'\n  });\n\n  return (\n    <Dropdown\n      menu={{\n        items: dropdownMenuItems,\n        onClick: onContextMenuItemClick\n      }}\n      placement=\"bottomLeft\"\n      onOpenChange={setSettingsVisible}\n      open={settingsVisible}\n      trigger={['click']}\n      {...restProps}\n    >\n      <FontAwesomeIcon icon={faEllipsisV} />\n    </Dropdown>\n  );\n};\n\nexport default LayerTreeContextMenu;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport { Progress } from 'antd';\n\nimport {\n  getUid, MapBrowserEvent\n} from 'ol';\nimport OlBaseLayer from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayer from 'ol/layer/Layer';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSource from 'ol/source/Source';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport RgLayerTree, {\n  LayerTreeProps as RgLayerTreeProps\n} from '@terrestris/react-geo/dist/LayerTree/LayerTree';\nimport Legend from '@terrestris/react-geo/dist/Legend/Legend';\nimport LayerTransparencySlider from '@terrestris/react-geo/dist/Slider/LayerTransparencySlider/LayerTransparencySlider';\n\nimport LayerType from '@terrestris/shogun-util/dist/model/enum/LayerType';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport WmsTimeSlider from '../../WmsTimeSlider';\n\nimport LayerTreeContextMenu from './LayerTreeContextMenu';\n\nimport './index.less';\n\nexport type LayerTreeProps = {} & Partial<RgLayerTreeProps>;\n\nexport type LayerTileLoadCounter = {\n  [key: string]: {\n    loading: number;\n    loaded: number;\n    percent: number;\n  };\n};\n\nexport const LayerTree: React.FC<LayerTreeProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const {\n    t\n  } = useTranslation();\n\n  const [visibleLegendsIds, setVisibleLegendsIds] = useState<string[]>([]);\n  const [layerTileLoadCounter, setLayerTileLoadCounter] = useState<LayerTileLoadCounter>({});\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const allLayers = MapUtil.getAllLayers(map);\n    allLayers.forEach(layer => {\n      if (layer instanceof OlLayer) {\n        const source = layer.getSource();\n        if (!source.hasListener('tileloadstart')) {\n          source.on('tileloadstart', tileLoadStartListener);\n        }\n        if (!source.hasListener('tileloadend') && !source.hasListener('tileloaderror')) {\n          source.on(['tileloadend', 'tileloaderror'], tileLoadEndListener);\n        }\n      }\n    });\n\n    return () => {\n      allLayers.forEach(layer => {\n        if (layer instanceof OlLayer) {\n          const source = layer.getSource();\n          if (source.hasListener('tileloadstart')) {\n            source.un('tileloadstart', tileLoadStartListener);\n          }\n          if (source.hasListener('tileloadend')) {\n            source.un('tileloadend', tileLoadEndListener);\n          }\n          if (source.hasListener('tileloaderror')) {\n            source.un('tileloaderror', tileLoadEndListener);\n          }\n        }\n      });\n    };\n  }, [map]);\n\n  const tileLoadStartListener = (evt: MapBrowserEvent<UIEvent>) => {\n    setLayerTileLoadCounter((counter: LayerTileLoadCounter) => {\n      const uid = parseInt(getUid(evt.target), 10);\n      const update = {...counter};\n      // reset when load was finished\n      if (update[uid] && update[uid].loaded >= update[uid].loading) {\n        update[uid].loading = 1;\n        update[uid].loaded = 0;\n        update[uid].percent = 0;\n        return update;\n      }\n      if (!update[uid]) {\n        update[uid] = {\n          loading: 0,\n          loaded: 0,\n          percent: 0\n        };\n      }\n      update[uid].loading = Number.isInteger(update[uid].loading) ?\n        update[uid].loading + 1 : 1;\n      return update;\n    });\n  };\n\n  const tileLoadEndListener = (evt: MapBrowserEvent<UIEvent>) => {\n    setLayerTileLoadCounter((counter: LayerTileLoadCounter) => {\n      const uid = parseInt(getUid(evt.target), 10);\n      const update = {...counter};\n      if (!update[uid]) {\n        update[uid] = {\n          loading: 0,\n          loaded: 0,\n          percent: 0\n        };\n      }\n      update[uid].loaded = Number.isInteger(update[uid].loaded) ?\n        update[uid].loaded + 1 : 1;\n      const percent = Math.round(update[uid].loaded / update[uid].loading * 100);\n      if (percent > update[uid].percent) {\n        update[uid].percent = percent;\n      }\n      return update;\n    });\n  };\n\n  const treeFilterFunction = (layer: OlLayer<OlSource> | OlLayerGroup) => {\n    if ((layer as OlLayerGroup).getLayers) {\n      return !layer.get('hideInLayerTree');\n    }\n\n    return !((layer as OlLayer).getSource && ((layer as OlLayer).getSource() as OlSourceVector)?.forEachFeature);\n  };\n\n  const treeNodeTitleRenderer = (layer: OlBaseLayer) => {\n    if (!map) {\n      return;\n    }\n\n    const mapView = map.getView();\n    const unit = mapView.getProjection().getUnits() || 'm';\n    const resolution = mapView.getResolution();\n    const scale = resolution ? MapUtil.getScaleForResolution(resolution, unit) : undefined;\n    const percent = layer instanceof OlLayer && getUid(layer.getSource()) ?\n      layerTileLoadCounter[getUid(layer.getSource())]?.percent : 100;\n\n    if (layer instanceof OlLayerGroup) {\n      return (\n        <div>\n          {layer.get('name')}\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"tree-node-header\">\n            <Progress\n              className='loading-indicator'\n              type=\"circle\"\n              percent={percent}\n              format={() => ''}\n              width={16}\n              strokeWidth={20}\n            />\n            <span>{layer.get('name')}</span>\n            {\n              (layer instanceof OlLayerTile || layer instanceof OlLayerImage) && (\n                <LayerTreeContextMenu\n                  layer={layer}\n                  visibleLegendsIds={visibleLegendsIds}\n                  setVisibleLegendsIds={setVisibleLegendsIds}\n                />\n              )\n            }\n\n          </div>\n          {\n            layer.get('visible') &&\n            <div className=\"layer-transparency\">\n              <LayerTransparencySlider\n                tooltip={{\n                  formatter: val => `${t('LayerTree.transparency')}: ${val}%`\n                }}\n                layer={layer}\n              />\n            </div>\n          }\n          {\n            (layer.get('visible') && layer.get('type') as LayerType === 'WMSTime') &&\n            <div className=\"layer-time-slider\">\n              <WmsTimeSlider\n                layer={layer as OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>}\n              />\n            </div>\n          }\n          {\n            (layer.get('visible') && visibleLegendsIds.includes(getUid(layer))) &&\n            <Legend\n              layer={layer as OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>}\n              errorMsg={t('LayerTree.noLegendAvailable')}\n              extraParams={{\n                scale,\n                LEGEND_OPTIONS: 'fontAntiAliasing:true;forceLabels:on',\n                TRANSPARENT: true\n              }}\n              headers={\n                layer.get('useBearerToken') ?\n                  {\n                    ...getBearerTokenHeader(client?.getKeycloak())\n                  } :\n                  {}\n              }\n            />\n          }\n        </>\n      );\n    }\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <RgLayerTree\n      className=\"layertree\"\n      map={map}\n      nodeTitleRenderer={treeNodeTitleRenderer}\n      filterFunction={treeFilterFunction}\n      draggable\n      {...restProps}\n    />\n  );\n};\n\nexport default LayerTree;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faDrawPolygon,\n  faPenRuler\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MeasureButton from '@terrestris/react-geo/dist/Button/MeasureButton/MeasureButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\ninterface DefaultMeasureProps {\n  showMeasureDistance?: boolean;\n  showMeasureArea?: boolean;\n}\n\nexport interface MeasureProps extends Partial<DefaultMeasureProps> { }\n\nexport const Measure: React.FC<MeasureProps> = ({\n  showMeasureDistance,\n  showMeasureArea\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <ToggleGroup>\n      {showMeasureDistance ? (\n        <MeasureButton\n          geodesic\n          name=\"line\"\n          map={map}\n          measureType=\"line\"\n          type=\"link\"\n          continueLineMsg={t('Measure.clicktodrawline')}\n        >\n          <FontAwesomeIcon icon={faPenRuler} />\n          <span className=\"measure-text\">{t('Measure.line')}</span>\n        </MeasureButton>\n      ) : <></>}\n\n      {showMeasureArea ? (\n        <MeasureButton\n          geodesic\n          name=\"poly\"\n          map={map}\n          measureType=\"polygon\"\n          type=\"link\"\n          continuePolygonMsg={t('Measure.clicktodrawarea')}\n        >\n          <FontAwesomeIcon icon={faDrawPolygon} />\n          <span className=\"measure-text\">{t('Measure.area')}</span>\n        </MeasureButton>\n      ) : <></>}\n\n    </ToggleGroup>\n  );\n};\n\nexport default Measure;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport type {\n  IconDefinition\n} from '@fortawesome/fontawesome-common-types';\n\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faDrawPolygon,\n  faFileDownload,\n  faLanguage,\n  faMousePointer,\n  faPlus,\n  faRuler,\n  faShareNodes,\n  faStream,\n  faUpload\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Collapse,\n  CollapsePanelProps,\n  Tooltip\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _toArray from 'lodash/toArray';\n\nconst { Panel } = Collapse;\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport usePlugins from '../../hooks/usePlugins';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nimport {\n  isToolMenuIntegration\n} from '../../plugin';\n\nimport {\n  show as showAdd\n} from '../../store/addLayerModal';\nimport {\n  setActiveKeys\n} from '../../store/toolMenu';\nimport {\n  show as showUpload\n} from '../../store/uploadDataModal';\n\nimport LanguageSelect from '../LanguageSelector';\nimport Permalink from '../Permalink';\nimport PrintForm from '../PrintForm';\n\nimport Draw from './Draw';\nimport FeatureInfo from './FeatureInfo';\nimport LayerTree from './LayerTree';\nimport Measure from './Measure';\n\nimport './index.less';\n\nexport interface TitleEventEntity {\n  key: string;\n  domEvent: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>;\n}\n\nexport type ToolPanelConfig = {\n  icon: IconDefinition;\n  title: string;\n  wrappedComponent: JSX.Element;\n};\n\nexport type ToolMenuProps = {} & Partial<CollapsePanelProps>;\n\nexport const ToolMenu: React.FC<ToolMenuProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n  const map = useMap();\n\n  const plugins = usePlugins();\n\n  const dispatch = useAppDispatch();\n  const availableTools = useAppSelector(state => state.toolMenu.availableTools);\n  const activeKeys = useAppSelector(state => state.toolMenu.activeKeys);\n\n  const client = useSHOGunAPIClient();\n  const keycloak = client?.getKeycloak();\n\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const [menuTools, setMenuTools] = useState<string[]>([]);\n\n  useEffect(() => {\n    const mobileQuery = window.matchMedia('only screen and (max-width: 450px) and (orientation: portrait),' +\n      'only screen and (max-width: 750px) and (orientation: landscape), only screen and (max-width: 580px)');\n    const mobileNavigatorRegEx = new RegExp('/Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle' +\n      '|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/');\n    const isMobile = mobileQuery.matches || mobileNavigatorRegEx.test(window.navigator.userAgent);\n\n    if (isMobile) {\n      setCollapsed(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (menuTools.length < 1) {\n      if (availableTools.includes('default')) {\n        setMenuTools([\n          'measure_tools',\n          'draw_tools',\n          'feature_info',\n          'print',\n          'tree',\n          'permalink',\n          'language_selector'\n        ]);\n      } else {\n        setMenuTools(availableTools);\n      }\n    }\n  }, [menuTools, availableTools]);\n\n  useEffect(() => {\n    if (\n      activeKeys.includes('print') &&\n      activeKeys.includes('measure_tools')\n    ) {\n      if (activeKeys.indexOf('print') < activeKeys.indexOf('measure_tools')) {\n        dispatch(setActiveKeys(activeKeys.filter(keys => keys !== 'print')));\n      } else {\n        dispatch(\n          setActiveKeys(activeKeys.filter(keys => keys !== 'measure_tools'))\n        );\n      }\n    }\n  }, [activeKeys, dispatch]);\n\n  const getToolPanels = (): JSX.Element[] => {\n\n    const panels: JSX.Element[] = [];\n\n    menuTools.forEach((tool: string) => {\n      const toolPanelConfig: ToolPanelConfig | undefined = getToolPanelConfig(tool);\n\n      if (!toolPanelConfig) {\n        return;\n      }\n      const {\n        icon,\n        title,\n        wrappedComponent\n      } = toolPanelConfig;\n\n      const panel = (\n        <Panel\n          className={tool}\n          header={\n            <>\n              {icon ? <FontAwesomeIcon icon={icon} /> : undefined}\n              <span>{title}</span>\n            </>\n          }\n          key={tool}\n        >\n          {wrappedComponent}\n        </Panel>\n      );\n      panels.push(panel);\n    });\n\n    if (plugins) {\n      plugins.forEach(plugin => {\n        if (isToolMenuIntegration(plugin.integration)) {\n          const {\n            key,\n            wrappedComponent: WrappedPluginComponent,\n            integration: {\n              placement,\n              label = 'Plugin',\n              insertionIndex,\n              icon,\n              ...passThroughProps\n            }\n          } = plugin;\n\n          panels.splice(insertionIndex || 0, 0, (\n            <Panel\n              header={\n                <>\n                  {icon ? <FontAwesomeIcon icon={icon} /> : undefined}\n                  <span>{t(label)}</span>\n                </>\n              }\n              key={key}\n              {...passThroughProps}\n            >\n              <WrappedPluginComponent />\n            </Panel>\n          ));\n        }\n      });\n    }\n    return panels;\n  };\n\n  const getToolPanelConfig = (tool: string): ToolPanelConfig | undefined => {\n    switch (tool) {\n      case 'measure_tools':\n        return {\n          icon: faRuler,\n          title: t('ToolMenu.measure'),\n          wrappedComponent: (\n            <Measure\n              showMeasureDistance={\n                availableTools.includes('default') || availableTools.includes('measure_tools_distance')\n              }\n              showMeasureArea={availableTools.includes('default') || availableTools.includes('measure_tools_area')}\n            />\n          )\n        };\n      case 'draw_tools':\n        return {\n          icon: faDrawPolygon,\n          title: t('ToolMenu.draw'),\n          wrappedComponent: (\n            <Draw\n              showDrawPoint={availableTools.includes('default') || availableTools.includes('draw_tools_point')}\n              showDrawLine={availableTools.includes('default') || availableTools.includes('draw_tools_line')}\n              showDrawPolygon={availableTools.includes('default') || availableTools.includes('draw_tools_polygon')}\n              showDrawCircle={availableTools.includes('default') || availableTools.includes('draw_tools_circle')}\n              showDrawRectangle={availableTools.includes('default') || availableTools.includes('draw_tools_rectangle')}\n              showDrawAnnotation={\n                availableTools.includes('default') || availableTools.includes('draw_tools_annotation')\n              }\n              showModifyFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_modify')}\n              showUploadFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_upload')}\n              showDownloadFeatures={\n                availableTools.includes('default') || availableTools.includes('draw_tools_download')\n              }\n              showDeleteFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_delete')}\n            />\n          )\n        };\n      case 'feature_info':\n        return {\n          icon: faMousePointer,\n          title: t('ToolMenu.featureInfo'),\n          wrappedComponent: (\n            <FeatureInfo\n              enabled={activeKeys.includes('feature_info')}\n            />\n          )\n        };\n      case 'print':\n        return {\n          icon: faFileDownload,\n          title: t('ToolMenu.print'),\n          wrappedComponent: map ? (\n            <PrintForm\n              active={activeKeys.includes('print')}\n              layerBlackList={[\n                'react-geo_measure',\n                'hoverVectorLayer'\n              ]}\n            />\n          ) : <></>\n        };\n      case 'tree':\n        return {\n          icon: faStream,\n          title: t('ToolMenu.layertree'),\n          wrappedComponent: (\n            <div className='tree-wrapper'>\n              <LayerTree />\n              <Button\n                className='add-wms-button tool-menu-button'\n                icon={<FontAwesomeIcon icon={faPlus} />}\n                onClick={() => dispatch(showAdd())}\n              >\n                {t('ToolMenu.addWms')}\n              </Button>\n              {\n                keycloak && ClientConfiguration.geoserver?.upload?.authorizedRoles?.some(\n                  role => keycloak.hasResourceRole(role, keycloak.clientId)) && (\n                  <Button\n                    className='upload-data-button tool-menu-button'\n                    icon={<FontAwesomeIcon icon={faUpload} />}\n                    onClick={() => dispatch(showUpload())}\n                  >\n                    {t('ToolMenu.uploadData')}\n                  </Button>\n                )\n              }\n            </div>\n          )\n        };\n      case 'permalink':\n        return {\n          icon: faShareNodes,\n          title: t('Permalink.title'),\n          wrappedComponent: <Permalink />\n        };\n      case 'language_selector':\n        return {\n          icon: faLanguage,\n          title: t('ToolMenu.languageSelect'),\n          wrappedComponent: <LanguageSelect />\n        };\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className={`tool-menu ${collapsed ? 'collapsed' : ''}`}>\n      <Collapse\n        expandIconPosition='end'\n        activeKey={activeKeys}\n        destroyInactivePanel={true}\n        onChange={(keys: string[] | string) => {\n          setCollapsed(false);\n          dispatch(setActiveKeys(_toArray(keys)));\n        }}\n        {...restProps}\n      >\n        {getToolPanels()}\n      </Collapse>\n      <Tooltip\n        placement={'right'}\n        title={collapsed ? t('ToolMenu.expand') : t('ToolMenu.collapse')}\n      >\n        <Button\n          className=\"collapse-btn\"\n          icon={\n            collapsed ?\n              <FontAwesomeIcon icon={faChevronRight} /> :\n              <FontAwesomeIcon icon={faChevronLeft} />\n          }\n          onClick={() => {\n            dispatch(setActiveKeys([]));\n            setCollapsed(!collapsed);\n          }}\n        />\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default ToolMenu;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faUpload\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Alert,\n  Modal,\n  ModalProps,\n  Spin,\n  Upload\n} from 'antd';\n\nconst { Dragger } = Upload;\n\nimport {\n  RcFile,\n  UploadChangeParam,\n  UploadFile\n} from 'antd/lib/upload/interface';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport TileLayer from 'ol/layer/Tile';\nimport TileWMSSource from 'ol/source/TileWMS';\n\nimport {\n  UploadRequestOption\n} from 'rc-upload/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Shapefile\n} from 'shapefile.js';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport {\n  hide\n} from '../../store/uploadDataModal';\n\nimport './index.less';\n\ntype FeatureTypeAttribute = {\n  name: string;\n  minOccurs: number;\n  maxOccurs: number;\n  nillable: boolean;\n  binding?: string | null;\n  length?: number;\n};\n\ntype FeatureTypeAttributes = {\n  attribute: FeatureTypeAttribute[];\n};\n\nexport type LayerUploadOptions = {\n  baseUrl: string;\n  workspace: string;\n  storeName: string;\n  layerName: string;\n  file: RcFile;\n};\n\nexport type LayerUploadResponse = {\n  layerName: string;\n  workspace: string;\n  baseUrl: string;\n};\n\nexport type UploadDataModalProps = {} & Partial<ModalProps>;\n\nexport const UploadDataModal: React.FC<UploadDataModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [uploadError, setUploadError] = useState('');\n  const [uploadSuccess, setUploadSuccess] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n\n  const isModalVisible = useAppSelector(state => state.uploadDataModal.visible);\n  const user = useAppSelector((state) => state.user);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const closeModal = () => {\n    setUploadError('');\n    setUploadSuccess('');\n    dispatch(hide());\n  };\n\n  const addLayer = (layer: TileLayer<TileWMSSource>) => {\n    if (!map) {\n      return;\n    }\n\n    const targetFolderName = t('UploadDataModal.uploadedDataFolder');\n    let targetGroup = MapUtil.getLayerByName(map, targetFolderName) as OlLayerGroup;\n\n    if (!targetGroup) {\n      targetGroup = new OlLayerGroup({\n        layers: [],\n        properties: {\n          name: targetFolderName\n        }\n      });\n      const existingGroups = map.getLayerGroup().getLayers();\n      existingGroups.insertAt(existingGroups?.getLength() || 0, targetGroup);\n    }\n\n    if (!targetGroup.getLayers().getArray().includes(layer)) {\n      targetGroup.getLayers().push(layer);\n    }\n  };\n\n  const onBeforeFileUpload = (file: RcFile) => {\n    const maxSize = ClientConfiguration.geoserver?.upload?.limit || 200000000;\n    const fileType = file.type;\n    const fileSize = file.size;\n\n    setUploadError('');\n    setUploadSuccess('');\n\n    if (fileSize > maxSize) {\n      setUploadError(t('UploadDataModal.error.maxSize', {\n        maxSize: maxSize / 1000000\n      }));\n\n      return false;\n    }\n\n    const supportedFormats = ['application/zip', 'image/tiff'];\n    if (!supportedFormats.includes(fileType)) {\n      setUploadError(t('UploadDataModal.error.supportedFormats', {\n        supportedFormats: supportedFormats.join(', ')\n      }));\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const uploadGeoTiff = async (options: LayerUploadOptions): Promise<void> => {\n    const {\n      baseUrl,\n      workspace,\n      storeName,\n      layerName,\n      file\n    } = options;\n\n    const coverageStoreUrl = `${baseUrl}/rest/workspaces/${workspace}/coveragestores/` +\n      `${storeName}/file.geotiff?configure=none`;\n\n    const coverageStoreResponse = await fetch(coverageStoreUrl, {\n      method: 'PUT',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'image/tiff'\n      },\n      body: file\n    });\n\n    if (!coverageStoreResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n\n    const coverageUrl = `${baseUrl}/rest/workspaces/${workspace}/coveragestores/${storeName}/coverages`;\n\n    const coverageResponse = await fetch(coverageUrl, {\n      method: 'POST',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        coverage: {\n          enabled: true,\n          name: layerName,\n          nativeName: layerName,\n          title: layerName,\n          keywords: {\n            // eslint-disable-next-line quote-props\n            'string': [\n              'User upload',\n              `Uploaded by ${user.providerDetails?.username}`\n            ]\n          }\n        }\n      })\n    });\n\n    if (!coverageResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n  };\n\n  const uploadShapeZip = async (options: LayerUploadOptions): Promise<void> => {\n    const {\n      baseUrl,\n      workspace,\n      storeName,\n      layerName,\n      file\n    } = options;\n\n    const shp = await Shapefile.load(file);\n\n    let featureTypeName = '';\n    let featureTypeAttributes: FeatureTypeAttributes = {\n      attribute: []\n    };\n\n    if (Object.entries(shp).length !== 1) {\n      throw new Error(t('UploadDataModal.error.zipContent'));\n    }\n\n    Object.entries(shp).forEach(([k, v]) => {\n      featureTypeName = k;\n\n      const dbfContent = v.parse('dbf', {\n        properties: false\n      });\n\n      featureTypeAttributes.attribute = dbfContent.fields.map(field => ({\n        name: field.name,\n        minOccurs: 0,\n        maxOccurs: 1,\n        nillable: true,\n        binding: getAttributeType(field.type),\n        length: field.length\n      }));\n\n      const shxContent = v.parse('shx');\n\n      featureTypeAttributes.attribute.push({\n        name: 'the_geom',\n        minOccurs: 0,\n        maxOccurs: 1,\n        nillable: true,\n        binding: getGeometryType(shxContent.header.type)\n      });\n    });\n\n    const url = `${baseUrl}/rest/workspaces/${workspace}/datastores/` +\n      `${storeName}/file.shp?configure=none`;\n\n    const response = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/zip'\n      },\n      body: file\n    });\n\n    if (!response.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n\n    const featureTypeUrl = `${baseUrl}/rest/workspaces/${workspace}/datastores/${storeName}/featuretypes`;\n\n    const featureTypeResponse = await fetch(featureTypeUrl, {\n      method: 'POST',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        featureType: {\n          enabled: true,\n          name: layerName,\n          nativeName: featureTypeName,\n          title: layerName,\n          attributes: featureTypeAttributes,\n          keywords: {\n            // eslint-disable-next-line quote-props\n            'string': [\n              'User upload',\n              `Uploaded by ${user.providerDetails?.username}`\n            ]\n          }\n        }\n      })\n    });\n\n    if (!featureTypeResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n  };\n\n  const onFileUploadAction = async (options: UploadRequestOption<LayerUploadResponse>) => {\n    const {\n      onError,\n      onSuccess,\n      file\n    } = options;\n\n    const splittedFileName = (file as RcFile).name.split('.');\n    const fileType = (file as RcFile).type;\n    const geoServerBaseUrl = ClientConfiguration.geoserver?.base || '/geoserver';\n    const workspace = ClientConfiguration.geoserver?.upload?.workspace || 'SHOGUN';\n    const layerName = `${splittedFileName[0]}_${Date.now()}`.toUpperCase();\n\n    const uploadData = {\n      file: file as RcFile,\n      baseUrl: geoServerBaseUrl,\n      workspace: workspace,\n      storeName: layerName,\n      layerName: layerName\n    };\n\n    try {\n      if (fileType === 'image/tiff') {\n        await uploadGeoTiff(uploadData);\n      }\n\n      if (fileType === 'application/zip') {\n        await uploadShapeZip(uploadData);\n      }\n\n      if (onSuccess) {\n        onSuccess({\n          baseUrl: geoServerBaseUrl,\n          workspace: workspace,\n          layerName: layerName\n        });\n      }\n    } catch (error) {\n      if (onError) {\n        onError({\n          name: 'UploadError',\n          message: (error instanceof Error) ? error.message : t('UploadDataModal.error.general', {\n            fileName: (file as RcFile).name\n          })\n        });\n      }\n    }\n  };\n\n  const onFileUploadChange = async (info: UploadChangeParam<UploadFile<LayerUploadResponse>>) => {\n    const file = info.file;\n\n    if (file.status === 'uploading') {\n      setIsUploading(true);\n    }\n\n    if (file.status === 'done') {\n      if (!client || !file.response) {\n        return;\n      }\n\n      const layerConfig: Layer = {\n        name: file.response.layerName,\n        type: 'TILEWMS',\n        clientConfig: {\n          hoverable: true\n        },\n        sourceConfig: {\n          url: `${file.response.baseUrl}/ows?`,\n          layerNames: `${file.response.workspace}:${file.response.layerName}`,\n          useBearerToken: true\n        }\n      };\n\n      const parser = new SHOGunApplicationUtil({\n        client\n      });\n\n      const olLayer = parser.parseTileLayer(layerConfig);\n      olLayer.set('layerConfig', layerConfig);\n      olLayer.set('isUploadedLayer', true);\n      olLayer.set('groupName', t('UploadDataModal.uploadedDataFolder'));\n      addLayer(olLayer);\n\n      setUploadSuccess(t('UploadDataModal.success', {\n        fileName: file.name,\n        layerName: file.response.layerName\n      }));\n\n      setIsUploading(false);\n    } else if (file.status === 'error') {\n      setIsUploading(false);\n\n      Logger.error(file.error);\n\n      if (file.error && file.error.message) {\n        setUploadError(file.error.message);\n      } else {\n        setUploadError(t('UploadDataModal.error.general', {\n          fileName: file.name\n        }));\n      }\n    }\n  };\n\n  const getGeometryType = (type: number) => {\n    const types: {\n      [key: number]: string | null;\n    } = {\n      0: null, // Null\n      1: 'org.locationtech.jts.geom.Point', // Point\n      3: 'org.locationtech.jts.geom.LineString', // Polyline\n      5: 'org.locationtech.jts.geom.Polygon', // Polygon\n      8: 'org.locationtech.jts.geom.MultiPoint', // MultiPoint\n      11: 'org.locationtech.jts.geom.Point', // PointZ\n      13: 'org.locationtech.jts.geom.LineString', // PolylineZ\n      15: 'org.locationtech.jts.geom.Polygon', // PolygonZ\n      18: 'org.locationtech.jts.geom.MultiPoint', // MultiPointZ\n      21: 'org.locationtech.jts.geom.Point', // PointM\n      23: 'org.locationtech.jts.geom.LineString', // PolylineM\n      25: 'org.locationtech.jts.geom.Polygon', // PolygonM\n      28: 'org.locationtech.jts.geom.MultiPoint', // MultiPointM\n      31: null // MultiPatch\n    };\n\n    return types[type];\n  };\n\n  const getAttributeType = (dbfFieldType: string) => {\n    switch (dbfFieldType) {\n      case 'C': // Character\n        return 'java.lang.String';\n      case 'D': // Date\n        return 'java.util.Date';\n      case 'N': // Numeric\n        return 'java.lang.Long';\n      case 'F': // Floating point\n        return 'java.lang.Double';\n      case 'L': // Logical\n        return 'java.lang.Boolean';\n      case 'M': // Memo\n        return null;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Modal\n      className=\"upload-data-modal\"\n      title={t('UploadDataModal.title')}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={600}\n      footer={false}\n      {...restProps}\n    >\n      {\n        uploadSuccess && (\n          <Alert\n            message={uploadSuccess}\n            closable={true}\n            type=\"success\"\n          />\n        )\n      }\n\n      {\n        uploadError && (\n          <Alert\n            message={uploadError}\n            closable={true}\n            type=\"error\"\n          />\n        )\n      }\n\n      <Spin\n        spinning={isUploading}\n      >\n        <Dragger\n          customRequest={onFileUploadAction}\n          accept='image/tiff,application/zip'\n          maxCount={1}\n          showUploadList={false}\n          beforeUpload={onBeforeFileUpload}\n          onChange={onFileUploadChange}\n        >\n          <p className=\"ant-upload-drag-icon\">\n            <FontAwesomeIcon\n              icon={faUpload}\n            />\n          </p>\n          <p className=\"ant-upload-text\">\n            {t('UploadDataModal.description')}\n          </p>\n          <p className=\"ant-upload-hint\">\n            {t('UploadDataModal.hint')}\n          </p>\n        </Dragger>\n      </Spin>\n    </Modal>\n  );\n};\n\nexport default UploadDataModal;\n","import _isEmpty from 'lodash/isEmpty';\n\nimport BaseLayer from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport PermalinkUtil from '@terrestris/ol-util/dist/PermalinkUtil/PermalinkUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\n\nimport useQueryParams from './useQueryParams';\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport const useRestoreTransientLayers = async () => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const queryParams = useQueryParams();\n  const {\n    t\n  } = useTranslation();\n\n  const layers = queryParams.get('layers');\n\n  if (!map) {\n    return;\n  }\n\n  const identifier = (l: BaseLayer) => l.get('name');\n  const filter = (l: BaseLayer) => (l instanceof OlLayerTile || l instanceof OlLayerImage);\n  const configString = PermalinkUtil.applyLink(map, ';', identifier, filter);\n\n  if (!configString) {\n    return;\n  }\n\n  const addLayerGroup = (name: string) => {\n    const layerGroup = new OlLayerGroup({\n      layers: []\n    });\n    layerGroup.set('name', name);\n    const existingGroups = map.getLayerGroup().getLayers();\n    existingGroups.insertAt(existingGroups?.getLength() || 0, layerGroup);\n\n    return layerGroup;\n  };\n\n  try {\n    const config = JSON.parse(configString);\n\n    if (!client) {\n      throw new Error('Client is not available');\n    }\n\n    const parser = new SHOGunApplicationUtil({\n      client\n    });\n\n    for (let i = 0; i < config.length; i++) {\n      const cfg = config[i];\n      if (!_isEmpty(cfg?.layerConfig)) {\n        const layerConfig: Layer = cfg.layerConfig;\n        const olLayer = await parser.parseLayer(layerConfig);\n\n        if (!olLayer) {\n          continue;\n        }\n\n        if (cfg.isExternalLayer) {\n          olLayer.set('isExternalLayer', cfg.isExternalLayer);\n        }\n\n        if (cfg.isUploadedLayer) {\n          olLayer.set('isUploadedLayer', cfg.isUploadedLayer);\n        }\n\n        olLayer.set('groupName', cfg.groupName);\n        olLayer.set('layerConfig', cfg.layerConfig);\n\n        olLayer.setVisible(!!layers?.split(';').some(l => l === layerConfig.name));\n\n        if (!(olLayer.get('isExternalLayer') || olLayer.get('isUploadedLayer'))) {\n          continue;\n        }\n\n        let targetGroup: OlLayerGroup;\n\n        if (olLayer.get('groupName')) {\n          // handle custom layer group\n          targetGroup = MapUtil.getLayerByName(map, olLayer.get('groupName')) as OlLayerGroup;\n\n          if (!targetGroup) {\n            targetGroup = addLayerGroup(olLayer.get('groupName'));\n          }\n        } else {\n          // handle default layer group for external layers (external and uploaded layers)\n          targetGroup = MapUtil.getLayersByProperty(map, 'isExternalLayerGroup', true)?.[0] as OlLayerGroup;\n          if (!targetGroup) {\n            targetGroup = addLayerGroup(t('AddLayerModal.externalWmsFolder'));\n            targetGroup.set('isExternalLayerGroup', true);\n          }\n        }\n\n        if (!MapUtil.getLayerByName(map, olLayer.get('name'))) {\n          targetGroup.getLayers().push(olLayer);\n        }\n      }\n    }\n  } catch (error) {\n    Logger.error(error);\n  }\n};\n\nexport default useRestoreTransientLayers;\n","import React from 'react';\n\nexport default function useQueryParams() {\n  const {\n    search\n  } = window.location;\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport AddLayerModal from './components/AddLayerModal/index';\nimport BasicMapComponent from './components/BasicMapComponent';\nimport EditFeatureDrawer from './components/EditFeatureDrawer';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport LayerDetailsModal from './components/LayerDetailsModal';\nimport ToolMenu from './components/ToolMenu';\nimport UploadDataModal from './components/UploadDataModal';\n\nimport useRestoreTransientLayers from './hooks/useRestoreTransientLayers';\n\nimport './App.less';\n\nexport interface AppProps extends React.ComponentProps<'div'> { };\n\nexport const App: React.FC<AppProps> = ({\n  ...restProps\n}): JSX.Element => {\n\n  useRestoreTransientLayers();\n\n  useEffect(() => {\n    const loadingMask = document.querySelectorAll('.loadmask')[0];\n\n    if (loadingMask) {\n      loadingMask.classList.add('loadmask-hidden');\n    }\n  }, []);\n\n  return (\n    <div\n      className=\"App\"\n      {...restProps}\n    >\n      <Header />\n      <BasicMapComponent />\n      <ToolMenu />\n      <Footer />\n      <AddLayerModal />\n      <UploadDataModal />\n      <EditFeatureDrawer />\n      <LayerDetailsModal />\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport {\n  AppInfo\n} from '@terrestris/shogun-util/dist/model/AppInfo';\n\nconst initialState: AppInfo = {\n  authorities: [],\n  buildTime: '',\n  commitHash: '',\n  userId: -1,\n  version: ''\n};\n\nexport const slice = createSlice({\n  name: 'appInfo',\n  initialState,\n  reducers: {\n    setAppInfo(state, action: PayloadAction<AppInfo>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setAppInfo\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = '';\n\nexport const slice = createSlice({\n  name: 'description',\n  initialState,\n  reducers: {\n    setDescription: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setDescription\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice, PayloadAction\n} from '@reduxjs/toolkit';\n\nexport type Legal = {\n  contact?: string;\n  imprint?: string;\n  privacy?: string;\n};\n\nconst initialState: Legal = {\n  contact: 'https://www.terrestris.de/de/kontakt/',\n  imprint: 'https://www.terrestris.de/de/impressum/',\n  privacy: 'https://www.terrestris.de/de/datenschutzerklaerung/'\n};\n\nexport const slice = createSlice({\n  name: 'legal',\n  initialState,\n  reducers: {\n    setLegal: (state, action: PayloadAction<Legal>) => {\n      return {\n        contact: action.payload.contact || initialState.contact,\n        imprint: action.payload.imprint || initialState.imprint,\n        privacy: action.payload.privacy || initialState.privacy\n      };\n    }\n  }\n});\n\nexport const { setLegal } = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = './shogun_logo.png';\n\nexport const slice = createSlice({\n  name: 'logoPath',\n  initialState,\n  reducers: {\n    setLogoPath: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setLogoPath\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string[] = ['nominatim'];\n\nexport const slice = createSlice({\n  name: 'searchEngines',\n  initialState,\n  reducers: {\n    setSearchEngines: (state, action: PayloadAction<string[]>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setSearchEngines\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = 'SHOGun Client';\n\nexport const slice = createSlice({\n  name: 'title',\n  initialState,\n  reducers: {\n    setTitle: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setTitle\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport User from '@terrestris/shogun-util/dist/model/User';\n\nconst initialState: User = { };\n\nexport const slice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser(state, action: PayloadAction<User>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setUser\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  combineReducers,\n  configureStore,\n  Reducer\n} from '@reduxjs/toolkit';\n\nimport addLayerModal from './addLayerModal';\nimport appInfo from './appInfo';\nimport description from './description';\nimport editFeature from './editFeature';\nimport editFeatureDrawerOpen from './editFeatureDrawerOpen';\nimport layerDetailsModal from './layerDetailsModal';\nimport legal from './legal';\nimport logoPath from './logoPath';\nimport print from './print';\nimport searchEngines from './searchEngines';\nimport selectedFeatures from './selectedFeatures';\nimport title from './title';\nimport toolMenu from './toolMenu';\nimport uploadDataModal from './uploadDataModal';\nimport user from './user';\n\ntype AsyncReducer = {\n  [key: string]: Reducer;\n};\n\nexport const createReducer = (asyncReducers?: AsyncReducer) => {\n  return combineReducers({\n    addLayerModal,\n    appInfo,\n    description,\n    editFeature,\n    editFeatureDrawerOpen,\n    layerDetailsModal,\n    legal,\n    logoPath,\n    print,\n    selectedFeatures,\n    title,\n    toolMenu,\n    uploadDataModal,\n    searchEngines,\n    user,\n    ...asyncReducers\n  });\n};\n\nexport const store = configureStore({\n  reducer: createReducer()\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  Alert,\n  ConfigProvider,\n  notification\n} from 'antd';\n\nimport deDE from 'antd/lib/locale/de_DE';\nimport enGB from 'antd/lib/locale/en_GB';\n\nimport ClientConfiguration, {\n  FeatureEditConfiguration\n} from 'clientConfig';\n\nimport Color from 'color';\n\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport Keycloak from 'keycloak-js';\n\nimport {\n  defaults as OlControlDefaults\n} from 'ol/control';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlMap from 'ol/Map';\nimport {\n  fromLonLat\n} from 'ol/proj';\nimport OlSourceOsm from 'ol/source/OSM';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\nimport OlView from 'ol/View';\n\nimport {\n  render\n} from 'react-dom';\n\nimport {\n  Provider\n} from 'react-redux';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport MapContext from '@terrestris/react-geo/dist/Context/MapContext/MapContext';\n\nimport {\n  AppInfo\n} from '@terrestris/shogun-util/dist/model/AppInfo';\nimport Application, {\n  DefaultApplicationTheme,\n  DefaultApplicationToolConfig\n} from '@terrestris/shogun-util/dist/model/Application';\nimport User from '@terrestris/shogun-util/dist/model/User';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nconst App = React.lazy(() => import('./App'));\n\nimport {\n  PluginProvider\n} from './context/PluginContext';\nimport {\n  SHOGunAPIClientProvider\n} from './context/SHOGunAPIClientContext';\n\nimport i18n, {\n  initOpts\n} from './i18n';\n\nimport {\n  ClientPluginInternal\n} from './plugin';\n\nimport {\n  setAppInfo\n} from './store/appInfo';\nimport {\n  setDescription\n} from './store/description';\nimport {\n  setUserEditMode,\n  EditLevel\n} from './store/editFeature';\nimport {\n  setLegal\n} from './store/legal';\nimport {\n  setLogoPath\n} from './store/logoPath';\nimport {\n  setSearchEngines\n} from './store/searchEngines';\nimport {\n  createReducer,\n  store\n} from './store/store';\nimport {\n  setTitle\n} from './store/title';\nimport {\n  setAvailableTools\n} from './store/toolMenu';\nimport {\n  setUser\n} from './store/user';\n\nimport './index.less';\n\n// TODO: extend antd properties too\nexport interface ThemeProperties extends React.CSSProperties {\n  '--primaryColor'?: string;\n  '--secondaryColor'?: string;\n  '--complementaryColor'?: string;\n}\n\n// eslint-disable-next-line no-shadow\nenum LoadingErrorCode {\n  APP_ID_NOT_SET = 'APP_ID_NOT_SET',\n  APP_CONFIG_NOT_FOUND = 'APP_CONFIG_NOT_FOUND'\n};\n\nconst client = new SHOGunAPIClient({\n  url: ClientConfiguration.shogunBase || '/'\n});\n\nconst parser = new SHOGunApplicationUtil({\n  client\n});\n\nconst getConfigLang = (lang: string) => {\n  switch (lang) {\n    case 'en':\n      return enGB;\n    case 'de':\n      return deDE;\n    default:\n      return enGB;\n  }\n};\n\nconst getApplicationConfiguration = async (applicationId: number) => {\n  try {\n    Logger.info(`Loading application with ID ${applicationId}`);\n\n    const application = await client.application().findOne(applicationId);\n\n    Logger.info(`Successfully loaded application with ID ${applicationId}`);\n\n    return application;\n  } catch (error) {\n    Logger.error(`Error while loading application with ID ${applicationId}: ${error}`);\n  }\n};\n\nconst getApplicationInfo = async () => {\n  try {\n    Logger.info('Loading application info');\n\n    const appInfo = await client.info().getAppInfo();\n\n    Logger.info('Successfully loaded application info');\n\n    return appInfo;\n  } catch (error) {\n    Logger.error('Error while loading application info: ', error);\n  }\n};\n\nconst getUser = async (userId?: number) => {\n  if (!userId) {\n    Logger.info('No user ID given, can\\'t load it\\'s details.');\n    return;\n  }\n\n  try {\n    Logger.info(`Loading user with ID ${userId}`);\n\n    const user = await client.user().findOne(userId);\n\n    Logger.info(`Successfully loaded user with ID ${userId}`);\n\n    return user;\n  } catch (error) {\n    Logger.error(`Error while loading user with ID ${userId}: `, error);\n  }\n};\n\nconst setApplicationToStore = async (application?: Application) => {\n  if (!application) {\n    Logger.info('No application configuration provided, the default store will be loaded');\n\n    return;\n  }\n\n  if (application.name) {\n    store.dispatch(setTitle(application.name));\n  }\n\n  if (application.clientConfig?.description) {\n    store.dispatch(setDescription(application.clientConfig?.description));\n  }\n\n  if (application.clientConfig?.legal) {\n    store.dispatch(setLegal(application.clientConfig.legal));\n  }\n\n  if (application?.clientConfig?.theme?.logoPath) {\n    store.dispatch(setLogoPath(application.clientConfig.theme.logoPath));\n  }\n\n  // nominatim search is active by default\n  store.dispatch(setSearchEngines(['nominatim']));\n\n  if (application.toolConfig && application.toolConfig.length > 0) {\n    const availableTools: string[] = [];\n    application.toolConfig\n      .map((tool: DefaultApplicationToolConfig) => {\n        if (tool.config.visible && tool.name !== 'search') {\n          availableTools.push(tool.name);\n        }\n        if (tool.name === 'search' && tool.config.engines.length > 0) {\n          store.dispatch(setSearchEngines(tool.config.engines));\n        }\n      });\n    store.dispatch(setAvailableTools(availableTools));\n  }\n};\n\nconst setAppInfoToStore = async (appInfo?: AppInfo) => {\n  if (!appInfo) {\n    return;\n  }\n\n  store.dispatch(setAppInfo(appInfo));\n};\n\nconst setUserToStore = async (user?: User) => {\n  if (!user) {\n    return;\n  }\n\n  store.dispatch(setUser(user));\n};\n\nconst initKeycloak = async () => {\n  const keycloakEnabled = ClientConfiguration.keycloak?.enabled;\n  const keycloakOnLoad = ClientConfiguration.keycloak?.onLoadAction;\n  const keycloakHost = ClientConfiguration.keycloak?.host;\n  const keycloakRealm = ClientConfiguration.keycloak?.realm;\n  const keycloakClientId = ClientConfiguration.keycloak?.clientId;\n\n  if (!keycloakEnabled) {\n    return undefined;\n  }\n\n  if (!keycloakHost) {\n    throw new Error('Neither config key keycloak.host nor environment KEYCLOAK_HOST is set');\n  }\n\n  if (!keycloakRealm) {\n    throw new Error('Neither config key keycloak.realm nor environment KEYCLOAK_REALM is set');\n  }\n\n  if (!keycloakClientId) {\n    throw new Error('Neither config key keycloak.clientId nor environment KEYCLOAK_CLIENT_ID is set');\n  }\n\n  const keycloak = new Keycloak({\n    url: `${keycloakHost}`,\n    realm: keycloakRealm,\n    clientId: keycloakClientId\n  });\n\n  keycloak.onTokenExpired = async () => {\n    try {\n      await keycloak.updateToken(0);\n    } catch (error) {\n      Logger.error('Error while refreshing the access token: ', error);\n    }\n  };\n\n  await keycloak.init({\n    onLoad: keycloakOnLoad,\n    checkLoginIframe: false\n  });\n\n  return keycloak;\n};\n\nconst setApplicationTitle = () => {\n  store.subscribe(() => {\n    document.title = store.getState().title;\n  });\n};\n\nconst setupMap = async (application?: Application) => {\n  if (application) {\n    return await setupSHOGunMap(application);\n  }\n\n  Logger.info('No application configuration provided, the default map will be loaded');\n\n  return setupDefaultMap();\n};\n\nconst setupSHOGunMap = async (application: Application) => {\n  const view = await parser.parseMapView(application, {\n    constrainOnlyCenter: true\n  });\n\n  let extent;\n  const projection = application.clientConfig?.mapView.projection;\n  const mapView = application.clientConfig?.mapView;\n  if (projection && mapView?.extent && mapView.extent.length === 4) {\n    const ll = fromLonLat([mapView.extent[0], mapView.extent[1]], projection);\n    const ur = fromLonLat([mapView.extent[2], mapView.extent[3]], projection);\n    extent = [\n      ll[0],\n      ll[1],\n      ur[0],\n      ur[1]\n    ];\n  }\n  if (extent) {\n    view.set('extent', extent);\n  }\n\n  view.setConstrainResolution(true);\n\n  const layers = await parser.parseLayerTree(application, projection);\n\n  return new OlMap({\n    view,\n    layers,\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\n// TODO Make default/fallback app configurable?\nconst setupDefaultMap = () => {\n  const osmLayer = new OlLayerTile({\n    source: new OlSourceOsm()\n  });\n  osmLayer.set('name', 'OpenStreetMap');\n\n  const temperatureLayer = new OlLayerTile({\n    opacity: 0.5,\n    visible: true,\n    source: new OlSourceTileWMS({\n      url: 'https://gibs.earthdata.nasa.gov/wms/epsg3857/best/wms.cgi',\n      projection: 'EPSG:3857',\n      params: {\n        LAYERS: 'MERRA2_2m_Air_Temperature_Assimilated_Monthly'\n      }\n    })\n  });\n  temperatureLayer.setProperties({\n    name: '2-meter Air Temperature, Assimilated (Monthly, MERRA2)',\n    hoverable: true\n  });\n\n  const eoLayerGroup = new OlLayerGroup({\n    layers: [temperatureLayer]\n  });\n  eoLayerGroup.set('name', 'NASA Earth Observations');\n\n  const backgroundLayerGroup = new OlLayerGroup({\n    layers: [osmLayer]\n  });\n  backgroundLayerGroup.set('name', 'Background');\n\n  const center = fromLonLat([0, 40], 'EPSG:3857');\n\n  return new OlMap({\n    view: new OlView({\n      center: center,\n      zoom: 0\n    }),\n    layers: [backgroundLayerGroup, eoLayerGroup],\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\nconst parseTheme = (theme?: DefaultApplicationTheme): ThemeProperties => {\n  const style: ThemeProperties = {\n    '--primaryColor': '#59666C',\n    '--secondaryColor': '#70B3BE',\n    '--complementaryColor': '#FFFFFF'\n  };\n  if (!theme) {\n    return style;\n  }\n  if (theme.primaryColor) {\n    style['--primaryColor'] = theme.primaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--secondaryColor'] = theme.secondaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--complementaryColor'] = theme.complementaryColor;\n  }\n  return style;\n};\n\n// ExamplePlugin: 'ExamplePlugin@/client-plugin/remoteEntry.js'\nconst loadPluginModules = async (moduleName: string, moduleUrl: string, remoteNames: string[]) => {\n  await __webpack_init_sharing__('default');\n\n  await new Promise<void>((resolve, reject) => {\n    const element = document.createElement('script');\n\n    element.src = moduleUrl;\n    element.type = 'text/javascript';\n    element.async = true;\n\n    element.onload = () => {\n      element.parentElement?.removeChild(element);\n      resolve();\n    };\n\n    element.onerror = (err) => {\n      element.parentElement?.removeChild(element);\n      reject(err);\n    };\n\n    document.head.appendChild(element);\n  });\n\n  // @ts-ignore\n  const container = window[moduleName];\n\n  // eslint-disable-next-line camelcase\n  await container.init(__webpack_share_scopes__.default);\n\n  const modules = [];\n  for (const remoteName of remoteNames) {\n    const factory = await container.get(remoteName);\n    const module = factory();\n    modules.push(module);\n  }\n\n  return modules;\n};\n\nconst loadPlugins = async (map: OlMap) => {\n  if (!ClientConfiguration.plugins || ClientConfiguration.plugins.length === 0) {\n    Logger.info('No plugins found');\n    return [];\n  }\n\n  Logger.info('Loading plugins');\n\n  const clientPlugins: ClientPluginInternal[] = [];\n\n  for (const plugin of ClientConfiguration.plugins) {\n    const name = plugin.name;\n    const resourcePath = plugin.resourcePath;\n    const exposedPaths = plugin.exposedPaths;\n\n    if (!name) {\n      Logger.error('Required plugin configuration \\'name\\' is not set');\n      return clientPlugins;\n    }\n\n    if (!resourcePath) {\n      Logger.error('Required plugin configuration \\'resourcePath\\' is not set');\n      return clientPlugins;\n    }\n\n    if (!exposedPaths) {\n      Logger.error('Required plugin configuration \\'exposedPaths\\' is not set');\n      return clientPlugins;\n    }\n\n    Logger.info(`Loading plugin ${name} (with exposed paths ${exposedPaths.join(' and ')}) from ${resourcePath}`);\n\n    let clientPluginModules: any[];\n    try {\n      clientPluginModules = await loadPluginModules(name, resourcePath, exposedPaths);\n      Logger.info(`Successfully loaded plugin ${name}`);\n    } catch (error) {\n      Logger.error(`Could not load plugin ${name}:`, error);\n      return clientPlugins;\n    }\n\n    clientPluginModules.forEach(module => {\n      const clientPluginDefault: ClientPluginInternal = module.default;\n      const PluginComponent = clientPluginDefault.component;\n\n      const WrappedPluginComponent = () => (\n        <PluginComponent\n          map={map}\n          client={client}\n        />\n      );\n\n      clientPluginDefault.wrappedComponent = WrappedPluginComponent;\n\n      if (clientPluginDefault.i18n) {\n        Object.entries(clientPluginDefault.i18n).forEach(locale => {\n          const lng = locale[0];\n          const resources = locale[1].translation;\n          i18n.addResourceBundle(lng, 'translation', resources, true, true);\n        });\n      }\n\n      if (clientPluginDefault.reducers) {\n        const reducers = createReducer(clientPluginDefault.reducers);\n        store.replaceReducer(reducers);\n      }\n\n      clientPlugins.push(clientPluginDefault);\n    });\n  }\n\n  return clientPlugins;\n};\n\nconst checkRoles = (\n  list: string[],\n  featureEditRoles: FeatureEditConfiguration\n): EditLevel[] => {\n  const {\n    authorizedRolesForCreate,\n    authorizedRolesForUpdate,\n    authorizedRolesForDelete\n  } = featureEditRoles;\n\n  const result: EditLevel[] = [];\n\n  for (const element of list) {\n    if (authorizedRolesForCreate?.some(role => matchRole(role, element))) {\n      result.push('CREATE');\n    }\n    if (authorizedRolesForUpdate?.some(role => matchRole(role, element))) {\n      result.push('UPDATE');\n    }\n    if (authorizedRolesForDelete?.some(role => matchRole(role, element))) {\n      result.push('DELETE');\n    }\n  }\n  return result;\n};\n\nconst matchRole = (role: string | RegExp, element: string): boolean => {\n  if (typeof role === 'string') {\n    return element === role;\n  }\n  if (role instanceof RegExp) {\n    return role.test(element);\n  }\n  return false;\n};\n\nconst renderApp = async () => {\n  try {\n    const keycloak = await initKeycloak();\n\n    if (keycloak) {\n      client.setKeycloak(keycloak);\n    }\n\n    const applicationId = parseInt(UrlUtil.getQueryParam(window.location.href, 'applicationId'), 10);\n\n    if (!applicationId) {\n      Logger.info('No application ID given, can\\'t load any configuration.');\n    }\n\n    if (!applicationId && !ClientConfiguration.enableFallbackConfig) {\n      throw new Error(LoadingErrorCode.APP_ID_NOT_SET);\n    }\n\n    let appConfig;\n    if (applicationId) {\n      appConfig = await getApplicationConfiguration(applicationId);\n    }\n\n    if (!appConfig && !ClientConfiguration.enableFallbackConfig) {\n      throw new Error(LoadingErrorCode.APP_CONFIG_NOT_FOUND);\n    }\n\n    const defaultLanguage = appConfig?.clientConfig?.defaultLanguage;\n\n    if (!defaultLanguage) {\n      i18n.use(LanguageDetector);\n    }\n\n    await i18n.init(initOpts);\n\n    if (defaultLanguage) {\n      i18n.changeLanguage(defaultLanguage);\n    }\n\n    const style = parseTheme(appConfig?.clientConfig?.theme);\n\n    ConfigProvider.config({\n      theme: {\n        primaryColor: Color(style['--primaryColor']).isLight() ?\n          Color(style['--primaryColor']).darken(0.5).hexa() :\n          style['--primaryColor']\n      }\n    });\n\n    Object.keys(style).forEach((key: any) => {\n      document.body.style.setProperty(key, style[key as keyof ThemeProperties] as string);\n    });\n\n    setApplicationTitle();\n\n    setApplicationToStore(appConfig);\n\n    const appInfo = await getApplicationInfo();\n\n    setAppInfoToStore(appInfo);\n\n    const user = await getUser(appInfo?.userId);\n\n    setUserToStore(user);\n\n    const userRoles: string[] | undefined =\n      client?.getKeycloak()?.tokenParsed?.realm_access?.roles;\n\n    let allowedEditMode: EditLevel[] = ['NONE'];\n\n    if (userRoles && ClientConfiguration.featureEditRoles) {\n      allowedEditMode = checkRoles(\n        userRoles,\n        ClientConfiguration.featureEditRoles\n      );\n    }\n\n    store.dispatch(setUserEditMode(allowedEditMode));\n\n    const map = await setupMap(appConfig);\n\n    const plugins = await loadPlugins(map);\n\n    if (!appConfig) {\n      notification.error({\n        message: i18n.t('Index.applicationLoadErrorMessage'),\n        description: i18n.t('Index.applicationLoadErrorDescription', {\n          applicationId: applicationId\n        }),\n        duration: 0\n      });\n    }\n\n    render(\n      <React.StrictMode>\n        <React.Suspense fallback={<span></span>}>\n          <SHOGunAPIClientProvider client={client}>\n            <PluginProvider plugins={plugins}>\n              <ConfigProvider locale={getConfigLang(i18n.language)}>\n                <Provider store={store}>\n                  <MapContext.Provider value={map}>\n                    <App />\n                  </MapContext.Provider>\n                </Provider>\n              </ConfigProvider>\n            </PluginProvider>\n          </SHOGunAPIClientProvider>\n        </React.Suspense>\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  } catch (error) {\n    const loadingMask = document.querySelectorAll('.loadmask')[0];\n\n    if (loadingMask) {\n      loadingMask.classList.add('loadmask-hidden');\n    }\n\n    if (!i18n.isInitialized) {\n      i18n.use(LanguageDetector);\n      await i18n.init(initOpts);\n    }\n\n    let errorDescription = i18n.t('Index.errorDescription');\n\n    if ((error as Error)?.message === LoadingErrorCode.APP_ID_NOT_SET) {\n      errorDescription = i18n.t('Index.errorDescriptionAppIdNotSet');\n    }\n\n    if ((error as Error)?.message === LoadingErrorCode.APP_CONFIG_NOT_FOUND) {\n      const appId = UrlUtil.getQueryParam(window.location.href, 'applicationId');\n\n      errorDescription = i18n.t('Index.errorDescriptionAppConfigNotFound', {\n        applicationId: appId\n      });\n    }\n\n    render(\n      <React.StrictMode>\n        <Alert\n          className=\"error-boundary\"\n          message={i18n.t('Index.errorMessage')}\n          description={errorDescription}\n          type=\"warning\"\n          showIcon\n        />\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  }\n};\n\nrenderApp();\n","import React from 'react';\n\nimport {\n  ClientPluginInternal\n} from '../plugin';\n\nexport type PluginProviderProps = {\n  plugins: ClientPluginInternal[];\n  children: JSX.Element;\n};\n\nexport const PluginContext = React.createContext<(ClientPluginInternal[])>([]);\n\nexport const PluginProvider: React.FC<PluginProviderProps> = ({\n  plugins,\n  children\n}): JSX.Element => {\n  return (\n    <PluginContext.Provider\n      value={plugins}\n    >\n      {children}\n    </PluginContext.Provider>\n  );\n};\n\nexport default PluginContext;\n","import React from 'react';\n\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nexport type SHOGunAPIClientProviderProps = {\n  client: SHOGunAPIClient;\n  children: JSX.Element;\n};\n\nexport const SHOGunAPIClientContext = React.createContext<(SHOGunAPIClient | null)>(null);\n\nexport const SHOGunAPIClientProvider: React.FC<SHOGunAPIClientProviderProps> = ({\n  client,\n  children\n}): JSX.Element => {\n  return (\n    <SHOGunAPIClientContext.Provider\n      value={client}\n    >\n      {children}\n    </SHOGunAPIClientContext.Provider>\n  );\n};\n\nexport default SHOGunAPIClientContext;\n","import i18n, {\n  InitOptions\n} from 'i18next';\nimport {\n  initReactI18next\n} from 'react-i18next';\n\nimport resources from './translations';\n\nexport const initOpts: InitOptions = {\n  resources,\n  fallbackLng: 'en',\n  debug: false,\n  interpolation: {\n    escapeValue: false\n  },\n  returnNull: false\n};\n\n// eslint-disable-next-line import/no-named-as-default-member\ni18n\n  .use(initReactI18next);\n\ni18n.options = initOpts;\n\nexport default i18n;\n","export default {\n  de: {\n    translation: {\n      ApplicationInfo: {\n        title: 'Über',\n        clientVersionTitle: 'Client Version',\n        backendVersionTitle: 'Backend Version'\n      },\n      AddLayerModal: {\n        addSelectedLayers: 'Auswahl hinzufügen',\n        addAllLayers: 'Alle hinzufügen',\n        inputPlaceholder: 'WMS GetCapabilities URL angeben…',\n        externalWmsFolder: 'Externe Themen',\n        title: 'WMS hinzufügen',\n        columnTitle: 'Name',\n        errorMessage: 'Fehler',\n        errorDescription: 'Das Capabilities Dokument konnte nicht geladen werden, bitte prüfen Sie die URL',\n        version: 'Version'\n      },\n      BasicMapComponent: {\n        processedLayersFolder: 'Prozessierte Layer'\n      },\n      Permalink: {\n        title: 'Teilen',\n        twitterTooltip: 'Link via Twitter teilen',\n        whatsAppTooltip: 'Link via WhatsApp teilen',\n        mailTooltip: 'Link via Mail teilen',\n        copyTooltip: 'Link in die Zwischenablage kopieren',\n        copiedToClipboard: 'Link wurde in Zwischenablage kopiert',\n        copyToClipboardFailed: 'Link konnte nicht kopiert werden'\n      },\n      Measure: {\n        title: 'Messen',\n        line: 'Entfernung',\n        area: 'Fläche',\n        clicktodrawline: 'Zum Zeichnen einer Linie klicken',\n        clicktodrawarea: 'Zum Zeichnen einer Fläche klicken'\n      },\n      Draw: {\n        point: 'Punkt',\n        line: 'Linie',\n        polygon: 'Polygon',\n        circle: 'Kreis',\n        rectangle: 'Rechteck',\n        text: 'Anmerkung',\n        modify: 'Bearbeitung',\n        upload: 'Hochladen',\n        delete: 'Löschen',\n        export: 'Exportieren'\n      },\n      StylingDrawer: {\n        pickColor: 'Farbschema bearbeiten',\n        title: 'Farbschema bearbeiten'\n      },\n      FeatureInfo: {\n        usageHint: 'Klicken Sie in die Karte, um Detailinformationen zu erhalten.'\n      },\n      LayerTree: {\n        transparency: 'Transparenz',\n        noLegendAvailable: 'Keine Legende verfügbar'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Auf Layerausdehnung zoomen',\n        extentError: 'Konnte nicht auf die Layerausdehnung zoomen',\n        removeLayer: 'Layer entfernen',\n        showLegend: 'Legende anzeigen',\n        hideLegend: 'Legende ausblenden',\n        downloadLayer: 'Layer exportieren ({{formatName}})',\n        editLayer: 'Layer bearbeiten',\n        layerDetails: 'Eigenschaften'\n      },\n      LayerDetailsModal: {\n        title: 'Eigenschaften des Layers {{layerName}}',\n        internalConfigurationButtonTooltip: 'Interne Konfiguration anzeigen',\n        internalConfigurationButtonTooltipPressed: 'Interne Konfiguration verbergen'\n      },\n      LayerDetails: {\n        noDataPlaceholder: '-',\n        layerNameLabel: 'Name',\n        layerTitleLabel: 'Titel',\n        serviceAbstractLabel: 'Service Beschreibung',\n        abstractLabel: 'Beschreibung',\n        accessConstraintsLabel: 'Nutzungseinschränkungen',\n        capabilitiesUrlLabel: 'GetCapabilities URL',\n        contactLabel: 'Kontakt',\n        minScaleLabel: 'Min. Maßstab',\n        maxScaleLabel: 'Max. Maßstab',\n        bboxLabel: 'Bounding Box',\n        errorMessage: 'Fehler beim Laden der Layer Capabilities'\n      },\n      LayerConfiguration: {\n        errorMessage: 'Fehler beim Laden der internen Konfiguration'\n      },\n      ToolMenu: {\n        expand: 'Menu ausklappen',\n        collapse: 'Menu einklappen',\n        measure: 'Messen',\n        draw: 'Zeichnen',\n        featureInfo: 'Karteninhalte abfragen',\n        addWms: 'WMS hinzufügen',\n        uploadData: 'Daten hochladen',\n        print: 'Export',\n        layertree: 'Karten',\n        languageSelect: 'Sprachauswahl'\n      },\n      PrintForm: {\n        title: 'Kartentitel',\n        initialTitle: 'Druckausgabe',\n        titlePlaceholder: 'Bitte geben Sie einen Titel ein',\n        comment: 'Bemerkung',\n        commentPlaceholder: 'Bitte geben Sie einen Kommentar ein',\n        layout: 'Vorlage',\n        dpi: 'Auflösung',\n        format: 'Format',\n        scale: 'Maßstab',\n        downloadBtnText: 'Ausdruck erzeugen',\n        printJobErrorMsg: 'Der Kartenausdruck konnte nicht erzeugt werden',\n        initErrorMsg: 'Der Kartendruck Generator konnte nicht initialisiert werden.',\n        outputFormatPlaceholder: 'Bitte wählen Sie ein Ausgabeformat aus',\n        resolutionPlaceholder: 'Bitte wählen Sie eine Ausgabequalität aus',\n        managerErrorMessage: 'Fehler bei der Initialisierung der Export-Engine'\n      },\n      Footer: {\n        refSystem: 'Bezugssystem',\n        scale: 'Maßstab',\n        mousePosition: 'Mausposition',\n        imprint: 'Impressum',\n        contact: 'Kontakt',\n        privacypolicy: 'Datenschutz'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Fehler beim Laden der Applikation',\n        applicationLoadErrorDescription: 'Die Applikation mit der ID {{applicationId}} konnte nicht geladen werden. ' +\n          'Die Standardkonfiguration wird stattdessen geladen.',\n        errorMessage: 'Fehler beim Laden der Applikation',\n        errorDescription: 'Aufgrund eines unerwarteten Fehlers konnte die Applikation nicht geladen werden.',\n        errorDescriptionAppIdNotSet: 'Keine Applikations-ID angegeben. Bitte geben Sie die ID als Abfrageparameter an, z.B. ?applicationId=1909',\n        errorDescriptionAppConfigNotFound: 'Die Applikation mit der ID {{applicationId}} konnte nicht geladen werden.'\n      },\n      Nominatim: {\n        placeholder: 'Ortsname, Straßenname, Stadtteilname, POI usw.'\n      },\n      UserMenu: {\n        settingsMenuTitle: 'Profil bearbeiten',\n        infoMenuTitle: 'Über',\n        logoutMenuTitle: 'Ausloggen',\n        loginMenuTitle: 'Anmelden'\n      },\n      WmsTimeSlider: {\n        title: 'Zeitlicher Bezug',\n        default: 'Keine Daten gefunden'\n      },\n      UploadDataModal: {\n        title: 'Daten hochladen',\n        uploadedDataFolder: 'Hochgeladene Daten',\n        description: 'Klicken Sie oder ziehen Sie die Datei zum Hochladen in diesen Bereich',\n        hint: 'Unterstützte Dateiformate sind Shapefile (gebündelt als *.zip) und GeoTIFF',\n        success: 'Datei {{fileName}} wurde erfolgreich geladen und der Layer {{layerName}} erstellt',\n        error: {\n          general: 'Fehler beim Hochladen der Datei {{fileName}}',\n          maxSize: 'Der Upload überschreitet das Limit von {{maxSize}} MB',\n          supportedFormats: 'Der Dateityp ist nicht unterstützt ({{supportedFormats}})',\n          zipContent: 'Mehrere Geodatensätze innerhalb eines Archivs sind nicht unterstützt'\n        }\n      },\n      MultiSearch: {\n        searchInViewBox: 'Im aktuellen Kartenausschnitt suchen',\n        searchData: 'Layerdaten durchsuchen',\n        searchNominatim: 'Ortssuche (Nominatim)',\n        nominatimTitle: 'Ortssuche',\n        searchPlaceholder: 'Orts- und Datensuche…'\n      },\n      EditFeatureDrawer: {\n        featureEditor: 'Objekteditor',\n        noLayerFoundError: 'Kein passender Layer gefunden - das Editieren ist nicht möglich.',\n        isFeatureLockedErrorMsg: 'Das ausgewählte Objekt wird bereits in einer anderen Sitzung bearbeitet.',\n        closeDrawerWarnTitle: 'Wollen Sie wirklich fortfahren?',\n        closeDrawerWarnContent: 'Dadurch werden alle nicht gespeicherten Änderungen an dem Objekt verworfen.'\n      },\n      EditFeatureSwitch: {\n        usageHint: 'Objekt zum Editieren auf der Karte auswählen oder…',\n        limitedUsageHint: 'Zum Editieren bitte eine Objekt auf der Karte auswählen',\n        createFeature: 'Neues Objekt erstellen'\n      },\n      EditFeatureFullForm: {\n        saveErrorMsg: 'Das Objekt konnte nicht gespeichert werden',\n        deleteErrorMsg: 'Das Objekt konnte nicht gelöscht werden'\n      },\n      EditFeatureGeometryToolbar: {\n        draw: 'Neue Geometrie zeichnen',\n        edit: 'Geometrie editieren',\n        delete: 'Geometrie löschen',\n        undo: 'Rückgängig',\n        redo: 'Wiederherstellen'\n      },\n      ResetButton: {\n        title: 'Zurücksetzen'\n      },\n      SaveButton: {\n        title: 'Speichern'\n      },\n      DeleteButton: {\n        title: 'Objekt löschen',\n        confirm: 'Das Objekt wird vollständig gelöscht. Fortfahren?'\n      },\n      EditFeatureButton: {\n        title: 'Objekt bearbeiten'\n      },\n      FeaturePropertyGrid: {\n        key: 'Name',\n        value: 'Wert'\n      },\n      PaginationToolbar: {\n        copyAsGeoJson: 'Als GeoJSON kopieren (inkl. Geometrie)',\n        copyAsObject: 'Als Objekt kopieren (nur angezeigte Werte)'\n      }\n    }\n  },\n  en: {\n    translation: {\n      ApplicationInfo: {\n        title: 'About',\n        clientVersionTitle: 'Client version',\n        backendVersionTitle: 'Backend version'\n      },\n      AddLayerModal: {\n        addSelectedLayers: 'Add selected',\n        addAllLayers: 'Add all',\n        inputPlaceholder: 'Enter a WMS GetCapabilities URL…',\n        externalWmsFolder: 'External layers',\n        title: 'Add WMS',\n        columnTitle: 'Name',\n        errorMessage: 'Error',\n        errorDescription: 'Could not load the provided Capabilities document, please check the validity of the URL',\n        version: 'Version'\n      },\n      BasicMapComponent: {\n        processedLayersFolder: 'Processed layers'\n      },\n      Permalink: {\n        title: 'Share',\n        twitterTooltip: 'Share link via Twitter',\n        whatsAppTooltip: 'Share link via WhatsApp',\n        mailTooltip: 'Share link via Mail',\n        copyTooltip: 'Copy link to Clipboard',\n        copiedToClipboard: 'Copied to clipboard',\n        copyToClipboardFailed: 'Could not copy link to clipboard'\n      },\n      Measure: {\n        title: 'Measure',\n        line: 'Distance',\n        area: 'Area',\n        clicktodrawline: 'Click to draw line',\n        clicktodrawarea: 'Click to draw area'\n      },\n      Draw: {\n        point: 'Point',\n        line: 'Line',\n        polygon: 'Polygon',\n        circle: 'Circle',\n        rectangle: 'Rectangle',\n        text: 'Annotation',\n        modify: 'Edit',\n        upload: 'Upload',\n        delete: 'Delete',\n        export: 'Export'\n      },\n      StylingDrawer: {\n        pickColor: 'Modify color scheme',\n        title: 'Modify color scheme'\n      },\n      FeatureInfo: {\n        usageHint: 'Click on the map to get details about the clicked coordinate.'\n      },\n      LayerTree: {\n        transparency: 'Transparency',\n        noLegendAvailable: 'No legend available'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Zoom to layer extent',\n        extentError: 'Could not zoom to layer extent',\n        removeLayer: 'Remove layer',\n        showLegend: 'Show legend',\n        hideLegend: 'Hide legend',\n        downloadLayer: 'Export layer as {{formatName}}',\n        editLayer: 'Edit layer',\n        layerDetails: 'Properties'\n      },\n      LayerDetailsModal: {\n        title: 'Properties of layer {{layerName}}',\n        internalConfigurationButtonTooltip: 'Show internal configuration',\n        internalConfigurationButtonTooltipPressed: 'Hide internal configuration'\n      },\n      LayerDetails: {\n        noDataPlaceholder: '-',\n        layerNameLabel: 'Name',\n        layerTitleLabel: 'Title',\n        serviceAbstractLabel: 'Service abstract',\n        abstractLabel: 'Abstract',\n        accessConstraintsLabel: 'Access constraints',\n        capabilitiesUrlLabel: 'GetCapabilities URL',\n        contactLabel: 'Contact',\n        minScaleLabel: 'Min. scale',\n        maxScaleLabel: 'Max. scale',\n        bboxLabel: 'Bounding box',\n        errorMessage: 'Error while loading the layer capabilities'\n      },\n      LayerConfiguration: {\n        errorMessage: 'Error while loading the internal configuration'\n      },\n      ToolMenu: {\n        expand: 'Expand',\n        collapse: 'Collapse',\n        measure: 'Measure',\n        draw: 'Draw',\n        featureInfo: 'Query map features',\n        addWms: 'Add WMS',\n        uploadData: 'Upload data',\n        print: 'Export',\n        layertree: 'Maps',\n        languageSelect: 'Language selector'\n      },\n      PrintForm: {\n        title: 'Title',\n        initialTitle: 'Title',\n        titlePlaceholder: 'Please input a title…',\n        comment: 'Comment',\n        commentPlaceholder: 'Please enter a comment…',\n        layout: 'Layout',\n        dpi: 'Resolution',\n        format: 'Format',\n        scale: 'Scale',\n        downloadBtnText: 'Create print',\n        printJobErrorMsg: 'Could not generate PDF output',\n        initErrorMsg: 'PDF Generator could not be initialized',\n        outputFormatPlaceholder: 'Please select an output format',\n        resolutionPlaceholder: 'Please select an output quality',\n        managerErrorMessage: 'Error while initializing the export engine'\n      },\n      Footer: {\n        refSystem: 'Reference system',\n        scale: 'Scale',\n        mousePosition: 'Mouse position',\n        imprint: 'Imprint',\n        contact: 'Contact',\n        privacypolicy: 'Privacy'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Error while loading the application',\n        applicationLoadErrorDescription: 'The application with ID {{applicationId}} could not be loaded correctly. ' +\n          'You\\'re seeing the default application configuration.',\n        errorMessage: 'Error while loading the application',\n        errorDescription: 'An unexpected error occured while loading the application.',\n        errorDescriptionAppIdNotSet: 'No application ID given. Please provide the ID as query parameter, e.g. ?applicationId=1909',\n        errorDescriptionAppConfigNotFound: 'The application with ID {{applicationId}} could not be loaded correctly.'\n      },\n      Nominatim: {\n        placeholder: 'Place name, street name, district name, POI, etc.'\n      },\n      UserMenu: {\n        settingsMenuTitle: 'Edit profile',\n        infoMenuTitle: 'About',\n        logoutMenuTitle: 'Logout',\n        loginMenuTitle: 'Login'\n      },\n      WmsTimeSlider: {\n        title: 'Time reference',\n        default: 'No data found'\n      },\n      UploadDataModal: {\n        title: 'Upload data',\n        uploadedDataFolder: 'Uploaded data',\n        description: 'Click or drag file to this area to upload',\n        hint: 'Supported file formats are Shapefile (bundled as *.zip) and GeoTIFF',\n        success: 'Successfully uploaded file {{fileName}} and created layer {{layerName}}',\n        error: {\n          general: 'Error while uploading file {{fileName}}',\n          maxSize: 'The file exceeds the upload limit of {{maxSize}} MB',\n          supportedFormats: 'The given file type does not match the supported ones ({{supportedFormats}})',\n          zipContent: 'Multiple geodatasets within one archive are not supported'\n        }\n      },\n      MultiSearch: {\n        searchInViewBox: 'Search in current extent',\n        searchData: 'Search layer data',\n        searchNominatim: 'Search nominatim',\n        nominatimTitle: 'Nominatim',\n        searchPlaceholder: 'Address and data search…'\n      },\n      EditFeatureDrawer: {\n        featureEditor: 'Feature editor',\n        noLayerFoundError: 'No layer found - the editing is not possible.',\n        isFeatureLockedErrorMsg: 'The selected feature is already being edited in another session.',\n        closeDrawerWarnTitle: 'Do you really want to quit?',\n        closeDrawerWarnContent: 'This will discard any unsaved changes to the feature.'\n      },\n      EditFeatureSwitch: {\n        usageHint: 'Select an existing feature for editing on the map or…',\n        limitedUsageHint: 'To edit please select an object on the map',\n        createFeature: 'Create new feature'\n      },\n      EditFeatureFullForm: {\n        saveErrorMsg: 'Error while saving the feature',\n        deleteErrorMsg: 'Error while deleting the feature'\n      },\n      EditFeatureGeometryToolbar: {\n        draw: 'Draw new geometry',\n        edit: 'Edit geometry',\n        delete: 'Delete geometry',\n        undo: 'Undo',\n        redo: 'Redo'\n      },\n      ResetButton: {\n        title: 'Reset'\n      },\n      SaveButton: {\n        title: 'Save'\n      },\n      DeleteButton: {\n        title: 'Delete feature',\n        confirm: 'The feature will be completely deleted. Proceed?'\n      },\n      EditFeatureButton: {\n        title: 'Edit feature'\n      },\n      FeaturePropertyGrid: {\n        key: 'Name',\n        value: 'Value'\n      },\n      PaginationToolbar: {\n        copyAsGeoJson: 'Copy as GeoJSON (incl. geometry)',\n        copyAsObject: 'Copy as object (displayed values only)'\n      }\n    }\n  }\n};\n","import('./bootstrap');\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface AddLayerModalState {\n  visible: boolean;\n}\n\nconst initialState: AddLayerModalState = {\n  visible: false\n};\n\nconst addLayerModalSlice = createSlice({\n  name: 'addLayerModal',\n  initialState,\n  reducers: {\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = addLayerModalSlice.actions;\n\nexport default addLayerModalSlice.reducer;\n","import {\n  PayloadAction,\n  createSlice\n} from '@reduxjs/toolkit';\n\nimport {\n  Feature\n} from 'geojson';\n\nexport type EditLevel = 'CREATE' | 'UPDATE' | 'DELETE' | 'NONE';\nexport interface EditFeatureState {\n  layerId: string | null;\n  feature: Feature | null;\n  userEditMode: EditLevel[];\n  formDirty: boolean;\n}\n\nconst initialState: EditFeatureState = {\n  layerId: null,\n  feature: null,\n  userEditMode: ['NONE'],\n  formDirty: false\n};\n\nconst editFeatureSlice = createSlice({\n  name: 'editFeature',\n  initialState,\n  reducers: {\n    setLayerId(state, action: PayloadAction<string | null>) {\n      state.layerId = action.payload;\n    },\n    setFeature(state, action: PayloadAction<Feature | null>) {\n      state.feature = action.payload;\n    },\n    reset(state) {\n      state.layerId = null;\n      state.feature = null;\n    },\n    setUserEditMode(state, action: PayloadAction<EditLevel[]>) {\n      state.userEditMode = action.payload;\n    },\n    setFormDirty(state, action: PayloadAction<boolean>) {\n      state.formDirty = action.payload;\n    }\n  }\n});\n\nexport const {\n  setLayerId,\n  setFeature,\n  reset,\n  setUserEditMode,\n  setFormDirty\n} = editFeatureSlice.actions;\n\nexport default editFeatureSlice.reducer;\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nconst initialState: boolean = false;\n\nconst editFeatureDrawerOpenSlice = createSlice({\n  name: 'editFeatureDrawerOpen',\n  initialState,\n  reducers: {\n    show() {\n      return true;\n    },\n    hide() {\n      return false;\n    },\n    toggle(state) {\n      return !state;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = editFeatureDrawerOpenSlice.actions;\n\nexport default editFeatureDrawerOpenSlice.reducer;\n","import {\n  PayloadAction,\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface LayerDetailsModalState {\n  visible: boolean;\n  layerId?: string;\n}\n\nconst initialState: LayerDetailsModalState = {\n  visible: false\n};\n\nconst layerDetailsModalSlice = createSlice({\n  name: 'layerDetailsModal',\n  initialState,\n  reducers: {\n    setLayer(state, action: PayloadAction<string | undefined>) {\n      state.layerId = action.payload;\n    },\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  setLayer,\n  show,\n  hide,\n  toggle\n} = layerDetailsModalSlice.actions;\n\nexport default layerDetailsModalSlice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport { V3CustomMapParams } from '@terrestris/mapfish-print-manager/dist/manager/MapFishPrintV3Manager';\n\nexport type PrintState = {\n  customMapParams?: V3CustomMapParams;\n  customParams?: any;\n};\n\nconst initialState: PrintState = {\n  customMapParams: {},\n  customParams: {\n    printLegend: false\n  }\n};\n\nexport const printSlice = createSlice({\n  name: 'print',\n  initialState,\n  reducers: {\n    setCustomMapParams: (state, action: PayloadAction<V3CustomMapParams>) => {\n      state.customMapParams = action.payload;\n    },\n    setCustomParams: (state, action: PayloadAction<any>) => {\n      state.customParams = action.payload;\n    },\n    addCustomMapParam: (state, action: PayloadAction<Partial<V3CustomMapParams>>) => {\n      state.customMapParams = {\n        ...state.customMapParams,\n        ...action.payload\n      };\n    },\n    addCustomParam: (state, action: PayloadAction<any>) => {\n      state.customParams = {\n        ...state.customParams,\n        ...action.payload\n      };\n    }\n  }\n});\n\nexport const {\n  setCustomMapParams,\n  setCustomParams,\n  addCustomMapParam,\n  addCustomParam\n} = printSlice.actions;\n\nexport default printSlice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nexport type SelectedFeatures = {\n  [layerName: string]: string;\n};\n\nconst initialState: SelectedFeatures = {};\n\nexport const slice = createSlice({\n  name: 'selectedFeatures',\n  initialState,\n  reducers: {\n    setSelectedFeatures(state, action: PayloadAction<SelectedFeatures>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setSelectedFeatures\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nexport interface ToolMenuState {\n  activeKeys: string[];\n  availableTools: string[];\n}\n\nconst initialState: ToolMenuState = {\n  // This is the default state. If no config is given, then load all tools\n  activeKeys: [],\n  availableTools: ['default']\n};\n\nexport const slice = createSlice({\n  name: 'toolMenu',\n  initialState,\n  reducers: {\n    setActiveKeys(state, action: PayloadAction<string[]>) {\n      state.activeKeys = [...action.payload];\n    },\n    setAvailableTools(state, action: PayloadAction<string[]>) {\n      state.availableTools = [...action.payload];\n    }\n  }\n});\n\nexport const {\n  setActiveKeys,\n  setAvailableTools\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface UploadDataModalState {\n  visible: boolean;\n}\n\nconst initialState: UploadDataModalState = {\n  visible: false\n};\n\nconst uploadDataModalSlice = createSlice({\n  name: 'uploadDataModal',\n  initialState,\n  reducers: {\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = uploadDataModalSlice.actions;\n\nexport default uploadDataModalSlice.reducer;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","AddLayerModal","restProps","loading","setLoading","useState","layers","setLayers","selectedRowKeys","setSelectedRowKeys","url","setUrl","sanitizedUrl","setSanitizedUrl","version","setVersion","isModalVisible","state","addLayerModal","visible","dispatch","map","useMap","t","useTranslation","useEffect","UrlUtil","closeModal","hide","addLayers","layersToAdd","targetFolderName","targetGroup","MapUtil","OlLayerGroup","set","existingGroups","getLayerGroup","getLayers","insertAt","getLength","forEach","layerToAdd","getArray","includes","layerUrl","ImageLayer","getSource","getUrl","TileLayer","urls","getUrls","length","undefined","layerConfig","name","get","type","opacity","getOpacity","sourceConfig","layerNames","getParams","LAYERS","useBearerToken","push","React","Modal","_extends","className","title","open","onCancel","width","footer","Button","key","disabled","onClick","onAddAll","onAddSelected","filter","layer","getUid","Input","Search","placeholder","value","onChange","event","target","onSearch","async","capabilities","CapabilitiesUtil","externalLayers","error","notification","message","description","enterButton","addonBefore","Select","defaultValue","label","Table","columns","render","text","record","rowKey","rowSelection","pagination","dataSource","usePlugins","useContext","PluginContext","BasicMapComponent","plugins","i18n","targetGroups","oldName","changeEvent","OlObjectEvent","dispatchEvent","language","pluginComponents","plugin","pluginIntegration","integration","placement","wrappedComponent","WrappedPluginComponent","MapComponent","useSHOGunAPIClient","SHOGunAPIClientContext","useExecuteWfsTransaction","client","useCallback","source","opts","OlSourceImageWMS","OlSourceTileWMS","endsWith","slice","defaultHeaders","response","fetch","method","headers","getBearerTokenHeader","getKeycloak","body","XMLSerializer","serializeToString","transaction","ok","Error","responseText","DOMParser","parseFromString","getElementsByTagName","isGeometryType","propertyType","useExecuteWfsDescribeFeatureType","params","SERVICE","REQUEST","VERSION","OUTPUTFORMAT","TYPENAMES","json","useWriteWfsTransaction","executeWfsDescribeFeatureType","cleanFormValues","form","formValues","getFieldsValue","Object","entries","getFieldInstance","isMoment","toISOString","inserts","updates","deletes","describeFeatureType","geomProperty","featureTypes","properties","find","property","overallUpdateMode","upsertFeatures","feature","feat","OlFeature","geometry","getGeometry","clone","isEmpty","getExtent","setGeometryName","setProperties","updateMode","getId","setId","deleteFeatures","transactionOpts","featureNS","targetNamespace","featurePrefix","targetPrefix","featureType","srsName","getView","getProjection","getCode","nativeElements","OlFormatWFS","writeTransaction","ClientConfiguration","rootNode","getRootNode","lockId","document","createElementNS","lockIdValue","createTextNode","appendChild","MapDrawer","children","passThroughProps","querySelectorAll","classList","toggle","Drawer","mask","getComputedStyle","documentElement","getPropertyValue","afterOpenChange","onAfterDrawerOpenChange","updateSize","useExecuteGetFeature","featureRequest","writeGetFeature","outputFormat","EditFeatureGeometryToolbar","historyLength","editHistory","useRef","past","future","editLayer","setEditLayer","setRevision","gjFormat","useMemo","OlFormatGeoJson","allowedEditMode","editFeature","userEditMode","DigitizeUtil","getDigitizeLayer","removeLayer","id","clear","olFeat","readFeature","addFeature","r","isEmptyOlExtent","fit","padding","updateRevision","features","getFeatures","writeFeaturesObject","current","btnTooltipProps","tooltipPlacement","tooltipProps","mouseEnterDelay","Toolbar","alignment","ToggleGroup","DrawButton","icon","FontAwesomeIcon","faPencil","pressedIcon","digitizeLayer","tooltip","drawType","onDrawEnd","e","toLocaleLowerCase","startsWith","ModifyButton","faDrawPolygon","onModifyStart","onModifyEnd","onTranslateEnd","DeleteButton","faTrash","onFeatureRemove","SimpleButton","faUndo","undoEdit","editSource","previousSource","_isEmpty","addFeatures","readFeatures","flip","redoEdit","nextSource","DisplayField","format","suffix","displayText","Number","isFinite","Intl","NumberFormat","Array","isArray","join","Typography","Text","EditFeatureForm","formConfig","formDirty","createReadOnlyComponent","fieldConfig","fieldProps","createFieldComponent","fieldCfg","component","Checkbox","DatePicker","InputNumber","allowClear","Switch","TextArea","Logger","Form","labelCol","span","labelAlign","labelWrap","onValuesChange","_debounce","changedValues","setFormDirty","field","readOnly","propertyName","formItemProps","rules","required","valuePropName","Item","displayName","EditFeatureTabs","tabConfig","initialValues","items","config","idx","forceRender","Tabs","onError","onSuccess","writeWfsTransaction","executeWfsTransaction","Popconfirm","onConfirm","isWmsLayer","olFeature","OlFormatGeoJSON","refresh","danger","ResetButton","resetFields","faRotateLeft","FeedbackIcon","loadComplete","SaveButton","saveCompleted","setSaveCompleted","validateFields","warn","result","setTimeout","faFloppyDisk","EditFeatureToolbar","onSaveSuccess","onSaveError","onDeleteSuccess","onDeleteError","EditFeatureFullForm","executeGetFeature","setTabConfig","setInitialValues","errorMsg","setErrorMsg","useForm","reloadFeature","updatedFeatures","equalTo","setFeature","update","editFormConfig","cloneDeep","tabConfigs","tabCfg","formCfg","isDate","cfg","moment","isUpload","status","setFieldsValue","Alert","showIcon","featureId","idString","item","getAttribute","split","useExecuteWfsLockFeature","lockFeatureDoc","featureProperties","parseInt","match","toString","idProperty","typeName","setAttribute","queryElement","filterElement","isEqualToElement","valueReferenceElement","valueReferenceValue","literalElement","literalValue","writeWfsLockFeature","useGetFeatureInfo","onFailure","onSingleClick","coords","evt","coordinate","viewResolution","getResolution","getFeatureInfoUrl","INFO_FORMAT","BUFFER","getTargetElement","style","cursor","featureCollection","onPointerMove","dragging","data","getData","pixel","Uint8ClampedArray","hit","on","un","EditFeatureSwitch","onLockSuccess","onLockError","onCreate","executeWfsLockFeature","geomType","getGeometryType","coordinates","EditFeatureDrawer","setLayer","isFeatureLocked","setIsFeatureLocked","drawerTitle","setDrawerTitle","isDrawerOpen","editFeatureDrawerOpen","layerId","olLayer","closeDrawer","releaseLock","hideEditFeatureDrawer","reset","onClose","onDrawerClose","confirm","maskClosable","content","okType","onOk","Footer","legalInformation","legal","insertPlugins","itemPosition","placementOrientation","splice","insertionIndex","getControls","control","OlControlScaleLine","addControl","OlControlMousePosition","coordinateFormat","createStringXY","projection","openContactModal","window","contact","openImprintModal","imprint","openPrivacyModal","privacy","getLeftItems","Divider","ScaleCombo","getRightItems","BasicNominatimSearch","viewBox","setViewBox","mapViewProjection","extent","transformedExtent","transformExtent","NominatimSearch","countryCodes","nominatimBaseUrl","generateFuzzySearchQuery","searchParts","part","trim","generateSolrQuery","searchValue","parts","replaceAll","s","subQueriesPerLayer","getAllLayers","searchConfig","fullLayerName","attributes","query","fieldList","isFulfilled","p","MultiSearch","useNominatim","useSolrHighlighting","delay","minChars","solrSearchBasePath","clickAwayRef","searchNominatim","setSearchNominatim","searchData","setSearchData","useViewBox","setUseViewBox","setSearchValue","resultsVisible","setResultsVisible","settingsVisible","setSettingsVisible","dataSearchResults","setDataSearchResults","highlightingResults","setHighlightingResults","nominatimResults","setNominatimResults","searchResults","setSearchResults","addEventListener","handleClickAway","removeEventListener","parents","unshift","parentNode","contains","settingsMenu","checked","performSearch","resetSearch","calculateExtent","searchUrl","URL","location","origin","promises","q","solrQueryConfig","rows","defType","qf","bboxFilter","fq","hl","href","JSON","stringify","successfulResults","Promise","allSettled","pr","dataResults","flatMap","sR","docs","hlResults","assign","sr","highlighting","logger","nominatimUrl","searchParams","getFeatureTitle","dsResult","highlightResult","blacklistedAttributes","displayTemplate","template","replace","_","token","replaceTemplates","filteredHighlightKeys","keys","propKey","propValue","toLowerCase","indexOf","updatedResults","geoJsonFormat","nFeats","f","geojson","dataProjection","featureProjection","display_name","nResults","wktFormat","OlFormatWKT","categories","_groupBy","res","category","resultCategory","readGeometry","ftName","substring","lastIndexOf","timeout","clearTimeout","actionsCreator","onEditFeatureBtnClick","setLayerId","showEditFeatureDrawer","Tooltip","EditOutlined","layerStyle","OlStyle","stroke","OlStyleStroke","color","fill","OlStyleFill","image","OlStyleCircle","radius","ref","addonAfter","Dropdown","menu","trigger","onOpenChange","SettingOutlined","onFocus","prefix","SearchOutlined","LoadingOutlined","resultRenderer","numTotal","Empty","PRESENTED_IMAGE_SIMPLE","SearchResultsPanel","accordion","searchTerms","SearchField","searchEngines","useSolr","getGravatarUrl","email","size","rating","defaultImage","force","lowerCaseEmail","md5","ApplicationInfo","opener","appInfo","logoPath","appDescription","isVisible","setVisible","toggleVisibility","Opener","centered","src","Statistic","PROJECT_VERSION","buildTime","UserMenu","keycloak","user","onMenuClick","accountManagement","login","logout","UserChip","imageSrc","providerDetails","userName","faAngleDown","userMenu","getMenu","faSignIn","username","divider","settings","faUserCog","info","faInfo","faSignOut","enabled","accountRoles","tokenParsed","resource_access","account","roles","itemsForLoggedInUser","Header","getCenterItems","LayerConfiguration","errorMessage","setErrorMessage","layerConfiguration","setLayerConfiguration","getLayerConfiguration","conf","findOne","closable","Spin","spinning","LayerDetails","setCapabilities","getCapabilities","capa","getLayerName","getCapabilitiesUrl","getCapabilitiesLayer","Capability","Layer","layerName","lay","l","Name","getBBox","EX_GeographicBoundingBox","getMinScale","MinScaleDenominator","getMaxScale","MaxScaleDenominator","getAbstract","Abstract","getServiceAbstract","Service","getContact","ContactInformation","ContactElectronicMailAddress","getLayerTitle","Title","getAccessConstraints","AccessConstraints","layout","flex","LayerDetailsModal","configurationVisible","setConfigurationVisible","layerDetailsModal","OlLayer","FileTextOutlined","onShowConfigurationClick","hideLayerDetailsModal","setDetailsLayer","hidden","Option","LanguageSelect","supportedLanguages","services","resourceStore","lang","changeLanguage","supportedLanguage","toUpperCase","Permalink","layerAttributes","initialPermalink","PermalinkUtil","getVisible","permalink","setPermalink","mailBody","eventKeys","identifierFunction","filterFunction","updatePermalink","updateLayerConfig","externalLayer","clientConfig","registerLayerCallback","layerGroup","layersInGroup","i","layerInGroup","LayerGroup","eventKeyVisibility","eventKeyOpacity","listenerKeyCenter","listenerKeyResolution","mapLayerGroup","unByKey","TwitterOutlined","twitterUrl","WhatsAppOutlined","whatsAppUrl","MailOutlined","mailToUrl","CopyOutlined","copy","SHOGunMapFishPrintV3WMSSerializer","MapFishPrintV3WMSSerializer","serialize","serialized","super","baseURL","optsToApply","tileSize","this","validateSource","MapFishPrintV3TiledWMSSerializer","CustomFieldInput","maxLength","inputText","setInputText","_isNil","addCustomParam","showCount","LayoutSelect","printManager","setLayout","getLayouts","OutputFormatSelect","outputFormats","setOutputFormat","toLocaleUpperCase","ResolutionSelect","resolution","setResolution","setDpi","getDpis","d","ScaleSelect","scale","setScale","updateScale","pmScale","getScale","transformInteraction","getInteractions","MapFishPrintV3Manager","TRANSFORM_INTERACTION_NAME","getScales","toLocaleString","Shared","customParams","FORMAT","LAYER","queryParams","encodeURIComponent","PrintForm","active","customPrintScales","layerBlackList","currentLanguageCode","customMapParams","print","setPrintManager","layerFilter","legendFilter","notBlacklisted","notHidden","printableLayer","SCALE","initializeMapProvider","pManagerOpts","getResolutions","units","getUnits","reverse","transformOpts","rotate","serializers","MapFishPrintV3GeoJsonSerializer","MapFishPrintV3OSMSerializer","MapFishPrintV3WMTSSerializer","SHOGunMapFishPrintV3TiledWMSSerializer","pManager","init","apps","getPrintApps","setPrintApp","getOutputFormats","shutdownManager","setCustomParams","setCustomMapParams","onAlertClose","isInitiated","initialValue","getClosestScaleToFitMap","faDownload","downloadUrl","StylingComponent","setStyle","symbolizers","kind","outlineOpacity","fillOpacity","outlineWidth","outlineColor","wellKnownName","strokeColor","strokeOpacity","font","offset","haloColor","haloWidth","olParser","OlParser","drawVectorLayer","olStylePolygon","olStyleLineString","olStylePoint","olStyleText","rule","newStyle","olStyle","writeStyle","output","drawLayerStyleFunction","geometryType","getType","parseStyles","CardStyle","onStyleChange","StylingDrawer","setOpen","showDrawer","faPaintBrush","Draw","showDrawPoint","showDrawLine","showDrawPolygon","showDrawCircle","showDrawRectangle","showDrawAnnotation","showModifyFeatures","showUploadFeatures","showDownloadFeatures","showDeleteFeatures","onGeoJSONUpload","geoJSONFile","fileReader","FileReader","onload","geoJSONFeatures","GeoJSON","mapProjection","transform","digitizeLayerSource","readAsText","pressed","faCircle","faGripLines","faSquare","faFont","faPenToSquare","UploadButton","uploadedFiles","files","faUpload","onGeoJSONDownload","clonedFeatures","digitizedFeatures","clonedFeature","geoJSON","writeFeatures","fileToDownload","Blob","createObjectURL","link","createElement","click","removeChild","initVectorLayer","OlSourceVector","featureStyle","OlLayerVector","addLayer","deinitVectorLayer","vectorLayer","FeatureInfoForm","getProperties","PaginationToolbar","selectedFeature","exportFilter","Pagination","simple","total","pageSize","onCopyAsGeoJSONClick","selectedFeatureClone","propertyEntries","filteredPropertyEntries","OlGeometry","unset","fromEntries","writeFeature","faClipboardCheck","onCopyAsObjectClick","props","_cloneDeep","faClipboardList","FeatureInfoTabs","currentPage","setCurrentPage","setSelectedFeature","vectorLayerName","useHighlightVectorLayer","page","child","FeatureInfoPropertyGrid","setBlacklistedAttributes","geomAttributes","attributeFilter","getKeys","prop","PropertyGrid","sticky","dataIndex","ellipsis","defaultSortOrder","sorter","a","b","localeCompare","scroll","scrollToFirstRowOnChange","y","FeatureInfo","queryLayers","setQueryLayers","OlLayerImage","OlLayerTile","updateQueryLayers","layerCandidates","mapLayers","getUnqualifiedLayerName","CoordinateInfo","featureCount","coordinateInfoState","pluginRendererAvailable","mapLayer","unqualifiedMapLayerName","destroyInactiveTabPane","fetchOpts","getFetchOpts","layerUid","serializedFeatures","entry","selectedFeatures","setSelectedFeatures","WmsTimeSlider","setValue","TIME","min","setMin","max","setMax","marks","setMarks","dimension","timeValues","values","m","val","default","nearest","NaN","diff","faClock","TimeSlider","updateParams","step","LayerTreeContextMenu","visibleLegendsIds","setVisibleLegendsIds","extentLoading","setExtentLoading","downloadConfig","zoomToLayerExtent","LayerUtil","getAllLayerGroups","layerGroups","parentGroups","getParentLayerGroups","parentGroup","remove","removeExternalLayer","externalLayerGroup","uploadedLayerGroup","downloadLayer","reqOpts","blob","dropdownMenuItems","legendVisible","downloadItems","dlConfig","formatName","encodeURI","decodeURI","legendId","newLegendIds","setLayerDetailsLayer","showLayerDetailsModal","faEllipsisV","LayerTree","layerTileLoadCounter","setLayerTileLoadCounter","allLayers","hasListener","tileLoadStartListener","tileLoadEndListener","counter","uid","loaded","percent","isInteger","Math","round","RgLayerTree","nodeTitleRenderer","mapView","unit","Progress","strokeWidth","LayerTransparencySlider","formatter","Legend","extraParams","LEGEND_OPTIONS","TRANSPARENT","forEachFeature","draggable","Measure","showMeasureDistance","showMeasureArea","MeasureButton","geodesic","measureType","continueLineMsg","faPenRuler","continuePolygonMsg","Panel","Collapse","ToolMenu","availableTools","toolMenu","activeKeys","collapsed","setCollapsed","menuTools","setMenuTools","mobileQuery","matchMedia","mobileNavigatorRegEx","RegExp","matches","test","navigator","userAgent","setActiveKeys","getToolPanelConfig","tool","faRuler","faMousePointer","faFileDownload","faStream","faPlus","showAdd","upload","authorizedRoles","some","role","hasResourceRole","clientId","showUpload","faShareNodes","faLanguage","expandIconPosition","activeKey","destroyInactivePanel","_toArray","getToolPanels","panels","toolPanelConfig","panel","header","faChevronRight","faChevronLeft","Dragger","Upload","UploadDataModal","uploadError","setUploadError","uploadSuccess","setUploadSuccess","isUploading","setIsUploading","uploadDataModal","getAttributeType","dbfFieldType","customRequest","file","splittedFileName","fileType","geoServerBaseUrl","base","workspace","Date","now","uploadData","baseUrl","storeName","coverageStoreUrl","fileName","coverageUrl","coverage","nativeName","keywords","uploadGeoTiff","shp","Shapefile","load","featureTypeName","featureTypeAttributes","attribute","k","v","dbfContent","parse","fields","minOccurs","maxOccurs","nillable","binding","shxContent","featureTypeUrl","uploadShapeZip","accept","maxCount","showUploadList","beforeUpload","maxSize","limit","fileSize","supportedFormats","hoverable","SHOGunApplicationUtil","parseTileLayer","search","URLSearchParams","useQueryParams","configString","addLayerGroup","parser","parseLayer","isExternalLayer","isUploadedLayer","groupName","App","useRestoreTransientLayers","loadingMask","add","createSlice","initialState","authorities","commitHash","userId","reducers","setAppInfo","action","payload","actions","setDescription","setLegal","setLogoPath","setSearchEngines","setTitle","setUser","createReducer","asyncReducers","combineReducers","store","configureStore","reducer","LoadingErrorCode","SHOGunAPIClient","getConfigLang","enGB","deDE","setupSHOGunMap","view","parseMapView","application","constrainOnlyCenter","ll","fromLonLat","ur","setConstrainResolution","parseLayerTree","OlMap","controls","OlControlDefaults","zoom","setupDefaultMap","osmLayer","OlSourceOsm","temperatureLayer","eoLayerGroup","backgroundLayerGroup","center","OlView","loadPluginModules","moduleName","moduleUrl","remoteNames","__webpack_init_sharing__","resolve","reject","element","parentElement","onerror","err","head","container","__webpack_share_scopes__","modules","remoteName","module","matchRole","keycloakEnabled","keycloakOnLoad","onLoadAction","keycloakHost","host","keycloakRealm","realm","keycloakClientId","Keycloak","onTokenExpired","updateToken","onLoad","checkLoginIframe","initKeycloak","setKeycloak","applicationId","APP_ID_NOT_SET","appConfig","getApplicationConfiguration","APP_CONFIG_NOT_FOUND","defaultLanguage","use","LanguageDetector","initOpts","theme","primaryColor","secondaryColor","complementaryColor","parseTheme","ConfigProvider","Color","isLight","darken","hexa","setProperty","subscribe","getState","toolConfig","engines","setAvailableTools","setApplicationToStore","getAppInfo","getApplicationInfo","setAppInfoToStore","setUserToStore","getUser","userRoles","realm_access","checkRoles","list","featureEditRoles","authorizedRolesForCreate","authorizedRolesForUpdate","authorizedRolesForDelete","setUserEditMode","setupMap","clientPlugins","resourcePath","exposedPaths","clientPluginModules","clientPluginDefault","PluginComponent","locale","lng","resources","translation","addResourceBundle","replaceReducer","loadPlugins","duration","fallback","SHOGunAPIClientProvider","PluginProvider","Provider","MapContext","getElementById","isInitialized","errorDescription","appId","renderApp","de","clientVersionTitle","backendVersionTitle","addSelectedLayers","addAllLayers","inputPlaceholder","externalWmsFolder","columnTitle","processedLayersFolder","twitterTooltip","whatsAppTooltip","mailTooltip","copyTooltip","copiedToClipboard","copyToClipboardFailed","line","area","clicktodrawline","clicktodrawarea","point","polygon","circle","rectangle","modify","delete","export","pickColor","usageHint","transparency","noLegendAvailable","layerZoomToExtent","extentError","showLegend","hideLegend","layerDetails","internalConfigurationButtonTooltip","internalConfigurationButtonTooltipPressed","noDataPlaceholder","layerNameLabel","layerTitleLabel","serviceAbstractLabel","abstractLabel","accessConstraintsLabel","capabilitiesUrlLabel","contactLabel","minScaleLabel","maxScaleLabel","bboxLabel","expand","collapse","measure","draw","featureInfo","addWms","layertree","languageSelect","initialTitle","titlePlaceholder","comment","commentPlaceholder","dpi","downloadBtnText","printJobErrorMsg","initErrorMsg","outputFormatPlaceholder","resolutionPlaceholder","managerErrorMessage","refSystem","mousePosition","privacypolicy","Index","applicationLoadErrorMessage","applicationLoadErrorDescription","errorDescriptionAppIdNotSet","errorDescriptionAppConfigNotFound","Nominatim","settingsMenuTitle","infoMenuTitle","logoutMenuTitle","loginMenuTitle","uploadedDataFolder","hint","success","general","zipContent","searchInViewBox","nominatimTitle","searchPlaceholder","featureEditor","noLayerFoundError","isFeatureLockedErrorMsg","closeDrawerWarnTitle","closeDrawerWarnContent","limitedUsageHint","createFeature","saveErrorMsg","deleteErrorMsg","edit","undo","redo","EditFeatureButton","FeaturePropertyGrid","copyAsGeoJson","copyAsObject","en","fallbackLng","debug","interpolation","escapeValue","returnNull","initReactI18next","addLayerModalSlice","show","editFeatureSlice","editFeatureDrawerOpenSlice","layerDetailsModalSlice","printSlice","printLegend","addCustomMapParam","uploadDataModalSlice","___CSS_LOADER_EXPORT___"],"sourceRoot":""}