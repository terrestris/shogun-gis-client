{"version":3,"file":"19.be712f0f917d3836.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/Collection.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/CollectionEventType.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/Object.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/ObjectEventType.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/Observable.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/asserts.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/events.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/layer/Base.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/layer/Group.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/layer/Property.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/math.js"],"sourcesContent":["/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n"],"names":["CollectionEvent","type","element","index","Collection","array","options","i","ii","arr","f","elem","Error","n","prev","except","ObjectEvent","key","oldValue","BaseObject","values","undefined","value","Object","eventType","listener","silent","source","Observable","Array","len","keys","unByKey","assert","assertion","errorMessage","listen","target","thisArg","once","originalListener","event","eventsKey","listenOnce","unlistenByKey","BaseLayer","properties","Infinity","managed","state","zIndex","Math","states","background","extent","maxResolution","minResolution","maxZoom","minZoom","opacity","visible","zindex","GroupEvent","layer","LayerGroup","baseOptions","layers","id","layersArray","listenerKeys","collectionEvent","collection","currentLayers","dest","pos","ownLayerState","defaultZIndex","layerState","clamp","min","max","squaredSegmentDistance","x","y","x1","y1","x2","y2","dx","dy","t","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","r","absValue","tmp","j","coef","k","l","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","a","b","lerp","toFixed","decimals","factor","round","floor","ceil","wrap","range"],"mappings":"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"}