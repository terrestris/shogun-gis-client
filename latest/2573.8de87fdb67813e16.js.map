{"version":3,"file":"2573.8de87fdb67813e16.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/format/GML3.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/format/GML32.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/format/WFS.js"],"sourcesContent":["/**\n * @module ol/format/GML3\n */\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1],\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const axisOrientation = containerSrs\n      ? getProjection(containerSrs).getAxisOrientation()\n      : 'enu';\n    if (axisOrientation === 'neu') {\n      for (let i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    const axisOrientation = containerSrs\n      ? getProjection(containerSrs).getAxisOrientation()\n      : 'enu';\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'),\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    const asXYZ = axisOrientation.startsWith('en');\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (asXYZ) {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    const axisOrientation = srsName\n      ? getProjection(srsName).getAxisOrientation()\n      : 'enu';\n    const point = value.getCoordinates();\n    // only 2d for simple features profile\n    let coords = axisOrientation.startsWith('en')\n      ? point[0] + ' ' + point[1]\n      : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    const axisOrientation = srsName\n      ? getProjection(srsName).getAxisOrientation()\n      : 'enu';\n    let coords = axisOrientation.startsWith('en')\n      ? point[0] + ' ' + point[1]\n      : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior',\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this,\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context,\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context,\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null && value !== undefined) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this,\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this,\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack,\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName],\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   * @override\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   * @override\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation,\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML32\n */\nimport {writeStringTextNode} from '../format/xsd.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @override\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    objectStack[objectStack.length - 1] = Object.assign(\n      {multiCurve: true, multiSurface: true},\n      context,\n    );\n    super.writeGeometryElement(node, geometry, objectStack);\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/format/WFS\n */\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds',\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary',\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary',\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * @typedef {Object} TransactionSummary\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {TransactionSummary} transactionSummary Transaction summary.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_,\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source),\n      );\n    }\n    return this.readTransactionResponseFromNode(\n      /** @type {Element} */ (source),\n    );\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source),\n      );\n    }\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */ (source),\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n),\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'),\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_,\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      [],\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_,\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(\n      Array.isArray(options.featureTypes),\n      '`options.featureTypes` must be an Array',\n    );\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(\n          options.geometryName,\n          '`options.geometryName` must also be provided when `options.bbox` is set',\n        );\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter,\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context],\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter,\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version],\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request,\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj,\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack,\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const tagName = version === '2.0.0' ? 'ValueReference' : 'Name';\n  const name = createElementNS(ns, tagName);\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack,\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack,\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack,\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack,\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n"],"names":["schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","GML3","GMLBase","options","undefined","node","objectStack","lineStrings","MultiLineString","flatCoordinates","i","ii","polygons","MultiPolygon","flatLinearRing","flatLinearRings","ends","Polygon","LineString","m","s","re","parseFloat","containerSrs","context","axisOrientation","y","x","len","z","contextDimension","coords","dim","asXYZ","value","hasZ","srsName","point","points","parts","Array","geometry","pos","extent","values","posList","nodeName","parentNode","exteriorWritten","rings","patches","segments","surface","curve","lines","ring","linearRing","polygon","child","line","item","Object","feature","fid","featureNS","geometryName","keys","properties","key","features","featureType","serializers","multiSurface","multiCurve","geom","GML2","GML32","FEATURE_COLLECTION_PARSERS","TRANSACTION_SUMMARY_PARSERS","TRANSACTION_RESPONSE_PARSERS","readTransactionSummary","readInsertResults","QUERY_SERIALIZERS","TRANSACTION_SERIALIZERS","writeFeature","writeUpdate","writeDelete","writeProperty","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","WFS","XMLFeature","featuresNS","source","doc","n","Node","result","String","filter","writeGetFeature","completeFilter","bboxFilter","inserts","updates","deletes","baseObj","version","request","createTransactionRequest","gmlVersion","featurePrefix","serializeTransactionRequest","type","OGC_FID_PARSERS","fidParser","INSERT_RESULTS_PARSERS","writeOgcFidFilter","ns","getTypeName","prefix","typeName","name","pair","nativeElement","GETFEATURE_SERIALIZERS","writeQuery","writeDuringFilter","writeLogicalFilter","writeNotFilter","writeBboxFilter","writeSpatialFilter","writeDWithinFilter","writeComparisonFilter","writeIsNullFilter","writeIsBetweenFilter","writeIsLikeFilter","typeNameAttr","propertyNames","getFilterNS","writeFilterCondition","parent","format","writePropertyName","distance","writeExpression","timePeriod","begin","writeTimeInstant","end","conditions","condition","writeLiteral","lowerBoundary","upperBoundary","tagName","property","time","timeInstant","timePosition","writeFilter","featureTypes"],"mappings":"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"}