{"version":3,"file":"3647.29fbe93b87834c65.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/rc-resize-observer/es/Collection.js","webpack://@terrestris/shogun-gis-client/./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","webpack://@terrestris/shogun-gis-client/./node_modules/rc-resize-observer/es/utils/observerUtil.js","webpack://@terrestris/shogun-gis-client/./node_modules/rc-resize-observer/es/SingleObserver/DomWrapper.js","webpack://@terrestris/shogun-gis-client/./node_modules/rc-resize-observer/es/SingleObserver/index.js","webpack://@terrestris/shogun-gis-client/./node_modules/rc-resize-observer/es/index.js"],"sourcesContent":["import * as React from 'react';\nexport var CollectionContext = /*#__PURE__*/React.createContext(null);\n/**\n * Collect all the resize event from children ResizeObserver\n */\nexport function Collection(_ref) {\n  var children = _ref.children,\n    onBatchResize = _ref.onBatchResize;\n  var resizeIdRef = React.useRef(0);\n  var resizeInfosRef = React.useRef([]);\n  var onCollectionResize = React.useContext(CollectionContext);\n  var onResize = React.useCallback(function (size, element, data) {\n    resizeIdRef.current += 1;\n    var currentId = resizeIdRef.current;\n    resizeInfosRef.current.push({\n      size: size,\n      element: element,\n      data: data\n    });\n    Promise.resolve().then(function () {\n      if (currentId === resizeIdRef.current) {\n        onBatchResize === null || onBatchResize === void 0 || onBatchResize(resizeInfosRef.current);\n        resizeInfosRef.current = [];\n      }\n    });\n\n    // Continue bubbling if parent exist\n    onCollectionResize === null || onCollectionResize === void 0 || onCollectionResize(size, element, data);\n  }, [onBatchResize, onCollectionResize]);\n  return /*#__PURE__*/React.createElement(CollectionContext.Provider, {\n    value: onResize\n  }, children);\n}","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","import ResizeObserver from 'resize-observer-polyfill';\n// =============================== Const ===============================\nvar elementListeners = new Map();\nfunction onResize(entities) {\n  entities.forEach(function (entity) {\n    var _elementListeners$get;\n    var target = entity.target;\n    (_elementListeners$get = elementListeners.get(target)) === null || _elementListeners$get === void 0 || _elementListeners$get.forEach(function (listener) {\n      return listener(target);\n    });\n  });\n}\n\n// Note: ResizeObserver polyfill not support option to measure border-box resize\nvar resizeObserver = new ResizeObserver(onResize);\n\n// Dev env only\nexport var _el = process.env.NODE_ENV !== 'production' ? elementListeners : null; // eslint-disable-line\nexport var _rs = process.env.NODE_ENV !== 'production' ? onResize : null; // eslint-disable-line\n\n// ============================== Observe ==============================\nexport function observe(element, callback) {\n  if (!elementListeners.has(element)) {\n    elementListeners.set(element, new Set());\n    resizeObserver.observe(element);\n  }\n  elementListeners.get(element).add(callback);\n}\nexport function unobserve(element, callback) {\n  if (elementListeners.has(element)) {\n    elementListeners.get(element).delete(callback);\n    if (!elementListeners.get(element).size) {\n      resizeObserver.unobserve(element);\n      elementListeners.delete(element);\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\n/**\n * Fallback to findDOMNode if origin ref do not provide any dom element\n */\nvar DomWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(DomWrapper, _React$Component);\n  var _super = _createSuper(DomWrapper);\n  function DomWrapper() {\n    _classCallCheck(this, DomWrapper);\n    return _super.apply(this, arguments);\n  }\n  _createClass(DomWrapper, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n  return DomWrapper;\n}(React.Component);\nexport { DomWrapper as default };","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport { supportRef, useComposeRef, getNodeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { CollectionContext } from \"../Collection\";\nimport { observe, unobserve } from \"../utils/observerUtil\";\nimport DomWrapper from \"./DomWrapper\";\nfunction SingleObserver(props, ref) {\n  var children = props.children,\n    disabled = props.disabled;\n  var elementRef = React.useRef(null);\n  var wrapperRef = React.useRef(null);\n  var onCollectionResize = React.useContext(CollectionContext);\n\n  // =========================== Children ===========================\n  var isRenderProps = typeof children === 'function';\n  var mergedChildren = isRenderProps ? children(elementRef) : children;\n\n  // ============================= Size =============================\n  var sizeRef = React.useRef({\n    width: -1,\n    height: -1,\n    offsetWidth: -1,\n    offsetHeight: -1\n  });\n\n  // ============================= Ref ==============================\n  var canRef = !isRenderProps && /*#__PURE__*/React.isValidElement(mergedChildren) && supportRef(mergedChildren);\n  var originRef = canRef ? getNodeRef(mergedChildren) : null;\n  var mergedRef = useComposeRef(originRef, elementRef);\n  var getDom = function getDom() {\n    var _elementRef$current;\n    return findDOMNode(elementRef.current) || (\n    // Support `nativeElement` format\n    elementRef.current && _typeof(elementRef.current) === 'object' ? findDOMNode((_elementRef$current = elementRef.current) === null || _elementRef$current === void 0 ? void 0 : _elementRef$current.nativeElement) : null) || findDOMNode(wrapperRef.current);\n  };\n  React.useImperativeHandle(ref, function () {\n    return getDom();\n  });\n\n  // =========================== Observe ============================\n  var propsRef = React.useRef(props);\n  propsRef.current = props;\n\n  // Handler\n  var onInternalResize = React.useCallback(function (target) {\n    var _propsRef$current = propsRef.current,\n      onResize = _propsRef$current.onResize,\n      data = _propsRef$current.data;\n    var _target$getBoundingCl = target.getBoundingClientRect(),\n      width = _target$getBoundingCl.width,\n      height = _target$getBoundingCl.height;\n    var offsetWidth = target.offsetWidth,\n      offsetHeight = target.offsetHeight;\n\n    /**\n     * Resize observer trigger when content size changed.\n     * In most case we just care about element size,\n     * let's use `boundary` instead of `contentRect` here to avoid shaking.\n     */\n    var fixedWidth = Math.floor(width);\n    var fixedHeight = Math.floor(height);\n    if (sizeRef.current.width !== fixedWidth || sizeRef.current.height !== fixedHeight || sizeRef.current.offsetWidth !== offsetWidth || sizeRef.current.offsetHeight !== offsetHeight) {\n      var size = {\n        width: fixedWidth,\n        height: fixedHeight,\n        offsetWidth: offsetWidth,\n        offsetHeight: offsetHeight\n      };\n      sizeRef.current = size;\n\n      // IE is strange, right?\n      var mergedOffsetWidth = offsetWidth === Math.round(width) ? width : offsetWidth;\n      var mergedOffsetHeight = offsetHeight === Math.round(height) ? height : offsetHeight;\n      var sizeInfo = _objectSpread(_objectSpread({}, size), {}, {\n        offsetWidth: mergedOffsetWidth,\n        offsetHeight: mergedOffsetHeight\n      });\n\n      // Let collection know what happened\n      onCollectionResize === null || onCollectionResize === void 0 || onCollectionResize(sizeInfo, target, data);\n      if (onResize) {\n        // defer the callback but not defer to next frame\n        Promise.resolve().then(function () {\n          onResize(sizeInfo, target);\n        });\n      }\n    }\n  }, []);\n\n  // Dynamic observe\n  React.useEffect(function () {\n    var currentElement = getDom();\n    if (currentElement && !disabled) {\n      observe(currentElement, onInternalResize);\n    }\n    return function () {\n      return unobserve(currentElement, onInternalResize);\n    };\n  }, [elementRef.current, disabled]);\n\n  // ============================ Render ============================\n  return /*#__PURE__*/React.createElement(DomWrapper, {\n    ref: wrapperRef\n  }, canRef ? /*#__PURE__*/React.cloneElement(mergedChildren, {\n    ref: mergedRef\n  }) : mergedChildren);\n}\nvar RefSingleObserver = /*#__PURE__*/React.forwardRef(SingleObserver);\nif (process.env.NODE_ENV !== 'production') {\n  RefSingleObserver.displayName = 'SingleObserver';\n}\nexport default RefSingleObserver;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { warning } from \"rc-util/es/warning\";\nimport SingleObserver from \"./SingleObserver\";\nimport { Collection } from \"./Collection\";\nvar INTERNAL_PREFIX_KEY = 'rc-observer-key';\nimport { _rs } from \"./utils/observerUtil\";\nexport { /** @private Test only for mock trigger resize event */\n_rs };\nfunction ResizeObserver(props, ref) {\n  var children = props.children;\n  var childNodes = typeof children === 'function' ? [children] : toArray(children);\n  if (process.env.NODE_ENV !== 'production') {\n    if (childNodes.length > 1) {\n      warning(false, 'Find more than one child node with `children` in ResizeObserver. Please use ResizeObserver.Collection instead.');\n    } else if (childNodes.length === 0) {\n      warning(false, '`children` of ResizeObserver is empty. Nothing is in observe.');\n    }\n  }\n  return childNodes.map(function (child, index) {\n    var key = (child === null || child === void 0 ? void 0 : child.key) || \"\".concat(INTERNAL_PREFIX_KEY, \"-\").concat(index);\n    return /*#__PURE__*/React.createElement(SingleObserver, _extends({}, props, {\n      key: key,\n      ref: index === 0 ? ref : undefined\n    }), child);\n  });\n}\nvar RefResizeObserver = /*#__PURE__*/React.forwardRef(ResizeObserver);\nif (process.env.NODE_ENV !== 'production') {\n  RefResizeObserver.displayName = 'ResizeObserver';\n}\nRefResizeObserver.Collection = Collection;\nexport default RefResizeObserver;"],"names":["Map","Object","window","document","Math","self","Function","requestAnimationFrame","setTimeout","Date","MutationObserver","t","g","parseFloat","arguments","SVGGraphicsElement","R","c","DOMRectReadOnly","TypeError","Element","e","WeakMap","m","f","Promise","Set","r"],"mappings":"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"}