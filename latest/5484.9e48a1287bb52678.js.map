{"version":3,"file":"5484.9e48a1287bb52678.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-geo/dist/Grid/PropertyGrid/PropertyGrid.js","webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-geo/dist/constants.js"],"sourcesContent":["import './PropertyGrid.less';\nimport { Table } from 'antd';\nimport _get from 'lodash/get';\nimport { getUid } from 'ol';\nimport React, { useMemo } from 'react';\nimport { CSS_PREFIX } from '../../constants';\nconst defaultClassName = `${CSS_PREFIX}propertygrid`;\n/**\n * Component representing a feature grid showing the attribute values of a simple feature.\n */\nconst PropertyGrid = ({ attributeNameColumnTitle = 'Attribute name', attributeNameColumnWidthInPercent = 50, attributeValueColumnTitle = 'Attribute value', className, attributeFilter, attributeNames, feature, ...passThroughProps }) => {\n    const dataSource = useMemo(() => {\n        let filter = attributeFilter;\n        if (!filter) {\n            filter = feature.getKeys().filter((attrName) => attrName !== 'geometry');\n        }\n        return filter.map((attr) => {\n            const fid = getUid(feature);\n            return {\n                attributeName: (attributeNames && _get(attributeNames, attr)) ?\n                    _get(attributeNames, attr) :\n                    attr,\n                attributeValue: feature.get(attr),\n                key: `ATTR_${attr}_fid_${fid}`\n            };\n        });\n    }, [attributeFilter, attributeNames, feature]);\n    const isUrl = (value) => {\n        return /^(?:\\w+:)?\\/\\/([^\\s.]+\\.\\S{2}|localhost[:?\\d]*)\\S*$/.test(value);\n    };\n    const columns = useMemo(() => {\n        return [{\n                title: attributeNameColumnTitle,\n                dataIndex: 'attributeName',\n                key: 'attributeName',\n                width: `${attributeNameColumnWidthInPercent}%`\n            }, {\n                title: attributeValueColumnTitle,\n                dataIndex: 'attributeValue',\n                key: 'attributeValue',\n                width: `${100 - attributeNameColumnWidthInPercent}%`,\n                render: (value) => {\n                    if (isUrl(value)) {\n                        return React.createElement(\"a\", { href: value, target: \"_blank\" }, value);\n                    }\n                    else {\n                        return value;\n                    }\n                }\n            }];\n    }, [attributeNameColumnTitle, attributeNameColumnWidthInPercent, attributeValueColumnTitle]);\n    const finalClassName = className\n        ? `${className} ${defaultClassName}`\n        : defaultClassName;\n    return (React.createElement(Table, { className: finalClassName, rowKey: record => record.key, dataSource: dataSource, columns: columns, pagination: false, ...passThroughProps }));\n};\nexport default PropertyGrid;\n//# sourceMappingURL=PropertyGrid.js.map","const CSS_PREFIX = 'react-geo-';\nexport { CSS_PREFIX };\n//# sourceMappingURL=constants.js.map"],"names":["defaultClassName","attributeNameColumnTitle","attributeNameColumnWidthInPercent","attributeValueColumnTitle","className","attributeFilter","attributeNames","feature","passThroughProps","dataSource","filter","attrName","attr","fid","isUrl","value","columns","finalClassName","record","CSS_PREFIX"],"mappings":"0OAMA,IAAMA,EAAmB,CAAC,EAAE,GAAU,CAAC,YAAY,CAAC,AAkDpD,WA9CqB,CAAC,CAAEC,yBAAAA,EAA2B,gBAAgB,CAAEC,kCAAAA,EAAoC,EAAE,CAAEC,0BAAAA,EAA4B,iBAAiB,CAAEC,UAAAA,CAAS,CAAEC,gBAAAA,CAAe,CAAEC,eAAAA,CAAc,CAAEC,QAAAA,CAAO,CAAE,GAAGC,EAAkB,IAClO,IAAMC,EAAa,cAAQ,KACvB,IAAIC,EAASL,EAIb,OAHKK,GACDA,CAAAA,EAASH,EAAQ,OAAO,GAAG,MAAM,CAAC,AAACI,GAAaA,AAAa,aAAbA,EAAuB,EAEpED,EAAO,GAAG,CAAC,AAACE,IACf,IAAMC,EAAM,aAAON,GACnB,MAAO,CACH,cAAe,AAACD,GAAkB,IAAKA,EAAgBM,GACnD,IAAKN,EAAgBM,GACrBA,EACJ,eAAgBL,EAAQ,GAAG,CAACK,GAC5B,IAAK,CAAC,KAAK,EAAEA,EAAK,KAAK,EAAEC,EAAI,CAAC,AAClC,CACJ,EACJ,EAAG,CAACR,EAAiBC,EAAgBC,EAAQ,EACvCO,EAAQ,AAACC,GACJ,sDAAsD,IAAI,CAACA,GAEhEC,EAAU,cAAQ,IACb,CAAC,CACA,MAAOf,EACP,UAAW,gBACX,IAAK,gBACL,MAAO,CAAC,EAAEC,EAAkC,CAAC,CAAC,AAClD,EAAG,CACC,MAAOC,EACP,UAAW,iBACX,IAAK,iBACL,MAAO,CAAC,EAAE,IAAMD,EAAkC,CAAC,CAAC,CACpD,OAAQ,AAACa,GACL,AAAID,EAAMC,GACC,iBAAmB,CAAC,IAAK,CAAE,KAAMA,EAAO,OAAQ,QAAS,EAAGA,GAG5DA,CAGnB,EAAE,CACP,CAACd,EAA0BC,EAAmCC,EAA0B,EACrFc,EAAiBb,EACjB,CAAC,EAAEA,EAAU,CAAC,EAAEJ,EAAiB,CAAC,CAClCA,EACN,OAAQ,iBAAmB,CAAC,GAAK,CAAE,CAAE,UAAWiB,EAAgB,OAAQC,GAAUA,EAAO,GAAG,CAAE,WAAYT,EAAY,QAASO,EAAS,WAAY,GAAO,GAAGR,CAAgB,AAAC,EACnL,C,wDCvDA,IAAMW,EAAa,Y"}