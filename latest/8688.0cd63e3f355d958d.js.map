{"version":3,"file":"8688.0cd63e3f355d958d.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/Disposable.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/Object.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/ObjectEventType.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/Observable.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/array.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/events.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/events/Event.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/events/EventType.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/events/Target.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/functions.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/obj.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/source/Source.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/util.js"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.4.0';\n"],"names":["e","t","Object","Array","i","u","arguments","Promise","Error","String"],"mappings":"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"}