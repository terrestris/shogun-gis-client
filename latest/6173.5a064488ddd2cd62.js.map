{"version":3,"file":"6173.5a064488ddd2cd62.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/ImageState.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/color.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/dom.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/has.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/layer/BaseImage.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/layer/Image.js"],"sourcesContent":["/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image ? null : this.image.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image = null;\n          }\n        }\n      } else {\n        this.image = null;\n      }\n    }\n\n    return !!this.image;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image.getExtent();\n    const img = this.image.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const image = this.image;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const context = this.getRenderContext(frameState);\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/layer/Image\n */\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport BaseImageLayer from './BaseImage.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n"],"names":["e","NaN","Number","Error","Math","i","parseInt","Array","isNaN","OffscreenCanvas","document","getComputedStyle","navigator","devicePixelRatio","WorkerGlobalScope","self","Image","createImageBitmap","Object","window"],"mappings":"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"}