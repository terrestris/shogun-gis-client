"use strict";(self.webpackChunk_terrestris_shogun_gis_client=self.webpackChunk_terrestris_shogun_gis_client||[]).push([["2057"],{30006:function(e,t,n){var i=n(73381);t.Z={SINGLECLICK:"singleclick",CLICK:i.default.CLICK,DBLCLICK:i.default.DBLCLICK,POINTERDRAG:"pointerdrag",POINTERMOVE:"pointermove",POINTERDOWN:"pointerdown",POINTERUP:"pointerup",POINTEROVER:"pointerover",POINTEROUT:"pointerout",POINTERENTER:"pointerenter",POINTERLEAVE:"pointerleave",POINTERCANCEL:"pointercancel"}},86320:function(e,t,n){function i(e){return Math.pow(e,3)}function r(e){return 1-i(1-e)}function o(e){return 3*e*e-2*e*e*e}function s(e){return e}function a(e){return e<.5?o(2*e):1-o(2*(e-.5))}n.r(t),n.d(t,{easeIn:function(){return i},easeOut:function(){return r},inAndOut:function(){return o},linear:function(){return s},upAndDown:function(){return a}})},36403:function(e,t,n){n.r(t),n.d(t,{all:function(){return a},altKeyOnly:function(){return l},altShiftKeysOnly:function(){return u},always:function(){return d},click:function(){return c},doubleClick:function(){return v},focus:function(){return h},focusWithTabindex:function(){return g},mouseActionButton:function(){return f},mouseOnly:function(){return S},never:function(){return _},noModifierKeys:function(){return y},penOnly:function(){return M},platformModifierKey:function(){return x},platformModifierKeyOnly:function(){return E},pointerMove:function(){return m},primaryAction:function(){return T},shiftKeyOnly:function(){return C},singleClick:function(){return p},targetNotEditable:function(){return P},touchOnly:function(){return F}});var i=n(30006),r=n(38906),o=n(64011),s=n(91358);function a(e){let t=arguments;return function(e){let n=!0;for(let i=0,r=t.length;i<r&&(n=n&&t[i](e));++i);return n}}let l=function(e){let t=e.originalEvent;return t.altKey&&!(t.metaKey||t.ctrlKey)&&!t.shiftKey},u=function(e){let t=e.originalEvent;return t.altKey&&!(t.metaKey||t.ctrlKey)&&t.shiftKey},h=function(e){let t=e.map.getTargetElement(),n=t.getRootNode(),i=e.map.getOwnerDocument().activeElement;return n instanceof ShadowRoot?n.host.contains(i):t.contains(i)},g=function(e){let t=e.map.getTargetElement(),n=t.getRootNode();return!(n instanceof ShadowRoot?n.host:t).hasAttribute("tabindex")||h(e)},d=o.TRUE,c=function(e){return e.type==i.Z.CLICK},f=function(e){let t=e.originalEvent;return 0==t.button&&!(s.WEBKIT&&s.MAC&&t.ctrlKey)},_=o.FALSE,m=function(e){return"pointermove"==e.type},p=function(e){return e.type==i.Z.SINGLECLICK},v=function(e){return e.type==i.Z.DBLCLICK},y=function(e){let t=e.originalEvent;return!t.altKey&&!(t.metaKey||t.ctrlKey)&&!t.shiftKey},E=function(e){let t=e.originalEvent;return!t.altKey&&(s.MAC?t.metaKey:t.ctrlKey)&&!t.shiftKey},x=function(e){let t=e.originalEvent;return s.MAC?t.metaKey:t.ctrlKey},C=function(e){let t=e.originalEvent;return!t.altKey&&!(t.metaKey||t.ctrlKey)&&t.shiftKey},P=function(e){let t=e.originalEvent,n=t.target.tagName;return"INPUT"!==n&&"SELECT"!==n&&"TEXTAREA"!==n&&!t.target.isContentEditable},S=function(e){let t=e.originalEvent;return(0,r.h)(void 0!==t,"mapBrowserEvent must originate from a pointer event"),"mouse"==t.pointerType},F=function(e){let t=e.originalEvent;return(0,r.h)(void 0!==t,"mapBrowserEvent must originate from a pointer event"),"touch"===t.pointerType},M=function(e){let t=e.originalEvent;return(0,r.h)(void 0!==t,"mapBrowserEvent must originate from a pointer event"),"pen"===t.pointerType},T=function(e){let t=e.originalEvent;return(0,r.h)(void 0!==t,"mapBrowserEvent must originate from a pointer event"),t.isPrimary&&0===t.button}},47588:function(e,t,n){n.d(t,{Cv:function(){return a},FW:function(){return l}});var i=n(58493),r=n(86320),o=n(73604);class s extends i.default{constructor(e){super(),this.on,this.once,this.un,e&&e.handleEvent&&(this.handleEvent=e.handleEvent),this.map_=null,this.setActive(!0)}getActive(){return this.get(o.Z.ACTIVE)}getMap(){return this.map_}handleEvent(e){return!0}setActive(e){this.set(o.Z.ACTIVE,e)}setMap(e){this.map_=e}}function a(e,t,n){let i=e.getCenterInternal();if(i){let o=[i[0]+t[0],i[1]+t[1]];e.animateInternal({duration:void 0!==n?n:250,easing:r.linear,center:e.getConstrainedCenter(o)})}}function l(e,t,n,i){let o=e.getZoom();if(void 0===o)return;let s=e.getConstrainedZoom(o+t),a=e.getResolutionForZoom(s);e.getAnimating()&&e.cancelAnimations(),e.animate({resolution:a,anchor:n,duration:void 0!==i?i:250,easing:r.easeOut})}t.ZP=s},1577:function(e,t,n){n.r(t),n.d(t,{ModifyEvent:function(){return M}});var i=n(78426),r=n(19629),o=n(23068),s=n(30006),a=n(79682),l=n(90728),u=n(9520),h=n(73381),g=n(36403),d=n(21915),c=n(52043),f=n(15265),_=n(28799),m=n(5374),p=n(73410),v=n(25753),y=n(73101),E=n(31219),x=n(49179),C=n(38024);let P=[0,0,0,0],S=[],F={MODIFYSTART:"modifystart",MODIFYEND:"modifyend"};class M extends u.default{constructor(e,t,n){super(e),this.features=t,this.mapBrowserEvent=n}}class T extends C.default{constructor(e){let t;if(super(e),this.on,this.once,this.un,this.boundHandleFeatureChange_=this.handleFeatureChange_.bind(this),this.condition_=e.condition?e.condition:g.primaryAction,this.defaultDeleteCondition_=function(e){return(0,g.altKeyOnly)(e)&&(0,g.singleClick)(e)},this.deleteCondition_=e.deleteCondition?e.deleteCondition:this.defaultDeleteCondition_,this.insertVertexCondition_=e.insertVertexCondition?e.insertVertexCondition:g.always,this.vertexFeature_=null,this.vertexSegments_=null,this.lastPixel_=[0,0],this.ignoreNextSingleClick_=!1,this.featuresBeingModified_=null,this.rBush_=new y.Z,this.pixelTolerance_=void 0!==e.pixelTolerance?e.pixelTolerance:10,this.snappedToVertex_=!1,this.changingFeature_=!1,this.dragSegments_=[],this.overlay_=new _.default({source:new p.default({useSpatialIndex:!1,wrapX:!!e.wrapX}),style:e.style?e.style:function(){let e=(0,E.createEditingStyle)();return function(t,n){return e.Point}}(),updateWhileAnimating:!0,updateWhileInteracting:!0}),this.SEGMENT_WRITERS_={Point:this.writePointGeometry_.bind(this),LineString:this.writeLineStringGeometry_.bind(this),LinearRing:this.writeLineStringGeometry_.bind(this),Polygon:this.writePolygonGeometry_.bind(this),MultiPoint:this.writeMultiPointGeometry_.bind(this),MultiLineString:this.writeMultiLineStringGeometry_.bind(this),MultiPolygon:this.writeMultiPolygonGeometry_.bind(this),Circle:this.writeCircleGeometry_.bind(this),GeometryCollection:this.writeGeometryCollectionGeometry_.bind(this)},this.source_=null,this.hitDetection_=null,e.features?t=e.features:e.source&&(this.source_=e.source,t=new i.default(this.source_.getFeatures()),this.source_.addEventListener(v.Z.ADDFEATURE,this.handleSourceAdd_.bind(this)),this.source_.addEventListener(v.Z.REMOVEFEATURE,this.handleSourceRemove_.bind(this))),!t)throw Error("The modify interaction requires features, a source or a layer");e.hitDetection&&(this.hitDetection_=e.hitDetection),this.features_=t,this.features_.forEach(this.addFeature_.bind(this)),this.features_.addEventListener(r.Z.ADD,this.handleFeatureAdd_.bind(this)),this.features_.addEventListener(r.Z.REMOVE,this.handleFeatureRemove_.bind(this)),this.lastPointerEvent_=null,this.delta_=[0,0],this.snapToPointer_=void 0===e.snapToPointer?!this.hitDetection_:e.snapToPointer}addFeature_(e){let t=e.getGeometry();if(t){let n=this.SEGMENT_WRITERS_[t.getType()];n&&n(e,t)}let n=this.getMap();n&&n.isRendered()&&this.getActive()&&this.handlePointerAtPixel_(n.getCoordinateFromPixel(this.lastPixel_)),e.addEventListener(h.default.CHANGE,this.boundHandleFeatureChange_)}willModifyFeatures_(e,t){if(!this.featuresBeingModified_){this.featuresBeingModified_=new i.default;let n=this.featuresBeingModified_.getArray();for(let e=0,i=t.length;e<i;++e){let i=t[e].feature;i&&!n.includes(i)&&this.featuresBeingModified_.push(i)}0===this.featuresBeingModified_.getLength()?this.featuresBeingModified_=null:this.dispatchEvent(new M(F.MODIFYSTART,this.featuresBeingModified_,e))}}removeFeature_(e){this.removeFeatureSegmentData_(e),this.vertexFeature_&&0===this.features_.getLength()&&(this.overlay_.getSource().removeFeature(this.vertexFeature_),this.vertexFeature_=null),e.removeEventListener(h.default.CHANGE,this.boundHandleFeatureChange_)}removeFeatureSegmentData_(e){let t=this.rBush_,n=[];t.forEach(function(t){e===t.feature&&n.push(t)});for(let e=n.length-1;e>=0;--e){let i=n[e];for(let e=this.dragSegments_.length-1;e>=0;--e)this.dragSegments_[e][0]===i&&this.dragSegments_.splice(e,1);t.remove(i)}}setActive(e){this.vertexFeature_&&!e&&(this.overlay_.getSource().removeFeature(this.vertexFeature_),this.vertexFeature_=null),super.setActive(e)}setMap(e){this.overlay_.setMap(e),super.setMap(e)}getOverlay(){return this.overlay_}handleSourceAdd_(e){e.feature&&this.features_.push(e.feature)}handleSourceRemove_(e){e.feature&&this.features_.remove(e.feature)}handleFeatureAdd_(e){this.addFeature_(e.element)}handleFeatureChange_(e){if(!this.changingFeature_){let t=e.target;this.removeFeature_(t),this.addFeature_(t)}}handleFeatureRemove_(e){this.removeFeature_(e.element)}writePointGeometry_(e,t){let n=t.getCoordinates();this.rBush_.insert(t.getExtent(),{feature:e,geometry:t,segment:[n,n]})}writeMultiPointGeometry_(e,t){let n=t.getCoordinates();for(let i=0,r=n.length;i<r;++i){let r=n[i],o={feature:e,geometry:t,depth:[i],index:i,segment:[r,r]};this.rBush_.insert(t.getExtent(),o)}}writeLineStringGeometry_(e,t){let n=t.getCoordinates();for(let i=0,r=n.length-1;i<r;++i){let r=n.slice(i,i+2),o={feature:e,geometry:t,index:i,segment:r};this.rBush_.insert((0,d.boundingExtent)(r),o)}}writeMultiLineStringGeometry_(e,t){let n=t.getCoordinates();for(let i=0,r=n.length;i<r;++i){let r=n[i];for(let n=0,o=r.length-1;n<o;++n){let o=r.slice(n,n+2),s={feature:e,geometry:t,depth:[i],index:n,segment:o};this.rBush_.insert((0,d.boundingExtent)(o),s)}}}writePolygonGeometry_(e,t){let n=t.getCoordinates();for(let i=0,r=n.length;i<r;++i){let r=n[i];for(let n=0,o=r.length-1;n<o;++n){let o=r.slice(n,n+2),s={feature:e,geometry:t,depth:[i],index:n,segment:o};this.rBush_.insert((0,d.boundingExtent)(o),s)}}}writeMultiPolygonGeometry_(e,t){let n=t.getCoordinates();for(let i=0,r=n.length;i<r;++i){let r=n[i];for(let n=0,o=r.length;n<o;++n){let o=r[n];for(let r=0,s=o.length-1;r<s;++r){let s=o.slice(r,r+2),a={feature:e,geometry:t,depth:[n,i],index:r,segment:s};this.rBush_.insert((0,d.boundingExtent)(s),a)}}}}writeCircleGeometry_(e,t){let n=t.getCenter(),i={feature:e,geometry:t,index:0,segment:[n,n]},r={feature:e,geometry:t,index:1,segment:[n,n]},o=[i,r];i.featureSegments=o,r.featureSegments=o,this.rBush_.insert((0,d.createOrUpdateFromCoordinate)(n),i);let s=t,a=(0,m.getUserProjection)();if(a&&this.getMap()){let e=this.getMap().getView().getProjection();s=s.clone().transform(a,e),s=(0,f.fromCircle)(s).transform(e,a)}this.rBush_.insert(s.getExtent(),r)}writeGeometryCollectionGeometry_(e,t){let n=t.getGeometriesArray();for(let t=0;t<n.length;++t){let i=n[t];(0,this.SEGMENT_WRITERS_[i.getType()])(e,i)}}createOrUpdateVertexFeature_(e,t,n,i){let r=this.vertexFeature_;return r?r.getGeometry().setCoordinates(e):(r=new o.default(new c.default(e)),this.vertexFeature_=r,this.overlay_.getSource().addFeature(r)),r.set("features",t),r.set("geometries",n),r.set("existing",i),r}handleEvent(e){let t;return!e.originalEvent||(this.lastPointerEvent_=e,e.map.getView().getInteracting()||e.type!=s.Z.POINTERMOVE||this.handlingDownUpSequence||this.handlePointerMove_(e),this.vertexFeature_&&this.deleteCondition_(e)&&(t=e.type==s.Z.SINGLECLICK&&!!this.ignoreNextSingleClick_||this.removePoint()),e.type==s.Z.SINGLECLICK&&(this.ignoreNextSingleClick_=!1),super.handleEvent(e)&&!t)}findInsertVerticesAndUpdateDragSegments_(e){this.handlePointerAtPixel_(e),this.dragSegments_.length=0,this.featuresBeingModified_=null;let t=this.vertexFeature_;if(!t)return;let n=this.getMap().getView().getProjection(),i=[],r=t.getGeometry().getCoordinates(),o=(0,d.boundingExtent)([r]),s=this.rBush_.getInExtent(o),a={};s.sort(w);for(let t=0,o=s.length;t<o;++t){let o=s[t],u=o.segment,h=(0,x.getUid)(o.geometry),g=o.depth;if(g&&(h+="-"+g.join("-")),a[h]||(a[h]=[,,]),"Circle"===o.geometry.getType()&&1===o.index){let t=I(e,o,n);(0,l.equals)(t,r)&&!a[h][0]&&(this.dragSegments_.push([o,0]),a[h][0]=o);continue}if((0,l.equals)(u[0],r)&&!a[h][0]){this.dragSegments_.push([o,0]),a[h][0]=o;continue}if((0,l.equals)(u[1],r)&&!a[h][1]){if(a[h][0]&&0===a[h][0].index){let e=o.geometry.getCoordinates();switch(o.geometry.getType()){case"LineString":case"MultiLineString":continue;case"MultiPolygon":e=e[g[1]];case"Polygon":if(o.index!==e[g[0]].length-2)continue}}this.dragSegments_.push([o,1]),a[h][1]=o;continue}(0,x.getUid)(u)in this.vertexSegments_&&!a[h][0]&&!a[h][1]&&i.push(o)}return i}handleDragEvent(e){this.ignoreNextSingleClick_=!1,this.willModifyFeatures_(e,this.dragSegments_.map(([e])=>e));let t=[e.coordinate[0]+this.delta_[0],e.coordinate[1]+this.delta_[1]],n=[],i=[];for(let r=0,o=this.dragSegments_.length;r<o;++r){let o;let s=this.dragSegments_[r],a=s[0],u=a.feature;n.includes(u)||n.push(u);let h=a.geometry;i.includes(h)||i.push(h);let g=a.depth,d=a.segment,c=s[1];for(;t.length<h.getStride();)t.push(d[c][t.length]);switch(h.getType()){case"Point":o=t,d[0]=t,d[1]=t;break;case"MultiPoint":(o=h.getCoordinates())[a.index]=t,d[0]=t,d[1]=t;break;case"LineString":(o=h.getCoordinates())[a.index+c]=t,d[c]=t;break;case"MultiLineString":case"Polygon":(o=h.getCoordinates())[g[0]][a.index+c]=t,d[c]=t;break;case"MultiPolygon":(o=h.getCoordinates())[g[1]][g[0]][a.index+c]=t,d[c]=t;break;case"Circle":if(d[0]=t,d[1]=t,0===a.index)this.changingFeature_=!0,h.setCenter(t),this.changingFeature_=!1;else{this.changingFeature_=!0;let n=e.map.getView().getProjection(),i=(0,l.distance)((0,m.fromUserCoordinate)(h.getCenter(),n),(0,m.fromUserCoordinate)(t,n)),r=(0,m.getUserProjection)();if(r){let e=h.clone().transform(r,n);e.setRadius(i),i=e.transform(n,r).getRadius()}h.setRadius(i),this.changingFeature_=!1}}o&&this.setGeometryCoordinates_(h,o)}this.createOrUpdateVertexFeature_(t,n,i,!0)}handleDownEvent(e){if(!this.condition_(e))return!1;let t=e.coordinate,n=this.findInsertVerticesAndUpdateDragSegments_(t);if(n?.length&&this.insertVertexCondition_(e)&&(this.willModifyFeatures_(e,n),this.vertexFeature_)){let e=this.vertexFeature_.getGeometry().getCoordinates();for(let t=n.length-1;t>=0;--t)this.insertVertex_(n[t],e);this.ignoreNextSingleClick_=!0}return!!this.vertexFeature_}handleUpEvent(e){for(let t=this.dragSegments_.length-1;t>=0;--t){let n=this.dragSegments_[t][0],i=n.geometry;if("Circle"===i.getType()){let t=i.getCenter(),r=n.featureSegments[0],o=n.featureSegments[1];r.segment[0]=t,r.segment[1]=t,o.segment[0]=t,o.segment[1]=t,this.rBush_.update((0,d.createOrUpdateFromCoordinate)(t),r);let s=i,a=(0,m.getUserProjection)();if(a){let t=e.map.getView().getProjection();s=s.clone().transform(a,t),s=(0,f.fromCircle)(s).transform(t,a)}this.rBush_.update(s.getExtent(),o)}else this.rBush_.update((0,d.boundingExtent)(n.segment),n)}return this.featuresBeingModified_&&(this.dispatchEvent(new M(F.MODIFYEND,this.featuresBeingModified_,e)),this.featuresBeingModified_=null),!1}handlePointerMove_(e){this.lastPixel_=e.pixel,this.handlePointerAtPixel_(e.coordinate)}handlePointerAtPixel_(e){let t,n;let i=this.getMap(),r=i.getPixelFromCoordinate(e),s=i.getView().getProjection();if(this.hitDetection_){let e="object"==typeof this.hitDetection_?e=>e===this.hitDetection_:void 0;i.forEachFeatureAtPixel(r,(e,i,r)=>{r&&"Point"===r.getType()&&(r=new c.default((0,m.toUserCoordinate)(r.getCoordinates(),s)));let a=r||e.getGeometry();if(a&&"Point"===a.getType()&&e instanceof o.default&&this.features_.getArray().includes(e)){n=a;let i=e.getGeometry().getFlatCoordinates().slice(0,2);t=[{feature:e,geometry:n,segment:[i,i]}]}return!0},{layerFilter:e})}if(!t){let n=(0,m.fromUserExtent)((0,d.createOrUpdateFromCoordinate)(e,P),s),r=i.getView().getResolution()*this.pixelTolerance_,o=(0,m.toUserExtent)((0,d.buffer)(n,r,P),s);t=this.rBush_.getInExtent(o)}if(t&&t.length>0){let o=t.sort(function(t,n){return D(e,t,s)-D(e,n,s)})[0],a=o.segment,u=I(e,o,s),h=i.getPixelFromCoordinate(u),g=(0,l.distance)(r,h);if(n||g<=this.pixelTolerance_){let n={};if(n[(0,x.getUid)(a)]=!0,this.snapToPointer_||(this.delta_[0]=u[0]-e[0],this.delta_[1]=u[1]-e[1]),"Circle"===o.geometry.getType()&&1===o.index)this.snappedToVertex_=!0,this.createOrUpdateVertexFeature_(u,[o.feature],[o.geometry],this.snappedToVertex_);else{let e=i.getPixelFromCoordinate(a[0]),r=i.getPixelFromCoordinate(a[1]),s=(0,l.squaredDistance)(h,e),d=(0,l.squaredDistance)(h,r);if(g=Math.sqrt(Math.min(s,d)),this.snappedToVertex_=g<=this.pixelTolerance_,!this.snappedToVertex_&&!this.insertVertexCondition_(this.lastPointerEvent_)){this.vertexFeature_&&(this.overlay_.getSource().removeFeature(this.vertexFeature_),this.vertexFeature_=null);return}this.snappedToVertex_&&(u=s>d?a[1]:a[0]),this.createOrUpdateVertexFeature_(u,[o.feature],[o.geometry],this.snappedToVertex_);let c={};c[(0,x.getUid)(o.geometry)]=!0;for(let e=1,i=t.length;e<i;++e){let i=t[e].segment;if((0,l.equals)(a[0],i[0])&&(0,l.equals)(a[1],i[1])||(0,l.equals)(a[0],i[1])&&(0,l.equals)(a[1],i[0])){let r=(0,x.getUid)(t[e].geometry);r in c||(c[r]=!0,n[(0,x.getUid)(i)]=!0)}else break}}this.vertexSegments_=n;return}}this.vertexFeature_&&(this.overlay_.getSource().removeFeature(this.vertexFeature_),this.vertexFeature_=null)}insertVertex_(e,t){let n;let i=e.segment,r=e.feature,o=e.geometry,s=e.depth,a=e.index;for(;t.length<o.getStride();)t.push(0);switch(o.getType()){case"MultiLineString":case"Polygon":(n=o.getCoordinates())[s[0]].splice(a+1,0,t);break;case"MultiPolygon":(n=o.getCoordinates())[s[1]][s[0]].splice(a+1,0,t);break;case"LineString":(n=o.getCoordinates()).splice(a+1,0,t);break;default:return!1}this.setGeometryCoordinates_(o,n);let l=this.rBush_;l.remove(e),this.updateSegmentIndices_(o,a,s,1);let u={segment:[i[0],t],feature:r,geometry:o,depth:s,index:a};l.insert((0,d.boundingExtent)(u.segment),u),this.dragSegments_.push([u,1]);let h={segment:[t,i[1]],feature:r,geometry:o,depth:s,index:a+1};return l.insert((0,d.boundingExtent)(h.segment),h),this.dragSegments_.push([h,0]),!0}updatePointer_(e){return e&&this.findInsertVerticesAndUpdateDragSegments_(e),this.vertexFeature_?.getGeometry().getCoordinates()}getPoint(){let e=this.vertexFeature_?.getGeometry().getCoordinates();return e?(0,m.toUserCoordinate)(e,this.getMap().getView().getProjection()):null}canRemovePoint(){if(!this.vertexFeature_||this.vertexFeature_.get("geometries").every(e=>"Circle"===e.getType()||e.getType().endsWith("Point")))return!1;let e=this.vertexFeature_.getGeometry().getCoordinates();return this.rBush_.getInExtent((0,d.boundingExtent)([e])).some(({segment:t})=>(0,l.equals)(t[0],e)||(0,l.equals)(t[1],e))}removePoint(e){if(e&&(e=(0,m.fromUserCoordinate)(e,this.getMap().getView().getProjection()),this.updatePointer_(e)),!this.lastPointerEvent_||this.lastPointerEvent_&&this.lastPointerEvent_.type!=s.Z.POINTERDRAG){let e=this.lastPointerEvent_;this.willModifyFeatures_(e,this.dragSegments_.map(([e])=>e));let t=this.removeVertex_();return this.featuresBeingModified_&&this.dispatchEvent(new M(F.MODIFYEND,this.featuresBeingModified_,e)),this.featuresBeingModified_=null,t}return!1}removeVertex_(){let e,t,n,i,r,o,s,a,l,u,h;let g=this.dragSegments_,c={},f=!1;for(r=g.length-1;r>=0;--r)u=(n=g[r])[0],h=(0,x.getUid)(u.feature),u.depth&&(h+="-"+u.depth.join("-")),h in c||(c[h]={}),0===n[1]?(c[h].right=u,c[h].index=u.index):1==n[1]&&(c[h].left=u,c[h].index=u.index+1);for(h in c){switch(l=c[h].right,s=c[h].left,(a=(o=c[h].index)-1)<0&&(a=0),e=t=(i=(u=void 0!==s?s:l).geometry).getCoordinates(),f=!1,i.getType()){case"MultiLineString":t[u.depth[0]].length>2&&(t[u.depth[0]].splice(o,1),f=!0);break;case"LineString":t.length>2&&(t.splice(o,1),f=!0);break;case"MultiPolygon":e=e[u.depth[1]];case"Polygon":(e=e[u.depth[0]]).length>4&&(o==e.length-1&&(o=0),e.splice(o,1),f=!0,0===o&&(e.pop(),e.push(e[0]),a=e.length-1))}if(f){this.setGeometryCoordinates_(i,t);let e=[];if(void 0!==s&&(this.rBush_.remove(s),e.push(s.segment[0])),void 0!==l&&(this.rBush_.remove(l),e.push(l.segment[1])),void 0!==s&&void 0!==l){let t={depth:u.depth,feature:u.feature,geometry:u.geometry,index:a,segment:e};this.rBush_.insert((0,d.boundingExtent)(t.segment),t)}this.updateSegmentIndices_(i,o,u.depth,-1),this.vertexFeature_&&(this.overlay_.getSource().removeFeature(this.vertexFeature_),this.vertexFeature_=null),g.length=0}}return f}canInsertPoint(){if(!this.vertexFeature_||this.vertexFeature_.get("geometries").every(e=>"Circle"===e.getType()||e.getType().endsWith("Point")))return!1;let e=this.vertexFeature_.getGeometry().getCoordinates();return this.rBush_.getInExtent((0,d.boundingExtent)([e])).some(({segment:t})=>!((0,l.equals)(t[0],e)||(0,l.equals)(t[1],e)))}insertPoint(e){let t=e?(0,m.fromUserCoordinate)(e,this.getMap().getView().getProjection()):this.vertexFeature_?.getGeometry().getCoordinates();return!!t&&this.findInsertVerticesAndUpdateDragSegments_(t).reduce((e,n)=>e||this.insertVertex_(n,t),!1)}setGeometryCoordinates_(e,t){this.changingFeature_=!0,e.setCoordinates(t),this.changingFeature_=!1}updateSegmentIndices_(e,t,n,i){this.rBush_.forEachInExtent(e.getExtent(),function(r){r.geometry===e&&(void 0===n||void 0===r.depth||(0,a.fS)(r.depth,n))&&r.index>t&&(r.index+=i)})}}function w(e,t){return e.index-t.index}function D(e,t,n){let i=t.geometry;if("Circle"===i.getType()){let r=i;if(1===t.index){let t=(0,m.getUserProjection)();t&&(r=r.clone().transform(t,n));let i=Math.sqrt((0,l.squaredDistance)(r.getCenter(),(0,m.fromUserCoordinate)(e,n)))-r.getRadius();return i*i}}let r=(0,m.fromUserCoordinate)(e,n);return S[0]=(0,m.fromUserCoordinate)(t.segment[0],n),S[1]=(0,m.fromUserCoordinate)(t.segment[1],n),(0,l.squaredDistanceToSegment)(r,S)}function I(e,t,n){let i=t.geometry;if("Circle"===i.getType()&&1===t.index){let t=i,r=(0,m.getUserProjection)();return r&&(t=t.clone().transform(r,n)),(0,m.toUserCoordinate)(t.getClosestPoint((0,m.fromUserCoordinate)(e,n)),n)}let r=(0,m.fromUserCoordinate)(e,n);return S[0]=(0,m.fromUserCoordinate)(t.segment[0],n),S[1]=(0,m.fromUserCoordinate)(t.segment[1],n),(0,m.toUserCoordinate)((0,l.closestOnSegment)(r,S),n)}t.default=T},38024:function(e,t,n){n.r(t),n.d(t,{centroid:function(){return s}});var i=n(30006),r=n(47588);class o extends r.ZP{constructor(e){super(e=e||{}),e.handleDownEvent&&(this.handleDownEvent=e.handleDownEvent),e.handleDragEvent&&(this.handleDragEvent=e.handleDragEvent),e.handleMoveEvent&&(this.handleMoveEvent=e.handleMoveEvent),e.handleUpEvent&&(this.handleUpEvent=e.handleUpEvent),e.stopDown&&(this.stopDown=e.stopDown),this.handlingDownUpSequence=!1,this.targetPointers=[]}getPointerCount(){return this.targetPointers.length}handleDownEvent(e){return!1}handleDragEvent(e){}handleEvent(e){if(!e.originalEvent)return!0;let t=!1;if(this.updateTrackedPointers_(e),this.handlingDownUpSequence){if(e.type==i.Z.POINTERDRAG)this.handleDragEvent(e),e.originalEvent.preventDefault();else if(e.type==i.Z.POINTERUP){let t=this.handleUpEvent(e);this.handlingDownUpSequence=t&&this.targetPointers.length>0}}else if(e.type==i.Z.POINTERDOWN){let n=this.handleDownEvent(e);this.handlingDownUpSequence=n,t=this.stopDown(n)}else e.type==i.Z.POINTERMOVE&&this.handleMoveEvent(e);return!t}handleMoveEvent(e){}handleUpEvent(e){return!1}stopDown(e){return e}updateTrackedPointers_(e){e.activePointers&&(this.targetPointers=e.activePointers)}}function s(e){let t=e.length,n=0,i=0;for(let r=0;r<t;r++)n+=e[r].clientX,i+=e[r].clientY;return{clientX:n/t,clientY:i/t}}t.default=o},73604:function(e,t){t.Z={ACTIVE:"active"}},49179:function(e,t,n){function i(){throw Error("Unimplemented abstract method.")}n.r(t),n.d(t,{VERSION:function(){return s},abstract:function(){return i},getUid:function(){return o}});let r=0;function o(e){return e.ol_uid||(e.ol_uid=String(++r))}let s="10.4.0"}}]);
//# sourceMappingURL=2057.f6885d266185d205.js.map