{"version":3,"file":"3299.74e629f6dfcd11c1.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/constants/values.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/constants/units.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/match.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projString.js","webpack://@terrestris/shogun-gis-client/./node_modules/wkt-parser/PROJJSONBuilderBase.js","webpack://@terrestris/shogun-gis-client/./node_modules/wkt-parser/PROJJSONBuilder2015.js","webpack://@terrestris/shogun-gis-client/./node_modules/wkt-parser/PROJJSONBuilder2019.js","webpack://@terrestris/shogun-gis-client/./node_modules/wkt-parser/parser.js","webpack://@terrestris/shogun-gis-client/./node_modules/wkt-parser/process.js","webpack://@terrestris/shogun-gis-client/./node_modules/wkt-parser/util.js","webpack://@terrestris/shogun-gis-client/./node_modules/wkt-parser/transformPROJJSON.js","webpack://@terrestris/shogun-gis-client/./node_modules/wkt-parser/index.js","webpack://@terrestris/shogun-gis-client/./node_modules/wkt-parser/detectWKTVersion.js","webpack://@terrestris/shogun-gis-client/./node_modules/wkt-parser/buildPROJJSON.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/defs.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/global.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/parseCode.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/extend.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/msfnz.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/sign.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/adjust_lon.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/tsfnz.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/phi2z.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/longlat.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/merc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/deriveConstants.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/constants/Datum.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/datum.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/nadgrid.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/Proj.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/datumUtils.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/datum_transform.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/adjust_axis.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/toPoint.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/checkSanity.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/transform.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/core.js","webpack://@terrestris/shogun-gis-client/./node_modules/mgrs/mgrs.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/Point.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/pj_enfn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/tmerc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/sinh.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/hypot.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/gatg.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/cosh.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/etmerc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/clens.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/asinhy.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/log1py.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/srat.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/gauss.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/stere.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/mlfn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/e0fn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/e1fn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/e2fn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/e3fn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/gN.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/adjust_lat.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/imlfn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/qsfnz.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/asinz.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/aea.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/qsc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/robin.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/tpers.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/eqearth.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/bonne.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/index.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/projs.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/utm.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/adjust_zone.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/sterea.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/somerc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/omerc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/lcc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/krovak.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/cass.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/laea.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/gnom.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/cea.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/iqsfnz.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/eqc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/poly.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/nzmg.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/mill.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/sinu.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/moll.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/eqdc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/vandg.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/aeqd.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/vincenty.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/ortho.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/geocent.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/geos.js"],"sourcesContent":["export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0; // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314; // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI / 2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI / 4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var primeMeridian = {};\n\nprimeMeridian.greenwich = 0.0; // \"0dE\",\nprimeMeridian.lisbon = -9.131906111111; // \"9d07'54.862\\\"W\",\nprimeMeridian.paris = 2.337229166667; // \"2d20'14.025\\\"E\",\nprimeMeridian.bogota = -74.080916666667; // \"74d04'51.3\\\"W\",\nprimeMeridian.madrid = -3.687938888889; // \"3d41'16.58\\\"W\",\nprimeMeridian.rome = 12.452333333333; // \"12d27'8.4\\\"E\",\nprimeMeridian.bern = 7.439583333333; // \"7d26'22.5\\\"E\",\nprimeMeridian.jakarta = 106.807719444444; // \"106d48'27.79\\\"E\",\nprimeMeridian.ferro = -17.666666666667; // \"17d40'W\",\nprimeMeridian.brussels = 4.367975; // \"4d22'4.71\\\"E\",\nprimeMeridian.stockholm = 18.058277777778; // \"18d3'29.8\\\"E\",\nprimeMeridian.athens = 23.7163375; // \"23d42'58.815\\\"E\",\nprimeMeridian.oslo = 10.722916666667; // \"10d43'22.5\\\"E\"\n\nexport default primeMeridian;\n","export default {\n  mm: { to_meter: 0.001 },\n  cm: { to_meter: 0.01 },\n  ft: { to_meter: 0.3048 },\n  'us-ft': { to_meter: 1200 / 3937 },\n  fath: { to_meter: 1.8288 },\n  kmi: { to_meter: 1852 },\n  'us-ch': { to_meter: 20.1168402336805 },\n  'us-mi': { to_meter: 1609.34721869444 },\n  km: { to_meter: 1000 },\n  'ind-ft': { to_meter: 0.30479841 },\n  'ind-yd': { to_meter: 0.91439523 },\n  mi: { to_meter: 1609.344 },\n  yd: { to_meter: 0.9144 },\n  ch: { to_meter: 20.1168 },\n  link: { to_meter: 0.201168 },\n  dm: { to_meter: 0.1 },\n  in: { to_meter: 0.0254 },\n  'ind-ch': { to_meter: 20.11669506 },\n  'us-in': { to_meter: 0.025400050800101 },\n  'us-yd': { to_meter: 0.914401828803658 }\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import { D2R } from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\n/**\n * @param {string} defData\n * @returns {import('./defs').ProjectionDefinition}\n */\nexport default function (defData) {\n  /** @type {import('./defs').ProjectionDefinition} */\n  var self = {};\n  var paramObj = defData.split('+').map(function (v) {\n    return v.trim();\n  }).filter(function (a) {\n    return a;\n  }).reduce(function (p, a) {\n    /** @type {Array<?>} */\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function (v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function (v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function (v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function (v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function (v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function (v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function (v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function (v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function (v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function (v) {\n      self.rectified_grid_angle = parseFloat(v) * D2R;\n    },\n    lonc: function (v) {\n      self.longc = v * D2R;\n    },\n    x_0: function (v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function (v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function (v) {\n      self.a = parseFloat(v);\n    },\n    b: function (v) {\n      self.b = parseFloat(v);\n    },\n    r: function (v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function () {\n      self.R_A = true;\n    },\n    zone: function (v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function () {\n      self.utmSouth = true;\n    },\n    towgs84: function (v) {\n      self.datum_params = v.split(',').map(function (a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function (v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function (v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function (v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function (v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function (v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      } else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function (v) {\n      var legalAxis = 'ewnsud';\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function () {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      } else {\n        self[paramOutname] = paramVal;\n      }\n    } else {\n      self[paramName] = paramVal;\n    }\n  }\n  if (typeof self.datumCode === 'string' && self.datumCode !== 'WGS84') {\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","class PROJJSONBuilderBase {\n  static getId(node) {\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === 'ID');\n    if (idNode && idNode.length >= 3) {\n      return {\n        authority: idNode[1],\n        code: parseInt(idNode[2], 10),\n      };\n    }\n    return null;\n  }\n\n  static convertUnit(node, type = 'unit') {\n    if (!node || node.length < 3) {\n      return { type, name: 'unknown', conversion_factor: null };\n    }\n\n    const name = node[1];\n    const conversionFactor = parseFloat(node[2]) || null;\n\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === 'ID');\n    const id = idNode\n      ? {\n        authority: idNode[1],\n        code: parseInt(idNode[2], 10),\n      }\n      : null;\n\n    return {\n      type,\n      name,\n      conversion_factor: conversionFactor,\n      id,\n    };\n  }\n\n  static convertAxis(node) {\n    const name = node[1] || 'Unknown';\n\n    // Determine the direction\n    let direction;\n    const abbreviationMatch = name.match(/^\\((.)\\)$/); // Match abbreviations like \"(E)\" or \"(N)\"\n    if (abbreviationMatch) {\n      // Use the abbreviation to determine the direction\n      const abbreviation = abbreviationMatch[1].toUpperCase();\n      if (abbreviation === 'E') direction = 'east';\n      else if (abbreviation === 'N') direction = 'north';\n      else if (abbreviation === 'U') direction = 'up';\n      else throw new Error(`Unknown axis abbreviation: ${abbreviation}`);\n    } else {\n      // Use the explicit direction provided in the AXIS node\n      direction = node[2] ? node[2].toLowerCase() : 'unknown';\n    }\n\n    const orderNode = node.find((child) => Array.isArray(child) && child[0] === 'ORDER');\n    const order = orderNode ? parseInt(orderNode[1], 10) : null;\n\n    const unitNode = node.find(\n      (child) =>\n        Array.isArray(child) &&\n        (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT')\n    );\n    const unit = this.convertUnit(unitNode);\n\n    return {\n      name,\n      direction, // Use the valid PROJJSON direction value\n      unit,\n      order,\n    };\n  }\n\n  static extractAxes(node) {\n    return node\n      .filter((child) => Array.isArray(child) && child[0] === 'AXIS')\n      .map((axis) => this.convertAxis(axis))\n      .sort((a, b) => (a.order || 0) - (b.order || 0)); // Sort by the \"order\" property\n  }\n\n  static convert(node, result = {}) {\n\n    switch (node[0]) {\n      case 'PROJCRS':\n        result.type = 'ProjectedCRS';\n        result.name = node[1];\n        result.base_crs = node.find((child) => Array.isArray(child) && child[0] === 'BASEGEOGCRS')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'BASEGEOGCRS'))\n          : null;\n        result.conversion = node.find((child) => Array.isArray(child) && child[0] === 'CONVERSION')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'CONVERSION'))\n          : null;\n\n        const csNode = node.find((child) => Array.isArray(child) && child[0] === 'CS');\n        if (csNode) {\n          result.coordinate_system = {\n            type: csNode[1],\n            axis: this.extractAxes(node),\n          };\n        }\n\n        const lengthUnitNode = node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT');\n        if (lengthUnitNode) {\n          const unit = this.convertUnit(lengthUnitNode);\n          result.coordinate_system.unit = unit; // Add unit to coordinate_system\n        }\n\n        result.id = this.getId(node);\n        break;\n\n      case 'BASEGEOGCRS':\n      case 'GEOGCRS':\n        result.type = 'GeographicCRS';\n        result.name = node[1];\n      \n        // Handle DATUM or ENSEMBLE\n        const datumOrEnsembleNode = node.find(\n          (child) => Array.isArray(child) && (child[0] === 'DATUM' || child[0] === 'ENSEMBLE')\n        );\n        if (datumOrEnsembleNode) {\n          const datumOrEnsemble = this.convert(datumOrEnsembleNode);\n          if (datumOrEnsembleNode[0] === 'ENSEMBLE') {\n            result.datum_ensemble = datumOrEnsemble;\n          } else {\n            result.datum = datumOrEnsemble;\n          }\n          const primem = node.find((child) => Array.isArray(child) && child[0] === 'PRIMEM');\n          if (primem && primem[1] !== 'Greenwich') {\n            datumOrEnsemble.prime_meridian = {\n              name: primem[1],\n              longitude: parseFloat(primem[2]),\n            }\n          }\n        }\n      \n        result.coordinate_system = {\n          type: 'ellipsoidal',\n          axis: this.extractAxes(node),\n        };\n      \n        result.id = this.getId(node);\n        break;\n\n      case 'DATUM':\n        result.type = 'GeodeticReferenceFrame';\n        result.name = node[1];\n        result.ellipsoid = node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID'))\n          : null;\n        break;\n      \n      case 'ENSEMBLE':\n        result.type = 'DatumEnsemble';\n        result.name = node[1];\n      \n        // Extract ensemble members\n        result.members = node\n          .filter((child) => Array.isArray(child) && child[0] === 'MEMBER')\n          .map((member) => ({\n            type: 'DatumEnsembleMember',\n            name: member[1],\n            id: this.getId(member), // Extract ID as { authority, code }\n          }));\n      \n        // Extract accuracy\n        const accuracyNode = node.find((child) => Array.isArray(child) && child[0] === 'ENSEMBLEACCURACY');\n        if (accuracyNode) {\n          result.accuracy = parseFloat(accuracyNode[1]);\n        }\n      \n        // Extract ellipsoid\n        const ellipsoidNode = node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID');\n        if (ellipsoidNode) {\n          result.ellipsoid = this.convert(ellipsoidNode); // Convert the ellipsoid node\n        }\n      \n        // Extract identifier for the ensemble\n        result.id = this.getId(node);\n        break;\n\n      case 'ELLIPSOID':\n        result.type = 'Ellipsoid';\n        result.name = node[1];\n        result.semi_major_axis = parseFloat(node[2]);\n        result.inverse_flattening = parseFloat(node[3]);\n        const units = node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT'), result)\n          : null;\n        break;\n\n      case 'CONVERSION':\n        result.type = 'Conversion';\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === 'METHOD')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'METHOD'))\n          : null;\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && child[0] === 'PARAMETER')\n          .map((param) => this.convert(param));\n        break;\n\n      case 'METHOD':\n        result.type = 'Method';\n        result.name = node[1];\n        result.id = this.getId(node);\n        break;\n\n      case 'PARAMETER':\n        result.type = 'Parameter';\n        result.name = node[1];\n        result.value = parseFloat(node[2]);\n        result.unit = this.convertUnit(\n          node.find(\n            (child) =>\n              Array.isArray(child) &&\n              (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT')\n          )\n        );\n        result.id = this.getId(node);\n        break;\n\n      case 'BOUNDCRS':\n        result.type = 'BoundCRS';\n\n        // Process SOURCECRS\n        const sourceCrsNode = node.find((child) => Array.isArray(child) && child[0] === 'SOURCECRS');\n        if (sourceCrsNode) {\n          const sourceCrsContent = sourceCrsNode.find((child) => Array.isArray(child));\n          result.source_crs = sourceCrsContent ? this.convert(sourceCrsContent) : null;\n        }\n\n        // Process TARGETCRS\n        const targetCrsNode = node.find((child) => Array.isArray(child) && child[0] === 'TARGETCRS');\n        if (targetCrsNode) {\n          const targetCrsContent = targetCrsNode.find((child) => Array.isArray(child));\n          result.target_crs = targetCrsContent ? this.convert(targetCrsContent) : null;\n        }\n\n        // Process ABRIDGEDTRANSFORMATION\n        const transformationNode = node.find((child) => Array.isArray(child) && child[0] === 'ABRIDGEDTRANSFORMATION');\n        if (transformationNode) {\n          result.transformation = this.convert(transformationNode);\n        } else {\n          result.transformation = null;\n        }\n        break;\n\n      case 'ABRIDGEDTRANSFORMATION':\n        result.type = 'Transformation';\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === 'METHOD')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'METHOD'))\n          : null;\n\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && (child[0] === 'PARAMETER' || child[0] === 'PARAMETERFILE'))\n          .map((param) => {\n            if (param[0] === 'PARAMETER') {\n              return this.convert(param);\n            } else if (param[0] === 'PARAMETERFILE') {\n              return {\n                name: param[1],\n                value: param[2],\n                id: {\n                  'authority': 'EPSG',\n                  'code': 8656\n                }\n              };\n            }\n          });\n\n        // Adjust the Scale difference parameter if present\n        if (result.parameters.length === 7) {\n          const scaleDifference = result.parameters[6];\n          if (scaleDifference.name === 'Scale difference') {\n            scaleDifference.value = Math.round((scaleDifference.value - 1) * 1e12) / 1e6;\n          }\n        }\n\n        result.id = this.getId(node);\n        break;\n      \n      case 'AXIS':\n        if (!result.coordinate_system) {\n          result.coordinate_system = { type: 'unspecified', axis: [] };\n        }\n        result.coordinate_system.axis.push(this.convertAxis(node));\n        break;\n      \n      case 'LENGTHUNIT':\n        const unit = this.convertUnit(node, 'LinearUnit');\n        if (result.coordinate_system && result.coordinate_system.axis) {\n          result.coordinate_system.axis.forEach((axis) => {\n            if (!axis.unit) {\n              axis.unit = unit;\n            }\n          });\n        }\n        if (unit.conversion_factor && unit.conversion_factor !== 1) {\n          if (result.semi_major_axis) {\n            result.semi_major_axis = {\n              value: result.semi_major_axis,\n              unit,\n            }\n          }\n        }\n        break;\n\n      default:\n        result.keyword = node[0];\n        break;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilderBase;","import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2015 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Skip `CS` and `USAGE` nodes for WKT2-2015\n    if (result.coordinate_system && result.coordinate_system.subtype === 'Cartesian') {\n      delete result.coordinate_system;\n    }\n    if (result.usage) {\n      delete result.usage;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2015;","import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2019 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Handle `CS` node for WKT2-2019\n    const csNode = node.find((child) => Array.isArray(child) && child[0] === 'CS');\n    if (csNode) {\n      result.coordinate_system = {\n        subtype: csNode[1],\n        axis: this.extractAxes(node),\n      };\n    }\n\n    // Handle `USAGE` node for WKT2-2019\n    const usageNode = node.find((child) => Array.isArray(child) && child[0] === 'USAGE');\n    if (usageNode) {\n      const scope = usageNode.find((child) => Array.isArray(child) && child[0] === 'SCOPE');\n      const area = usageNode.find((child) => Array.isArray(child) && child[0] === 'AREA');\n      const bbox = usageNode.find((child) => Array.isArray(child) && child[0] === 'BBOX');\n      result.usage = {};\n      if (scope) {\n        result.usage.scope = scope[1];\n      }\n      if (area) {\n        result.usage.area = area[1];\n      }\n      if (bbox) {\n        result.usage.bbox = bbox.slice(1);\n      }\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2019;","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'FITTED_CS':\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'ENGCRS':\n    case 'ENGINEERINGCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      obj[key].type = key;\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\n\nexport function d2r(input) {\n  return input * D2R;\n}\n\nexport function applyProjectionDefaults(wkt) {\n  // Normalize projName for WKT2 compatibility\n  const normalizedProjName = (wkt.projName || '').toLowerCase().replace(/_/g, ' ');\n\n  if (!wkt.long0 && wkt.longc && (normalizedProjName === 'albers conic equal area' || normalizedProjName === 'lambert azimuthal equal area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (normalizedProjName === 'stereographic south pole' || normalizedProjName === 'polar stereographic (variant b)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n    delete wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && (normalizedProjName === 'polar stereographic' || normalizedProjName === 'polar stereographic (variant a)')) {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n    delete wkt.lat1;\n  }\n}","import { applyProjectionDefaults } from './util.js';\n\n// Helper function to process units and to_meter\nfunction processUnit(unit) {\n  let result = { units: null, to_meter: undefined };\n\n  if (typeof unit === 'string') {\n    result.units = unit.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    if (result.units === 'meter') {\n      result.to_meter = 1; // Only set to_meter if units are 'meter'\n    }\n  } else if (unit && unit.name) {\n    result.units = unit.name.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    result.to_meter = unit.conversion_factor;\n  }\n\n  return result;\n}\n\nfunction toValue(valueOrObject) {\n  if (typeof valueOrObject === 'object') {\n    return valueOrObject.value * valueOrObject.unit.conversion_factor;\n  }\n  return valueOrObject;\n}\n\nfunction calculateEllipsoid(value, result) {\n  if (value.ellipsoid.radius) {\n    result.a = value.ellipsoid.radius;\n    result.rf = 0;\n  } else {\n    result.a = toValue(value.ellipsoid.semi_major_axis);\n    if (value.ellipsoid.inverse_flattening !== undefined) {\n      result.rf = value.ellipsoid.inverse_flattening;\n    } else if (value.ellipsoid.semi_major_axis !== undefined && value.ellipsoid.semi_minor_axis !== undefined) {\n      result.rf = result.a / (result.a - toValue(value.ellipsoid.semi_minor_axis));\n    }\n  }\n}\n\nexport function transformPROJJSON(projjson, result = {}) {\n  if (!projjson || typeof projjson !== 'object') {\n    return projjson; // Return primitive values as-is\n  }\n\n  if (projjson.type === 'BoundCRS') {\n    transformPROJJSON(projjson.source_crs, result);\n\n    if (projjson.transformation) {\n      if (projjson.transformation.method && projjson.transformation.method.name === 'NTv2') {\n        // Set nadgrids to the filename from the parameterfile\n        result.nadgrids = projjson.transformation.parameters[0].value;\n      } else {\n        // Populate datum_params if no parameterfile is found\n        result.datum_params = projjson.transformation.parameters.map((param) => param.value);\n      }\n    }\n    return result; // Return early for BoundCRS\n  }\n\n  // Handle specific keys in PROJJSON\n  Object.keys(projjson).forEach((key) => {\n    const value = projjson[key];\n    if (value === null) {\n      return;\n    }\n\n    switch (key) {\n      case 'name':\n        if (result.srsCode) {\n          break;\n        }\n        result.name = value;\n        result.srsCode = value; // Map `name` to `srsCode`\n        break;\n\n      case 'type':\n        if (value === 'GeographicCRS') {\n          result.projName = 'longlat';\n        } else if (value === 'ProjectedCRS' && projjson.conversion && projjson.conversion.method) {\n          result.projName = projjson.conversion.method.name; // Retain original capitalization\n        }\n        break;\n\n      case 'datum':\n      case 'datum_ensemble': // Handle both datum and ensemble\n        if (value.ellipsoid) {\n          // Extract ellipsoid properties\n          result.ellps = value.ellipsoid.name;\n          calculateEllipsoid(value, result);\n        }\n        if (value.prime_meridian) {\n          result.from_greenwich = value.prime_meridian.longitude * Math.PI / 180; // Convert to radians\n        }\n        break;\n\n      case 'ellipsoid':\n        result.ellps = value.name;\n        calculateEllipsoid(value, result);\n        break;\n\n      case 'prime_meridian':\n        result.long0 = (value.longitude || 0) * Math.PI / 180; // Convert to radians\n        break;\n\n      case 'coordinate_system':\n        if (value.axis) {\n          result.axis = value.axis\n            .map((axis) => {\n              const direction = axis.direction;\n              if (direction === 'east') return 'e';\n              if (direction === 'north') return 'n';\n              if (direction === 'west') return 'w';\n              if (direction === 'south') return 's';\n              throw new Error(`Unknown axis direction: ${direction}`);\n            })\n            .join('') + 'u'; // Combine into a single string (e.g., \"enu\")\n\n          if (value.unit) {\n            const { units, to_meter } = processUnit(value.unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          } else if (value.axis[0] && value.axis[0].unit) {\n            const { units, to_meter } = processUnit(value.axis[0].unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          }\n        }\n        break;\n        \n      case 'id':\n        if (value.authority && value.code) {\n          result.title = value.authority + ':' + value.code;\n        }\n        break;\n\n      case 'conversion':\n        if (value.method && value.method.name) {\n          result.projName = value.method.name; // Retain original capitalization\n        }\n        if (value.parameters) {\n          value.parameters.forEach((param) => {\n            const paramName = param.name.toLowerCase().replace(/\\s+/g, '_');\n            const paramValue = param.value;\n            if (param.unit && param.unit.conversion_factor) {\n              result[paramName] = paramValue * param.unit.conversion_factor; // Convert to radians or meters\n            } else if (param.unit === 'degree') {\n              result[paramName] = paramValue * Math.PI / 180; // Convert to radians\n            } else {\n              result[paramName] = paramValue;\n            }\n          });\n        }\n        break;\n\n      case 'unit':\n        if (value.name) {\n          result.units = value.name.toLowerCase();\n          if (result.units === 'metre') {\n            result.units = 'meter';\n          }\n        }\n        if (value.conversion_factor) {\n          result.to_meter = value.conversion_factor;\n        }\n        break;\n\n      case 'base_crs':\n        transformPROJJSON(value, result); // Pass `result` directly\n        result.datumCode = value.id ? value.id.authority + '_' + value.id.code : value.name; // Set datumCode\n        break;\n\n      default:\n        // Ignore irrelevant or unneeded properties\n        break;\n    }\n  });\n\n  // Additional calculated properties\n  if (result.latitude_of_false_origin !== undefined) {\n    result.lat0 = result.latitude_of_false_origin; // Already in radians\n  }\n  if (result.longitude_of_false_origin !== undefined) {\n    result.long0 = result.longitude_of_false_origin;\n  }\n  if (result.latitude_of_standard_parallel !== undefined) {\n    result.lat0 = result.latitude_of_standard_parallel;\n    result.lat1 = result.latitude_of_standard_parallel;\n  }\n  if (result.latitude_of_1st_standard_parallel !== undefined) {\n    result.lat1 = result.latitude_of_1st_standard_parallel;\n  }\n  if (result.latitude_of_2nd_standard_parallel !== undefined) {\n    result.lat2 = result.latitude_of_2nd_standard_parallel; \n  }\n  if (result.latitude_of_projection_centre !== undefined) {\n    result.lat0 = result.latitude_of_projection_centre;\n  }\n  if (result.longitude_of_projection_centre !== undefined) {\n    result.longc = result.longitude_of_projection_centre;\n  }\n  if (result.easting_at_false_origin !== undefined) {\n    result.x0 = result.easting_at_false_origin;\n  }\n  if (result.northing_at_false_origin !== undefined) {\n    result.y0 = result.northing_at_false_origin;\n  }\n  if (result.latitude_of_natural_origin !== undefined) {\n    result.lat0 = result.latitude_of_natural_origin;\n  }\n  if (result.longitude_of_natural_origin !== undefined) {\n    result.long0 = result.longitude_of_natural_origin;\n  }\n  if (result.longitude_of_origin !== undefined) {\n    result.long0 = result.longitude_of_origin;\n  }\n  if (result.false_easting !== undefined) {\n    result.x0 = result.false_easting;\n  }\n  if (result.easting_at_projection_centre) {\n    result.x0 = result.easting_at_projection_centre;\n  }\n  if (result.false_northing !== undefined) {\n    result.y0 = result.false_northing;\n  }\n  if (result.northing_at_projection_centre) {\n    result.y0 = result.northing_at_projection_centre;\n  }\n  if (result.standard_parallel_1 !== undefined) {\n    result.lat1 = result.standard_parallel_1;\n  }\n  if (result.standard_parallel_2 !== undefined) {\n    result.lat2 = result.standard_parallel_2;\n  }\n  if (result.scale_factor_at_natural_origin !== undefined) {\n    result.k0 = result.scale_factor_at_natural_origin;\n  }\n  if (result.scale_factor_at_projection_centre !== undefined) {\n    result.k0 = result.scale_factor_at_projection_centre;\n  }\n  if (result.scale_factor_on_pseudo_standard_parallel !== undefined) {  \n    result.k0 = result.scale_factor_on_pseudo_standard_parallel;\n  }\n  if (result.azimuth !== undefined) {\n    result.alpha = result.azimuth;\n  }\n  if (result.azimuth_at_projection_centre !== undefined) {\n    result.alpha = result.azimuth_at_projection_centre;\n  }\n  if (result.angle_from_rectified_to_skew_grid) {\n    result.rectified_grid_angle = result.angle_from_rectified_to_skew_grid;\n  }\n\n  // Apply projection defaults\n  applyProjectionDefaults(result);\n\n  return result;\n}","import { buildPROJJSON } from './buildPROJJSON.js';\nimport { detectWKTVersion } from './detectWKTVersion.js';\nimport parser from './parser.js';\nimport {sExpr} from './process.js';\nimport { transformPROJJSON } from './transformPROJJSON.js';\nimport { applyProjectionDefaults, d2r } from './util.js';\n\nvar knownTypes = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS',\n  'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction cleanWKT(wkt) {\n  var keys = Object.keys(wkt);\n  for (var i = 0, ii = keys.length; i <ii; ++i) {\n    var key = keys[i];\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    if (knownTypes.indexOf(key) !== -1) {\n      setPropertiesFromWkt(wkt[key]);\n    }\n    if (typeof wkt[key] === 'object') {\n      cleanWKT(wkt[key]);\n    }\n  }\n}\n\nfunction setPropertiesFromWkt(wkt) {\n  if (wkt.AUTHORITY) {\n    var authority = Object.keys(wkt.AUTHORITY)[0];\n    if (authority && authority in wkt.AUTHORITY) {\n      wkt.title = authority + ':' + wkt.AUTHORITY[authority];\n    }\n  }\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode === 'belge_1972') {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n  if (wkt.rectified_grid_angle) {\n    wkt.rectified_grid_angle = d2r(wkt.rectified_grid_angle);\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  applyProjectionDefaults(wkt);\n}\nexport default function(wkt) {\n  if (typeof wkt === 'object') {\n    return transformPROJJSON(wkt);\n  }\n  const version = detectWKTVersion(wkt);\n  var lisp = parser(wkt);\n  if (version === 'WKT2') {\n    const projjson = buildPROJJSON(lisp);\n    return transformPROJJSON(projjson);\n  }\n  var type = lisp[0];\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj[type];\n}\n","/**\n * Detects whether the WKT string is WKT1 or WKT2.\n * @param {string} wkt The WKT string.\n * @returns {string} The detected version (\"WKT1\" or \"WKT2\").\n */\nexport function detectWKTVersion(wkt) {\n  // Normalize the WKT string for easier keyword matching\n  const normalizedWKT = wkt.toUpperCase();\n\n  // Check for WKT2-specific keywords\n  if (\n    normalizedWKT.includes('PROJCRS') ||\n    normalizedWKT.includes('GEOGCRS') ||\n    normalizedWKT.includes('BOUNDCRS') ||\n    normalizedWKT.includes('VERTCRS') ||\n    normalizedWKT.includes('LENGTHUNIT') ||\n    normalizedWKT.includes('ANGLEUNIT') ||\n    normalizedWKT.includes('SCALEUNIT')\n  ) {\n    return 'WKT2';\n  }\n\n  // Check for WKT1-specific keywords\n  if (\n    normalizedWKT.includes('PROJCS') ||\n    normalizedWKT.includes('GEOGCS') ||\n    normalizedWKT.includes('LOCAL_CS') ||\n    normalizedWKT.includes('VERT_CS') ||\n    normalizedWKT.includes('UNIT')\n  ) {\n    return 'WKT1';\n  }\n\n  // Default to WKT1 if no specific indicators are found\n  return 'WKT1';\n}","import PROJJSONBuilder2015 from './PROJJSONBuilder2015.js';\nimport PROJJSONBuilder2019 from './PROJJSONBuilder2019.js';\n\n/**\n * Detects the WKT2 version based on the structure of the WKT.\n * @param {Array} root The root WKT array node.\n * @returns {string} The detected version (\"2015\" or \"2019\").\n */\nfunction detectWKT2Version(root) {\n  // Check for WKT2-2019-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === 'USAGE')) {\n    return '2019'; // `USAGE` is specific to WKT2-2019\n  }\n\n  // Check for WKT2-2015-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === 'CS')) {\n    return '2015'; // `CS` is valid in both, but default to 2015 unless `USAGE` is present\n  }\n\n  if (root[0] === 'BOUNDCRS' || root[0] === 'PROJCRS' || root[0] === 'GEOGCRS') {\n    return '2015'; // These are valid in both, but default to 2015\n  }\n\n  // Default to WKT2-2015 if no specific indicators are found\n  return '2015';\n}\n\n/**\n * Builds a PROJJSON object from a WKT array structure.\n * @param {Array} root The root WKT array node.\n * @returns {Object} The PROJJSON object.\n */\nexport function buildPROJJSON(root) {\n  const version = detectWKT2Version(root);\n  const builder = version === '2019' ? PROJJSONBuilder2019 : PROJJSONBuilder2015;\n  return builder.convert(root);\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\n/**\n * @typedef {Object} ProjectionDefinition\n * @property {string} title\n * @property {string} [projName]\n * @property {string} [ellps]\n * @property {import('./Proj.js').DatumDefinition} [datum]\n * @property {string} [datumName]\n * @property {number} [rf]\n * @property {number} [lat0]\n * @property {number} [lat1]\n * @property {number} [lat2]\n * @property {number} [lat_ts]\n * @property {number} [long0]\n * @property {number} [long1]\n * @property {number} [long2]\n * @property {number} [alpha]\n * @property {number} [longc]\n * @property {number} [x0]\n * @property {number} [y0]\n * @property {number} [k0]\n * @property {number} [a]\n * @property {number} [b]\n * @property {true} [R_A]\n * @property {number} [zone]\n * @property {true} [utmSouth]\n * @property {string|Array<number>} [datum_params]\n * @property {number} [to_meter]\n * @property {string} [units]\n * @property {number} [from_greenwich]\n * @property {string} [datumCode]\n * @property {string} [nadgrids]\n * @property {string} [axis]\n * @property {boolean} [sphere]\n * @property {number} [rectified_grid_angle]\n * @property {boolean} [approx]\n * @property {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} inverse\n * @property {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} forward\n */\n\n/**\n * @overload\n * @param {string} name\n * @param {string|ProjectionDefinition|import('./core.js').PROJJSONDefinition} projection\n * @returns {void}\n */\n/**\n * @overload\n * @param {Array<[string, string]>} name\n * @returns {Array<ProjectionDefinition|undefined>}\n */\n/**\n * @overload\n * @param {string} name\n * @returns {ProjectionDefinition}\n */\n\n/**\n * @param {string | Array<Array<string>> | Partial<Record<'EPSG'|'ESRI'|'IAU2000', ProjectionDefinition>>} name\n * @returns {ProjectionDefinition | Array<ProjectionDefinition|undefined> | void}\n */\nfunction defs(name) {\n  /* global console */\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[/** @type {string} */ (name)] = parseProj(arguments[1]);\n      } else {\n        defs[/** @type {string} */ (name)] = wkt(arguments[1]);\n      }\n    } else {\n      defs[/** @type {string} */ (name)] = def;\n    }\n  } else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function (v) {\n        if (Array.isArray(v)) {\n          return defs.apply(that, v);\n        } else {\n          return defs(v);\n        }\n      });\n    } else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    } else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    } else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    } else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    } else {\n      console.log(name);\n    }\n    return;\n  }\n}\nglobals(defs);\nexport default defs;\n","export default function (defs) {\n  defs('EPSG:4326', '+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees');\n  defs('EPSG:4269', '+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees');\n  defs('EPSG:3857', '+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs');\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), '+proj=utm +zone=' + i + ' +datum=WGS84 +units=m');\n    defs('EPSG:' + (32700 + i), '+proj=utm +zone=' + i + ' +south +datum=WGS84 +units=m');\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code) {\n  return typeof code === 'string';\n}\nfunction testDef(code) {\n  return code in defs;\n}\nfunction testWKT(code) {\n  return (code.indexOf('+') !== 0 && code.indexOf('[') !== -1) || (typeof code === 'object' && !('srsCode' in code));\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code) {\n  return code[0] === '+';\n}\n/**\n * @param {string | import('./core').PROJJSONDefinition | import('./defs').ProjectionDefinition} code\n * @returns {import('./defs').ProjectionDefinition}\n */\nfunction parse(code) {\n  if (testObj(code)) {\n    // check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  } else if (!('projName' in code)) {\n    return wkt(code);\n  } else {\n    return code;\n  }\n}\n\nexport default parse;\n","export default function (destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function (eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n","export default function (x) {\n  return x < 0 ? -1 : 1;\n}\n","import { TWO_PI, SPI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  // console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  // no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport { identity as forward };\nexport { identity as inverse };\nexport var names = ['longlat', 'identity'];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from './projections/merc';\nimport longlat from './projections/longlat';\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function (n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport { add };\n\nexport function getNormalizedProjName(n) {\n  return n.replace(/[-\\(\\)\\s]+/g, ' ').trim().replace(/ /g, '_');\n}\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n  n = getNormalizedProjName(n);\n  if (n in names && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport { FORTPI, R2D, EPSLN, HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} e\n * @property {number} k\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if (!('x0' in this)) {\n    this.x0 = 0;\n  }\n  if (!('y0' in this)) {\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    } else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  } else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      } else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  -------------------------------------------------- */\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  } else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    } else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  -------------------------------------------------- */\nexport function inverse(p) {\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  } else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mercator', 'Popular Visualisation Pseudo Mercator', 'Mercator_1SP', 'Mercator_Auxiliary_Sphere', 'Mercator_Variant_A', 'merc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var ellipsoids = {\n  MERIT: {\n    a: 6378137,\n    rf: 298.257,\n    ellipseName: 'MERIT 1983'\n  },\n  SGS85: {\n    a: 6378136,\n    rf: 298.257,\n    ellipseName: 'Soviet Geodetic System 85'\n  },\n  GRS80: {\n    a: 6378137,\n    rf: 298.257222101,\n    ellipseName: 'GRS 1980(IUGG, 1980)'\n  },\n  IAU76: {\n    a: 6378140,\n    rf: 298.257,\n    ellipseName: 'IAU 1976'\n  },\n  airy: {\n    a: 6377563.396,\n    b: 6356256.91,\n    ellipseName: 'Airy 1830'\n  },\n  APL4: {\n    a: 6378137,\n    rf: 298.25,\n    ellipseName: 'Appl. Physics. 1965'\n  },\n  NWL9D: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'Naval Weapons Lab., 1965'\n  },\n  mod_airy: {\n    a: 6377340.189,\n    b: 6356034.446,\n    ellipseName: 'Modified Airy'\n  },\n  andrae: {\n    a: 6377104.43,\n    rf: 300,\n    ellipseName: 'Andrae 1876 (Den., Iclnd.)'\n  },\n  aust_SA: {\n    a: 6378160,\n    rf: 298.25,\n    ellipseName: 'Australian Natl & S. Amer. 1969'\n  },\n  GRS67: {\n    a: 6378160,\n    rf: 298.247167427,\n    ellipseName: 'GRS 67(IUGG 1967)'\n  },\n  bessel: {\n    a: 6377397.155,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841'\n  },\n  bess_nam: {\n    a: 6377483.865,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841 (Namibia)'\n  },\n  clrk66: {\n    a: 6378206.4,\n    b: 6356583.8,\n    ellipseName: 'Clarke 1866'\n  },\n  clrk80: {\n    a: 6378249.145,\n    rf: 293.4663,\n    ellipseName: 'Clarke 1880 mod.'\n  },\n  clrk80ign: {\n    a: 6378249.2,\n    b: 6356515,\n    rf: 293.4660213,\n    ellipseName: 'Clarke 1880 (IGN)'\n  },\n  clrk58: {\n    a: 6378293.645208759,\n    rf: 294.2606763692654,\n    ellipseName: 'Clarke 1858'\n  },\n  CPM: {\n    a: 6375738.7,\n    rf: 334.29,\n    ellipseName: 'Comm. des Poids et Mesures 1799'\n  },\n  delmbr: {\n    a: 6376428,\n    rf: 311.5,\n    ellipseName: 'Delambre 1810 (Belgium)'\n  },\n  engelis: {\n    a: 6378136.05,\n    rf: 298.2566,\n    ellipseName: 'Engelis 1985'\n  },\n  evrst30: {\n    a: 6377276.345,\n    rf: 300.8017,\n    ellipseName: 'Everest 1830'\n  },\n  evrst48: {\n    a: 6377304.063,\n    rf: 300.8017,\n    ellipseName: 'Everest 1948'\n  },\n  evrst56: {\n    a: 6377301.243,\n    rf: 300.8017,\n    ellipseName: 'Everest 1956'\n  },\n  evrst69: {\n    a: 6377295.664,\n    rf: 300.8017,\n    ellipseName: 'Everest 1969'\n  },\n  evrstSS: {\n    a: 6377298.556,\n    rf: 300.8017,\n    ellipseName: 'Everest (Sabah & Sarawak)'\n  },\n  fschr60: {\n    a: 6378166,\n    rf: 298.3,\n    ellipseName: 'Fischer (Mercury Datum) 1960'\n  },\n  fschr60m: {\n    a: 6378155,\n    rf: 298.3,\n    ellipseName: 'Fischer 1960'\n  },\n  fschr68: {\n    a: 6378150,\n    rf: 298.3,\n    ellipseName: 'Fischer 1968'\n  },\n  helmert: {\n    a: 6378200,\n    rf: 298.3,\n    ellipseName: 'Helmert 1906'\n  },\n  hough: {\n    a: 6378270,\n    rf: 297,\n    ellipseName: 'Hough'\n  },\n  intl: {\n    a: 6378388,\n    rf: 297,\n    ellipseName: 'International 1909 (Hayford)'\n  },\n  kaula: {\n    a: 6378163,\n    rf: 298.24,\n    ellipseName: 'Kaula 1961'\n  },\n  lerch: {\n    a: 6378139,\n    rf: 298.257,\n    ellipseName: 'Lerch 1979'\n  },\n  mprts: {\n    a: 6397300,\n    rf: 191,\n    ellipseName: 'Maupertius 1738'\n  },\n  new_intl: {\n    a: 6378157.5,\n    b: 6356772.2,\n    ellipseName: 'New International 1967'\n  },\n  plessis: {\n    a: 6376523,\n    rf: 6355863,\n    ellipseName: 'Plessis 1817 (France)'\n  },\n  krass: {\n    a: 6378245,\n    rf: 298.3,\n    ellipseName: 'Krassovsky, 1942'\n  },\n  SEasia: {\n    a: 6378155,\n    b: 6356773.3205,\n    ellipseName: 'Southeast Asia'\n  },\n  walbeck: {\n    a: 6376896,\n    b: 6355834.8467,\n    ellipseName: 'Walbeck'\n  },\n  WGS60: {\n    a: 6378165,\n    rf: 298.3,\n    ellipseName: 'WGS 60'\n  },\n  WGS66: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'WGS 66'\n  },\n  WGS7: {\n    a: 6378135,\n    rf: 298.26,\n    ellipseName: 'WGS 72'\n  },\n  WGS84: {\n    a: 6378137,\n    rf: 298.257223563,\n    ellipseName: 'WGS 84'\n  },\n  sphere: {\n    a: 6370997,\n    b: 6370997,\n    ellipseName: 'Normal Sphere (r=6370997)'\n  }\n};\n\nexport default ellipsoids;\n","import { SIXTH, RA4, RA6, EPSLN } from './constants/values';\nimport { default as Ellipsoid } from './constants/Ellipsoid';\nimport match from './match';\n\nconst WGS84 = Ellipsoid.WGS84; // default ellipsoid\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var datums = {\n  wgs84: {\n    towgs84: '0,0,0',\n    ellipse: 'WGS84',\n    datumName: 'WGS84'\n  },\n  ch1903: {\n    towgs84: '674.374,15.056,405.346',\n    ellipse: 'bessel',\n    datumName: 'swiss'\n  },\n  ggrs87: {\n    towgs84: '-199.87,74.79,246.62',\n    ellipse: 'GRS80',\n    datumName: 'Greek_Geodetic_Reference_System_1987'\n  },\n  nad83: {\n    towgs84: '0,0,0',\n    ellipse: 'GRS80',\n    datumName: 'North_American_Datum_1983'\n  },\n  nad27: {\n    nadgrids: '@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat',\n    ellipse: 'clrk66',\n    datumName: 'North_American_Datum_1927'\n  },\n  potsdam: {\n    towgs84: '598.1,73.7,418.2,0.202,0.045,-2.455,6.7',\n    ellipse: 'bessel',\n    datumName: 'Potsdam Rauenberg 1950 DHDN'\n  },\n  carthage: {\n    towgs84: '-263.0,6.0,431.0',\n    ellipse: 'clark80',\n    datumName: 'Carthage 1934 Tunisia'\n  },\n  hermannskogel: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Hermannskogel'\n  },\n  mgi: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Militar-Geographische Institut'\n  },\n  osni52: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'airy',\n    datumName: 'Irish National'\n  },\n  ire65: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'mod_airy',\n    datumName: 'Ireland 1965'\n  },\n  rassadiran: {\n    towgs84: '-133.63,-157.5,-158.62',\n    ellipse: 'intl',\n    datumName: 'Rassadiran'\n  },\n  nzgd49: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993',\n    ellipse: 'intl',\n    datumName: 'New Zealand Geodetic Datum 1949'\n  },\n  osgb36: {\n    towgs84: '446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894',\n    ellipse: 'airy',\n    datumName: 'Ordnance Survey of Great Britain 1936'\n  },\n  s_jtsk: {\n    towgs84: '589,76,480',\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: '106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1',\n    ellipse: 'intl',\n    datumName: 'Reseau National Belge 1972'\n  },\n  EPSG_5451: {\n    towgs84: '6.41,-49.05,-11.28,1.5657,0.5242,6.9718,-5.7649'\n  },\n  IGNF_LURESG: {\n    towgs84: '-192.986,13.673,-39.309,-0.4099,-2.9332,2.6881,0.43'\n  },\n  EPSG_4614: {\n    towgs84: '-119.4248,-303.65872,-11.00061,1.164298,0.174458,1.096259,3.657065'\n  },\n  EPSG_4615: {\n    towgs84: '-494.088,-312.129,279.877,-1.423,-1.013,1.59,-0.748'\n  },\n  ESRI_37241: {\n    towgs84: '-76.822,257.457,-12.817,2.136,-0.033,-2.392,-0.031'\n  },\n  ESRI_37249: {\n    towgs84: '-440.296,58.548,296.265,1.128,10.202,4.559,-0.438'\n  },\n  ESRI_37245: {\n    towgs84: '-511.151,-181.269,139.609,1.05,2.703,1.798,3.071'\n  },\n  EPSG_4178: {\n    towgs84: '24.9,-126.4,-93.2,-0.063,-0.247,-0.041,1.01'\n  },\n  EPSG_4622: {\n    towgs84: '-472.29,-5.63,-304.12,0.4362,-0.8374,0.2563,1.8984'\n  },\n  EPSG_4625: {\n    towgs84: '126.93,547.94,130.41,-2.7867,5.1612,-0.8584,13.8227'\n  },\n  EPSG_5252: {\n    towgs84: '0.023,0.036,-0.068,0.00176,0.00912,-0.01136,0.00439'\n  },\n  EPSG_4314: {\n    towgs84: '597.1,71.4,412.1,0.894,0.068,-1.563,7.58'\n  },\n  EPSG_4282: {\n    towgs84: '-178.3,-316.7,-131.5,5.278,6.077,10.979,19.166'\n  },\n  EPSG_4231: {\n    towgs84: '-83.11,-97.38,-117.22,0.0276,-0.2167,0.2147,0.1218'\n  },\n  EPSG_4274: {\n    towgs84: '-230.994,102.591,25.199,0.633,-0.239,0.9,1.95'\n  },\n  EPSG_4134: {\n    towgs84: '-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006'\n  },\n  EPSG_4254: {\n    towgs84: '18.38,192.45,96.82,0.056,-0.142,-0.2,-0.0013'\n  },\n  EPSG_4159: {\n    towgs84: '-194.513,-63.978,-25.759,-3.4027,3.756,-3.352,-0.9175'\n  },\n  EPSG_4687: {\n    towgs84: '0.072,-0.507,-0.245,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_4227: {\n    towgs84: '-83.58,-397.54,458.78,-17.595,-2.847,4.256,3.225'\n  },\n  EPSG_4746: {\n    towgs84: '599.4,72.4,419.2,-0.062,-0.022,-2.723,6.46'\n  },\n  EPSG_4745: {\n    towgs84: '612.4,77,440.2,-0.054,0.057,-2.797,2.55'\n  },\n  EPSG_6311: {\n    towgs84: '8.846,-4.394,-1.122,-0.00237,-0.146528,0.130428,0.783926'\n  },\n  EPSG_4289: {\n    towgs84: '565.7381,50.4018,465.2904,-1.91514,1.60363,-9.09546,4.07244'\n  },\n  EPSG_4230: {\n    towgs84: '-68.863,-134.888,-111.49,-0.53,-0.14,0.57,-3.4'\n  },\n  EPSG_4154: {\n    towgs84: '-123.02,-158.95,-168.47'\n  },\n  EPSG_4156: {\n    towgs84: '570.8,85.7,462.8,4.998,1.587,5.261,3.56'\n  },\n  EPSG_4299: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4179: {\n    towgs84: '33.4,-146.6,-76.3,-0.359,-0.053,0.844,-0.84'\n  },\n  EPSG_4313: {\n    towgs84: '-106.8686,52.2978,-103.7239,0.3366,-0.457,1.8422,-1.2747'\n  },\n  EPSG_4194: {\n    towgs84: '163.511,127.533,-159.789'\n  },\n  EPSG_4195: {\n    towgs84: '105,326,-102.5'\n  },\n  EPSG_4196: {\n    towgs84: '-45,417,-3.5'\n  },\n  EPSG_4611: {\n    towgs84: '-162.619,-276.959,-161.764,0.067753,-2.243649,-1.158827,-1.094246'\n  },\n  EPSG_4633: {\n    towgs84: '137.092,131.66,91.475,-1.9436,-11.5993,-4.3321,-7.4824'\n  },\n  EPSG_4641: {\n    towgs84: '-408.809,366.856,-412.987,1.8842,-0.5308,2.1655,-121.0993'\n  },\n  EPSG_4643: {\n    towgs84: '-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7002'\n  },\n  EPSG_4300: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4188: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4660: {\n    towgs84: '982.6087,552.753,-540.873,32.39344,-153.25684,-96.2266,16.805'\n  },\n  EPSG_4662: {\n    towgs84: '97.295,-263.247,310.882,-1.5999,0.8386,3.1409,13.3259'\n  },\n  EPSG_3906: {\n    towgs84: '577.88891,165.22205,391.18289,4.9145,-0.94729,-13.05098,7.78664'\n  },\n  EPSG_4307: {\n    towgs84: '-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547'\n  },\n  EPSG_6892: {\n    towgs84: '-76.269,-16.683,68.562,-6.275,10.536,-4.286,-13.686'\n  },\n  EPSG_4690: {\n    towgs84: '221.597,152.441,176.523,2.403,1.3893,0.884,11.4648'\n  },\n  EPSG_4691: {\n    towgs84: '218.769,150.75,176.75,3.5231,2.0037,1.288,10.9817'\n  },\n  EPSG_4629: {\n    towgs84: '72.51,345.411,79.241,-1.5862,-0.8826,-0.5495,1.3653'\n  },\n  EPSG_4630: {\n    towgs84: '165.804,216.213,180.26,-0.6251,-0.4515,-0.0721,7.4111'\n  },\n  EPSG_4692: {\n    towgs84: '217.109,86.452,23.711,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_9333: {\n    towgs84: '0,0,0,-8.393,0.749,-10.276,0'\n  },\n  EPSG_9059: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4312: {\n    towgs84: '601.705,84.263,485.227,4.7354,1.3145,5.393,-2.3887'\n  },\n  EPSG_4123: {\n    towgs84: '-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496'\n  },\n  EPSG_4309: {\n    towgs84: '-124.45,183.74,44.64,-0.4384,0.5446,-0.9706,-2.1365'\n  },\n  ESRI_104106: {\n    towgs84: '-283.088,-70.693,117.445,-1.157,0.059,-0.652,-4.058'\n  },\n  EPSG_4281: {\n    towgs84: '-219.247,-73.802,269.529'\n  },\n  EPSG_4322: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4324: {\n    towgs84: '0,0,1.9'\n  },\n  EPSG_4284: {\n    towgs84: '43.822,-108.842,-119.585,1.455,-0.761,0.737,0.549'\n  },\n  EPSG_4277: {\n    towgs84: '446.448,-125.157,542.06,0.15,0.247,0.842,-20.489'\n  },\n  EPSG_4207: {\n    towgs84: '-282.1,-72.2,120,-1.529,0.145,-0.89,-4.46'\n  },\n  EPSG_4688: {\n    towgs84: '347.175,1077.618,2623.677,33.9058,-70.6776,9.4013,186.0647'\n  },\n  EPSG_4689: {\n    towgs84: '410.793,54.542,80.501,-2.5596,-2.3517,-0.6594,17.3218'\n  },\n  EPSG_4720: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4273: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  EPSG_4240: {\n    towgs84: '204.64,834.74,293.8'\n  },\n  EPSG_4817: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  ESRI_104131: {\n    towgs84: '426.62,142.62,460.09,4.98,4.49,-12.42,-17.1'\n  },\n  EPSG_4265: {\n    towgs84: '-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68'\n  },\n  EPSG_4263: {\n    towgs84: '-111.92,-87.85,114.5,1.875,0.202,0.219,0.032'\n  },\n  EPSG_4298: {\n    towgs84: '-689.5937,623.84046,-65.93566,-0.02331,1.17094,-0.80054,5.88536'\n  },\n  EPSG_4270: {\n    towgs84: '-253.4392,-148.452,386.5267,0.15605,0.43,-0.1013,-0.0424'\n  },\n  EPSG_4229: {\n    towgs84: '-121.8,98.1,-10.7'\n  },\n  EPSG_4220: {\n    towgs84: '-55.5,-348,-229.2'\n  },\n  EPSG_4214: {\n    towgs84: '12.646,-155.176,-80.863'\n  },\n  EPSG_4232: {\n    towgs84: '-345,3,223'\n  },\n  EPSG_4238: {\n    towgs84: '-1.977,-13.06,-9.993,0.364,0.254,0.689,-1.037'\n  },\n  EPSG_4168: {\n    towgs84: '-170,33,326'\n  },\n  EPSG_4131: {\n    towgs84: '199,931,318.9'\n  },\n  EPSG_4152: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_5228: {\n    towgs84: '572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378'\n  },\n  EPSG_8351: {\n    towgs84: '485.021,169.465,483.839,7.786342,4.397554,4.102655,0'\n  },\n  EPSG_4683: {\n    towgs84: '-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06'\n  },\n  EPSG_4133: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7373: {\n    towgs84: '0.819,-0.5762,-1.6446,-0.00378,-0.03317,0.00318,0.0693'\n  },\n  EPSG_9075: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9072: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9294: {\n    towgs84: '1.16835,-1.42001,-2.24431,-0.00822,-0.05508,0.01818,0.23388'\n  },\n  EPSG_4212: {\n    towgs84: '-267.434,173.496,181.814,-13.4704,8.7154,7.3926,14.7492'\n  },\n  EPSG_4191: {\n    towgs84: '-44.183,-0.58,-38.489,2.3867,2.7072,-3.5196,-8.2703'\n  },\n  EPSG_4237: {\n    towgs84: '52.684,-71.194,-13.975,-0.312,-0.1063,-0.3729,1.0191'\n  },\n  EPSG_4740: {\n    towgs84: '-1.08,-0.27,-0.9'\n  },\n  EPSG_4124: {\n    towgs84: '419.3836,99.3335,591.3451,0.850389,1.817277,-7.862238,-0.99496'\n  },\n  EPSG_5681: {\n    towgs84: '584.9636,107.7175,413.8067,1.1155,0.2824,-3.1384,7.9922'\n  },\n  EPSG_4141: {\n    towgs84: '23.772,17.49,17.859,-0.3132,-1.85274,1.67299,-5.4262'\n  },\n  EPSG_4204: {\n    towgs84: '-85.645,-273.077,-79.708,2.289,-1.421,2.532,3.194'\n  },\n  EPSG_4319: {\n    towgs84: '226.702,-193.337,-35.371,-2.229,-4.391,9.238,0.9798'\n  },\n  EPSG_4200: {\n    towgs84: '24.82,-131.21,-82.66'\n  },\n  EPSG_4130: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4127: {\n    towgs84: '-82.875,-57.097,-156.768,-2.158,1.524,-0.982,-0.359'\n  },\n  EPSG_4149: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4617: {\n    towgs84: '-0.991,1.9072,0.5129,1.25033e-7,4.6785e-8,5.6529e-8,0'\n  },\n  EPSG_4663: {\n    towgs84: '-210.502,-66.902,-48.476,2.094,-15.067,-5.817,0.485'\n  },\n  EPSG_4664: {\n    towgs84: '-211.939,137.626,58.3,-0.089,0.251,0.079,0.384'\n  },\n  EPSG_4665: {\n    towgs84: '-105.854,165.589,-38.312,-0.003,-0.026,0.024,-0.048'\n  },\n  EPSG_4666: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  EPSG_4756: {\n    towgs84: '-192.873,-39.382,-111.202,-0.00205,-0.0005,0.00335,0.0188'\n  },\n  EPSG_4723: {\n    towgs84: '-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925'\n  },\n  EPSG_4726: {\n    towgs84: '8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081'\n  },\n  EPSG_4267: {\n    towgs84: '-8.0,160.0,176.0'\n  },\n  EPSG_5365: {\n    towgs84: '-0.16959,0.35312,0.51846,0.03385,-0.16325,0.03446,0.03693'\n  },\n  EPSG_4218: {\n    towgs84: '304.5,306.5,-318.1'\n  },\n  EPSG_4242: {\n    towgs84: '-33.722,153.789,94.959,-8.581,-4.478,4.54,8.95'\n  },\n  EPSG_4216: {\n    towgs84: '-292.295,248.758,429.447,4.9971,2.99,6.6906,1.0289'\n  },\n  ESRI_104105: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  ESRI_104129: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4673: {\n    towgs84: '174.05,-25.49,112.57'\n  },\n  EPSG_4202: {\n    towgs84: '-124,-60,154'\n  },\n  EPSG_4203: {\n    towgs84: '-117.763,-51.51,139.061,0.292,0.443,0.277,-0.191'\n  },\n  EPSG_3819: {\n    towgs84: '595.48,121.69,515.35,4.115,-2.9383,0.853,-3.408'\n  },\n  EPSG_8694: {\n    towgs84: '-93.799,-132.737,-219.073,-1.844,0.648,-6.37,-0.169'\n  },\n  EPSG_4145: {\n    towgs84: '275.57,676.78,229.6'\n  },\n  EPSG_4283: {\n    towgs84: '61.55,-10.87,-40.19,39.4924,32.7221,32.8979,-9.994'\n  },\n  EPSG_4317: {\n    towgs84: '2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266'\n  },\n  EPSG_4272: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993'\n  },\n  EPSG_4248: {\n    towgs84: '-307.7,265.3,-363.5'\n  },\n  EPSG_5561: {\n    towgs84: '24,-121,-76'\n  },\n  EPSG_5233: {\n    towgs84: '-0.293,766.95,87.713,0.195704,1.695068,3.473016,-0.039338'\n  },\n  ESRI_104130: {\n    towgs84: '-86,-98,-119'\n  },\n  ESRI_104102: {\n    towgs84: '682,-203,480'\n  },\n  ESRI_37207: {\n    towgs84: '7,-10,-26'\n  },\n  EPSG_4675: {\n    towgs84: '59.935,118.4,-10.871'\n  },\n  ESRI_104109: {\n    towgs84: '-89.121,-348.182,260.871'\n  },\n  ESRI_104112: {\n    towgs84: '-185.583,-230.096,281.361'\n  },\n  ESRI_104113: {\n    towgs84: '25.1,-275.6,222.6'\n  },\n  IGNF_WGS72G: {\n    towgs84: '0,12,6'\n  },\n  IGNF_NTFG: {\n    towgs84: '-168,-60,320'\n  },\n  IGNF_EFATE57G: {\n    towgs84: '-127,-769,472'\n  },\n  IGNF_PGP50G: {\n    towgs84: '324.8,153.6,172.1'\n  },\n  IGNF_REUN47G: {\n    towgs84: '94,-948,-1262'\n  },\n  IGNF_CSG67G: {\n    towgs84: '-186,230,110'\n  },\n  IGNF_GUAD48G: {\n    towgs84: '-467,-16,-300'\n  },\n  IGNF_TAHI51G: {\n    towgs84: '162,117,154'\n  },\n  IGNF_TAHAAG: {\n    towgs84: '65,342,77'\n  },\n  IGNF_NUKU72G: {\n    towgs84: '84,274,65'\n  },\n  IGNF_PETRELS72G: {\n    towgs84: '365,194,166'\n  },\n  IGNF_WALL78G: {\n    towgs84: '253,-133,-127'\n  },\n  IGNF_MAYO50G: {\n    towgs84: '-382,-59,-262'\n  },\n  IGNF_TANNAG: {\n    towgs84: '-139,-967,436'\n  },\n  IGNF_IGN72G: {\n    towgs84: '-13,-348,292'\n  },\n  IGNF_ATIGG: {\n    towgs84: '1118,23,66'\n  },\n  IGNF_FANGA84G: {\n    towgs84: '150.57,158.33,118.32'\n  },\n  IGNF_RUSAT84G: {\n    towgs84: '202.13,174.6,-15.74'\n  },\n  IGNF_KAUE70G: {\n    towgs84: '126.74,300.1,-75.49'\n  },\n  IGNF_MOP90G: {\n    towgs84: '-10.8,-1.8,12.77'\n  },\n  IGNF_MHPF67G: {\n    towgs84: '338.08,212.58,-296.17'\n  },\n  IGNF_TAHI79G: {\n    towgs84: '160.61,116.05,153.69'\n  },\n  IGNF_ANAA92G: {\n    towgs84: '1.5,3.84,4.81'\n  },\n  IGNF_MARQUI72G: {\n    towgs84: '330.91,-13.92,58.56'\n  },\n  IGNF_APAT86G: {\n    towgs84: '143.6,197.82,74.05'\n  },\n  IGNF_TUBU69G: {\n    towgs84: '237.17,171.61,-77.84'\n  },\n  IGNF_STPM50G: {\n    towgs84: '11.363,424.148,373.13'\n  },\n  EPSG_4150: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4754: {\n    towgs84: '-208.4058,-109.8777,-2.5764'\n  },\n  ESRI_104101: {\n    towgs84: '374,150,588'\n  },\n  EPSG_4693: {\n    towgs84: '0,-0.15,0.68'\n  },\n  EPSG_6207: {\n    towgs84: '293.17,726.18,245.36'\n  },\n  EPSG_4153: {\n    towgs84: '-133.63,-157.5,-158.62'\n  },\n  EPSG_4132: {\n    towgs84: '-241.54,-163.64,396.06'\n  },\n  EPSG_4221: {\n    towgs84: '-154.5,150.7,100.4'\n  },\n  EPSG_4266: {\n    towgs84: '-80.7,-132.5,41.1'\n  },\n  EPSG_4193: {\n    towgs84: '-70.9,-151.8,-41.4'\n  },\n  EPSG_5340: {\n    towgs84: '-0.41,0.46,-0.35'\n  },\n  EPSG_4246: {\n    towgs84: '-294.7,-200.1,525.5'\n  },\n  EPSG_4318: {\n    towgs84: '-3.2,-5.7,2.8'\n  },\n  EPSG_4121: {\n    towgs84: '-199.87,74.79,246.62'\n  },\n  EPSG_4223: {\n    towgs84: '-260.1,5.5,432.2'\n  },\n  EPSG_4158: {\n    towgs84: '-0.465,372.095,171.736'\n  },\n  EPSG_4285: {\n    towgs84: '-128.16,-282.42,21.93'\n  },\n  EPSG_4613: {\n    towgs84: '-404.78,685.68,45.47'\n  },\n  EPSG_4607: {\n    towgs84: '195.671,332.517,274.607'\n  },\n  EPSG_4475: {\n    towgs84: '-381.788,-57.501,-256.673'\n  },\n  EPSG_4208: {\n    towgs84: '-157.84,308.54,-146.6'\n  },\n  EPSG_4743: {\n    towgs84: '70.995,-335.916,262.898'\n  },\n  EPSG_4710: {\n    towgs84: '-323.65,551.39,-491.22'\n  },\n  EPSG_7881: {\n    towgs84: '-0.077,0.079,0.086'\n  },\n  EPSG_4682: {\n    towgs84: '283.729,735.942,261.143'\n  },\n  EPSG_4739: {\n    towgs84: '-156,-271,-189'\n  },\n  EPSG_4679: {\n    towgs84: '-80.01,253.26,291.19'\n  },\n  EPSG_4750: {\n    towgs84: '-56.263,16.136,-22.856'\n  },\n  EPSG_4644: {\n    towgs84: '-10.18,-350.43,291.37'\n  },\n  EPSG_4695: {\n    towgs84: '-103.746,-9.614,-255.95'\n  },\n  EPSG_4292: {\n    towgs84: '-355,21,72'\n  },\n  EPSG_4302: {\n    towgs84: '-61.702,284.488,472.052'\n  },\n  EPSG_4143: {\n    towgs84: '-124.76,53,466.79'\n  },\n  EPSG_4606: {\n    towgs84: '-153,153,307'\n  },\n  EPSG_4699: {\n    towgs84: '-770.1,158.4,-498.2'\n  },\n  EPSG_4247: {\n    towgs84: '-273.5,110.6,-357.9'\n  },\n  EPSG_4160: {\n    towgs84: '8.88,184.86,106.69'\n  },\n  EPSG_4161: {\n    towgs84: '-233.43,6.65,173.64'\n  },\n  EPSG_9251: {\n    towgs84: '-9.5,122.9,138.2'\n  },\n  EPSG_9253: {\n    towgs84: '-78.1,101.6,133.3'\n  },\n  EPSG_4297: {\n    towgs84: '-198.383,-240.517,-107.909'\n  },\n  EPSG_4269: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4301: {\n    towgs84: '-147,506,687'\n  },\n  EPSG_4618: {\n    towgs84: '-59,-11,-52'\n  },\n  EPSG_4612: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4678: {\n    towgs84: '44.585,-131.212,-39.544'\n  },\n  EPSG_4250: {\n    towgs84: '-130,29,364'\n  },\n  EPSG_4144: {\n    towgs84: '214,804,268'\n  },\n  EPSG_4147: {\n    towgs84: '-17.51,-108.32,-62.39'\n  },\n  EPSG_4259: {\n    towgs84: '-254.1,-5.36,-100.29'\n  },\n  EPSG_4164: {\n    towgs84: '-76,-138,67'\n  },\n  EPSG_4211: {\n    towgs84: '-378.873,676.002,-46.255'\n  },\n  EPSG_4182: {\n    towgs84: '-422.651,-172.995,84.02'\n  },\n  EPSG_4224: {\n    towgs84: '-143.87,243.37,-33.52'\n  },\n  EPSG_4225: {\n    towgs84: '-205.57,168.77,-4.12'\n  },\n  EPSG_5527: {\n    towgs84: '-67.35,3.88,-38.22'\n  },\n  EPSG_4752: {\n    towgs84: '98,390,-22'\n  },\n  EPSG_4310: {\n    towgs84: '-30,190,89'\n  },\n  EPSG_9248: {\n    towgs84: '-192.26,65.72,132.08'\n  },\n  EPSG_4680: {\n    towgs84: '124.5,-63.5,-281'\n  },\n  EPSG_4701: {\n    towgs84: '-79.9,-158,-168.9'\n  },\n  EPSG_4706: {\n    towgs84: '-146.21,112.63,4.05'\n  },\n  EPSG_4805: {\n    towgs84: '682,-203,480'\n  },\n  EPSG_4201: {\n    towgs84: '-165,-11,206'\n  },\n  EPSG_4210: {\n    towgs84: '-157,-2,-299'\n  },\n  EPSG_4183: {\n    towgs84: '-104,167,-38'\n  },\n  EPSG_4139: {\n    towgs84: '11,72,-101'\n  },\n  EPSG_4668: {\n    towgs84: '-86,-98,-119'\n  },\n  EPSG_4717: {\n    towgs84: '-2,151,181'\n  },\n  EPSG_4732: {\n    towgs84: '102,52,-38'\n  },\n  EPSG_4280: {\n    towgs84: '-377,681,-50'\n  },\n  EPSG_4209: {\n    towgs84: '-138,-105,-289'\n  },\n  EPSG_4261: {\n    towgs84: '31,146,47'\n  },\n  EPSG_4658: {\n    towgs84: '-73,46,-86'\n  },\n  EPSG_4721: {\n    towgs84: '265.025,384.929,-194.046'\n  },\n  EPSG_4222: {\n    towgs84: '-136,-108,-292'\n  },\n  EPSG_4601: {\n    towgs84: '-255,-15,71'\n  },\n  EPSG_4602: {\n    towgs84: '725,685,536'\n  },\n  EPSG_4603: {\n    towgs84: '72,213.7,93'\n  },\n  EPSG_4605: {\n    towgs84: '9,183,236'\n  },\n  EPSG_4621: {\n    towgs84: '137,248,-430'\n  },\n  EPSG_4657: {\n    towgs84: '-28,199,5'\n  },\n  EPSG_4316: {\n    towgs84: '103.25,-100.4,-307.19'\n  },\n  EPSG_4642: {\n    towgs84: '-13,-348,292'\n  },\n  EPSG_4698: {\n    towgs84: '145,-187,103'\n  },\n  EPSG_4192: {\n    towgs84: '-206.1,-174.7,-87.7'\n  },\n  EPSG_4311: {\n    towgs84: '-265,120,-358'\n  },\n  EPSG_4135: {\n    towgs84: '58,-283,-182'\n  },\n  ESRI_104138: {\n    towgs84: '198,-226,-347'\n  },\n  EPSG_4245: {\n    towgs84: '-11,851,5'\n  },\n  EPSG_4142: {\n    towgs84: '-125,53,467'\n  },\n  EPSG_4213: {\n    towgs84: '-106,-87,188'\n  },\n  EPSG_4253: {\n    towgs84: '-133,-77,-51'\n  },\n  EPSG_4129: {\n    towgs84: '-132,-110,-335'\n  },\n  EPSG_4713: {\n    towgs84: '-77,-128,142'\n  },\n  EPSG_4239: {\n    towgs84: '217,823,299'\n  },\n  EPSG_4146: {\n    towgs84: '295,736,257'\n  },\n  EPSG_4155: {\n    towgs84: '-83,37,124'\n  },\n  EPSG_4165: {\n    towgs84: '-173,253,27'\n  },\n  EPSG_4672: {\n    towgs84: '175,-38,113'\n  },\n  EPSG_4236: {\n    towgs84: '-637,-549,-203'\n  },\n  EPSG_4251: {\n    towgs84: '-90,40,88'\n  },\n  EPSG_4271: {\n    towgs84: '-2,374,172'\n  },\n  EPSG_4175: {\n    towgs84: '-88,4,101'\n  },\n  EPSG_4716: {\n    towgs84: '298,-304,-375'\n  },\n  EPSG_4315: {\n    towgs84: '-23,259,-9'\n  },\n  EPSG_4744: {\n    towgs84: '-242.2,-144.9,370.3'\n  },\n  EPSG_4244: {\n    towgs84: '-97,787,86'\n  },\n  EPSG_4293: {\n    towgs84: '616,97,-251'\n  },\n  EPSG_4714: {\n    towgs84: '-127,-769,472'\n  },\n  EPSG_4736: {\n    towgs84: '260,12,-147'\n  },\n  EPSG_6883: {\n    towgs84: '-235,-110,393'\n  },\n  EPSG_6894: {\n    towgs84: '-63,176,185'\n  },\n  EPSG_4205: {\n    towgs84: '-43,-163,45'\n  },\n  EPSG_4256: {\n    towgs84: '41,-220,-134'\n  },\n  EPSG_4262: {\n    towgs84: '639,405,60'\n  },\n  EPSG_4604: {\n    towgs84: '174,359,365'\n  },\n  EPSG_4169: {\n    towgs84: '-115,118,426'\n  },\n  EPSG_4620: {\n    towgs84: '-106,-129,165'\n  },\n  EPSG_4184: {\n    towgs84: '-203,141,53'\n  },\n  EPSG_4616: {\n    towgs84: '-289,-124,60'\n  },\n  EPSG_9403: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4684: {\n    towgs84: '-133,-321,50'\n  },\n  EPSG_4708: {\n    towgs84: '-491,-22,435'\n  },\n  EPSG_4707: {\n    towgs84: '114,-116,-333'\n  },\n  EPSG_4709: {\n    towgs84: '145,75,-272'\n  },\n  EPSG_4712: {\n    towgs84: '-205,107,53'\n  },\n  EPSG_4711: {\n    towgs84: '124,-234,-25'\n  },\n  EPSG_4718: {\n    towgs84: '230,-199,-752'\n  },\n  EPSG_4719: {\n    towgs84: '211,147,111'\n  },\n  EPSG_4724: {\n    towgs84: '208,-435,-229'\n  },\n  EPSG_4725: {\n    towgs84: '189,-79,-202'\n  },\n  EPSG_4735: {\n    towgs84: '647,1777,-1124'\n  },\n  EPSG_4722: {\n    towgs84: '-794,119,-298'\n  },\n  EPSG_4728: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4734: {\n    towgs84: '-632,438,-609'\n  },\n  EPSG_4727: {\n    towgs84: '912,-58,1227'\n  },\n  EPSG_4729: {\n    towgs84: '185,165,42'\n  },\n  EPSG_4730: {\n    towgs84: '170,42,84'\n  },\n  EPSG_4733: {\n    towgs84: '276,-57,149'\n  },\n  ESRI_37218: {\n    towgs84: '230,-199,-752'\n  },\n  ESRI_37240: {\n    towgs84: '-7,215,225'\n  },\n  ESRI_37221: {\n    towgs84: '252,-209,-751'\n  },\n  ESRI_4305: {\n    towgs84: '-123,-206,219'\n  },\n  ESRI_104139: {\n    towgs84: '-73,-247,227'\n  },\n  EPSG_4748: {\n    towgs84: '51,391,-36'\n  },\n  EPSG_4219: {\n    towgs84: '-384,664,-48'\n  },\n  EPSG_4255: {\n    towgs84: '-333,-222,114'\n  },\n  EPSG_4257: {\n    towgs84: '-587.8,519.75,145.76'\n  },\n  EPSG_4646: {\n    towgs84: '-963,510,-359'\n  },\n  EPSG_6881: {\n    towgs84: '-24,-203,268'\n  },\n  EPSG_6882: {\n    towgs84: '-183,-15,273'\n  },\n  EPSG_4715: {\n    towgs84: '-104,-129,239'\n  },\n  IGNF_RGF93GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGM04GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGSPM06GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGTAAF07GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGFG95GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGNCG: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGPFGDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_ETRS89G: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGR92GDD: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4173: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4180: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4619: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4667: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4075: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6706: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7798: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4661: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4669: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8685: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4151: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4758: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4761: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4765: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8997: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4023: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4670: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4694: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4148: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4163: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4167: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4189: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4190: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4176: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4659: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3824: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3889: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4046: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4081: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4558: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4483: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5013: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5264: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5324: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5354: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5371: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5373: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5381: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5393: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5489: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5593: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6135: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6365: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5246: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7886: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8431: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8427: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8699: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8818: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4757: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9140: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8086: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4686: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4737: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4747: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4749: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4674: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4755: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4759: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4762: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4763: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4764: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4166: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4170: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5546: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7844: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4818: {\n    towgs84: '589,76,480'\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  if (!datum.datumName) {\n    continue;\n  }\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n","import { PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD } from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; // datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\n/**\n * @typedef {Object} NadgridInfo\n * @property {string} name The name of the NAD grid or 'null' if not specified.\n * @property {boolean} mandatory Indicates if the grid is mandatory (true) or optional (false).\n * @property {*} grid The loaded NAD grid object, or null if not loaded or not applicable.\n * @property {boolean} isNull True if the grid is explicitly 'null', otherwise false.\n */\n\n/**\n * @typedef {Object} NTV2GridOptions\n * @property {boolean} [includeErrorFields=true] Whether to include error fields in the subgrids.\n */\n\n/**\n * @typedef {Object} NadgridHeader\n * @property {number} [nFields] Number of fields in the header.\n * @property {number} [nSubgridFields] Number of fields in each subgrid header.\n * @property {number} nSubgrids Number of subgrids in the file.\n * @property {string} [shiftType] Type of shift (e.g., \"SECONDS\").\n * @property {number} [fromSemiMajorAxis] Source ellipsoid semi-major axis.\n * @property {number} [fromSemiMinorAxis] Source ellipsoid semi-minor axis.\n * @property {number} [toSemiMajorAxis] Target ellipsoid semi-major axis.\n * @property {number} [toSemiMinorAxis] Target ellipsoid semi-minor axis.\n */\n\n/**\n * @typedef {Object} Subgrid\n * @property {Array<number>} ll Lower left corner of the grid in radians [longitude, latitude].\n * @property {Array<number>} del Grid spacing in radians [longitude interval, latitude interval].\n * @property {Array<number>} lim Number of columns in the grid [longitude columns, latitude columns].\n * @property {number} [count] Total number of grid nodes.\n * @property {Array} cvs Mapped node values for the grid.\n */\n\n/** @typedef {{header: NadgridHeader, subgrids: Array<Subgrid>}} NADGrid */\n\nvar loadedNadgrids = {};\n\n/**\n * @overload\n * @param {string} key - The key to associate with the loaded grid.\n * @param {ArrayBuffer} data - The NTv2 grid data as an ArrayBuffer.\n * @param {NTV2GridOptions} [options] - Optional parameters for loading the grid.\n * @returns {NADGrid} - The loaded NAD grid information.\n */\n/**\n * @overload\n * @param {string} key - The key to associate with the loaded grid.\n * @param {import('geotiff').GeoTIFF} data - The GeoTIFF instance to read the grid from.\n * @returns {{ready: Promise<NADGrid>}} - A promise that resolves to the loaded grid information.\n */\n/**\n * Load either a NTv2 file (.gsb) or a Geotiff (.tif) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer. Pass Geotiff as a GeoTIFF instance from the geotiff.js library.\n * @param {string} key - The key to associate with the loaded grid.\n * @param {ArrayBuffer|import('geotiff').GeoTIFF} data The data to load, either an ArrayBuffer for NTv2 or a GeoTIFF instance.\n * @param {NTV2GridOptions} [options] Optional parameters.\n * @returns {{ready: Promise<NADGrid>}|NADGrid} - A promise that resolves to the loaded grid information.\n */\nexport default function nadgrid(key, data, options) {\n  if (data instanceof ArrayBuffer) {\n    return readNTV2Grid(key, data, options);\n  }\n  return { ready: readGeotiffGrid(key, data) };\n}\n\n/**\n * @param {string} key The key to associate with the loaded grid.\n * @param {ArrayBuffer} data The NTv2 grid data as an ArrayBuffer.\n * @param {NTV2GridOptions} [options] Optional parameters for loading the grid.\n * @returns {NADGrid} The loaded NAD grid information.\n */\nfunction readNTV2Grid(key, data, options) {\n  var includeErrorFields = true;\n  if (options !== undefined && options.includeErrorFields === false) {\n    includeErrorFields = false;\n  }\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian, includeErrorFields);\n  var nadgrid = { header: header, subgrids: subgrids };\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * @param {string} key The key to associate with the loaded grid.\n * @param {import('geotiff').GeoTIFF} tiff The GeoTIFF instance to read the grid from.\n * @returns {Promise<NADGrid>} A promise that resolves to the loaded NAD grid information.\n */\nasync function readGeotiffGrid(key, tiff) {\n  var subgrids = [];\n  var subGridCount = await tiff.getImageCount();\n  // proj produced tiff grid shift files appear to organize lower res subgrids first, higher res/ child subgrids last.\n  for (var subgridIndex = subGridCount - 1; subgridIndex >= 0; subgridIndex--) {\n    var image = await tiff.getImage(subgridIndex);\n\n    var rasters = await image.readRasters();\n    var data = rasters;\n    var lim = [image.getWidth(), image.getHeight()];\n    var imageBBoxRadians = image.getBoundingBox().map(degreesToRadians);\n    var del = [image.fileDirectory.ModelPixelScale[0], image.fileDirectory.ModelPixelScale[1]].map(degreesToRadians);\n\n    var maxX = imageBBoxRadians[0] + (lim[0] - 1) * del[0];\n    var minY = imageBBoxRadians[3] - (lim[1] - 1) * del[1];\n\n    var latitudeOffsetBand = data[0];\n    var longitudeOffsetBand = data[1];\n    var nodes = [];\n\n    for (let i = lim[1] - 1; i >= 0; i--) {\n      for (let j = lim[0] - 1; j >= 0; j--) {\n        var index = i * lim[0] + j;\n        nodes.push([-secondsToRadians(longitudeOffsetBand[index]), secondsToRadians(latitudeOffsetBand[index])]);\n      }\n    }\n\n    subgrids.push({\n      del: del,\n      lim: lim,\n      ll: [-maxX, minY],\n      cvs: nodes\n    });\n  }\n\n  var tifGrid = {\n    header: {\n      nSubgrids: subGridCount\n    },\n    subgrids: subgrids\n  };\n  loadedNadgrids[key] = tifGrid;\n  return tifGrid;\n};\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n * @param {string} nadgrids A comma-separated list of grid names, optionally prefixed with '@' to indicate optional grids.\n * @returns\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) {\n    return null;\n  }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\n/**\n * @param {string} value The nadgrid string to get information for.\n * @returns {NadgridInfo|null} An object with grid information, or null if the input is empty.\n */\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return { name: 'null', mandatory: !optional, grid: null, isNull: true };\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction degreesToRadians(degrees) {\n  return (degrees) * Math.PI / 180;\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian)\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian, includeErrorFields) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian, includeErrorFields);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    var rowSize = 16;\n    if (includeErrorFields === false) {\n      rowSize = 8;\n    }\n    gridOffset += 176 + subHeader.gridNodeCount * rowSize;\n  }\n  return grids;\n}\n\n/**\n * @param {*} nodes\n * @returns Array<Array<number>>\n */\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {\n    return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];\n  });\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian, includeErrorFields) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n\n  if (includeErrorFields === false) {\n    gridRecordLength = 8;\n  }\n\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian)\n\n    };\n\n    if (includeErrorFields !== false) {\n      record.latitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian);\n      record.longitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian);\n    }\n\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport { sphere as dc_sphere, eccentricity as dc_eccentricity } from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport { getNadgrids } from './nadgrid';\n\n/**\n * @typedef {Object} DatumDefinition\n * @property {number} datum_type - The type of datum.\n * @property {number} a - Semi-major axis of the ellipsoid.\n * @property {number} b - Semi-minor axis of the ellipsoid.\n * @property {number} es - Eccentricity squared of the ellipsoid.\n * @property {number} ep2 - Second eccentricity squared of the ellipsoid.\n */\n\n/**\n * @param {string | import('./core').PROJJSONDefinition | import('./defs').ProjectionDefinition} srsCode\n * @param {(errorMessage?: string, instance?: Projection) => void} [callback]\n */\nfunction Projection(srsCode, callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  /** @type {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} */\n  this.forward = null;\n  /** @type {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} */\n  this.inverse = null;\n  /** @type {string} */\n  this.name;\n  /** @type {string} */\n  this.title;\n  callback = callback || function (error) {\n    if (error) {\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if (typeof json !== 'object') {\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if (!ourProj) {\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  /** @type {DatumDefinition} */\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  if ('init' in this && typeof this.init === 'function') {\n    this.init();\n  }\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport { PJD_3PARAM, PJD_7PARAM, HALF_PI } from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; // Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    // ..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; // Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } // cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport { geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums } from './datumUtils';\nimport adjust_lon from './common/adjust_lon';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function (source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) && !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = { x: -point.x, y: point.y };\n  var output = { x: Number.NaN, y: Number.NaN };\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log('Unable to find mandatory grid \\'' + grid.name + '\\'');\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log('Failed to find a grid shift table for location \\''\n      + -input.x * R2D + ' ' + input.y * R2D + ' tried: \\'' + attemptedGrids + '\\'');\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = { x: Number.NaN, y: Number.NaN };\n  if (isNaN(pin.x)) {\n    return val;\n  }\n  var tb = { x: pin.x, y: pin.y };\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log('Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.');\n        break;\n      }\n      dif = { x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y) };\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log('Inverse grid shift iterator failed to converge.');\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = { x: pin.x / ct.del[0], y: pin.y / ct.del[1] };\n  var indx = { x: Math.floor(t.x), y: Math.floor(t.y) };\n  var frct = { x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y };\n  var val = { x: Number.NaN, y: Number.NaN };\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx++;\n  var f10 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx += ct.lim[0];\n  var f11 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx--;\n  var f01 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function (crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  /** @type {import(\"./core\").InterfaceCoordinates} */\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if ('ew'.indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n    } else if (i === 1) {\n      v = yin;\n      if ('ns'.indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    } else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n      case 'e':\n        out[t] = v;\n        break;\n      case 'w':\n        out[t] = -v;\n        break;\n      case 'n':\n        out[t] = v;\n        break;\n      case 's':\n        out[t] = -v;\n        break;\n      case 'u':\n        if (point[t] !== undefined) {\n          out.z = v;\n        }\n        break;\n      case 'd':\n        if (point[t] !== undefined) {\n          out.z = -v;\n        }\n        break;\n      default:\n      // console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n        return null;\n    }\n  }\n  return out;\n}\n","/**\n * @param {Array<number>} array\n * @returns {import(\"../core\").InterfaceCoordinates}\n */\nexport default function (array) {\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length > 2) {\n    out.z = array[2];\n  }\n  if (array.length > 3) {\n    out.m = array[3];\n  }\n  return out;\n}\n","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import { D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT } from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84')\n  || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\n/**\n * @param {import('./defs').ProjectionDefinition} source\n * @param {import('./defs').ProjectionDefinition} dest\n * @param {import('./core').TemplateCoordinates} point\n * @param {boolean} enforceAxis\n * @returns {import('./core').InterfaceCoordinates | undefined}\n */\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  point = /** @type {import('./core').InterfaceCoordinates} */ (point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\n/**\n * @typedef {{x: number, y: number, z?: number, m?: number}} InterfaceCoordinates\n */\n\n/**\n * @typedef {Array<number> | InterfaceCoordinates} TemplateCoordinates\n */\n\n/**\n * @typedef {Object} Converter\n * @property {<T extends TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} forward\n * @property {<T extends TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} inverse\n * @property {proj} [oProj]\n */\n\n/**\n * @typedef {Object} PROJJSONDefinition\n * @property {string} [$schema]\n * @property {string} type\n * @property {string} [name]\n * @property {{authority: string, code: number}} [id]\n * @property {string} [scope]\n * @property {string} [area]\n * @property {{south_latitude: number, west_longitude: number, north_latitude: number, east_longitude: number}} [bbox]\n * @property {PROJJSONDefinition[]} [components]\n * @property {{type: string, name: string}} [datum]\n * @property {{\n *   name: string,\n *   members: Array<{\n *     name: string,\n *     id?: {authority: string, code: number}\n *   }>,\n *   ellipsoid?: {\n *     name: string,\n *     semi_major_axis: number,\n *     inverse_flattening?: number\n *   },\n *   accuracy?: string,\n *   id?: {authority: string, code: number}\n * }} [datum_ensemble]\n * @property {{\n *   subtype: string,\n *   axis: Array<{\n *     name: string,\n *     abbreviation?: string,\n *     direction: string,\n *     unit: string\n *   }>\n * }} [coordinate_system]\n * @property {{\n *   name: string,\n *   method: {name: string},\n *   parameters: Array<{\n *     name: string,\n *     value: number,\n *     unit?: string\n *   }>\n * }} [conversion]\n * @property {{\n *   name: string,\n *   method: {name: string},\n *   parameters: Array<{\n *     name: string,\n *     value: number,\n *     unit?: string,\n *     type?: string,\n *     file_name?: string\n *   }>\n * }} [transformation]\n */\n\n/**\n * @template {TemplateCoordinates} T\n * @param {proj} from\n * @param {proj} to\n * @param {T} coords\n * @param {boolean} [enforceAxis]\n * @returns {T}\n */\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || { x: NaN, y: NaN };\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return /** @type {T} */ ([transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3)));\n        } else {\n          return /** @type {T} */ ([transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3)));\n        }\n      } else {\n        return /** @type {T} */ ([transformedArray.x, transformedArray.y].concat(coords.slice(2)));\n      }\n    } else {\n      return /** @type {T} */ ([transformedArray.x, transformedArray.y]);\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return /** @type {T} */ (out);\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return /** @type {T} */ (out);\n  }\n}\n\n/**\n * @param {proj | string | PROJJSONDefinition | Converter} item\n * @returns {import('./Proj').default}\n */\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (typeof item === 'object' && 'oProj' in item) {\n    return item.oProj;\n  }\n  return proj(/** @type {string | PROJJSONDefinition} */ (item));\n}\n\n/**\n * @overload\n * @param {string | PROJJSONDefinition | proj} toProj\n * @returns {Converter}\n */\n/**\n * @overload\n * @param {string | PROJJSONDefinition | proj} fromProj\n * @param {string | PROJJSONDefinition | proj} toProj\n * @returns {Converter}\n */\n/**\n * @template {TemplateCoordinates} T\n * @overload\n * @param {string | PROJJSONDefinition | proj} toProj\n * @param {T} coord\n * @returns {T}\n */\n/**\n * @template {TemplateCoordinates} T\n * @overload\n * @param {string | PROJJSONDefinition | proj} fromProj\n * @param {string | PROJJSONDefinition | proj} toProj\n * @param {T} coord\n * @returns {T}\n */\n/**\n * @template {TemplateCoordinates} T\n * @param {string | PROJJSONDefinition | proj} fromProjOrToProj\n * @param {string | PROJJSONDefinition | proj | TemplateCoordinates} [toProjOrCoord]\n * @param {T} [coord]\n * @returns {T|Converter}\n */\nfunction proj4(fromProjOrToProj, toProjOrCoord, coord) {\n  /** @type {proj} */\n  var fromProj;\n  /** @type {proj} */\n  var toProj;\n  var single = false;\n  /** @type {Converter} */\n  var obj;\n  if (typeof toProjOrCoord === 'undefined') {\n    toProj = checkProj(fromProjOrToProj);\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof /** @type {?} */ (toProjOrCoord).x !== 'undefined' || Array.isArray(toProjOrCoord)) {\n    coord = /** @type {T} */ (/** @type {?} */ (toProjOrCoord));\n    toProj = checkProj(fromProjOrToProj);\n    fromProj = wgs84;\n    single = true;\n  }\n  if (!fromProj) {\n    fromProj = checkProj(fromProjOrToProj);\n  }\n  if (!toProj) {\n    toProj = checkProj(/** @type {string | PROJJSONDefinition | proj } */ (toProjOrCoord));\n  }\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      /**\n       * @template {TemplateCoordinates} T\n       * @param {T} coords\n       * @param {boolean=} enforceAxis\n       * @returns {T}\n       */\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      /**\n       * @template {TemplateCoordinates} T\n       * @param {T} coords\n       * @param {boolean=} enforceAxis\n       * @returns {T}\n       */\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\n\nexport default proj4;\n","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import { toPoint, forward } from 'mgrs';\n\n/**\n * @deprecated v3.0.0 - use proj4.toPoint instead\n * @param {number | import('./core').TemplateCoordinates | string} x\n * @param {number} [y]\n * @param {number} [z]\n */\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0]);\n    this.y = parseFloat(coords[1]);\n    this.z = parseFloat(coords[2]) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function (mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function (accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function (es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n","export default function (phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n","import pj_mlfn from './pj_mlfn';\nimport { EPSLN } from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function (arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    // t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    // phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  // ..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {Array<number>} en\n * @property {number} ml0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    } else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        } else {\n          y = 0;\n        }\n      } else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  } else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1\n      + als / 6 * (1 - t + c\n        + als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c\n          + als / 42 * (61 + 179 * ts - ts * t - 479 * t)))))\n        + this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0\n      + sin_phi * delta_lon * al / 2 * (1\n        + als / 12 * (5 - t + 9 * c + 4 * cs\n          + als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c\n            + als / 56 * (1385 + 543 * ts - ts * t - 3111 * t))))))\n          + this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    } else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  } else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1\n        - ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs\n          - ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c\n            - ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1\n        - ds / 6 * (1 + 2 * t + c\n          - ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c\n            - ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    } else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Fast_Transverse_Mercator', 'Fast Transverse Mercator'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n","export default function (x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function (pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function (pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function (x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {Array<number>} cbg\n * @property {Array<number>} cgb\n * @property {Array<number>} utg\n * @property {Array<number>} gtu\n * @property {number} Qn\n * @property {number} Zb\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675))))));\n  this.cbg[0] = n * (-2 + n * (2 / 3 + n * (4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * (-13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * (-24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * (2 / 3 + n * (-37 / 96 + n * (1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  } else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  } else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Extended_Transverse_Mercator', 'Extended Transverse Mercator', 'etmerc', 'Transverse_Mercator', 'Transverse Mercator', 'Gauss Kruger', 'Gauss_Kruger', 'tmerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function (x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function (x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function (esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport { HALF_PI, FORTPI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} rc\n * @property {number} C\n * @property {number} phic0\n * @property {number} ratexp\n * @property {number} K\n * @property {number} e\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), -0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gauss'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { EPSLN, HALF_PI } from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} coslat0\n * @property {number} sinlat0\n * @property {number} ms1\n * @property {number} X0\n * @property {number} cosX0\n * @property {number} sinX0\n * @property {number} con\n * @property {number} cons\n * @property {number} e\n */\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        // North pole\n        // trace('stere:north pole');\n        this.con = 1;\n      } else {\n        // South pole\n        // trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    // case of the origine point\n    // trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    // trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  } else {\n    X = 2 * Math.atan(ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      // trace(p.toString());\n      return p;\n    } else if (Math.abs(this.sinlat0) < EPSLN) {\n      // Eq\n      // trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    } else {\n      // other case\n      // trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  // trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    } else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        // trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, -1 * p.y));\n    } else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      } else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  // trace(p.toString());\n  return p;\n}\n\nexport var names = ['stere', 'Stereographic_South_Pole', 'Polar_Stereographic_variant_A', 'Polar_Stereographic_variant_B', 'Polar_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","export default function (e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n","export default function (x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n","export default function (x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n","export default function (x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n","export default function (x) {\n  return (x * x * x * (35 / 3072));\n}\n","export default function (a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n","import { HALF_PI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function (ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // ..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n","export default function (eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  } else {\n    return (2 * sinphi);\n  }\n}\n","export default function (x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e3\n * @property {number} sin_po\n * @property {number} cos_po\n * @property {number} t1\n * @property {number} con\n * @property {number} ms1\n * @property {number} qs1\n * @property {number} t2\n * @property {number} ms2\n * @property {number} qs2\n * @property {number} t3\n * @property {number} qs0\n * @property {number} ns0\n * @property {number} c\n * @property {number} rh\n * @property {number} sin_phi\n * @property {number} cos_phi\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  } else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  ------------------------------------------------------------------- */\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  } else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n------------------------------------------- */\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = ['Albers_Conic_Equal_Area', 'Albers_Equal_Area', 'Albers', 'aea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport { EPSLN, TWO_PI, SPI, HALF_PI, FORTPI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} face\n * @property {number} x0\n * @property {number} y0\n * @property {number} es\n * @property {number} one_minus_f\n * @property {number} one_minus_f_squared\n */\n\n/* constants */\nvar FACE_ENUM = {\n  FRONT: 1,\n  RIGHT: 2,\n  BACK: 3,\n  LEFT: 4,\n  TOP: 5,\n  BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n  AREA_0: 1,\n  AREA_1: 2,\n  AREA_2: 3,\n  AREA_3: 4\n};\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Quadrilateralized Spherical Cube';\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = { x: 0, y: 0 };\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = { value: 0 };\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) { // if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; // lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = { lam: 0, phi: 0 };\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = { value: 0 };\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = ['Quadrilateralized Spherical Cube', 'Quadrilateralized_Spherical_Cube', 'qsc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport { HALF_PI, D2R, R2D, EPSLN } from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n  [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n  [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n  [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n  [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n  [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n  [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n  [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n  [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n  [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n  [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n  [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n  [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n  [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n  [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n  [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n  [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n  [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n  [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n  [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n  [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n  [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n  [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n  [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n  [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n  [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n  [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n  [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n  [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n  [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n  [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n  [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n  [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n  [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n  [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n  [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n  [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n  [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n  [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D / 5; // rad to 5-degree interval\nvar RC1 = 1 / C1;\nvar NODES = 18;\n\nvar poly3_val = function (coefs, x) {\n  return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function (coefs, x) {\n  return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n  var x = start;\n  for (; iters; --iters) {\n    var upd = f_df(x);\n    x -= upd;\n    if (Math.abs(upd) < max_err) {\n      break;\n    }\n  }\n  return x;\n}\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.long0 = this.long0 || 0;\n  this.es = 0;\n  this.title = this.title || 'Robinson';\n}\n\nexport function forward(ll) {\n  var lon = adjust_lon(ll.x - this.long0);\n\n  var dphi = Math.abs(ll.y);\n  var i = Math.floor(dphi * C1);\n  if (i < 0) {\n    i = 0;\n  } else if (i >= NODES) {\n    i = NODES - 1;\n  }\n  dphi = R2D * (dphi - RC1 * i);\n  var xy = {\n    x: poly3_val(COEFS_X[i], dphi) * lon,\n    y: poly3_val(COEFS_Y[i], dphi)\n  };\n  if (ll.y < 0) {\n    xy.y = -xy.y;\n  }\n\n  xy.x = xy.x * this.a * FXC + this.x0;\n  xy.y = xy.y * this.a * FYC + this.y0;\n  return xy;\n}\n\nexport function inverse(xy) {\n  var ll = {\n    x: (xy.x - this.x0) / (this.a * FXC),\n    y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n  };\n\n  if (ll.y >= 1) { // pathologic case\n    ll.x /= COEFS_X[NODES][0];\n    ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    // find table interval\n    var i = Math.floor(ll.y * NODES);\n    if (i < 0) {\n      i = 0;\n    } else if (i >= NODES) {\n      i = NODES - 1;\n    }\n    for (;;) {\n      if (COEFS_Y[i][0] > ll.y) {\n        --i;\n      } else if (COEFS_Y[i + 1][0] <= ll.y) {\n        ++i;\n      } else {\n        break;\n      }\n    }\n    // linear interpolation in 5 degree interval\n    var coefs = COEFS_Y[i];\n    var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i + 1][0] - coefs[0]);\n    // find t so that poly3_val(coefs, t) = ll.y\n    t = newton_rapshon(function (x) {\n      return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n    }, t, EPSLN, 100);\n\n    ll.x /= poly3_val(COEFS_X[i], t);\n    ll.y = (5 * i + t) * D2R;\n    if (xy.y < 0) {\n      ll.y = -ll.y;\n    }\n  }\n\n  ll.x = adjust_lon(ll.x + this.long0);\n  return ll;\n}\n\nexport var names = ['Robinson', 'robin'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { D2R, HALF_PI, EPSLN } from '../constants/values';\nimport hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} mode\n * @property {number} sinph0\n * @property {number} cosph0\n * @property {number} pn1\n * @property {number} h\n * @property {number} rp\n * @property {number} p\n * @property {number} h1\n * @property {number} pfact\n * @property {number} es\n * @property {number} tilt\n * @property {number} azi\n * @property {number} cg\n * @property {number} sg\n * @property {number} cw\n * @property {number} sw\n */\n\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nvar params = {\n  h: { def: 100000, num: true }, // default is Karman line, no default in PROJ.7\n  azi: { def: 0, num: true, degrees: true }, // default is North\n  tilt: { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true }, // default is Greenwich, conversion to rad is automatic\n  lat0: { def: 0, num: true } // default is Equator, conversion to rad is automatic\n};\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === 'undefined') {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error('Invalid parameter value, must be numeric ' + p + ' = ' + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a; // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error('Invalid height');\n  }\n\n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt\n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = ['Tilted_Perspective', 'tpers'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from '../common/adjust_lon';\n\nvar A1 = 1.340264,\n  A2 = -0.081106,\n  A3 = 0.000893,\n  A4 = 0.003796,\n  M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n    paramLatSq = paramLat * paramLat,\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat)\n    / (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n    NITER = 12,\n    paramLat = p.y,\n    paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n      break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq))\n    / Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['eqearth', 'Equal Earth', 'Equal_Earth'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lat from '../common/adjust_lat';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\nimport pj_enfn from '../common/pj_enfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport { HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} phi1\n * @property {number} cphi1\n * @property {number} es\n * @property {Array<number>} en\n * @property {number} m1\n * @property {number} am1\n */\n\nvar EPS10 = 1e-10;\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    } else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['bonne', 'Bonne (Werner lat_1=90)'];\nexport default {\n  init: init,\n  names: names\n};\n","import core from './core';\nimport Proj from './Proj';\nimport Point from './Point';\nimport common from './common/toPoint';\nimport defs from './defs';\nimport nadgrid from './nadgrid';\nimport transform from './transform';\nimport mgrs from 'mgrs';\nimport includedProjections from '../projs';\n\n/**\n * @typedef {Object} Mgrs\n * @property {(lonlat: [number, number]) => string} forward\n * @property {(mgrsString: string) => [number, number, number, number]} inverse\n * @property {(mgrsString: string) => [number, number]} toPoint\n */\n\n/**\n * @template {import('./core').TemplateCoordinates} T\n * @type {core<T> & {defaultDatum: string, Proj: typeof Proj, WGS84: Proj, Point: typeof Point, toPoint: typeof common, defs: typeof defs, nadgrid: typeof nadgrid, transform: typeof transform, mgrs: Mgrs, version: string}}\n */\nconst proj4 = Object.assign(core, {\n  defaultDatum: 'WGS84',\n  Proj,\n  WGS84: new Proj('WGS84'),\n  Point,\n  toPoint: common,\n  defs,\n  nadgrid,\n  transform,\n  mgrs,\n  version: '__VERSION__'\n});\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function (proj4) {\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport { D2R } from '../constants/values';\n\n/** @this {import('../defs.js').ProjectionDefinition} */\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 = ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = ['Universal Transverse Mercator System', 'utm'];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function (zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sinc0\n * @property {number} cosc0\n * @property {number} R2\n * @property {number} rc\n * @property {number} phic0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = 'Oblique Stereographic Alternative';\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['Stereographic_North_Pole', 'Oblique_Stereographic', 'sterea', 'Oblique Stereographic Alternative', 'Double_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} lambda0\n * @property {number} e\n * @property {number} R\n * @property {number} b0\n * @property {number} K\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      // ...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    // S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = ['somerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\nimport { getNormalizedProjName } from '../projections';\n\n/**\n * @typedef {Object} LocalThis\n * @property {boolean} no_off\n * @property {boolean} no_rot\n * @property {number} rectified_grid_angle\n * @property {number} es\n * @property {number} A\n * @property {number} B\n * @property {number} E\n * @property {number} e\n * @property {number} lam0\n * @property {number} singam\n * @property {number} cosgam\n * @property {number} sinrot\n * @property {number} cosrot\n * @property {number} rB\n * @property {number} ArB\n * @property {number} BrA\n * @property {number} u_0\n * @property {number} v_pole_n\n * @property {number} v_pole_s\n */\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.projName === 'object' ? Object.keys(P.projName)[0] : P.projName;\n\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1 || typeAProjections.indexOf(getNormalizedProjName(projectionName)) !== -1;\n}\n\n/**\n * Initialize the Oblique Mercator  projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0;\n\n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n\n  var alp = false;\n  if ('alpha' in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if ('rectified_grid_angle' in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n\n  if (gam) {\n    gamma = this.rectified_grid_angle;\n  }\n\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL\n      || Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL\n      || Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n\n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n\n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n\n    if (con < -Math.PI) {\n      lam2 -= TWO_PI;\n    } else if (con > Math.PI) {\n      lam2 += TWO_PI;\n    }\n\n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ---------------------------------------------------------- */\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n\n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n\n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n\n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n\n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n\n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n\n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n\n  coords.x += this.lam0;\n\n  return coords;\n}\n\nexport var names = ['Hotine_Oblique_Mercator', 'Hotine Oblique Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Variant_B', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin', 'Hotine_Oblique_Mercator_Two_Point_Natural_Origin', 'Hotine_Oblique_Mercator_Azimuth_Center', 'Oblique_Mercator', 'omerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} e\n * @property {number} ns\n * @property {number} f0\n * @property {number} rh\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // double lat0;                    /* the reference latitude               */\n  // double long0;                   /* the reference longitude              */\n  // double lat1;                    /* first standard parallel              */\n  // double lat2;                    /* second standard parallel             */\n  // double r_maj;                   /* major axis                           */\n  // double r_min;                   /* minor axis                           */\n  // double false_east;              /* x offset in meters                   */\n  // double false_north;             /* y offset in meters                   */\n\n  // the above value can be set with proj4.defs\n  // example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } // if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = Math.abs(Math.abs(this.lat0) - HALF_PI) < EPSLN\n    ? 0 // Handle poles by setting ts0 to 0\n    : tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  } else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = 'Lambert Conformal Conic';\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  } else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  } else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  'Lambert Tangential Conformal Conic Projection',\n  'Lambert_Conformal_Conic',\n  'Lambert_Conformal_Conic_1SP',\n  'Lambert_Conformal_Conic_2SP',\n  'lcc',\n  'Lambert Conic Conformal (1SP)',\n  'Lambert Conic Conformal (2SP)'\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x */\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = ['Krovak', 'krovak'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} ml0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  } else {\n    // ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  } else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['Cassini', 'Cassini_Soldner', 'cass'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { HALF_PI, EPSLN, FORTPI } from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} mode\n * @property {Array<number>} apa\n * @property {number} dd\n * @property {number} e\n * @property {number} es\n * @property {number} mmf\n * @property {number} rq\n * @property {number} qp\n * @property {number} sinb1\n * @property {number} cosb1\n * @property {number} ymf\n * @property {number} xmf\n * @property {number} sinph0\n * @property {number} cosph0\n */\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/**\n * Initialize the Lambert Azimuthal Equal Area projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? S_POLE : N_POLE;\n  } else if (Math.abs(t) < EPSLN) {\n    this.mode = EQUIT;\n  } else {\n    this.mode = OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n      case N_POLE:\n        this.dd = 1;\n        break;\n      case S_POLE:\n        this.dd = 1;\n        break;\n      case EQUIT:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        this.dd = 1 / this.rq;\n        this.xmf = 1;\n        this.ymf = 0.5 * this.qp;\n        break;\n      case OBLIQ:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        sinphi = Math.sin(this.lat0);\n        this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n        this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n        this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n        this.ymf = (this.xmf = this.rq) / this.dd;\n        this.xmf *= this.dd;\n        break;\n    }\n  } else {\n    if (this.mode === OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  } else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n        b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n        break;\n      case this.EQUIT:\n        b = 1 + cosb * coslam;\n        break;\n      case this.N_POLE:\n        b = HALF_PI + phi;\n        q = this.qp - q;\n        break;\n      case this.S_POLE:\n        b = phi - HALF_PI;\n        q = this.qp + q;\n        break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n      case this.EQUIT:\n        b = Math.sqrt(2 / b);\n        if (this.mode === this.OBLIQ) {\n          y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n        } else {\n          y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n        }\n        x = this.xmf * b * cosb * sinlam;\n        break;\n      case this.N_POLE:\n      case this.S_POLE:\n        if (q >= 0) {\n          x = (b = Math.sqrt(q)) * sinlam;\n          y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n        } else {\n          x = y = 0;\n        }\n        break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n      case this.EQUIT:\n        phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n        x *= sinz;\n        y = cosz * rh;\n        break;\n      case this.OBLIQ:\n        phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n        x *= sinz * this.cosph0;\n        y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n        break;\n      case this.N_POLE:\n        y = -y;\n        phi = HALF_PI - phi;\n        break;\n      case this.S_POLE:\n        phi -= HALF_PI;\n        break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  } else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      } else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = ['Lambert Azimuthal Equal Area', 'Lambert_Azimuthal_Equal_Area', 'laea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sin_p14\n * @property {number} cos_p14\n * @property {number} infinity_dist\n * @property {number} rc\n */\n\n/**\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n   @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  } else {\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      ----------------- */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gnom'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} e\n */\n\n/**\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n  @this {import('../defs.js').ProjectionDefinition & LocalThis}\n*/\nexport function init() {\n  // no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  } else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  } else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['cea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    } else {\n      return HALF_PI;\n    }\n  }\n  // var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Equidistant Cylindrical (Plate Carre)';\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = ['Equirectangular', 'Equidistant_Cylindrical', 'Equidistant_Cylindrical_Spherical', 'eqc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport { EPSLN } from '../constants/values';\n\nimport gN from '../common/gN';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} ml0\n */\n\nvar MAX_ITER = 20;\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); // si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    } else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  } else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    } else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    } else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  } else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    } else {\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      // lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Polyconic', 'American_Polyconic', 'poly'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { SEC_TO_RAD } from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['New_Zealand_Map_Grid', 'nzmg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n/* Initialize the Miller Cylindrical projection\n  ------------------------------------------- */\nexport function init() {\n  // no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Miller_Cylindrical', 'mill'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {Array<number>} en\n * @property {number} n\n * @property {number} m\n * @property {number} C_y\n * @property {number} C_x\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n    ------------------------------------------------- */\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  } else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  ----------------------------------------------------- */\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    ----------------- */\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    } else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n  } else {\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    } else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  } else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      // temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    } else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Sinusoidal', 'sinu'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport { EPSLN } from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ---------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      ----------------------------------------------------- */\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       -------------------------------------------------------------------------- */\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       ------------------------------------------------------------------- */\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mollweide', 'moll'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} sin_phi\n * @property {number} cos_phi\n * @property {number} ms1\n * @property {number} ml1\n * @property {number} ms2\n * @property {number} ml2\n * @property {number} ns\n * @property {number} g\n * @property {number} ml0\n * @property {number} rh\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sin_phi = Math.sin(this.lat1);\n  this.cos_phi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sin_phi, this.cos_phi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sin_phi;\n  } else {\n    this.sin_phi = Math.sin(this.lat2);\n    this.cos_phi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sin_phi, this.cos_phi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      ----------------- */\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  } else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n}\n\nexport var names = ['Equidistant_Conic', 'eqdc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport { HALF_PI, EPSLN } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} R - Radius of the Earth\n */\n\n/**\n * Initialize the Van Der Grinten projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  // this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    } else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  // con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    // y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  } else {\n    // y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  --------------------------------------------------------- */\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    } else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  } else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  } else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Van_der_Grinten_I', 'VanDerGrinten', 'Van_der_Grinten', 'vandg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\nimport { vincentyDirect, vincentyInverse } from '../common/vincenty';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} sin_p12\n * @property {number} cos_p12\n * @property {number} a\n * @property {number} f\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n  // flattening for ellipsoid\n  this.f = this.es / (1 + Math.sqrt(1 - this.es));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, c, kp, cos_c, vars, azi1;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    } else {\n      // default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    } else {\n      // Default case\n      if (Math.abs(lon) < EPSLN && Math.abs(lat - this.lat0) < EPSLN) {\n        p.x = p.y = 0;\n        return p;\n      }\n      vars = vincentyInverse(this.lat0, this.long0, lat, lon, this.a, this.f);\n      azi1 = vars.azi1;\n      p.x = vars.s12 * Math.sin(azi1);\n      p.y = vars.s12 * Math.cos(azi1);\n      return p;\n    }\n  }\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, azi1, s12, vars;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    } else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n        } else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else {\n      // default case\n      azi1 = Math.atan2(p.x, p.y);\n      s12 = Math.sqrt(p.x * p.x + p.y * p.y);\n      vars = vincentyDirect(this.lat0, this.long0, azi1, s12, this.a, this.f);\n\n      p.x = vars.lon2;\n      p.y = vars.lat2;\n      return p;\n    }\n  }\n}\n\nexport var names = ['Azimuthal_Equidistant', 'aeqd'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","/**\n * Calculates the inverse geodesic problem using Vincenty's formulae.\n * Computes the forward azimuth and ellipsoidal distance between two points\n * specified by latitude and longitude on the surface of an ellipsoid.\n *\n * @param {number} lat1 Latitude of the first point in radians.\n * @param {number} lon1 Longitude of the first point in radians.\n * @param {number} lat2 Latitude of the second point in radians.\n * @param {number} lon2 Longitude of the second point in radians.\n * @param {number} a Semi-major axis of the ellipsoid (meters).\n * @param {number} f Flattening of the ellipsoid.\n * @returns {{ azi1: number, s12: number }} An object containing:\n *   - azi1: Forward azimuth from the first point to the second point (radians).\n *   - s12: Ellipsoidal distance between the two points (meters).\n */\nexport function vincentyInverse(lat1, lon1, lat2, lon2, a, f) {\n  const L = lon2 - lon1;\n  const U1 = Math.atan((1 - f) * Math.tan(lat1));\n  const U2 = Math.atan((1 - f) * Math.tan(lat2));\n  const sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);\n  const sinU2 = Math.sin(U2), cosU2 = Math.cos(U2);\n\n  let lambda = L, lambdaP, iterLimit = 100;\n  let sinLambda, cosLambda, sinSigma, cosSigma, sigma, sinAlpha, cos2Alpha, cos2SigmaM, C;\n  let uSq, A, B, deltaSigma, s;\n\n  do {\n    sinLambda = Math.sin(lambda);\n    cosLambda = Math.cos(lambda);\n    sinSigma = Math.sqrt(\n      (cosU2 * sinLambda) * (cosU2 * sinLambda)\n      + (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda)\n      * (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda)\n    );\n    if (sinSigma === 0) {\n      return { azi1: 0, s12: 0 }; // coincident points\n    }\n    cosSigma = sinU1 * sinU2 + cosU1 * cosU2 * cosLambda;\n    sigma = Math.atan2(sinSigma, cosSigma);\n    sinAlpha = cosU1 * cosU2 * sinLambda / sinSigma;\n    cos2Alpha = 1 - sinAlpha * sinAlpha;\n    cos2SigmaM = (cos2Alpha !== 0) ? (cosSigma - 2 * sinU1 * sinU2 / cos2Alpha) : 0;\n    C = f / 16 * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n    lambdaP = lambda;\n    lambda = L + (1 - C) * f * sinAlpha\n    * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n  } while (Math.abs(lambda - lambdaP) > 1e-12 && --iterLimit > 0);\n\n  if (iterLimit === 0) {\n    return { azi1: NaN, s12: NaN }; // formula failed to converge\n  }\n\n  uSq = cos2Alpha * (a * a - (a * (1 - f)) * (a * (1 - f))) / ((a * (1 - f)) * (a * (1 - f)));\n  A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n  B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n  deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)\n    - B / 6 * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n\n  s = (a * (1 - f)) * A * (sigma - deltaSigma);\n\n  // Forward azimuth\n  const azi1 = Math.atan2(cosU2 * sinLambda, cosU1 * sinU2 - sinU1 * cosU2 * cosLambda);\n\n  return { azi1, s12: s };\n}\n\n/**\n * Solves the direct geodetic problem using Vincenty's formulae.\n * Given a starting point, initial azimuth, and distance, computes the destination point on the ellipsoid.\n *\n * @param {number} lat1 Latitude of the starting point in radians.\n * @param {number} lon1 Longitude of the starting point in radians.\n * @param {number} azi1 Initial azimuth (forward azimuth) in radians.\n * @param {number} s12 Distance to travel from the starting point in meters.\n * @param {number} a Semi-major axis of the ellipsoid in meters.\n * @param {number} f Flattening of the ellipsoid.\n * @returns {{lat2: number, lon2: number}} The latitude and longitude (in radians) of the destination point.\n */\nexport function vincentyDirect(lat1, lon1, azi1, s12, a, f) {\n  const U1 = Math.atan((1 - f) * Math.tan(lat1));\n  const sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);\n  const sinAlpha1 = Math.sin(azi1), cosAlpha1 = Math.cos(azi1);\n\n  const sigma1 = Math.atan2(sinU1, cosU1 * cosAlpha1);\n  const sinAlpha = cosU1 * sinAlpha1;\n  const cos2Alpha = 1 - sinAlpha * sinAlpha;\n  const uSq = cos2Alpha * (a * a - (a * (1 - f)) * (a * (1 - f))) / ((a * (1 - f)) * (a * (1 - f)));\n  const A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n  const B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n\n  let sigma = s12 / ((a * (1 - f)) * A), sigmaP, iterLimit = 100;\n  let cos2SigmaM, sinSigma, cosSigma, deltaSigma;\n\n  do {\n    cos2SigmaM = Math.cos(2 * sigma1 + sigma);\n    sinSigma = Math.sin(sigma);\n    cosSigma = Math.cos(sigma);\n    deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)\n      - B / 6 * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n    sigmaP = sigma;\n    sigma = s12 / ((a * (1 - f)) * A) + deltaSigma;\n  } while (Math.abs(sigma - sigmaP) > 1e-12 && --iterLimit > 0);\n\n  if (iterLimit === 0) {\n    return { lat2: NaN, lon2: NaN };\n  }\n\n  const tmp = sinU1 * sinSigma - cosU1 * cosSigma * cosAlpha1;\n  const lat2 = Math.atan2(\n    sinU1 * cosSigma + cosU1 * sinSigma * cosAlpha1,\n    (1 - f) * Math.sqrt(sinAlpha * sinAlpha + tmp * tmp)\n  );\n  const lambda = Math.atan2(\n    sinSigma * sinAlpha1,\n    cosU1 * cosSigma - sinU1 * sinSigma * cosAlpha1\n  );\n  const C = f / 16 * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n  const L = lambda - (1 - C) * f * sinAlpha\n    * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n  const lon2 = lon1 + L;\n\n  return { lat2, lon2 };\n}\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sin_p14\n * @property {number} cos_p14\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n    } else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['ortho'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n  geodeticToGeocentric,\n  geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n  this.name = 'geocent';\n}\n\nexport function forward(p) {\n  var point = geodeticToGeocentric(p, this.es, this.a);\n  return point;\n}\n\nexport function inverse(p) {\n  var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n  return point;\n}\n\nexport var names = ['Geocentric', 'geocentric', 'geocent', 'Geocent'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {1 | 0} flip_axis\n * @property {number} h\n * @property {number} radius_g_1\n * @property {number} radius_g\n * @property {number} radius_p\n * @property {number} radius_p2\n * @property {number} radius_p_inv2\n * @property {'ellipse'|'sphere'} shape\n * @property {number} C\n * @property {string} sweep\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n  this.h = Number(this.h);\n  this.radius_g_1 = this.h / this.a;\n\n  if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n    throw new Error();\n  }\n\n  this.radius_g = 1.0 + this.radius_g_1;\n  this.C = this.radius_g * this.radius_g - 1.0;\n\n  if (this.es !== 0.0) {\n    var one_es = 1.0 - this.es;\n    var rone_es = 1 / one_es;\n\n    this.radius_p = Math.sqrt(one_es);\n    this.radius_p2 = one_es;\n    this.radius_p_inv2 = rone_es;\n\n    this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n  } else {\n    this.radius_p = 1.0;\n    this.radius_p2 = 1.0;\n    this.radius_p_inv2 = 1.0;\n\n    this.shape = 'sphere'; // Use as a condition in the forward and inverse functions.\n  }\n\n  if (!this.title) {\n    this.title = 'Geostationary Satellite View';\n  }\n}\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var tmp, v_x, v_y, v_z;\n  lon = lon - this.long0;\n\n  if (this.shape === 'ellipse') {\n    lat = Math.atan(this.radius_p2 * Math.tan(lat));\n    var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n    v_x = r * Math.cos(lon) * Math.cos(lat);\n    v_y = r * Math.sin(lon) * Math.cos(lat);\n    v_z = r * Math.sin(lat);\n\n    if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    tmp = this.radius_g - v_x;\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  } else if (this.shape === 'sphere') {\n    tmp = Math.cos(lat);\n    v_x = Math.cos(lon) * tmp;\n    v_y = Math.sin(lon) * tmp;\n    v_z = Math.sin(lat);\n    tmp = this.radius_g - v_x;\n\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  }\n  p.x = p.x * this.a;\n  p.y = p.y * this.a;\n  return p;\n}\n\nfunction inverse(p) {\n  var v_x = -1.0;\n  var v_y = 0.0;\n  var v_z = 0.0;\n  var a, b, det, k;\n\n  p.x = p.x / this.a;\n  p.y = p.y / this.a;\n\n  if (this.shape === 'ellipse') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n    }\n\n    var v_zp = v_z / this.radius_p;\n    a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n  } else if (this.shape === 'sphere') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n    }\n\n    a = v_y * v_y + v_z * v_z + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n  }\n  p.x = p.x + this.long0;\n  return p;\n}\n\nexport var names = ['Geostationary Satellite View', 'Geostationary_Satellite', 'geos'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n"],"names":["Math","Object","parseFloat","parseInt","Array","a","Error","t","i","isFinite","arguments","console","s","e","r","String","Uint8Array","Number","isNaN","TypeError","NaN","n","c","d","h","ArrayBuffer","DataView","o","l","g"],"mappings":"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f,EACA,QAAS,CACP,EAAG,QACH,EAAG,aACH,YAAa,SACf,EACA,MAAO,CACL,EAAG,QACH,GAAI,MACJ,YAAa,QACf,EACA,MAAO,CACL,EAAG,QACH,GAAI,OACJ,YAAa,QACf,EACA,KAAM,CACJ,EAAG,QACH,GAAI,OACJ,YAAa,QACf,EACA,MAAO,CACL,EAAG,QACH,GAAI,cACJ,YAAa,QACf,EACA,OAAQ,CACN,EAAG,QACH,EAAG,QACH,YAAa,2BACf,CACF,EC1NA,IAAM,EAAQ,EAAU,KAAK,CCJ7B,IAAI,EAAS,CACX,MAAO,CACL,QAAS,QACT,QAAS,QACT,UAAW,OACb,EACA,OAAQ,CACN,QAAS,yBACT,QAAS,SACT,UAAW,OACb,EACA,OAAQ,CACN,QAAS,uBACT,QAAS,QACT,UAAW,sCACb,EACA,MAAO,CACL,QAAS,QACT,QAAS,QACT,UAAW,2BACb,EACA,MAAO,CACL,SAAU,2CACV,QAAS,SACT,UAAW,2BACb,EACA,QAAS,CACP,QAAS,0CACT,QAAS,SACT,UAAW,6BACb,EACA,SAAU,CACR,QAAS,mBACT,QAAS,UACT,UAAW,uBACb,EACA,cAAe,CACb,QAAS,kDACT,QAAS,SACT,UAAW,eACb,EACA,IAAK,CACH,QAAS,kDACT,QAAS,SACT,UAAW,gCACb,EACA,OAAQ,CACN,QAAS,qDACT,QAAS,OACT,UAAW,gBACb,EACA,MAAO,CACL,QAAS,qDACT,QAAS,WACT,UAAW,cACb,EACA,WAAY,CACV,QAAS,yBACT,QAAS,OACT,UAAW,YACb,EACA,OAAQ,CACN,QAAS,6CACT,QAAS,OACT,UAAW,iCACb,EACA,OAAQ,CACN,QAAS,yDACT,QAAS,OACT,UAAW,uCACb,EACA,OAAQ,CACN,QAAS,aACT,QAAS,SACT,UAAW,gBACb,EACA,SAAU,CACR,QAAS,eACT,QAAS,SACT,UAAW,UACb,EACA,cAAe,CACb,QAAS,cACT,QAAS,SACT,UAAW,uBACb,EACA,MAAO,CACL,QAAS,wDACT,QAAS,OACT,UAAW,4BACb,EACA,UAAW,CACT,QAAS,iDACX,EACA,YAAa,CACX,QAAS,qDACX,EACA,UAAW,CACT,QAAS,oEACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,WAAY,CACV,QAAS,oDACX,EACA,WAAY,CACV,QAAS,mDACX,EACA,WAAY,CACV,QAAS,kDACX,EACA,UAAW,CACT,QAAS,6CACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,0CACX,EACA,UAAW,CACT,QAAS,gDACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,+CACX,EACA,UAAW,CACT,QAAS,uDACX,EACA,UAAW,CACT,QAAS,8CACX,EACA,UAAW,CACT,QAAS,uDACX,EACA,UAAW,CACT,QAAS,kDACX,EACA,UAAW,CACT,QAAS,kDACX,EACA,UAAW,CACT,QAAS,4CACX,EACA,UAAW,CACT,QAAS,yCACX,EACA,UAAW,CACT,QAAS,0DACX,EACA,UAAW,CACT,QAAS,6DACX,EACA,UAAW,CACT,QAAS,gDACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,yCACX,EACA,UAAW,CACT,QAAS,8CACX,EACA,UAAW,CACT,QAAS,6CACX,EACA,UAAW,CACT,QAAS,0DACX,EACA,UAAW,CACT,QAAS,0BACX,EACA,UAAW,CACT,QAAS,gBACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,mEACX,EACA,UAAW,CACT,QAAS,wDACX,EACA,UAAW,CACT,QAAS,2DACX,EACA,UAAW,CACT,QAAS,4DACX,EACA,UAAW,CACT,QAAS,8CACX,EACA,UAAW,CACT,QAAS,8CACX,EACA,UAAW,CACT,QAAS,+DACX,EACA,UAAW,CACT,QAAS,uDACX,EACA,UAAW,CACT,QAAS,iEACX,EACA,UAAW,CACT,QAAS,0DACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,mDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,uDACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,8BACX,EACA,UAAW,CACT,QAAS,OACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,mDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,YAAa,CACX,QAAS,qDACX,EACA,UAAW,CACT,QAAS,0BACX,EACA,UAAW,CACT,QAAS,SACX,EACA,UAAW,CACT,QAAS,SACX,EACA,UAAW,CACT,QAAS,mDACX,EACA,UAAW,CACT,QAAS,kDACX,EACA,UAAW,CACT,QAAS,2CACX,EACA,UAAW,CACT,QAAS,4DACX,EACA,UAAW,CACT,QAAS,uDACX,EACA,UAAW,CACT,QAAS,SACX,EACA,UAAW,CACT,QAAS,sCACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,sCACX,EACA,YAAa,CACX,QAAS,6CACX,EACA,UAAW,CACT,QAAS,6CACX,EACA,UAAW,CACT,QAAS,8CACX,EACA,UAAW,CACT,QAAS,iEACX,EACA,UAAW,CACT,QAAS,0DACX,EACA,UAAW,CACT,QAAS,mBACX,EACA,UAAW,CACT,QAAS,mBACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,+CACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,kDACX,EACA,UAAW,CACT,QAAS,sDACX,EACA,UAAW,CACT,QAAS,gDACX,EACA,UAAW,CACT,QAAS,OACX,EACA,UAAW,CACT,QAAS,wDACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,6DACX,EACA,UAAW,CACT,QAAS,yDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,sDACX,EACA,UAAW,CACT,QAAS,kBACX,EACA,UAAW,CACT,QAAS,gEACX,EACA,UAAW,CACT,QAAS,yDACX,EACA,UAAW,CACT,QAAS,sDACX,EACA,UAAW,CACT,QAAS,mDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,OACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,wBACX,EACA,UAAW,CACT,QAAS,uDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,gDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,kDACX,EACA,UAAW,CACT,QAAS,2DACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,kDACX,EACA,UAAW,CACT,QAAS,kBACX,EACA,UAAW,CACT,QAAS,2DACX,EACA,UAAW,CACT,QAAS,oBACX,EACA,UAAW,CACT,QAAS,gDACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,YAAa,CACX,QAAS,kDACX,EACA,YAAa,CACX,QAAS,OACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,kDACX,EACA,UAAW,CACT,QAAS,iDACX,EACA,UAAW,CACT,QAAS,qDACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,oDACX,EACA,UAAW,CACT,QAAS,uEACX,EACA,UAAW,CACT,QAAS,4CACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,2DACX,EACA,YAAa,CACX,QAAS,cACX,EACA,YAAa,CACX,QAAS,cACX,EACA,WAAY,CACV,QAAS,WACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,YAAa,CACX,QAAS,0BACX,EACA,YAAa,CACX,QAAS,2BACX,EACA,YAAa,CACX,QAAS,mBACX,EACA,YAAa,CACX,QAAS,QACX,EACA,UAAW,CACT,QAAS,cACX,EACA,cAAe,CACb,QAAS,eACX,EACA,YAAa,CACX,QAAS,mBACX,EACA,aAAc,CACZ,QAAS,eACX,EACA,YAAa,CACX,QAAS,cACX,EACA,aAAc,CACZ,QAAS,eACX,EACA,aAAc,CACZ,QAAS,aACX,EACA,YAAa,CACX,QAAS,WACX,EACA,aAAc,CACZ,QAAS,WACX,EACA,gBAAiB,CACf,QAAS,aACX,EACA,aAAc,CACZ,QAAS,eACX,EACA,aAAc,CACZ,QAAS,eACX,EACA,YAAa,CACX,QAAS,eACX,EACA,YAAa,CACX,QAAS,cACX,EACA,WAAY,CACV,QAAS,YACX,EACA,cAAe,CACb,QAAS,sBACX,EACA,cAAe,CACb,QAAS,qBACX,EACA,aAAc,CACZ,QAAS,qBACX,EACA,YAAa,CACX,QAAS,kBACX,EACA,aAAc,CACZ,QAAS,uBACX,EACA,aAAc,CACZ,QAAS,sBACX,EACA,aAAc,CACZ,QAAS,eACX,EACA,eAAgB,CACd,QAAS,qBACX,EACA,aAAc,CACZ,QAAS,oBACX,EACA,aAAc,CACZ,QAAS,sBACX,EACA,aAAc,CACZ,QAAS,uBACX,EACA,UAAW,CACT,QAAS,wBACX,EACA,UAAW,CACT,QAAS,6BACX,EACA,YAAa,CACX,QAAS,aACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,wBACX,EACA,UAAW,CACT,QAAS,wBACX,EACA,UAAW,CACT,QAAS,oBACX,EACA,UAAW,CACT,QAAS,mBACX,EACA,UAAW,CACT,QAAS,oBACX,EACA,UAAW,CACT,QAAS,kBACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,kBACX,EACA,UAAW,CACT,QAAS,wBACX,EACA,UAAW,CACT,QAAS,uBACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,2BACX,EACA,UAAW,CACT,QAAS,uBACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,wBACX,EACA,UAAW,CACT,QAAS,oBACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,gBACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,wBACX,EACA,UAAW,CACT,QAAS,uBACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,mBACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,oBACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,kBACX,EACA,UAAW,CACT,QAAS,mBACX,EACA,UAAW,CACT,QAAS,4BACX,EACA,UAAW,CACT,QAAS,OACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,OACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,uBACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,0BACX,EACA,UAAW,CACT,QAAS,yBACX,EACA,UAAW,CACT,QAAS,uBACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,oBACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,kBACX,EACA,UAAW,CACT,QAAS,mBACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,gBACX,EACA,UAAW,CACT,QAAS,WACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,0BACX,EACA,UAAW,CACT,QAAS,gBACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,WACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,WACX,EACA,UAAW,CACT,QAAS,uBACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,cACX,EACA,YAAa,CACX,QAAS,eACX,EACA,UAAW,CACT,QAAS,WACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,gBACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,gBACX,EACA,UAAW,CACT,QAAS,WACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,WACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,qBACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,aACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,gBACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,WACX,EACA,UAAW,CACT,QAAS,aACX,EACA,WAAY,CACV,QAAS,eACX,EACA,WAAY,CACV,QAAS,YACX,EACA,WAAY,CACV,QAAS,eACX,EACA,UAAW,CACT,QAAS,eACX,EACA,YAAa,CACX,QAAS,cACX,EACA,UAAW,CACT,QAAS,YACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,sBACX,EACA,UAAW,CACT,QAAS,eACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,cACX,EACA,UAAW,CACT,QAAS,eACX,EACA,cAAe,CACb,QAAS,OACX,EACA,cAAe,CACb,QAAS,OACX,EACA,gBAAiB,CACf,QAAS,OACX,EACA,iBAAkB,CAChB,QAAS,OACX,EACA,eAAgB,CACd,QAAS,OACX,EACA,WAAY,CACV,QAAS,OACX,EACA,aAAc,CACZ,QAAS,OACX,EACA,aAAc,CACZ,QAAS,OACX,EACA,cAAe,CACbtB,IAAI,EAAQ,CAAM,CAAC,EAAI,AAClB,GAAM,SAAS,EAGpB,EAAM,CAAC,EAAM,SAAS,CAAC,CAAG,CAAI,CAChC,CCxtCA,MApCA,SAAe,CAAS,CAAE,CAAY,CAAE,CAAC,CAAE,CAAC,CAAEE,CAAE,CAAE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"}