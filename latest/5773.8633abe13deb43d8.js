"use strict";(self.webpackChunk_terrestris_shogun_gis_client=self.webpackChunk_terrestris_shogun_gis_client||[]).push([["5773"],{5007:function(e,t,r){r.r(t),r.d(t,{default:function(){return f}});var o=r("23068"),n=r("32538"),i=r("38667"),a=r("13580"),s=r("5374"),u=r("4313"),c=r("18334"),l=r("49179");class p extends c.ZP{constructor(){super()}getType(){return"json"}readFeature(e,t){return this.readFeatureFromObject(y(e),this.getReadOptions(e,t))}readFeatures(e,t){return this.readFeaturesFromObject(y(e),this.getReadOptions(e,t))}readFeatureFromObject(e,t){return(0,l.abstract)()}readFeaturesFromObject(e,t){return(0,l.abstract)()}readGeometry(e,t){return this.readGeometryFromObject(y(e),this.getReadOptions(e,t))}readGeometryFromObject(e,t){return(0,l.abstract)()}readProjection(e){return this.readProjectionFromObject(y(e))}readProjectionFromObject(e){return(0,l.abstract)()}writeFeature(e,t){return JSON.stringify(this.writeFeatureObject(e,t))}writeFeatureObject(e,t){return(0,l.abstract)()}writeFeatures(e,t){return JSON.stringify(this.writeFeaturesObject(e,t))}writeFeaturesObject(e,t){return(0,l.abstract)()}writeGeometry(e,t){return JSON.stringify(this.writeGeometryObject(e,t))}writeGeometryObject(e,t){return(0,l.abstract)()}}function y(e){if("string"==typeof e){let t=JSON.parse(e);return t||null}return null!==e?e:null}var d=p;function g(e,t){let r;if(!e)return null;switch(e.type){case"Point":r=function(e){let t=e.coordinates;return{type:"Point",flatCoordinates:t,layout:(0,n.Ss)(t.length)}}(e);break;case"LineString":r=function(e){let t=e.coordinates,r=t.flat();return{type:"LineString",flatCoordinates:r,ends:[r.length],layout:(0,n.Ss)(t[0]?.length||2)}}(e);break;case"Polygon":r=function(e){let t=e.coordinates,r=[],o=t[0]?.[0]?.length,a=(0,i._5)(r,0,t,o);return{type:"Polygon",flatCoordinates:r,ends:a,layout:(0,n.Ss)(o)}}(e);break;case"MultiPoint":r=function(e){let t=e.coordinates;return{type:"MultiPoint",flatCoordinates:t.flat(),layout:(0,n.Ss)(t[0]?.length||2)}}(e);break;case"MultiLineString":r=function(e){let t=e.coordinates,r=t[0]?.[0]?.length||2,o=[],a=(0,i._5)(o,0,t,r);return{type:"MultiLineString",flatCoordinates:o,ends:a,layout:(0,n.Ss)(r)}}(e);break;case"MultiPolygon":r=function(e){let t=e.coordinates,r=[],o=t[0]?.[0]?.[0].length||2,a=(0,i.QT)(r,0,t,o);return{type:"MultiPolygon",flatCoordinates:r,ends:a,layout:(0,n.Ss)(o)}}(e);break;case"GeometryCollection":r=function(e,t){return e.geometries.map(function(e){return g(e,t)})}(e);break;default:throw Error("Unsupported GeoJSON type: "+e.type)}return r}function m(e,t){let r;let o=(e=(0,c.fI)(e,!0,t)).getType();switch(o){case"Point":r=function(e,t){return{type:"Point",coordinates:e.getCoordinates()}}(e,t);break;case"LineString":r=function(e,t){return{type:"LineString",coordinates:e.getCoordinates()}}(e,t);break;case"Polygon":r=function(e,t){let r;return t&&(r=t.rightHanded),{type:"Polygon",coordinates:e.getCoordinates(r)}}(e,t);break;case"MultiPoint":r=function(e,t){return{type:"MultiPoint",coordinates:e.getCoordinates()}}(e,t);break;case"MultiLineString":r=function(e,t){return{type:"MultiLineString",coordinates:e.getCoordinates()}}(e,t);break;case"MultiPolygon":r=function(e,t){let r;return t&&(r=t.rightHanded),{type:"MultiPolygon",coordinates:e.getCoordinates(r)}}(e,t);break;case"GeometryCollection":r=function(e,t){return t=Object.assign({},t),delete t.featureProjection,{type:"GeometryCollection",geometries:e.getGeometriesArray().map(function(e){return m(e,t)})}}(e,t);break;case"Circle":r={type:"GeometryCollection",geometries:[]};break;default:throw Error("Unsupported geometry type: "+o)}return r}var f=class e extends d{constructor(e){e=e||{},super(),this.dataProjection=(0,s.get)(e.dataProjection?e.dataProjection:"EPSG:4326"),e.featureProjection&&(this.defaultFeatureProjection=(0,s.get)(e.featureProjection)),e.featureClass&&(this.featureClass=e.featureClass),this.geometryName_=e.geometryName,this.extractGeometryName_=e.extractGeometryName,this.supportedMediaTypes=["application/geo+json","application/vnd.geo+json"]}readFeatureFromObject(e,t){let r=null,n=g((r="Feature"===e.type?e:{type:"Feature",geometry:e,properties:null}).geometry,t);if(this.featureClass===u.default)return(0,c.zg)({geometry:n,id:r.id,properties:r.properties},t);let i=new o.default;return this.geometryName_?i.setGeometryName(this.geometryName_):this.extractGeometryName_&&r.geometry_name&&i.setGeometryName(r.geometry_name),i.setGeometry((0,c.YU)(n,t)),"id"in r&&i.setId(r.id),r.properties&&i.setProperties(r.properties,!0),i}readFeaturesFromObject(e,t){let r=null;if("FeatureCollection"===e.type){r=[];let o=e.features;for(let e=0,n=o.length;e<n;++e){let n=this.readFeatureFromObject(o[e],t);if(!!n)r.push(n)}}else r=[this.readFeatureFromObject(e,t)];return r.flat()}readGeometryFromObject(e,t){return function(e,t){let r=g(e,t);return(0,c.YU)(r,t)}(e,t)}readProjectionFromObject(e){let t;let r=e.crs;if(r){if("name"==r.type)t=(0,s.get)(r.properties.name);else if("EPSG"===r.type)t=(0,s.get)("EPSG:"+r.properties.code);else throw Error("Unknown SRS type")}else t=this.dataProjection;return t}writeFeatureObject(e,t){t=this.adaptOptions(t);let r={type:"Feature",geometry:null,properties:null},o=e.getId();if(void 0!==o&&(r.id=o),!e.hasProperties())return r;let n=e.getProperties(),i=e.getGeometry();return i&&(r.geometry=m(i,t),delete n[e.getGeometryName()]),!(0,a.x)(n)&&(r.properties=n),r}writeFeaturesObject(e,t){t=this.adaptOptions(t);let r=[];for(let o=0,n=e.length;o<n;++o)r.push(this.writeFeatureObject(e[o],t));return{type:"FeatureCollection",features:r}}writeGeometryObject(e,t){return m(e,this.adaptOptions(t))}}}}]);
//# sourceMappingURL=5773.8633abe13deb43d8.js.map