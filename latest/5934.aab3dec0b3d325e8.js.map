{"version":3,"file":"5934.aab3dec0b3d325e8.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/MapBrowserEventType.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/array.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/asserts.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/events/EventType.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/events/condition.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/functions.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/has.js"],"sourcesContent":["/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n"],"names":["binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","a","b","descending","linearFindNearest","arr","target","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","length","equals","arr1","arr2","len1","isSorted","func","strict","compare","currentVal","index","res","assert","assertion","errorMessage","Error","all","var_args","conditions","arguments","event","pass","ii","altKeyOnly","mapBrowserEvent","originalEvent","altShiftKeysOnly","focus","targetElement","rootNode","activeElement","ShadowRoot","focusWithTabindex","tabIndexCandidate","always","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerEvent","undefined","touchOnly","pointerEvt","penOnly","primaryAction","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","toPromise","getter","promiseGetter","value","err","Promise","ua","navigator","FIREFOX","SAFARI","SAFARI_BUG_237906","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","passive","options","Object","window"],"mappings":"qKASA,KAAe,CAOb,YAAa,cAOb,MAAO,eAAe,CAOtB,SAAU,kBAAkB,CAO5B,YAAa,cAQb,YAAa,cAEb,YAAa,cACb,UAAW,YACX,YAAa,cACb,WAAY,aACZ,aAAc,eACd,aAAc,eACd,cAAe,eACjB,C,wBCzCO,SAASA,EAAaC,CAAQ,CAAEC,CAAM,CAAEC,CAAU,MACnDC,EAAKC,EACTF,EAAaA,GAAcG,EAC3B,IAAIC,EAAM,EACNC,EAAOP,EAAS,MAAM,CACtBQ,EAAQ,GAEZ,KAAOF,EAAMC,GAMPH,AAFJA,CAAAA,EAAM,CAACF,EAAWF,CAAQ,CAD1BG,EAAMG,EAAO,CAACC,EAAOD,GAAQ,GACE,CAAEL,EAAM,EAE7B,EAERK,EAAMH,EAAM,GAGZI,EAAOJ,EACPK,EAAQ,CAACJ,GAKb,OAAOI,EAAQF,EAAM,CAACA,CACxB,CASO,SAASD,EAAUI,CAAC,CAAEC,CAAC,EAC5B,OAAOD,EAAIC,EAAI,EAAID,EAAIC,EAAI,GAAK,CAClC,CASO,SAASC,EAAWF,CAAC,CAAEC,CAAC,EAC7B,OAAOD,EAAIC,EAAI,EAAID,EAAIC,EAAI,GAAK,CAClC,CAyBO,SAASE,EAAkBC,CAAG,CAAEC,CAAM,CAAEC,CAAS,EACtD,GAAIF,CAAG,CAAC,EAAE,EAAIC,EACZ,OAAO,EAGT,IAAME,EAAIH,EAAI,MAAM,CACpB,GAAIC,GAAUD,CAAG,CAACG,EAAI,EAAE,CACtB,OAAOA,EAAI,EAGb,GAAI,AAAqB,YAArB,OAAOD,EAA0B,CACnC,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAG,EAAEC,EAAG,CAC1B,IAAMC,EAAYL,CAAG,CAACI,EAAE,CACxB,GAAIC,IAAcJ,EAChB,OAAOG,EAET,GAAIC,EAAYJ,EAAQ,CACtB,GAAIC,EAAUD,EAAQD,CAAG,CAACI,EAAI,EAAE,CAAEC,GAAa,EAC7C,OAAOD,EAAI,EAEb,OAAOA,CACT,CACF,CACA,OAAOD,EAAI,CACb,CAEA,GAAID,EAAY,EAAG,CACjB,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAG,EAAEC,EACvB,GAAIJ,CAAG,CAACI,EAAE,CAAGH,EACX,OAAOG,EAAI,EAGf,OAAOD,EAAI,CACb,CAEA,GAAID,EAAY,EAAG,CACjB,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAG,EAAEC,EACvB,GAAIJ,CAAG,CAACI,EAAE,EAAIH,EACZ,OAAOG,EAGX,OAAOD,EAAI,CACb,CAEA,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAG,EAAEC,EAAG,CAC1B,GAAIJ,CAAG,CAACI,EAAE,EAAIH,EACZ,OAAOG,EAET,GAAIJ,CAAG,CAACI,EAAE,CAAGH,EAAQ,CACnB,GAAID,CAAG,CAACI,EAAI,EAAE,CAAGH,EAASA,EAASD,CAAG,CAACI,EAAE,CACvC,OAAOA,EAAI,EAEb,OAAOA,CACT,CACF,CACA,OAAOD,EAAI,CACb,CAOO,SAASG,EAAgBN,CAAG,CAAEO,CAAK,CAAEC,CAAG,EAC7C,KAAOD,EAAQC,GAAK,CAClB,IAAMC,EAAMT,CAAG,CAACO,EAAM,AACtBP,CAAAA,CAAG,CAACO,EAAM,CAAGP,CAAG,CAACQ,EAAI,CACrBR,CAAG,CAACQ,EAAI,CAAGC,EACX,EAAEF,EACF,EAAEC,CACJ,CACF,CAOO,SAASE,EAAOV,CAAG,CAAEW,CAAI,EAC9B,IAAMC,EAAYC,MAAM,OAAO,CAACF,GAAQA,EAAO,CAACA,EAAK,CAC/CG,EAASF,EAAU,MAAM,CAC/B,IAAK,IAAIR,EAAI,EAAGA,EAAIU,EAAQV,IAC1BJ,CAAG,CAACA,EAAI,MAAM,CAAC,CAAGY,CAAS,CAACR,EAAE,AAElC,CAsBO,SAASW,EAAOC,CAAI,CAAEC,CAAI,EAC/B,IAAMC,EAAOF,EAAK,MAAM,CACxB,GAAIE,IAASD,EAAK,MAAM,CACtB,MAAO,GAET,IAAK,IAAIb,EAAI,EAAGA,EAAIc,EAAMd,IACxB,GAAIY,CAAI,CAACZ,EAAE,GAAKa,CAAI,CAACb,EAAE,CACrB,MAAO,GAGX,MAAO,EACT,CA8BO,SAASe,EAASnB,CAAG,CAAEoB,CAAI,CAAEC,CAAM,EACxC,IAAMC,EAAUF,GAAQ5B,EACxB,OAAOQ,EAAI,KAAK,CAAC,SAAUuB,CAAU,CAAEC,CAAK,EAC1C,GAAIA,AAAU,IAAVA,EACF,MAAO,GAET,IAAMC,EAAMH,EAAQtB,CAAG,CAACwB,EAAQ,EAAE,CAAED,GACpC,MAAO,CAAEE,CAAAA,EAAM,GAAMJ,GAAUI,AAAQ,IAARA,CAAS,CAC1C,EACF,C,gQCzOO,SAASC,EAAOC,CAAS,CAAEC,CAAY,EAC5C,GAAI,CAACD,EACH,MAAM,AAAIE,MAAMD,EAEpB,C,+BCJA,UAAe,CAMb,OAAQ,SAOR,MAAO,QAEP,KAAM,OACN,MAAO,QACP,YAAa,cACb,MAAO,QACP,SAAU,WACV,UAAW,YACX,SAAU,WACV,KAAM,OACN,MAAO,QACP,QAAS,UACT,SAAU,WACV,KAAM,OACN,OAAQ,SACR,UAAW,YACX,MAAO,OACT,C,sxBClBO,SAASE,EAAIC,CAAQ,EAC1B,IAAMC,EAAaC,UAKnB,OAAO,SAAUC,CAAK,EACpB,IAAIC,EAAO,GACX,IAAK,IAAI/B,EAAI,EAAGgC,EAAKJ,EAAW,MAAM,CAAE5B,EAAIgC,GAC1CD,CAAAA,EAAOA,GAAQH,CAAU,CAAC5B,EAAE,CAAC8B,EAAK,EADY,EAAE9B,GAMlD,OAAO+B,CACT,CACF,CAUO,IAAME,EAAa,SAAUC,CAAe,EACjD,IAAMC,EACJD,EAAgB,aAAa,CAE/B,OACEC,EAAc,MAAM,EACpB,CAAEA,CAAAA,EAAc,OAAO,EAAIA,EAAc,OAAO,AAAD,GAC/C,CAACA,EAAc,QAAQ,AAE3B,EAUaC,EAAmB,SAAUF,CAAe,EACvD,IAAMC,EACJD,EAAgB,aAAa,CAE/B,OACEC,EAAc,MAAM,EACpB,CAAEA,CAAAA,EAAc,OAAO,EAAIA,EAAc,OAAO,AAAD,GAC/CA,EAAc,QAAQ,AAE1B,EAUaE,EAAQ,SAAUP,CAAK,EAClC,IAAMQ,EAAgBR,EAAM,GAAG,CAAC,gBAAgB,GAC1CS,EAAWD,EAAc,WAAW,GACpCE,EAAgBV,EAAM,GAAG,CAAC,gBAAgB,GAAG,aAAa,CAEhE,OAAOS,aAAoBE,WACvBF,EAAS,IAAI,CAAC,QAAQ,CAACC,GACvBF,EAAc,QAAQ,CAACE,EAC7B,EAQaE,EAAoB,SAAUZ,CAAK,EAC9C,IAAMQ,EAAgBR,EAAM,GAAG,CAAC,gBAAgB,GAC1CS,EAAWD,EAAc,WAAW,GAI1C,MAAOK,CAAAA,AAFLJ,CAAAA,aAAoBE,WAAaF,EAAS,IAAI,CAAGD,CAAY,EAEtC,YAAY,CAAC,aAAcD,EAAMP,EAC5D,EASac,EAAS,MAAI,CASbC,EAAQ,SAAUX,CAAe,EAC5C,OAAOA,EAAgB,IAAI,EAAI,SAAyB,AAC1D,EAWaY,EAAoB,SAAUZ,CAAe,EACxD,IAAMC,EACJD,EAAgB,aAAa,CAE/B,OAAOC,AAAwB,GAAxBA,EAAc,MAAM,EAAS,CAAE,SAAM,EAAI,KAAG,EAAIA,EAAc,OAAO,AAAD,CAC7E,EASaY,EAAQ,OAAK,CAUbC,EAAc,SAAUd,CAAe,EAClD,MAAOA,AAAwB,eAAxBA,EAAgB,IAAI,AAC7B,EASae,EAAc,SAAUf,CAAe,EAClD,OAAOA,EAAgB,IAAI,EAAI,eAA+B,AAChE,EASagB,EAAc,SAAUhB,CAAe,EAClD,OAAOA,EAAgB,IAAI,EAAI,YAA4B,AAC7D,EAUaiB,EAAiB,SAAUjB,CAAe,EACrD,IAAMC,EACJD,EAAgB,aAAa,CAE/B,MACE,CAACC,EAAc,MAAM,EACrB,CAAEA,CAAAA,EAAc,OAAO,EAAIA,EAAc,OAAO,AAAD,GAC/C,CAACA,EAAc,QAAQ,AAE3B,EAWaiB,EAA0B,SAAUlB,CAAe,EAC9D,IAAMC,EACJD,EAAgB,aAAa,CAE/B,MACE,CAACC,EAAc,MAAM,EACpB,MAAG,CAAGA,EAAc,OAAO,CAAGA,EAAc,OAAO,AAAD,GACnD,CAACA,EAAc,QAAQ,AAE3B,EAUakB,EAAsB,SAAUnB,CAAe,EAC1D,IAAMC,EACJD,EAAgB,aAAa,CAE/B,OAAO,KAAG,CAAGC,EAAc,OAAO,CAAGA,EAAc,OAAO,AAC5D,EAUamB,EAAe,SAAUpB,CAAe,EACnD,IAAMC,EACJD,EAAgB,aAAa,CAE/B,MACE,CAACC,EAAc,MAAM,EACrB,CAAEA,CAAAA,EAAc,OAAO,EAAIA,EAAc,OAAO,AAAD,GAC/CA,EAAc,QAAQ,AAE1B,EAWaoB,EAAoB,SAAUrB,CAAe,EACxD,IAAMC,EACJD,EAAgB,aAAa,CAEzBsB,EAAiC,AAACrB,EAAc,MAAM,CAAE,OAAO,CACrE,MACEqB,AAAY,UAAZA,GACAA,AAAY,WAAZA,GACAA,AAAY,aAAZA,GAIA,CAACrB,EAAc,MAAM,CAAC,iBAAiB,AAE3C,EASasB,EAAY,SAAUvB,CAAe,EAChD,IAAMwB,EAAmE,AACvExB,EACA,aAAa,CAMf,MALA,QACEwB,AAAiBC,KAAAA,IAAjBD,EACA,uDAGKA,AAA4B,SAA5BA,EAAa,WAAW,AACjC,EASaE,EAAY,SAAU1B,CAAe,EAChD,IAAM2B,EAAiE,AACrE3B,EACA,aAAa,CAMf,MALA,QACE2B,AAAeF,KAAAA,IAAfE,EACA,uDAGKA,AAA2B,UAA3BA,EAAW,WAAW,AAC/B,EASaC,EAAU,SAAU5B,CAAe,EAC9C,IAAM2B,EAAiE,AACrE3B,EACA,aAAa,CAMf,MALA,QACE2B,AAAeF,KAAAA,IAAfE,EACA,uDAGKA,AAA2B,QAA3BA,EAAW,WAAW,AAC/B,EAWaE,EAAgB,SAAU7B,CAAe,EACpD,IAAMwB,EAAmE,AACvExB,EACA,aAAa,CAKf,MAJA,QACEwB,AAAiBC,KAAAA,IAAjBD,EACA,uDAEKA,EAAa,SAAS,EAAIA,AAAwB,IAAxBA,EAAa,MAAM,AACtD,C,qMC/VO,SAASM,IACd,MAAO,EACT,CAMO,SAASC,IACd,MAAO,EACT,CAOO,SAASC,IAAQ,CAWjB,SAASC,EAAWC,CAAE,EAE3B,IAAIC,EAGAC,EAEAC,EAMJ,OAAO,WACL,IAAMC,EAAW/D,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAACoB,WAM5C,OALKyC,GAAY,IAAI,GAAKC,GAAa,SAAYC,EAAUF,KAC3DC,EAAW,IAAI,CACfD,EAAWE,EACXH,EAAaD,EAAG,KAAK,CAAC,IAAI,CAAEvC,YAEvBwC,CACT,CACF,CAOO,SAASI,EAAUC,CAAM,EAa9B,OAAOC,AAZP,WACE,IAAIC,EACJ,GAAI,CACFA,EAAQF,GACV,CAAE,MAAOG,EAAK,CACZ,OAAOC,QAAQ,MAAM,CAACD,EACxB,QACA,AAAID,aAAiBE,QACZF,EAEFE,QAAQ,OAAO,CAACF,EACzB,GAEF,C,0YC7EA,IAAMG,EACJ,AAAqB,aAArB,OAAOC,WAA6B,AAA+B,SAAxBA,UAAU,SAAS,CAC1DA,UAAU,SAAS,CAAC,WAAW,GAC/B,GAMOC,EAAUF,EAAG,QAAQ,CAAC,WAMtBG,EAASH,EAAG,QAAQ,CAAC,WAAa,CAACA,EAAG,QAAQ,CAAC,SAM/CI,EACXD,GACCH,CAAAA,EAAG,QAAQ,CAAC,iBACX,wCAAwC,IAAI,CAACA,EAAE,EAMtCK,EAASL,EAAG,QAAQ,CAAC,WAAa,CAACA,EAAG,QAAQ,CAAC,QAM/CM,EAAMN,EAAG,QAAQ,CAAC,aASlBO,EACX,AAA4B,aAA5B,OAAOC,iBAAmCA,iBAAmB,EAOlDC,EACX,AAA6B,aAA7B,OAAOC,mBACP,AAA2B,aAA3B,OAAOC,iBACPC,gBAAgBF,kBAMLG,EACX,AAAiB,aAAjB,OAAOC,OAAyBA,MAAM,SAAS,CAAC,MAAM,CAM3CC,EAAsB,AAA6B,YAA7B,OAAOC,kBAK7BC,EAA0B,AAAC,WACtC,IAAIC,EAAU,GACd,GAAI,CACF,IAAMC,EAAUC,OAAO,cAAc,CAAC,CAAC,EAAG,UAAW,CACnD,IAAK,WACHF,EAAU,EACZ,CACF,GAGAG,OAAO,gBAAgB,CAAC,IAAK,KAAMF,GAEnCE,OAAO,mBAAmB,CAAC,IAAK,KAAMF,EACxC,CAAE,KAAM,CAER,CACA,OAAOD,CACT,G"}