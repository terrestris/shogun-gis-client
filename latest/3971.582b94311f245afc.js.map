{"version":3,"file":"3971.582b94311f245afc.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-geo/dist/Slider/TimeSlider/TimeSlider.js","webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-geo/dist/constants.js","webpack://@terrestris/shogun-gis-client/./node_modules/antd/es/_util/reactNode.js","webpack://@terrestris/shogun-gis-client/./node_modules/antd/es/theme/interface/presetColors.js","webpack://@terrestris/shogun-gis-client/./node_modules/lodash/isArray.js"],"sourcesContent":["import { Slider } from 'antd';\nimport _isArray from 'lodash/isArray';\nimport moment from 'moment';\nimport React from 'react';\nimport { CSS_PREFIX } from '../../constants';\nconst TimeSlider = ({ useRange = false, defaultValue = moment().toISOString(), min = moment().subtract(1, 'hour').toISOString(), max = moment().toISOString(), onChange = () => undefined, value = moment().toISOString(), formatString = 'DD.MM. HH:mm', className, marks, ...passThroughProps }) => {\n    const convert = (val) => {\n        return _isArray(val)\n            ? val.map(iso => moment(iso).unix())\n            : moment(val).unix();\n    };\n    const convertMarks = (mks) => {\n        if (!mks) {\n            return;\n        }\n        let convertedMks = {};\n        Object.keys(mks).forEach((key) => {\n            if (!convertedMks) {\n                return;\n            }\n            const convertedKey = convert([key]); // Assuming key is ISOString\n            convertedMks[convertedKey] = mks[key];\n        });\n        return convertedMks;\n    };\n    const formatTimestamp = (unix) => {\n        return unix ? moment(unix * 1000).format(formatString) : '';\n    };\n    const valueUpdated = (val) => {\n        onChange(_isArray(val)\n            ? [\n                moment(val[0] * 1000).toISOString(),\n                moment(val[1] * 1000).toISOString()\n            ]\n            : moment(val * 1000).toISOString());\n    };\n    const finalClassName = className\n        ? `${className} ${CSS_PREFIX}timeslider`\n        : `${CSS_PREFIX}timeslider`;\n    const convertedMarks = convertMarks(marks);\n    return useRange ? (React.createElement(Slider, { className: finalClassName, defaultValue: convert(defaultValue), range: true, min: moment(min).unix(), max: moment(max).unix(), tooltip: { formatter: val => formatTimestamp(val) }, onChange: (val) => valueUpdated(val), value: convert(value), marks: convertedMarks, ...passThroughProps })) : (React.createElement(Slider, { className: finalClassName, defaultValue: convert(defaultValue), range: false, min: moment(min).unix(), max: moment(max).unix(), tooltip: {\n            formatter: val => formatTimestamp(val)\n        }, onChange: (val) => valueUpdated(val), value: convert(value), marks: convertedMarks, ...passThroughProps }));\n};\nexport default TimeSlider;\n//# sourceMappingURL=TimeSlider.js.map","const CSS_PREFIX = 'react-geo-';\nexport { CSS_PREFIX };\n//# sourceMappingURL=constants.js.map","import React from 'react';\nexport function isFragment(child) {\n  return child && /*#__PURE__*/React.isValidElement(child) && child.type === React.Fragment;\n}\nexport const replaceElement = (element, replacement, props) => {\n  if (! /*#__PURE__*/React.isValidElement(element)) {\n    return replacement;\n  }\n  return /*#__PURE__*/React.cloneElement(element, typeof props === 'function' ? props(element.props || {}) : props);\n};\nexport function cloneElement(element, props) {\n  return replaceElement(element, element, props);\n}","export const PresetColors = ['blue', 'purple', 'cyan', 'green', 'magenta', 'pink', 'red', 'orange', 'yellow', 'volcano', 'geekblue', 'lime', 'gold'];","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n"],"names":["e","c","Object","Array"],"mappings":"gPA4CAA,CAAAA,EAAA,QAvCmB,CAAC,CAAE,WAAW,EAAK,CAAE,eAAe,MAAS,WAAW,EAAE,CAAE,MAAM,MAAS,QAAQ,CAAC,EAAG,QAAQ,WAAW,EAAE,CAAE,MAAM,MAAS,WAAW,EAAE,CAAE,WAAW,IAAM,MAAS,CAAE,QAAQ,MAAS,WAAW,EAAE,CAAE,eAAe,cAAc,CAAEC,UAAAA,CAAS,CAAE,OAAK,CAAE,GAAG,EAAkB,IAC7R,IAAM,EAAU,AAAC,GACN,IAAS,GACV,EAAI,GAAG,CAAC,GAAO,IAAO,GAAK,IAAI,IAC/B,IAAO,GAAK,IAAI,GAgBpB,EAAkB,AAAC,GACd,EAAO,IAAO,AAAO,IAAP,GAAa,MAAM,CAAC,GAAgB,GAEvD,EAAe,AAAC,IAClB,EAAS,IAAS,GACZ,CACE,IAAO,AAAS,IAAT,CAAG,CAAC,EAAE,EAAS,WAAW,GACjC,IAAO,AAAS,IAAT,CAAG,CAAC,EAAE,EAAS,WAAW,GACpC,CACC,IAAO,AAAM,IAAN,GAAY,WAAW,GACxC,EACM,EAAiBA,EACjB,CAAC,EAAEA,EAAU,CAAC,EAAE,GAAU,CAAC,UAAU,CAAC,CACtC,CAAC,EAAE,GAAU,CAAC,UAAU,CAAC,CACzB,EAAiB,AA5BF,CAAC,IAClB,GAAI,CAAC,EACD,OAEJ,IAAI,EAAe,CAAC,EAQpB,OAPAC,OAAO,IAAI,CAAC,GAAK,OAAO,CAAC,AAAC,IACjB,GAIL,EAAY,CADS,EAAQ,CAAC,EAAI,EACR,CAAG,CAAG,CAAC,EAAI,AAAD,CACxC,GACO,CACX,GAeoC,GACpC,OAAO,EAAY,iBAAmB,CAAC,GAAM,CAAE,CAAE,UAAW,EAAgB,aAAc,EAAQ,GAAe,MAAO,GAAM,IAAK,IAAO,GAAK,IAAI,GAAI,IAAK,IAAO,GAAK,IAAI,GAAI,QAAS,CAAE,UAAW,GAAO,EAAgB,EAAK,EAAG,SAAU,AAAC,GAAQ,EAAa,GAAM,MAAO,EAAQ,GAAQ,MAAO,EAAgB,GAAG,CAAgB,AAAC,GAAO,iBAAmB,CAAC,GAAM,CAAE,CAAE,UAAW,EAAgB,aAAc,EAAQ,GAAe,MAAO,GAAO,IAAK,IAAO,GAAK,IAAI,GAAI,IAAK,IAAO,GAAK,IAAI,GAAI,QAAS,CACnf,UAAW,GAAO,EAAgB,EACtC,EAAG,SAAU,AAAC,GAAQ,EAAa,GAAM,MAAO,EAAQ,GAAQ,MAAO,EAAgB,GAAG,CAAgB,AAAC,EACnH,C,qEC3CA,IAAM,EAAa,Y,6ICCZ,SAAS,EAAW,CAAK,EAC9B,OAAO,GAAsB,kBAAoB,CAAC,IAAU,EAAM,IAAI,GAAK,YAC7E,CACO,IAAM,EAAiB,CAAC,EAAS,EAAa,IACnD,AAAmB,kBAAoB,CAAC,GAGpB,gBAAkB,CAAC,EAAS,AAAiB,YAAjB,OAAO,EAAuB,EAAM,EAAQ,KAAK,EAAI,CAAC,GAAK,GAFlG,EAIJ,SAAS,EAAa,CAAO,CAAE,CAAK,EACzC,OAAO,EAAe,EAAS,EAAS,EAC1C,C,oECZO,IAAM,EAAe,CAAC,OAAQ,SAAU,OAAQ,QAAS,UAAW,OAAQ,MAAO,SAAU,SAAU,UAAW,WAAY,OAAQ,OAAO,A,mBCyBpJ,EAAO,OAAO,CAFAC,MAAM,OAAO,A"}