{"version":3,"file":"8709.c75115a1de0b96f4.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/pbf/index.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/format/MVT.js"],"sourcesContent":["\nconst SHIFT_LEFT_32 = (1 << 16) * (1 << 16);\nconst SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nconst TEXT_DECODER_MIN_LENGTH = 12;\nconst utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8');\n\nconst PBF_VARINT  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nconst PBF_FIXED64 = 1; // 64-bit: double, fixed64, sfixed64\nconst PBF_BYTES   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nconst PBF_FIXED32 = 5; // 32-bit: float, fixed32, sfixed32\n\nexport default class Pbf {\n    /**\n     * @param {Uint8Array | ArrayBuffer} [buf]\n     */\n    constructor(buf = new Uint8Array(16)) {\n        this.buf = ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf);\n        this.dataView = new DataView(this.buf.buffer);\n        this.pos = 0;\n        this.type = 0;\n        this.length = this.buf.length;\n    }\n\n    // === READING =================================================================\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     * @param {number} [end]\n     */\n    readFields(readField, result, end = this.length) {\n        while (this.pos < end) {\n            const val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    }\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     */\n    readMessage(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    }\n\n    readFixed32() {\n        const val = this.dataView.getUint32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readSFixed32() {\n        const val = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getUint32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readSFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getInt32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readFloat() {\n        const val = this.dataView.getFloat32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readDouble() {\n        const val = this.dataView.getFloat64(this.pos, true);\n        this.pos += 8;\n        return val;\n    }\n\n    /**\n     * @param {boolean} [isSigned]\n     */\n    readVarint(isSigned) {\n        const buf = this.buf;\n        let val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    }\n\n    readVarint64() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    }\n\n    readSVarint() {\n        const num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    }\n\n    readBoolean() {\n        return Boolean(this.readVarint());\n    }\n\n    readString() {\n        const end = this.readVarint() + this.pos;\n        const pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return utf8TextDecoder.decode(this.buf.subarray(pos, end));\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    }\n\n    readBytes() {\n        const end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    }\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    /**\n     * @param {number[]} [arr]\n     * @param {boolean} [isSigned]\n     */\n    readPackedVarint(arr = [], isSigned) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSVarint(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    }\n    /** @param {boolean[]} [arr] */\n    readPackedBoolean(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFloat(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedDouble(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    }\n    readPackedEnd() {\n        return this.type === PBF_BYTES ? this.readVarint() + this.pos : this.pos + 1;\n    }\n\n    /** @param {number} val */\n    skip(val) {\n        const type = val & 0x7;\n        if (type === PBF_VARINT) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === PBF_BYTES) this.pos = this.readVarint() + this.pos;\n        else if (type === PBF_FIXED32) this.pos += 4;\n        else if (type === PBF_FIXED64) this.pos += 8;\n        else throw new Error(`Unimplemented type: ${type}`);\n    }\n\n    // === WRITING =================================================================\n\n    /**\n     * @param {number} tag\n     * @param {number} type\n     */\n    writeTag(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    }\n\n    /** @param {number} min */\n    realloc(min) {\n        let length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            const buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.dataView = new DataView(buf.buffer);\n            this.length = length;\n        }\n    }\n\n    finish() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    }\n\n    /** @param {number} val */\n    writeFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeSFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeSFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeVarint(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    }\n\n    /** @param {number} val */\n    writeSVarint(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    }\n\n    /** @param {boolean} val */\n    writeBoolean(val) {\n        this.writeVarint(+val);\n    }\n\n    /** @param {string} str */\n    writeString(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        const startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /** @param {number} val */\n    writeFloat(val) {\n        this.realloc(4);\n        this.dataView.setFloat32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeDouble(val) {\n        this.realloc(8);\n        this.dataView.setFloat64(this.pos, val, true);\n        this.pos += 8;\n    }\n\n    /** @param {Uint8Array} buffer */\n    writeBytes(buffer) {\n        const len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (let i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    }\n\n    /**\n     * @template T\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeRawMessage(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        const startPos = this.pos;\n        fn(obj, this);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /**\n     * @template T\n     * @param {number} tag\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeMessage(tag, fn, obj) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeRawMessage(fn, obj);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean[]} arr\n     */\n    writePackedBoolean(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFloat(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFloat, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedDouble(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedDouble, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {Uint8Array} buffer\n     */\n    writeBytesField(tag, buffer) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeBytes(buffer);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeSFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeSFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeSVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {string} str\n     */\n    writeStringField(tag, str) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeString(str);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFloatField(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFloat(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeDoubleField(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeDouble(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean} val\n     */\n    writeBooleanField(tag, val) {\n        this.writeVarintField(tag, +val);\n    }\n};\n\n/**\n * @param {number} l\n * @param {boolean | undefined} s\n * @param {Pbf} p\n */\nfunction readVarintRemainder(l, s, p) {\n    const buf = p.buf;\n    let h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {boolean} [isSigned]\n */\nfunction toNum(low, high, isSigned) {\n    return isSigned ? high * 0x100000000 + (low >>> 0) : ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\n/**\n * @param {number} val\n * @param {Pbf} pbf\n */\nfunction writeBigVarint(val, pbf) {\n    let low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\n/**\n * @param {number} high\n * @param {number} low\n * @param {Pbf} pbf\n */\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\n/**\n * @param {number} high\n * @param {Pbf} pbf\n */\nfunction writeBigVarintHigh(high, pbf) {\n    const lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\n/**\n * @param {number} startPos\n * @param {number} len\n * @param {Pbf} pbf\n */\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    const extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (let i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFloat(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedDouble(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);\n}\n/**\n * @param {boolean[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedBoolean(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]);\n}\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\n/**\n * @param {Uint8Array} buf\n * @param {number} pos\n * @param {number} end\n */\nfunction readUtf8(buf, pos, end) {\n    let str = '';\n    let i = pos;\n\n    while (i < end) {\n        const b0 = buf[i];\n        let c = null; // codepoint\n        let bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        let b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\n/**\n * @param {Uint8Array} buf\n * @param {string} str\n * @param {number} pos\n */\nfunction writeUtf8(buf, str, pos) {\n    for (let i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=RenderFeature]\n * @extends {FeatureFormat<FeatureType>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    this.featureClass = options.featureClass\n      ? options.featureClass\n      : /** @type {import('./Feature.js').FeatureToFeatureClass<FeatureType>} */ (\n          RenderFeature\n        );\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {FeatureType|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass === RenderFeature) {\n      feature =\n        new /** @type {import('./Feature.js').FeatureToFeatureClass<RenderFeature>} */ (\n          this.featureClass\n        )(geometryType, flatCoordinates, ends, 2, values, id);\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return /** @type {FeatureType} */ (feature);\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<FeatureType>} */ (features);\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n"],"names":["SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","Pbf","buf","Uint8Array","ArrayBuffer","DataView","readField","result","end","val","tag","startPos","isSigned","b","readVarintRemainder","l","s","p","h","toNum","Error","num","Boolean","pos","readUtf8","str","i","b1","b2","b3","b0","c","bytesPerSequence","String","buffer","arr","type","min","length","Math","writeBigVarint","pbf","low","high","writeBigVarintLow","writeBigVarintHigh","lsb","writeUtf8","lead","len","makeRoomForExtraLength","fn","obj","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","extraLen","MVT","Feature","options","Projection","feature","flatCoordinates","ends","cmd","x","y","coordsLen","currentEnd","cmdLen","rawFeature","id","values","geometryType","getGeometryType","numEnds","geom","endss","MultiPolygon","Polygon","Point","LineString","MultiPoint","MultiLineString","geometry","undefined","source","layers","dataProjection","pbfLayers","layersPBFReader","features","name","pbfLayer","extent","ii","readRawFeature","layer","featurePBFReader","layerPBFReader","value","key"],"mappings":"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"}