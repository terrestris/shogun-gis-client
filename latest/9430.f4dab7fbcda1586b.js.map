{"version":3,"file":"9430.f4dab7fbcda1586b.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/colorlike.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/css.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/canvas.js"],"sourcesContent":["/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n"],"names":["asColorLike","color","Array","asCanvasPattern","pattern","cacheKey","canvasPattern","undefined","iconImage","patternCanvasContext","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","style","i","ii","value","measureFont","measureElement","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureContext","textHeights","registerFont","interval","referenceWidth","size","referenceFonts","len","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","width","check","done","fonts","font","weight","family","clearInterval","families","key","setInterval","measureTextHeight","height","metrics","measureText","lineHeight","isNaN","Number","document","measureAndCacheTextWidth","cache","prev","curr","Math","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","rotateAtOffset","context","rotation","offsetX","offsetY","drawImageOrLabel","transform","opacity","labelOrImage","originX","originY","w","h","x","y","scale","executeLabelInstructions","label","contextInstructions"],"mappings":"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"}