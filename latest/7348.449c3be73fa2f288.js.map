{"version":3,"file":"7348.449c3be73fa2f288.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/renderer/vector.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/VectorContext.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/canvas/Immediate.js"],"sourcesContent":["/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n"],"names":["h","parseInt","s","f","Promise","i","e","t","Math","Array"],"mappings":"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"}