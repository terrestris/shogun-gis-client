{"version":3,"file":"1509.6e33f9b1559061ce.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/Image.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/style/IconImage.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/style/IconImageCache.js"],"sourcesContent":["/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n"],"names":["s","Array","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","console","l","Promise","Error","createImageBitmap","e","Image","Math","g","i"],"mappings":"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"}