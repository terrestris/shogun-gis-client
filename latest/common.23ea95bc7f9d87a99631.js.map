{"version":3,"file":"common.23ea95bc7f9d87a99631.js","mappings":"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","sources":["webpack://@terrestris/shogun-gis-client/./src/hooks/useAppDispatch.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useAppSelector.ts","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.less?3a66","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/usePlugins.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useSHOGunAPIClient.ts","webpack://@terrestris/shogun-gis-client/./src/components/BasicMapComponent/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useQueryParams.ts","webpack://@terrestris/shogun-gis-client/./src/plugin/index.ts","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.less?bf45","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/BasicNominatimSearch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/utils/getGravatarUrl.ts","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.less?5255","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useVersion.ts","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.less?f429","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.less?b06e","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.less?da3b","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.less?76ea","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Serializer/SHOGunMapFishPrintV3WMSSerializer.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Serializer/SHOGunMapFishPrintV3TiledWMSSerializer.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/CustomFieldInput/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/LayoutSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/OutputFormatSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/ResolutionSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/ScaleSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Shared/Shared.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.less?6377","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/index.less?723a","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/StylingComponent/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?a4df","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.less?7905","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.less?47fb","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/LayerTreeContextMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.less?c926","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.less?beca","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.less?b016","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.less?e08e","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/App.less?984e","webpack://@terrestris/shogun-gis-client/./src/App.tsx","webpack://@terrestris/shogun-gis-client/./src/store/appInfo/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/description/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/legal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/logoPath/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/title/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/user/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/store.ts","webpack://@terrestris/shogun-gis-client/./src/index.less?df1e","webpack://@terrestris/shogun-gis-client/./src/bootstrap.tsx","webpack://@terrestris/shogun-gis-client/./src/context/PluginContext.tsx","webpack://@terrestris/shogun-gis-client/./src/context/SHOGunAPIClientContext.tsx","webpack://@terrestris/shogun-gis-client/./src/i18n/index.ts","webpack://@terrestris/shogun-gis-client/./src/i18n/translations.ts","webpack://@terrestris/shogun-gis-client/./src/index.tsx","webpack://@terrestris/shogun-gis-client/./src/store/addLayerModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/print/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/selectedFeatures/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/toolMenu/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/uploadDataModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/App.less?ee38","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.less?6017","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.less?f940","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.less?a2b7","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.less?b02d","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.less?bd2b","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.less?68c2","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/index.less?d252","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.less?6534","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?27cc","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.less","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.less?d8e5","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.less?b29b","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.less?949c","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.less?cb8c","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.less?a168","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.less?25f0","webpack://@terrestris/shogun-gis-client/./src/index.less?2fc8"],"sourcesContent":["import {\n  useDispatch\n} from 'react-redux';\n\nimport type {\n  AppDispatch\n} from '../store/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport default useAppDispatch;\n","import {\n  TypedUseSelectorHook,\n  useSelector\n} from 'react-redux';\n\nimport type {\n  RootState\n} from '../store/store';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport default useAppSelector;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport {\n  Button,\n  Input,\n  Modal,\n  ModalProps,\n  notification,\n  Select,\n  Table\n} from 'antd';\n\nimport {\n  getUid\n} from 'ol';\nimport OlLayerGroup from 'ol/layer/Group';\nimport ImageLayer from 'ol/layer/Image';\nimport TileLayer from 'ol/layer/Tile';\nimport ImageWMSSource from 'ol/source/ImageWMS';\nimport TileWMSSource from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\nimport CapabilitiesUtil from '@terrestris/ol-util/dist/CapabilitiesUtil/CapabilitiesUtil';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport {\n  hide\n} from '../../store/addLayerModal';\n\nimport './index.less';\n\nexport type AddLayerModalProps = {} & Partial<ModalProps>;\n\nexport const AddLayerModal: React.FC<AddLayerModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState(false);\n  const [layers, setLayers] = useState<(ImageLayer<ImageWMSSource> | TileLayer<TileWMSSource>)[]>([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n  const [url, setUrl] = useState(\n    'https://sgx.geodatenzentrum.de/wms_topplus_open'\n  );\n  const [sanitizedUrl, setSanitizedUrl] = useState<string>();\n  const [version, setVersion] = useState<string>('1.3.0');\n\n  const isModalVisible = useAppSelector(state => state.addLayerModal.visible);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    if (!isModalVisible) {\n      return;\n    }\n    setSanitizedUrl(UrlUtil.createValidGetCapabilitiesRequest(url, 'WMS', version));\n  }, [version, isModalVisible, url]);\n\n  const getCapabilities = async () => {\n    if (!sanitizedUrl) {\n      return;\n    }\n    try {\n      setLoading(true);\n\n      const capabilities = await CapabilitiesUtil.getWmsCapabilities(sanitizedUrl);\n      const externalLayers = CapabilitiesUtil.getLayersFromWmsCapabilities(capabilities, 'Title');\n\n      setLayers(externalLayers);\n    } catch (error) {\n      notification.error({\n        message: t('AddLayerModal.errorMessage'),\n        description: t('AddLayerModal.errorDescription')\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const closeModal = () => {\n    setSelectedRowKeys([]);\n    setLayers([]);\n    dispatch(hide());\n  };\n\n  const onAddSelected = () => {\n    const layersToAdd = layers.filter(layer => selectedRowKeys.includes(getUid(layer)));\n    addLayers(layersToAdd);\n  };\n\n  const onAddAll = () => {\n    addLayers(layers);\n  };\n\n  const addLayers = (layersToAdd: (ImageLayer<ImageWMSSource> | TileLayer<TileWMSSource>)[]) => {\n    if (!map) {\n      return;\n    }\n\n    const targetFolderName = t('AddLayerModal.externalWmsFolder');\n    let targetGroup = MapUtil.getLayerByName(map, targetFolderName) as OlLayerGroup;\n\n    if (!targetGroup) {\n      targetGroup = new OlLayerGroup({\n        layers: []\n      });\n      targetGroup.set('name', targetFolderName);\n      const existingGroups = map.getLayerGroup().getLayers();\n      existingGroups.insertAt(existingGroups?.getLength() || 0, targetGroup);\n    }\n\n    layersToAdd.forEach(layerToAdd => {\n      if (!targetGroup.getLayers().getArray().includes(layerToAdd)) {\n        layerToAdd.set('isExternalLayer', true);\n\n        let layerUrl: string | undefined;\n        if (layerToAdd instanceof ImageLayer) {\n          layerUrl = layerToAdd.getSource()?.getUrl();\n        }\n\n        if (layerToAdd instanceof TileLayer) {\n          const urls = layerToAdd.getSource()?.getUrls();\n          layerUrl = urls?.length === 1 ? urls[0] : undefined;\n        }\n\n        const layerConfig = {\n          name: layerToAdd.get('name'),\n          type: layerToAdd instanceof TileLayer ? 'TILEWMS' : 'WMS',\n          opacity: layerToAdd.getOpacity(),\n          sourceConfig: {\n            layerNames: layerToAdd.getSource()?.getParams().LAYERS,\n            url: layerUrl,\n            useBearerToken: false\n          }\n        };\n        layerToAdd.set('layerConfig', layerConfig);\n        targetGroup.getLayers().push(layerToAdd);\n      }\n    });\n\n    closeModal();\n  };\n\n  return (\n    <Modal\n      className=\"add-layer-modal\"\n      title={t('AddLayerModal.title')}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={600}\n      footer={[\n        <Button\n          key=\"add-all\"\n          disabled={layers?.length < 1}\n          onClick={onAddAll}\n        >\n          {t('AddLayerModal.addAllLayers')}\n        </Button>,\n        <Button\n          key=\"add-selected\"\n          disabled={selectedRowKeys?.length < 1}\n          onClick={onAddSelected}\n        >\n          {t('AddLayerModal.addSelectedLayers')}\n        </Button>\n      ]}\n      {...restProps}\n    >\n      <Input.Search\n        placeholder={t('AddLayerModal.inputPlaceholder')}\n        value={url}\n        onChange={(event) => {\n          setUrl(event.target.value);\n        }}\n        onSearch={getCapabilities}\n        enterButton={true}\n        addonBefore={\n          <Select\n            defaultValue='1.3.0'\n            onChange={setVersion}\n            options={[\n              {\n                value: '1.3.0',\n                label: `${t('AddLayerModal.version')} 1.3.0`\n              },\n              {\n                value: '1.1.1',\n                label: `${t('AddLayerModal.version')} 1.1.1`\n              }\n            ]}\n          >\n          </Select>\n        }\n      />\n      <Table\n        loading={loading}\n        columns={[\n          {\n            title: t('AddLayerModal.columnTitle'),\n            render: (text: any, record: any) => {\n              return record.get('title');\n            }\n          }\n        ]}\n        rowKey={(record: any) => getUid(record)}\n        rowSelection={{\n          selectedRowKeys,\n          onChange: setSelectedRowKeys\n        }}\n        pagination={false}\n        dataSource={layers}\n      />\n    </Modal>\n  );\n};\n\nexport default AddLayerModal;\n","import { useContext } from 'react';\n\nimport PluginContext from '../context/PluginContext';\n\nimport { ClientPluginInternal } from '../plugin';\n\nexport const usePlugins = (): ClientPluginInternal[] => {\n  return useContext(PluginContext);\n};\n\nexport default usePlugins;\n","import { useContext } from 'react';\n\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nimport SHOGunAPIClientContext from '../context/SHOGunAPIClientContext';\n\nexport const useSHOGunAPIClient = (): SHOGunAPIClient | null => {\n  return useContext(SHOGunAPIClientContext);\n};\n\nexport default useSHOGunAPIClient;\n","import React, {\n  useEffect,\n  useCallback\n} from 'react';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport BaseLayer from 'ol/layer/Base';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport PermalinkUtil from '@terrestris/ol-util/dist/PermalinkUtil/PermalinkUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport MapComponent, {\n  MapComponentProps\n} from '@terrestris/react-geo/dist/Map/MapComponent/MapComponent';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\n\nimport usePlugins from '../../hooks/usePlugins';\nimport useQueryParams from '../../hooks/useQueryParams';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport {\n  isMapIntegration\n} from '../../plugin';\n\nexport const BasicMapComponent: React.FC<Partial<MapComponentProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const queryParams = useQueryParams();\n  const plugins = usePlugins();\n\n  const center = queryParams.get('center');\n  const zoom = queryParams.get('zoom');\n  const layers = queryParams.get('layers');\n  const customLayerAttributes = queryParams.get('customLayerAttributes');\n\n  const {\n    t\n  } = useTranslation();\n\n  const restoreTransientLayers = useCallback(async (configString: string, permaLinkLayers?: string | null) => {\n    if (!map) {\n      return;\n    }\n\n    const addLayerGroup = (name: string) => {\n      const layerGroup = new OlLayerGroup({\n        layers: []\n      });\n      layerGroup.set('name', name);\n      const existingGroups = map.getLayerGroup().getLayers();\n      existingGroups.insertAt(existingGroups?.getLength() || 0, layerGroup);\n\n      return layerGroup;\n    };\n\n    try {\n      const config = JSON.parse(configString);\n\n      if (!client) {\n        throw new Error('Client is not available');\n      }\n\n      const parser = new SHOGunApplicationUtil({\n        client\n      });\n\n      for (let i = 0; i < config.length; i++) {\n        const cfg = config[i];\n        if (!_isEmpty(cfg?.layerConfig)) {\n          const layerConfig: Layer = cfg.layerConfig;\n          const olLayer = await parser.parseLayer(layerConfig);\n\n          if (cfg.isExternalLayer) {\n            olLayer.set('isExternalLayer', cfg.isExternalLayer);\n          }\n\n          if (cfg.isUploadedLayer) {\n            olLayer.set('isUploadedLayer', cfg.isUploadedLayer);\n          }\n\n          olLayer.set('groupName', cfg.groupName);\n          olLayer.set('layerConfig', cfg.layerConfig);\n\n          olLayer.setVisible(!!permaLinkLayers?.split(';').some(l => l === layerConfig.name));\n\n          if (!(olLayer.get('isExternalLayer') || olLayer.get('isUploadedLayer'))) {\n            continue;\n          }\n\n          let targetGroup: OlLayerGroup;\n\n          if (olLayer.get('groupName')) {\n            targetGroup = MapUtil.getLayerByName(map, olLayer.get('groupName')) as OlLayerGroup;\n\n            if (!targetGroup) {\n              targetGroup = addLayerGroup(olLayer.get('groupName'));\n            }\n          } else {\n            targetGroup = MapUtil.getLayerByName(map,\n              t('AddLayerModal.externalWmsFolder')) as OlLayerGroup;\n\n            if (!targetGroup) {\n              targetGroup = addLayerGroup(t('AddLayerModal.externalWmsFolder'));\n            }\n          }\n\n          targetGroup.getLayers().push(olLayer);\n        }\n      }\n    } catch (error) {\n      Logger.error(error);\n    }\n  }, [client, map, t]);\n\n  useEffect(() => {\n    if (map) {\n      const identifier = (l: BaseLayer) => l.get('name');\n      const filter = (l: BaseLayer) => (l instanceof OlLayerTile || l instanceof OlLayerImage);\n      const configString = PermalinkUtil.applyLink(map, ';', identifier, filter);\n\n      if (!configString) {\n        return;\n      }\n\n      restoreTransientLayers(configString, layers);\n    }\n  }, [\n    map,\n    restoreTransientLayers,\n    center,\n    zoom,\n    layers,\n    customLayerAttributes\n  ]);\n\n  const pluginComponents: JSX.Element[] = [];\n\n  if (plugins) {\n    plugins.forEach(plugin => {\n      if (isMapIntegration(plugin.integration)) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        pluginComponents.push(\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  }\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <MapComponent\n      map={map}\n      {...restProps}\n    >\n      {\n        pluginComponents\n      }\n    </MapComponent>\n  );\n};\n\nexport default BasicMapComponent;\n","import React from 'react';\n\nexport default function useQueryParams() {\n  const {\n    search\n  } = window.location;\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import type {\n  IconDefinition\n} from '@fortawesome/fontawesome-common-types';\n\nimport type {\n  Reducer\n} from '@reduxjs/toolkit';\n\nimport { CollapsePanelProps } from 'antd';\nimport type OlMap from 'ol/Map';\n\nimport type SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nexport type ClientPluginLocale = {\n  [locale: string]: {\n    translation: {\n      [key: string]: any;\n    };\n  };\n};\n\nexport type ClientPluginComponentProps = {\n  map?: OlMap;\n  client?: SHOGunAPIClient;\n};\n\nexport type ClientPluginIntegration = {\n  /**\n   * The main identifier of the integration point of the plugin.\n   */\n  placement: string;\n};\n\nexport type ClientPluginIntegrationToolMenu = ClientPluginIntegration &\n  Omit<CollapsePanelProps, 'key' | 'header'> & {\n  placement: 'tool-menu';\n  /**\n   * The label for the plugin in the tool menu.\n   */\n  label?: string;\n  /**\n   * The insertion index for the plugin in the tool menu, starting from 0 which is on top.\n   */\n  insertionIndex?: number;\n  /**\n   * The icon for the plugin in the tool menu.\n   */\n  icon?: IconDefinition;\n};\n\nexport type HeaderPlacementOrientation = 'left' | 'center' | 'right';\n\nexport type ClientPluginIntegrationHeader = ClientPluginIntegration & {\n  placement: 'header';\n  /**\n   * The placement orientation for the plugin in the header.\n   */\n  placementOrientation: HeaderPlacementOrientation;\n  /**\n   * The insertion index for the plugin in the header, starting from 0 which is on the left.\n   */\n  insertionIndex?: number;\n};\n\nexport type ClientPluginIntegrationFeatureInfo = ClientPluginIntegration & {\n  placement: 'feature-info';\n  /**\n   * The list of layer names the plugin component should be rendered for. If not\n   * specified, the component will be rendered for all layers.\n   */\n  layers?: string[];\n};\n\nexport type ClientPluginIntegrationMap = ClientPluginIntegration & {\n  placement: 'map';\n};\n\nexport type ClientPluginIntegrations = ClientPluginIntegrationToolMenu | ClientPluginIntegrationHeader |\n  ClientPluginIntegrationFeatureInfo | ClientPluginIntegrationMap;\n\nexport type ClientPlugin = {\n  /**\n   * The key of the plugin, usually used for internal references (e.g. element class names) only.\n   */\n  key: string;\n  /**\n   * The definition of the integration point.\n   */\n  integration: ClientPluginIntegrations;\n  /**\n   * The actual component of the plugin.\n   */\n  component: React.FunctionComponent<ClientPluginComponentProps>;\n  /**\n   * The i18n definition to be used in the plugin.\n   */\n  i18n?: ClientPluginLocale;\n  /**\n   * A set of redux reducers to be used in the plugin.\n   */\n  reducers?: {\n    [key: string]: Reducer;\n  };\n};\n\nexport type ClientPluginInternal = ClientPlugin & {\n  wrappedComponent: React.FunctionComponent<ClientPluginComponentProps>;\n};\n\nexport function isToolMenuIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationToolMenu {\n  return pluginIntegration && pluginIntegration.placement === 'tool-menu';\n}\n\nexport function isHeaderIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationHeader {\n  return pluginIntegration && pluginIntegration.placement === 'header';\n}\n\nexport function isFeatureInfoIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationFeatureInfo {\n  return pluginIntegration && pluginIntegration.placement === 'feature-info';\n}\n\nexport function isMapIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationMap {\n  return pluginIntegration && pluginIntegration.placement === 'map';\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect } from 'react';\n\nimport {\n  Button, Divider\n} from 'antd';\n\nimport OlControlMousePosition from 'ol/control/MousePosition';\nimport OlControlScaleLine from 'ol/control/ScaleLine';\nimport { createStringXY } from 'ol/coordinate';\n\nimport { useTranslation } from 'react-i18next';\n\nimport ScaleCombo from '@terrestris/react-geo/dist/Field/ScaleCombo/ScaleCombo';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport { Legal } from '../../store/legal';\n\nexport interface FooterProps extends React.ComponentProps<'div'> {}\n\nexport const Footer: React.FC<FooterProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const { t } = useTranslation();\n\n  const legalInformation: Legal = useAppSelector(state => state.legal);\n  const map = useMap();\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map\n      .getControls()\n      .getArray()\n      .find(control => control instanceof OlControlScaleLine);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlScaleLine({\n        target: 'scale-line-container'\n      })\n    );\n  }, [map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map\n      .getControls()\n      .getArray()\n      .find(control => control instanceof OlControlMousePosition);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlMousePosition({\n        coordinateFormat: createStringXY(2),\n        projection: map.getView().getProjection(),\n        target: 'mouse-position'\n      })\n    );\n  }, [map]);\n\n  const openContactModal = (): void => {\n    window.open(legalInformation.contact, '_blank');\n  };\n\n  const openImprintModal = (): void => {\n    window.open(legalInformation.imprint, '_blank');\n  };\n\n  const openPrivacyModal = (): void => {\n    window.open(legalInformation.privacy, '_blank');\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <div\n      className=\"footer\"\n      {...restProps}\n    >\n      <div className=\"item-container left-items\">\n        <div id=\"scale-line-container\" />\n        <Divider type=\"vertical\" />\n        <div className=\"scale-combo\">\n          {t('Footer.scale')}:&nbsp;\n          <ScaleCombo map={map} />\n          <Divider type=\"vertical\" />\n        </div>\n        <div className=\"reference-system\">\n          {t('Footer.refSystem')}: {map.getView().getProjection().getCode()}\n          <Divider type=\"vertical\" />\n        </div>\n        <div className=\"mouse-position-wrapper\">\n          {t('Footer.mousePosition')}:&nbsp;\n          <div\n            id=\"mouse-position\"\n            className=\"mouse-position\"\n          />\n        </div>\n      </div>\n      <div className=\"item-container right-items\">\n        <Button\n          onClick={openContactModal}\n          type=\"link\"\n        >\n          {t('Footer.contact')}\n        </Button>\n        <Button\n          onClick={openImprintModal}\n          type=\"link\"\n        >\n          {t('Footer.imprint')}\n        </Button>\n        <Button\n          onClick={openPrivacyModal}\n          type=\"link\"\n        >\n          {t('Footer.privacypolicy')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, {\n  useEffect, useState\n} from 'react';\n\nimport {\n  Extent as OlExtent\n} from 'ol/extent';\nimport {\n  transformExtent\n} from 'ol/proj';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport NominatimSearch, {\n  NominatimSearchProps\n} from '@terrestris/react-geo/dist/Field/NominatimSearch/NominatimSearch';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport const BasicNominatimSearch: React.FC<Partial<NominatimSearchProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n  const [viewBox, setViewBox] = useState<string>();\n\n  useEffect(() => {\n    const mapViewProjection = map?.getView().getProjection();\n    const extent: OlExtent = map?.getView()?.get('extent');\n    if (extent) {\n      const transformedExtent = transformExtent(extent, mapViewProjection, 'EPSG:4326');\n      setViewBox(transformedExtent.toString());\n    }\n  }, [map]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <NominatimSearch\n      map={map}\n      countryCodes={''}\n      allowClear={true}\n      nominatimBaseUrl={'https://nominatim.terrestris.de/search.php?'}\n      placeholder={t('Nominatim.placeholder')}\n      viewBox={viewBox ? viewBox : ''}\n      {...restProps}\n    />\n  );\n};\n\nexport default BasicNominatimSearch;\n","import md5 from 'js-md5';\n\nexport interface GravatarProps {\n  email: string;\n  size?: number;\n  rating?: 'g' | 'pg' | 'r' | 'x';\n  defaultImage?: '404' | 'mp' | 'identicon' | 'monsterid' | 'wavatar' | 'retro' | 'robohash' | 'blank';\n  force?: boolean;\n}\n\nconst GRAVATAR_BASE_URL = 'https://www.gravatar.com/avatar/';\n\n/**\n * https://de.gravatar.com/site/implement/images/\n */\nexport const getGravatarUrl = ({\n  email = '',\n  size = 80,\n  rating = 'g',\n  defaultImage = 'identicon',\n  force = false\n}: GravatarProps): string => {\n  const lowerCaseEmail = email.toLowerCase();\n  const hash = md5(lowerCaseEmail);\n\n  let url = `${GRAVATAR_BASE_URL}${hash}?s=${size}&r=${rating}&d=${defaultImage}`;\n\n  if (force) {\n    url = `${url}&f=y`;\n  }\n\n  return url;\n};\n\nexport default getGravatarUrl;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  Modal,\n  Statistic\n} from 'antd';\n\nimport {\n  ModalProps\n} from 'antd/lib/modal';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport useAppSelector from '../../hooks/useAppSelector';\n\nimport {\n  useClientVersion\n} from '../../hooks/useVersion';\n\nimport './index.less';\n\ninterface ApplicationInfoProps extends ModalProps {\n  opener?: JSX.Element;\n}\n\nexport const ApplicationInfo: React.FC<ApplicationInfoProps> = ({\n  opener,\n  ...restProps\n}) => {\n  const {\n    t\n  } = useTranslation();\n\n  const appInfo = useAppSelector(state => state.appInfo);\n  const logoPath = useAppSelector(state => state.logoPath);\n  const appDescription = useAppSelector(state => state.description);\n\n  const [isVisible, setVisible] = useState<boolean>(false);\n\n  const toggleVisibility = () => {\n    setVisible(!isVisible);\n  };\n\n  let Opener;\n  if (opener) {\n    Opener = React.cloneElement(\n      opener,\n      {\n        onClick: toggleVisibility\n      }\n    );\n  } else {\n    Opener = <button onClick={toggleVisibility}>Open</button>;\n  }\n\n  return (\n    <>\n      {\n        Opener\n      }\n      <Modal\n        className='application-info'\n        title={t('ApplicationInfo.title')}\n        centered={true}\n        open={isVisible}\n        onOk={toggleVisibility}\n        onCancel={toggleVisibility}\n        footer={null}\n        {...restProps}\n      >\n        <img\n          className=\"logo\"\n          src={logoPath}\n        />\n        <div\n          className=\"description\"\n        >\n          {appDescription}\n        </div>\n        <Statistic\n          title={t('ApplicationInfo.clientVersionTitle')}\n          value={useClientVersion()}\n        />\n        {\n          (appInfo.version && appInfo.buildTime) &&\n          <Statistic\n            title={t('ApplicationInfo.backendVersionTitle')}\n            value={`${appInfo.version} (${appInfo.buildTime})`}\n          />\n        }\n      </Modal>\n    </>\n  );\n};\n\nexport default ApplicationInfo;\n","export const useClientVersion = () => {\n  return PROJECT_VERSION;\n};\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faInfo,\n  faUserCog,\n  faSignOut,\n  faSignIn,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Menu\n} from 'antd';\n\nimport {\n  ItemType\n} from 'antd/lib/menu/hooks/useItems';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport {\n  MenuInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport UserChip from '@terrestris/react-geo/dist/UserChip/UserChip';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport {\n  getGravatarUrl\n} from '../../utils/getGravatarUrl';\n\nimport ApplicationInfo from '../ApplicationInfo';\n\nimport './index.less';\n\ninterface OwnProps { }\n\ntype UserProps = OwnProps;\n\nexport const UserMenu: React.FC<UserProps> = (): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const client = useSHOGunAPIClient();\n  const keycloak = client?.getKeycloak();\n\n  const user = useAppSelector((state) => state.user);\n\n  const onMenuClick = (evt: MenuInfo) => {\n    switch (evt.key) {\n      case 'settings':\n        if (keycloak) {\n          keycloak.accountManagement();\n        }\n        break;\n      case 'info':\n        // Don't do anything, visible state will be handled by the menu itself.\n        break;\n      case 'login':\n        if (keycloak) {\n          keycloak.login();\n        }\n        break;\n      case 'logout':\n        if (keycloak) {\n          keycloak.logout();\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const getMenu = () => {\n    const login: ItemType = {\n      key: 'login',\n      icon: (\n        <FontAwesomeIcon\n          icon={faSignIn}\n        />\n      ),\n      label: t('UserMenu.loginMenuTitle')\n    };\n\n    const username: ItemType = {\n      key: 'username',\n      label: (\n        <div\n          className=\"user-name\"\n        >\n          <span>\n            {\n              user.providerDetails?.email\n            }\n          </span>\n        </div>\n      )\n    };\n\n    const divider: ItemType = {\n      type: 'divider'\n    };\n\n    const settings: ItemType = {\n      key: 'settings',\n      icon: (\n        <FontAwesomeIcon\n          icon={faUserCog}\n        />\n      ),\n      label: t('UserMenu.settingsMenuTitle')\n    };\n\n    const info: ItemType = {\n      key: 'info',\n      icon: (\n        <FontAwesomeIcon\n          icon={faInfo}\n        />\n      ),\n      label: (\n        <ApplicationInfo\n          opener={\n            <span\n              className=\"info-opener\"\n            >\n              {t('UserMenu.infoMenuTitle')}\n            </span>\n          }\n        />\n      )\n    };\n\n    const logout: ItemType = {\n      key: 'logout',\n      icon: (\n        <FontAwesomeIcon\n          icon={faSignOut}\n        />\n      ),\n      label: t('UserMenu.logoutMenuTitle')\n    };\n\n    const items: ItemType[] = _isEmpty(user) ?\n      [\n        login,\n        info\n      ] :\n      [\n        username,\n        divider,\n        settings,\n        info,\n        divider,\n        logout\n      ];\n\n    return {\n      items,\n      onClick: onMenuClick\n    };\n  };\n\n  return (\n    <UserChip\n      size={'small'}\n      imageSrc={getGravatarUrl({\n        email: user.providerDetails?.email || '',\n        size: 28\n      })}\n      userName={\n        <FontAwesomeIcon\n          icon={faAngleDown}\n        />\n      }\n      userMenu={getMenu()}\n    />\n  );\n};\n\nexport default UserMenu;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  useAppSelector\n} from '../../hooks/useAppSelector';\nimport {\n  usePlugins\n} from '../../hooks/usePlugins';\n\nimport {\n  HeaderPlacementOrientation,\n  isHeaderIntegration\n} from '../../plugin';\n\nimport BasicNominatimSearch from '../BasicNominatimSearch';\n\nimport UserMenu from '../UserMenu';\n\nimport './index.less';\n\nexport interface HeaderProps extends React.ComponentProps<'div'> { };\n\nexport const Header: React.FC<HeaderProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const title = useAppSelector((state) => state.title);\n  const logoPath = useAppSelector((state) => state.logoPath);\n  const plugins = usePlugins();\n\n  const insertPlugins = (itemPosition: HeaderPlacementOrientation, items: JSX.Element[]) => {\n    plugins.forEach(plugin => {\n      if (isHeaderIntegration(plugin.integration) && plugin.integration?.placementOrientation === itemPosition) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        items.splice(plugin.integration?.insertionIndex || 0, 0,\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  };\n\n  const getLeftItems = () => {\n    const items = [(\n      <img\n        key=\"logo\"\n        className=\"logo\"\n        src={logoPath}\n      />\n    ), (\n      <div\n        key=\"title\"\n        className=\"title\"\n      >\n        {title}\n      </div>\n    )];\n\n    insertPlugins('left', items);\n\n    return items;\n  };\n\n  const getCenterItems = () => {\n    const items = [\n      <BasicNominatimSearch\n        key=\"search\"\n      />\n    ];\n\n    insertPlugins('center', items);\n\n    return items;\n  };\n\n  const getRightItems = () => {\n    const items = [\n      <UserMenu\n        key=\"user-menu\"\n      />\n    ];\n\n    insertPlugins('right', items);\n\n    return items;\n  };\n\n  return (\n    <div\n      className=\"header\"\n      {...restProps}\n    >\n      <div\n        className=\"item-container left-items\"\n      >\n        {\n          getLeftItems()\n        }\n      </div>\n      <div\n        className=\"item-container center-items\"\n      >\n        {\n          getCenterItems()\n        }\n      </div>\n      <div\n        className=\"item-container right-items\"\n      >\n        {\n          getRightItems()\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport './index.less';\n\nimport {\n  Select\n} from 'antd';\n\nconst {\n  Option\n} = Select;\n\nimport i18n from '../../i18n';\n\nexport const LanguageSelect = () => {\n  const supportedLanguages = Object.keys(i18n.services.resourceStore.data);\n\n  const onLanguageChange = (lang: string) => {\n    i18n.changeLanguage(lang);\n  };\n\n  return (\n    <div className=\"language-select\">\n      <Select\n        defaultValue={i18n.language || 'en'}\n        onChange={onLanguageChange}\n      >\n        {\n          supportedLanguages.map(supportedLanguage => {\n            return (\n              <Option\n                key={supportedLanguage}\n                value={supportedLanguage}\n              >\n                {supportedLanguage.toUpperCase()}\n              </Option>\n            );\n          })\n        }\n      </Select>\n    </div>\n  );\n};\n\nexport default LanguageSelect;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect, useState, useMemo\n} from 'react';\n\nimport {\n  CopyOutlined,\n  MailOutlined,\n  TwitterOutlined,\n  WhatsAppOutlined\n} from '@ant-design/icons';\nimport {\n  Input, Tooltip, message\n} from 'antd';\nimport copy from 'copy-to-clipboard';\nimport {\n  EventsKey\n} from 'ol/events';\nimport BaseLayer from 'ol/layer/Base';\nimport LayerGroup from 'ol/layer/Group';\nimport ImageLayer from 'ol/layer/Image';\nimport TileLayer from 'ol/layer/Tile';\nimport {\n  unByKey\n} from 'ol/Observable';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport PermalinkUtil from '@terrestris/ol-util/dist/PermalinkUtil/PermalinkUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\n\nimport './index.less';\n\ninterface DefaultPermalinkProps { }\n\nexport interface PermalinkProps extends Partial<DefaultPermalinkProps> { }\n\nexport const Permalink: React.FC<PermalinkProps> = () => {\n  const map = useMap();\n  const layerAttributes = useMemo(() => [\n    'layerConfig',\n    'isExternalLayer',\n    'isUploadedLayer',\n    'groupName'\n  ], []);\n  const {\n    t\n  } = useTranslation();\n\n  const initialPermalink = map ? PermalinkUtil.getLink(\n    map,\n    ';',\n    l => l.get('name'),\n    l => (l instanceof TileLayer || l instanceof ImageLayer) && l.getVisible(),\n    layerAttributes\n  ) : '';\n\n  const [permalink, setPermalink] = useState(initialPermalink);\n\n  const mailSubject = 'SHOGun Web-GIS';\n  const mailBody = `Hey,\\r\\ncheck out the layer-composition I created:\\r\\n\\r\\n${permalink}`;\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n    let eventKeys: EventsKey[] = [];\n\n    const identifierFunction = (l: BaseLayer) => l.get('name');\n    const filterFunction = (l: BaseLayer) => (l instanceof TileLayer || l instanceof ImageLayer) && l.getVisible();\n    const updatePermalink = () => {\n      setPermalink(PermalinkUtil.getLink(\n        map,\n        ';',\n        identifierFunction,\n        filterFunction,\n        layerAttributes\n      ));\n    };\n\n    const updateLayerConfig = () => {\n      const externalLayers = map.getAllLayers().filter(l => l.get('isExternalLayer') || l.get('isUploadedLayer'));\n      externalLayers.forEach(externalLayer => {\n        const layerConfig = externalLayer.get('layerConfig') as Layer;\n        if (layerConfig) {\n          if (layerConfig.clientConfig) {\n            layerConfig.clientConfig.opacity = externalLayer.getOpacity();\n          } else {\n            layerConfig.clientConfig = {\n              opacity: externalLayer.getOpacity()\n            };\n          }\n          externalLayer.set('layerConfig', layerConfig);\n        }\n      });\n      updatePermalink();\n    };\n\n    const registerLayerCallback = (layerGroup: LayerGroup) => {\n      const layersInGroup = layerGroup.getLayers().getArray();\n      for (let i = 0; i < layersInGroup.length; i++) {\n        const layerInGroup = layersInGroup[i];\n\n        if (layerInGroup instanceof LayerGroup) {\n          registerLayerCallback(layerInGroup);\n        } else {\n          let eventKeyVisibility = layerInGroup.on('change:visible', updatePermalink);\n          let eventKeyOpacity = layerInGroup.on('change:opacity', updateLayerConfig);\n          eventKeys.push(eventKeyVisibility, eventKeyOpacity);\n        }\n      }\n    };\n\n    const listenerKeyCenter = map.getView().on('change:center', updatePermalink);\n    const listenerKeyResolution = map.getView().on('change:resolution', updatePermalink);\n\n    let mapLayerGroup = map.getLayerGroup();\n    registerLayerCallback(mapLayerGroup);\n    updateLayerConfig();\n\n    return () => {\n      unByKey(listenerKeyCenter);\n      unByKey(listenerKeyResolution);\n      unByKey(eventKeys);\n    };\n  }, [layerAttributes, map, t]);\n\n  function onTwitterClick() {\n    const twitterUrl = new URL('https://twitter.com/intent/tweet');\n    twitterUrl.searchParams.set('url', mailBody);\n    window.open(twitterUrl);\n  }\n\n  function onWhatsAppClick() {\n    const whatsAppUrl = new URL('https://wa.me');\n    whatsAppUrl.searchParams.set('text', mailBody);\n    window.open(whatsAppUrl);\n  }\n\n  function onMailClick() {\n    const mailToUrl = new URL('mailto:');\n    mailToUrl.searchParams.set('subject', mailSubject);\n    mailToUrl.searchParams.set('body', mailBody);\n    window.open(mailToUrl.toString().replace(/\\+/g, '%20'), '_self');\n  }\n\n  function onCopyClick() {\n    const success = copy(permalink);\n    if (success) {\n      message.info(t('Permalink.copiedToClipboard'));\n    } else {\n      message.info(t('Permalink.copyToClipboardFailed'));\n    }\n  }\n\n  return (\n    <div className=\"permalink-wrapper\">\n      <div className=\"icons\">\n        <Tooltip title={t('Permalink.twitterTooltip')}>\n          <TwitterOutlined onClick={onTwitterClick} />\n        </Tooltip>\n        <Tooltip title={t('Permalink.whatsAppTooltip')}>\n          <WhatsAppOutlined onClick={onWhatsAppClick} />\n        </Tooltip>\n        <Tooltip title={t('Permalink.mailTooltip')}>\n          <MailOutlined onClick={onMailClick} />\n        </Tooltip>\n      </div>\n      <div className=\"link\">\n        <Input value={permalink}\n          readOnly\n        />\n        <Tooltip title={t('Permalink.copyTooltip')}>\n          <CopyOutlined onClick={onCopyClick} />\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nexport default Permalink;\n","import OlLayer from 'ol/layer/Layer';\n\nimport MapFishPrintV3WMSSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3WMSSerializer';\n\nexport class SHOGunMapFishPrintV3WMSSerializer extends MapFishPrintV3WMSSerializer {\n\n  serialize(layer: OlLayer, opts?: any) {\n    const serialized: any = super.serialize(layer, opts);\n\n    if (serialized.baseURL.startsWith('/geoserver/ows')) {\n      serialized.baseURL = `http://shogun-geoserver:8080${serialized.baseURL}`;\n    }\n\n    if (serialized.baseURL.startsWith('/geoserver/SHOGUN')) {\n      serialized.baseURL = `http://shogun-geoserver:8080${serialized.baseURL}`;\n    }\n\n    return serialized;\n  }\n}\n\nexport default SHOGunMapFishPrintV3WMSSerializer;\n","import defaultsDeep from 'lodash/defaultsDeep';\n\nimport OlLayer from 'ol/layer/Layer';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport MapFishPrintV3TiledWMSSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3TiledWMSSerializer';\n\nimport SHOGunMapFishPrintV3WMSSerializer from './SHOGunMapFishPrintV3WMSSerializer';\n\nexport class SHOGunMapFishPrintV3TiledWMSSerializer extends SHOGunMapFishPrintV3WMSSerializer {\n\n  serialize(layer: OlLayer<OlSourceTileWMS>, opts: any) {\n    const optsToApply = {\n      tileSize: [512, 512],\n      ...opts\n    };\n\n    const source = layer.getSource();\n\n    if (!source || !this.validateSource(source)) {\n      return;\n    }\n\n    const serialized = {\n      ...super.serialize(layer, optsToApply),\n      ...{\n        type: MapFishPrintV3TiledWMSSerializer.TYPE_WMS\n      },\n      ...opts\n    };\n\n    return serialized;\n  }\n}\n\nexport default SHOGunMapFishPrintV3TiledWMSSerializer;\n","import React, {\n  useEffect, useState\n} from 'react';\n\nimport { Input } from 'antd';\nimport { InputProps } from 'antd/lib/input';\n\nimport _isNil from 'lodash/isNil';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport { addCustomParam } from '../../../store/print';\n\ninterface CustomFieldInputProps extends InputProps {}\n\nexport const CustomFieldInput: React.FC<CustomFieldInputProps> = ({\n  value,\n  id,\n  placeholder,\n  maxLength,\n  ...restProps\n}): JSX.Element => {\n\n  const [inputText, setInputText] = useState<any>(value);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (!_isNil(id)) {\n      dispatch(addCustomParam({\n        id: inputText\n      }));\n    }\n  }, [inputText, id, dispatch]);\n\n  useEffect(() => {\n    setInputText(value);\n  }, [value]);\n\n  return (\n    <Input\n      id={id}\n      value={inputText}\n      onChange={(event) => setInputText(event.target.value)}\n      placeholder={placeholder}\n      maxLength={maxLength}\n      showCount={!!(maxLength && maxLength > 1)}\n      {...restProps}\n    />\n  );\n};\n\nexport default CustomFieldInput;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport {\n  Layout\n} from '../';\n\nexport interface LayoutSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const LayoutSelect: React.FC<LayoutSelectProps> = ({\n  printManager,\n  placeholder = 'Bitte wählen Sie eine Vorlage aus',\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [layout, setLayout] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setLayout(layout);\n    }\n  }, [printManager, layout]);\n\n  useEffect(() => {\n    setLayout(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={layout}\n      onChange={setLayout}\n      {...restProps}\n    >\n      {\n        printManager?.getLayouts().map((l: Layout) => (\n          <Select.Option\n            key={l.name}\n            value={l.name}\n          >\n            {l.name}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default LayoutSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface OutputFormatSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n  outputFormats: string[];\n}\n\nexport const OutputFormatSelect: React.FC<OutputFormatSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  outputFormats,\n  ...restProps\n}): JSX.Element => {\n\n  const [outputFormat, setOutputFormat] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setOutputFormat(outputFormat);\n    }\n  }, [printManager, outputFormat]);\n\n  useEffect(() => {\n    setOutputFormat(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={outputFormat}\n      onChange={setOutputFormat}\n      {...restProps}\n    >\n      {\n        outputFormats.map((f: string) => (\n          <Select.Option\n            key={f}\n            value={f}\n          >\n            {f.toLocaleUpperCase()}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default OutputFormatSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface ResolutionSelectProps extends SelectProps<number> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const ResolutionSelect: React.FC<ResolutionSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [resolution, setResolution] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setDpi(resolution);\n    }\n  }, [printManager, resolution]);\n\n  useEffect(() => {\n    setResolution(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={resolution}\n      onChange={setResolution}\n      {...restProps}\n    >\n      {\n        printManager?.getDpis().map((d: number) => (\n          <Select.Option\n            key={d}\n            value={d}\n          >\n            {`${d} DPI`}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default ResolutionSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport interface ScaleSelectProps extends SelectProps<number> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const ScaleSelect: React.FC<ScaleSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const map = useMap();\n\n  const [scale, setScale] = useState<number>(0);\n\n  useEffect(() => {\n    if (printManager && scale) {\n      printManager.setScale(scale);\n    }\n  }, [printManager, scale]);\n\n  useEffect(() => {\n    const updateScale = () => {\n      const pmScale = printManager.getScale();\n      if (pmScale) {\n        setScale(pmScale);\n      }\n    };\n    const transformInteraction = map?.getInteractions().getArray().find(i => {\n      return i.get('name') === MapFishPrintV3Manager.TRANSFORM_INTERACTION_NAME;\n    });\n\n    if (printManager && transformInteraction) {\n      if (transformInteraction) {\n        // @ts-ignore\n        transformInteraction.on('scaling', updateScale);\n\n        return () => {\n          // @ts-ignore\n          transformInteraction.un('scaling', updateScale);\n        };\n      }\n    }\n  }, [printManager, map]);\n\n  useEffect(() => {\n    if (value) {\n      setScale(value);\n    }\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={scale}\n      onChange={setScale}\n      {...restProps}\n    >\n      {\n        printManager?.getScales().map((s: number) => (\n          <Select.Option\n            key={s}\n            value={s}\n          >\n            {`1 : ${s.toLocaleString()}`}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default ScaleSelect;\n","import OlLayer from 'ol/layer/Layer';\nimport OlRendererLayer from 'ol/renderer/Layer';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSource from 'ol/source/Source';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport Shared from '@terrestris/mapfish-print-manager/dist/util/Shared';\n\nShared.getLegendGraphicUrl = (layer: OlLayer<OlSource, OlRendererLayer<any>>): string => {\n  if (layer.get('legendUrl')) {\n    return layer.get('legendUrl');\n  }\n\n  if (layer.getSource() instanceof OlSourceTileWMS ||\n    layer.getSource() instanceof OlSourceImageWMS) {\n\n    const customParams: any = layer.get('customPrintLegendParams');\n    const source: any = layer.getSource();\n\n    const {\n      LAYERS,\n      VERSION,\n      FORMAT\n    } = source.getParams();\n\n    let url: string = source instanceof OlSourceImageWMS ?\n      source.getUrl() :\n      source.getUrls()[0];\n\n    if (url.startsWith('/geoserver/ows')) {\n      url = `http://shogun-geoserver:8080${url}`;\n    }\n\n    const params: any = {\n      LAYER: LAYERS.split(',')[0],\n      VERSION: VERSION || '1.3.0',\n      SERVICE: 'WMS',\n      REQUEST: 'GetLegendGraphic',\n      FORMAT: FORMAT || 'image/png',\n      ...customParams\n    };\n\n    const queryParams = Object.keys(params).map(key => {\n      return `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`;\n    }).join('&');\n\n    if (url.startsWith('/geoserver/SHOGUN')) {\n      url = `http://shogun-geoserver:8080${url}/service?`;\n      return `${url}${queryParams}`;\n    }\n\n    if (url.endsWith('?')) {\n      return `${url}${queryParams}`;\n    } else {\n      return `${url}?${queryParams}`;\n    }\n  }\n\n  return '';\n};\n","import React, {\n  useCallback, useEffect, useState\n} from 'react';\n\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n  Alert, Button, Form\n} from 'antd';\nimport { FormProps } from 'antd/lib/form/Form';\nimport ClientConfiguration from 'clientConfig';\nimport _isNil from 'lodash/isNil';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayer from 'ol/layer/Layer';\nimport OlSource from 'ol/source/Source';\n\nimport { useTranslation } from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport { MapFishPrintV3Manager } from '@terrestris/mapfish-print-manager';\nimport { MapFishPrintV3ManagerOpts } from '@terrestris/mapfish-print-manager/dist/manager/MapFishPrintV3Manager';\nimport MapFishPrintV3GeoJsonSerializer\n  from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3GeoJsonSerializer';\nimport MapFishPrintV3OSMSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3OSMSerializer';\nimport MapFishPrintV3WMTSSerializer\n  from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3WMTSSerializer';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport { useMap } from '@terrestris/react-geo/dist/Hook/useMap';\nimport { getBearerTokenHeader } from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport SHOGunMapFishPrintV3TiledWMSSerializer from '../PrintForm/Serializer/SHOGunMapFishPrintV3TiledWMSSerializer';\nimport SHOGunMapFishPrintV3WMSSerializer from '../PrintForm/Serializer/SHOGunMapFishPrintV3WMSSerializer';\n\nimport CustomFieldInput from './CustomFieldInput';\nimport LayoutSelect from './LayoutSelect';\nimport OutputFormatSelect from './OutputFormatSelect';\nimport ResolutionSelect from './ResolutionSelect';\nimport ScaleSelect from './ScaleSelect';\n\nimport '../PrintForm/Shared/Shared';\n\nexport interface Layout {\n  name: string;\n  attributes: any[];\n}\n\nexport interface PrintFormProps extends Omit<FormProps, 'form'> {\n  active: boolean;\n  customPrintScales?: number[];\n  layerBlackList?: string[];\n  layouts?: Layout[];\n  outputFormats?: string[];\n}\n\nexport const PrintForm: React.FC<PrintFormProps> = ({\n  active,\n  customPrintScales = [],\n  layerBlackList = [],\n  outputFormats=['pdf', 'png'],\n  ...restProps\n}): JSX.Element => {\n\n  const [form] = Form.useForm();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  const map = useMap();\n\n  const currentLanguageCode = i18n.language;\n\n  const client = useSHOGunAPIClient();\n\n  const customMapParams = useAppSelector(state => state.print.customMapParams);\n  const customParams = useAppSelector(state => state.print.customParams);\n\n  const [printManager, setPrintManager] = useState<MapFishPrintV3Manager | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMsg, setErrorMsg] = useState<string | null>(null);\n\n  const layerFilter = useCallback((l: OlLayer<OlSource>) => {\n    if (!map) {\n      return;\n    }\n\n    const layerName = l.get('name');\n\n    return layerName && !layerBlackList.includes(layerName) &&\n      l.getVisible() && !(l instanceof OlLayerGroup) &&\n      MapUtil.layerInResolutionRange(l, map);\n  }, [map, layerBlackList]);\n\n  const legendFilter = useCallback((l: OlLayer<OlSource>) => {\n    if (_isNil(map)) {\n      return false;\n    }\n    const layerName = l.get('name');\n    const notBlacklisted = !layerBlackList.includes(layerName);\n    const notHidden = !l.get('hideLegendInPrint');\n    const visible = l.getVisible() && MapUtil.layerInResolutionRange(l, map);\n    const printableLayer = !(l instanceof OlLayerGroup);\n\n    if (notBlacklisted && notHidden && visible && printableLayer) {\n      const res = map?.getView().getResolution();\n      if (res) {\n        l.set('customPrintLegendParams', {\n          SCALE: MapUtil.getScaleForResolution(res, 'm')\n        });\n      }\n      return true;\n    }\n    return false;\n  }, [map, layerBlackList]);\n\n  const initializeMapProvider = useCallback(async () => {\n    if (_isNil(map)) {\n      return;\n    }\n    let pManagerOpts: MapFishPrintV3ManagerOpts = {\n      url: ClientConfiguration.print?.url || '/print',\n      map,\n      timeout: 60000,\n      layerFilter,\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak())\n      },\n      transformOpts: {\n        rotate: false\n      },\n      serializers: [\n        new MapFishPrintV3GeoJsonSerializer(),\n        new MapFishPrintV3OSMSerializer(),\n        new MapFishPrintV3WMTSSerializer(),\n        new SHOGunMapFishPrintV3WMSSerializer(),\n        new SHOGunMapFishPrintV3TiledWMSSerializer()\n      ],\n      legendFilter,\n      customParams,\n      customMapParams\n    };\n\n    if (customPrintScales.length > 0) {\n      pManagerOpts = {\n        ...pManagerOpts,\n        ...{\n          customPrintScales: customPrintScales.reverse()\n        }\n      };\n    }\n\n    const pManager: MapFishPrintV3Manager = new MapFishPrintV3Manager(pManagerOpts);\n\n    try {\n      await pManager.init();\n\n      // Use locale print app if available.\n      // Implies that a print app with the language code exists.\n      const apps = await pManager.getPrintApps();\n\n      if (apps && currentLanguageCode && apps.includes(currentLanguageCode)) {\n        await pManager.setPrintApp(currentLanguageCode);\n      }\n\n      pManager.setOutputFormat(pManager.getOutputFormats()[0]);\n      pManager.setDpi(pManager.getDpis()[0]);\n      pManager.setLayout(pManager.getLayouts()[0]?.name);\n\n      setPrintManager(pManager);\n    } catch (error) {\n      setErrorMsg(() => t('PrintForm.managerErrorMessage'));\n      Logger.error('Could not initialize print manager: ', error);\n    }\n  }, [customParams, customMapParams, client, layerFilter, legendFilter, map, t, customPrintScales, currentLanguageCode]);\n\n  useEffect(() => {\n    if (active) {\n      if (!printManager) {\n        initializeMapProvider();\n      }\n    } else {\n      printManager?.shutdownManager();\n      setPrintManager(null);\n    }\n  }, [printManager, active, initializeMapProvider]);\n\n  const onDownloadClick = async () => {\n    try {\n      setErrorMsg(null);\n      setLoading(true);\n\n      if (!printManager) {\n        return;\n      }\n\n      const downloadUrl = await printManager.print(false);\n\n      if (!downloadUrl) {\n        throw new Error('No download URL available, the job has failed.');\n      }\n\n      window.open(downloadUrl);\n    } catch (error: any) {\n      setErrorMsg(t('PrintForm.printJobErrorMsg') || null);\n      Logger.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onAlertClose = () => {\n    setErrorMsg(null);\n  };\n\n  return (\n    <div className=\"print\">\n      {\n        errorMsg &&\n        <Alert\n          className=\"print-alert\"\n          message={errorMsg}\n          type=\"error\"\n          closable\n          showIcon\n          onClose={onAlertClose}\n        />\n      }\n      {\n        printManager?.isInitiated() && (\n          <>\n            <Form\n              form={form}\n              className=\"print-form\"\n              labelAlign=\"left\"\n              labelCol={{\n                flex: '90px'\n              }}\n              {...restProps}\n            >\n              <Form.Item\n                name=\"title\"\n                label={t('PrintForm.title')}\n                initialValue={t('PrintForm.initialTitle')}\n              >\n                <CustomFieldInput\n                  maxLength={50}\n                  placeholder={t('PrintForm.titlePlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"comment\"\n                label={t('PrintForm.comment')}\n              >\n                <CustomFieldInput\n                  maxLength={200}\n                  placeholder={t('PrintForm.commentPlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"layout\"\n                label={t('PrintForm.layout')}\n                initialValue={printManager?.getLayouts()[0]?.name}\n              >\n                <LayoutSelect\n                  printManager={printManager}\n                />\n              </Form.Item>\n              <Form.Item\n                name='scale'\n                label={t('PrintForm.scale')}\n                initialValue={printManager?.getClosestScaleToFitMap()}\n              >\n                <ScaleSelect\n                  printManager={printManager}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"dpi\"\n                label={t('PrintForm.dpi')}\n                initialValue={printManager.getDpis()[0]}\n              >\n                <ResolutionSelect\n                  printManager={printManager}\n                  placeholder={t('PrintForm.resolutionPlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"format\"\n                label={t('PrintForm.format')}\n                initialValue=\"pdf\"\n              >\n                <OutputFormatSelect\n                  printManager={printManager}\n                  outputFormats={outputFormats}\n                  placeholder={t('PrintForm.outputFormatPlaceholder')}\n                />\n              </Form.Item>\n            </Form>\n            <Button\n              className='print-button tool-menu-button'\n              disabled={!printManager?.isInitiated()}\n              icon={<FontAwesomeIcon icon={faDownload} />}\n              loading={loading}\n              onClick={onDownloadClick}\n            >\n              {t('PrintForm.downloadBtnText')}\n            </Button>\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default PrintForm;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import * as React from 'react';\n\nimport {\n  useEffect,\n  useState\n} from 'react';\n\nimport CardStyle, {\n  CardStyleProps\n} from 'geostyler/dist/Component/CardStyle/CardStyle';\n\nimport OlParser from 'geostyler-openlayers-parser';\n\nimport {\n  Style as GsStyle\n} from 'geostyler-style';\n\nimport OlFeature from 'ol/Feature';\n\nimport OlLayerVector from 'ol/layer/Vector';\n\nimport VectorSource from 'ol/source/Vector';\n\nimport {\n  StyleFunction,\n  StyleLike as OlStyleLike\n} from 'ol/style/Style';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport type StylingComponentProps = CardStyleProps & {};\n\nexport const StylingComponent: React.FC<StylingComponentProps> = ({\n  ...passThroughProps\n}): JSX.Element => {\n\n  const defaultStyle: GsStyle = {\n    name: 'Default Style',\n    rules: [{\n      name: 'Area',\n      symbolizers: [{\n        kind: 'Fill',\n        color: '#00b72b',\n        outlineOpacity: 0.8,\n        opacity: 0.5,\n        fillOpacity: 0.8,\n        outlineWidth: 2,\n        outlineColor: '#00b72b'\n      }]\n    }, {\n      name: 'Line',\n      symbolizers: [{\n        kind: 'Line',\n        color: '#00b72b',\n        width: 2,\n        opacity: 0.8\n      }]\n    }, {\n      name: 'Point',\n      symbolizers: [{\n        kind: 'Mark',\n        wellKnownName: 'circle',\n        color: '#00b72b',\n        strokeColor: '#00b72b',\n        strokeOpacity: 0.8,\n        opacity: 0.5,\n        radius: 7\n      }],\n      filter: [\n        '==',\n        'label',\n        'undefined'\n      ]\n    }, {\n      name: 'Text',\n      symbolizers: [{\n        kind: 'Text',\n        label: '{{label}}',\n        size: 12,\n        font: [\n          'sans-serif'\n        ],\n        opacity: 0.8,\n        color: '#00b72b',\n        offset: [\n          5,\n          5\n        ],\n        haloColor: '#00b72b',\n        haloWidth: 1\n      }],\n      filter: [\n        '!=',\n        'label',\n        'undefined'\n      ]\n    }]\n  };\n\n  const [style, setStyle] = useState<GsStyle>(defaultStyle);\n\n  const map = useMap();\n\n  useEffect(() => {\n    if (!style || !map) {\n      return;\n    }\n\n    const olParser = new OlParser();\n\n    let drawVectorLayer = MapUtil.getLayerByName(map, 'react-geo_digitize') as OlLayerVector<VectorSource>;\n\n    const parseStyles = async () => {\n      let olStylePolygon: OlStyleLike;\n      let olStyleLineString: OlStyleLike;\n      let olStylePoint: OlStyleLike;\n      let olStyleText: OlStyleLike;\n\n      for (const rule of style.rules) {\n        const newStyle: GsStyle = {\n          name: '',\n          rules: [rule]\n        };\n\n        const olStyle = await olParser.writeStyle(newStyle);\n\n        if (!olStyle.output) {\n          return;\n        }\n\n        if (rule.symbolizers[0].kind === 'Fill') {\n          olStylePolygon = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Text') {\n          olStyleText = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Line') {\n          olStyleLineString = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Mark') {\n          olStylePoint = olStyle.output;\n        }\n      }\n\n      const drawLayerStyleFunction = (feature: OlFeature, resolution: number) => {\n        const geometryType = feature.getGeometry()?.getType();\n\n        if (!geometryType) {\n          return;\n        }\n\n        if (['MultiPolygon', 'Polygon', 'Circle'].includes(geometryType)) {\n          return typeof olStylePolygon === 'function' ? olStylePolygon(feature, resolution) : olStylePolygon;\n        }\n\n        if (['MultiLineString', 'LineString'].includes(geometryType)) {\n          return typeof olStyleLineString === 'function' ? olStyleLineString(feature, resolution) : olStyleLineString;\n        }\n\n        if (['MultiPoint', 'Point'].includes(geometryType)) {\n          if (feature.get('label')) {\n            return typeof olStyleText === 'function' ? olStyleText(feature, resolution) : olStyleText;\n          }\n\n          return typeof olStylePoint === 'function' ? olStylePoint(feature, resolution) : olStylePoint;\n        }\n      };\n\n      drawVectorLayer.setStyle(drawLayerStyleFunction as StyleFunction);\n    };\n\n    parseStyles();\n  }, [style, map]);\n\n  return (\n    <CardStyle\n      style={style}\n      onStyleChange={setStyle}\n      {...passThroughProps}\n    />\n  );\n};\n\nexport default StylingComponent;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faPaintBrush\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Drawer,\n  DrawerProps\n} from 'antd';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport './index.less';\n\nimport StylingComponent from './StylingComponent';\n\nexport type StylingDrawerProps = DrawerProps & {};\n\nexport const StylingDrawer: React.FC<StylingDrawerProps> = ({\n  ...passThroughProps\n}): JSX.Element => {\n\n  const [open, setOpen] = useState(false);\n\n  const {\n    t\n  } = useTranslation();\n\n  const showDrawer = () => {\n    setOpen(true);\n  };\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button\n        type=\"link\"\n        onClick={showDrawer}\n        icon={<FontAwesomeIcon icon={faPaintBrush} />}\n      >\n        {t('StylingDrawer.pickColor')}\n      </Button>\n      <Drawer\n        title={t('StylingDrawer.title')}\n        placement=\"right\"\n        onClose={onClose}\n        open={open}\n        mask={false}\n        width={'45vw'}\n        className=\"color-pick-drawer\"\n        {...passThroughProps}\n      >\n        <StylingComponent />\n      </Drawer>\n    </>\n  );\n};\n\nexport default StylingDrawer;\n","import React, {\n  ChangeEvent\n} from 'react';\n\nimport {\n  faDrawPolygon,\n  faGripLines,\n  faCircle,\n  faFont,\n  faSquare,\n  faPenToSquare,\n  faUpload,\n  faTrash,\n  faDownload\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Feature\n} from 'ol';\nimport GeoJSON from 'ol/format/GeoJSON';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport DeleteButton from '@terrestris/react-geo/dist/Button/DeleteButton/DeleteButton';\nimport DrawButton from '@terrestris/react-geo/dist/Button/DrawButton/DrawButton';\nimport ModifyButton from '@terrestris/react-geo/dist/Button/ModifyButton/ModifyButton';\nimport SimpleButton from '@terrestris/react-geo/dist/Button/SimpleButton/SimpleButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\nimport UploadButton from '@terrestris/react-geo/dist/Button/UploadButton/UploadButton';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport './index.less';\n\nimport StylingDrawer from './StylingDrawer';\n\ninterface DefaultDrawProps {\n  showDrawPoint?: boolean;\n  showDrawLine?: boolean;\n  showDrawPolygon?: boolean;\n  showDrawCircle?: boolean;\n  showDrawRectangle?: boolean;\n  showDrawAnnotation?: boolean;\n  showModifyFeatures?: boolean;\n  showUploadFeatures?: boolean;\n  showDownloadFeatures?: boolean;\n  showDeleteFeatures?: boolean;\n}\n\nexport interface DrawProps extends Partial<DefaultDrawProps> { }\n\nexport const Draw: React.FC<DrawProps> = ({\n  showDrawPoint,\n  showDrawLine,\n  showDrawPolygon,\n  showDrawCircle,\n  showDrawRectangle,\n  showDrawAnnotation,\n  showModifyFeatures,\n  showUploadFeatures,\n  showDownloadFeatures,\n  showDeleteFeatures\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const onGeoJSONDownload = () => {\n    const clonedFeatures: Feature[] = [];\n    if (map) {\n      const mapProjection = map.getView().getProjection().getCode();\n      const digitizeLayer = DigitizeUtil.getDigitizeLayer(map);\n      const digitizedFeatures = digitizeLayer.getSource()?.getFeatures();\n      if (digitizedFeatures && digitizedFeatures.length > 0) {\n        digitizedFeatures.forEach(feat => {\n          const clonedFeature = feat.clone();\n          clonedFeature.getGeometry()?.transform(mapProjection, 'EPSG:4326');\n          clonedFeatures.push(clonedFeature);\n        });\n        const geoJSON = new GeoJSON().writeFeatures(clonedFeatures);\n\n        const fileToDownload = new Blob([geoJSON], {\n          type: 'application/geo+json'\n        });\n\n        // download the file\n        const url = window.URL.createObjectURL(fileToDownload);\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'exportedFeatures.geojson');\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n  };\n\n  const onUploadChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const uploadedFiles = e.target.files;\n    if (\n      (uploadedFiles && uploadedFiles.length === 1) &&\n      (\n        uploadedFiles[0].type === 'application/geo+json' ||\n        uploadedFiles[0].type === 'application/geojson'\n      )\n    ) {\n      onGeoJSONUpload(uploadedFiles[0]);\n    }\n  };\n\n  const onGeoJSONUpload = (geoJSONFile: File) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      const geoJSONFeatures = new GeoJSON().readFeatures(fileReader.result);\n\n      if (map) {\n        const mapProjection = map.getView().getProjection().getCode();\n        geoJSONFeatures.forEach(feat => {\n          feat.getGeometry()?.transform('EPSG:4326', mapProjection);\n        });\n        const digitizeLayer = DigitizeUtil.getDigitizeLayer(map);\n        const digitizeLayerSource = digitizeLayer.getSource();\n        digitizeLayerSource?.addFeatures(geoJSONFeatures);\n      }\n    };\n\n    fileReader.readAsText(geoJSONFile);\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <ToggleGroup>\n\n      {showDrawPoint ? (\n        <DrawButton\n          name=\"draw-point\"\n          drawType=\"Point\"\n          type=\"link\"\n          pressed={false}\n        >\n          <FontAwesomeIcon\n            icon={faCircle}\n          />\n          <span\n            className=\"draw-point\"\n          >\n            {t('Draw.point')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawLine ? (\n        <DrawButton\n          name=\"draw-line\"\n          drawType=\"LineString\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faGripLines}\n          />\n          <span\n            className=\"draw-line\"\n          >\n            {t('Draw.line')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawPolygon ? (\n        <DrawButton\n          name=\"draw-polygon\"\n          drawType=\"Polygon\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faDrawPolygon}\n          />\n          <span\n            className=\"draw-polygon\"\n          >\n            {t('Draw.polygon')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawCircle ? (\n        <DrawButton\n          name=\"draw-circle\"\n          drawType=\"Circle\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faCircle}\n          />\n          <span\n            className=\"draw-circle\"\n          >\n            {t('Draw.circle')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawRectangle ? (\n        <DrawButton\n          name=\"draw-rectangle\"\n          drawType=\"Rectangle\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faSquare}\n          />\n          <span\n            className=\"draw-rectangle\"\n          >\n            {t('Draw.rectangle')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawAnnotation ? (\n        <DrawButton\n          name=\"draw-text\"\n          drawType=\"Text\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faFont}\n          />\n          <span\n            className=\"draw-text\"\n          >\n            {t('Draw.text')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showModifyFeatures ? (\n        <ModifyButton\n          name=\"draw-modify\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faPenToSquare}\n          />\n          <span\n            className=\"draw-modify\"\n          >\n            {t('Draw.modify')}\n          </span>\n        </ModifyButton>\n      ) : <></>}\n\n      {showUploadFeatures ? (\n        <UploadButton\n          name=\"draw-upload\"\n          onChange={onUploadChange}\n          type=\"link\"\n        >\n          <SimpleButton\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faUpload}\n            />\n            <span\n              className=\"draw-upload\"\n            >\n              {t('Draw.upload')}\n            </span>\n          </SimpleButton>\n        </UploadButton>\n      ) : <></>}\n\n      {showDownloadFeatures ? (\n        <SimpleButton\n          name=\"draw-export\"\n          onClick={onGeoJSONDownload}\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faDownload}\n          />\n          <span\n            className=\"draw-export\"\n          >\n            {t('Draw.export')}\n          </span>\n        </SimpleButton>\n      ) : <></>}\n\n      {showDeleteFeatures ? (\n        <DeleteButton\n          name=\"draw-delete\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faTrash}\n          />\n          <span\n            className=\"draw-delete\"\n          >\n            {t('Draw.delete')}\n          </span>\n        </DeleteButton>\n      ) : <></>}\n      <StylingDrawer />\n    </ToggleGroup>\n  );\n};\n\nexport default Draw;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  faCopy\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\nimport {\n  Button,\n  Pagination,\n  TableProps,\n  Tooltip\n} from 'antd';\n\nimport copy from 'copy-to-clipboard';\n\nimport _isFinite from 'lodash/isFinite';\n\nimport OlFeature from 'ol/Feature';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\nimport OlStyleCircle from 'ol/style/Circle';\nimport OlStyleFill from 'ol/style/Fill';\nimport OlStyleStroke from 'ol/style/Stroke';\nimport OlStyle from 'ol/style/Style';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport PropertyGrid from '@terrestris/react-geo/dist/Grid/PropertyGrid/PropertyGrid';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\nexport type FeatureInfoPropertyGridProps = {\n  features: OlFeature[];\n  layerName: string;\n} & TableProps<OlFeature>;\n\nexport const FeatureInfoPropertyGrid: React.FC<FeatureInfoPropertyGridProps> = ({\n  features,\n  layerName,\n  ...restProps\n}): JSX.Element => {\n  const [currentPage, setCurrenPage] = useState<number>();\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n\n  const map = useMap();\n\n  const vectorLayerName = `selection-layer-${layerName}`;\n\n  const onChange = (page: number) => {\n    setCurrenPage(page);\n    setSelectedFeature(features[page - 1]);\n  };\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const initVectorLayer = () => {\n      if (MapUtil.getLayerByName(map, vectorLayerName)) {\n        return;\n      }\n\n      const source = new OlSourceVector({\n        features: features\n      });\n\n      const fill = new OlStyleFill({\n        color: 'rgba(255, 255, 255, 0.15)'\n      });\n      const stroke = new OlStyleStroke({\n        color: 'rgba(209, 70, 47, 1)',\n        width: 2\n      });\n      const featureStyle = new OlStyle({\n        fill,\n        stroke,\n        image: new OlStyleCircle({\n          radius: 5,\n          fill,\n          stroke\n        })\n      });\n\n      const layer = new OlLayerVector({\n        source: source,\n        style: featureStyle\n      });\n\n      layer.set('name', vectorLayerName);\n\n      map.addLayer(layer);\n    };\n\n    const deinitVectorLayer = () => {\n      const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n      if (!vectorLayer) {\n        return;\n      }\n\n      map.removeLayer(vectorLayer);\n    };\n\n    initVectorLayer();\n\n    return () => deinitVectorLayer();\n  }, [features, map, vectorLayerName]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    setCurrenPage(1);\n\n    if (features.length > 0) {\n      setSelectedFeature(features[0]);\n    }\n  }, [features, map, vectorLayerName]);\n\n  useEffect(() => {\n    if (!selectedFeature || !map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n\n    vectorLayer.getSource()?.addFeature(selectedFeature);\n  }, [selectedFeature, map, vectorLayerName]);\n\n  if (!selectedFeature) {\n    return <></>;\n  }\n\n  return (\n    <PropertyGrid\n      className=\"property-grid\"\n      feature={selectedFeature}\n      size=\"small\"\n      sticky={true}\n      title={() => {\n        return (\n          <>\n            <Pagination\n              simple\n              total={features.length}\n              size=\"small\"\n              pageSize={1}\n              current={currentPage}\n              onChange={onChange}\n            />\n            <Tooltip\n              // TODO Move to i18n\n              title=\"Copy to clipboard\"\n            >\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  copy(new OlFormatGeoJSON().writeFeature(selectedFeature));\n                }}\n                icon={<FontAwesomeIcon icon={faCopy} />}\n              />\n            </Tooltip>\n          </>\n        );\n      }}\n      columns={[{\n        title: 'Key',\n        dataIndex: 'attributeName',\n        key: 'attributeName',\n        width: '50%',\n        ellipsis: true,\n        defaultSortOrder: 'ascend',\n        sorter: (a, b) => a.key.localeCompare(b.key)\n      }, {\n        title: 'Value',\n        dataIndex: 'attributeValue',\n        key: 'attributeValue',\n        width: '50%',\n        ellipsis: true\n      }]}\n      scroll={{\n        scrollToFirstRowOnChange: true,\n        y: 'calc(100% - 90px)'\n      }}\n      {...restProps}\n    />\n  );\n};\n\nexport default FeatureInfoPropertyGrid;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Tabs\n} from 'antd';\n\nimport {\n  getUid\n} from 'ol';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlLayerBase from 'ol/layer/Base';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  Tab\n} from 'rc-tabs/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport CoordinateInfo, {\n  CoordinateInfoState,\n  CoordinateInfoProps\n} from '@terrestris/react-geo/dist/CoordinateInfo/CoordinateInfo';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  isWmsLayer,\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport usePlugins from '../../../hooks/usePlugins';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport {\n  isFeatureInfoIntegration\n} from '../../../plugin';\n\nimport {\n  SelectedFeatures,\n  setSelectedFeatures\n} from '../../../store/selectedFeatures';\n\nimport FeatureInfoPropertyGrid from './FeaturePropertyGrid';\n\nimport './index.less';\n\nexport type FeatureInfoProps = {\n  enabled?: boolean;\n} & Partial<CoordinateInfoProps>;\n\nexport const FeatureInfo: React.FC<FeatureInfoProps> = ({\n  enabled,\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const plugins = usePlugins();\n  const dispatch = useAppDispatch();\n\n  const [queryLayers, setQueryLayers] = useState<WmsLayer[]>([]);\n\n  const layerFilter = (layer: OlLayerBase) => {\n    if (!layer.get('hoverable')) {\n      return false;\n    }\n    if (layer instanceof OlLayerImage && layer.getSource() instanceof OlSourceImageWMS) {\n      return true;\n    }\n    return layer instanceof OlLayerTile && layer.getSource() instanceof OlSourceTileWMS;\n  };\n\n  const updateQueryLayers = useCallback(() => {\n\n    if (!map) {\n      return;\n    }\n\n    const layerCandidates = MapUtil.getAllLayers(map, layerFilter) as WmsLayer[];\n    setQueryLayers(layerCandidates.filter(l => l.getVisible()));\n  }, [map]);\n\n  useEffect(() => {\n\n    if (!map) {\n      return;\n    }\n\n    updateQueryLayers();\n\n    const mapLayers = MapUtil.getAllLayers(map, layerFilter) as WmsLayer[];\n    mapLayers.forEach(l => l.on('change:visible', updateQueryLayers));\n\n    return () => {\n      mapLayers.forEach(l => l.un('change:visible', updateQueryLayers));\n    };\n\n  }, [map, updateQueryLayers]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  const resultRenderer = (coordinateInfoState: CoordinateInfoState) => {\n    const features = coordinateInfoState.features;\n    const loading = coordinateInfoState.loading;\n\n    if (Object.keys(features).length === 0) {\n      return (\n        <span className='usage-hint'>\n          {t('FeatureInfo.usageHint')}\n        </span>\n      );\n    }\n\n    const items: Tab[] = [];\n\n    Object.keys(features).forEach(layerName => {\n      let pluginRendererAvailable = false;\n\n      const mapLayer = map.getAllLayers().find(l => {\n        if (isWmsLayer(l)) {\n          const source = (l as WmsLayer).getSource();\n          const unqualifiedMapLayerName = getUnqualifiedLayerName(source?.getParams().LAYERS);\n          const unqualifiedLayerName = getUnqualifiedLayerName(layerName);\n\n          return unqualifiedLayerName === unqualifiedMapLayerName;\n        }\n        return false;\n      });\n\n      plugins.forEach(plugin => {\n        if (isFeatureInfoIntegration(plugin.integration) &&\n          ((Array.isArray(plugin.integration.layers) && plugin.integration.layers.includes(layerName)) ||\n            !plugin.integration.layers)) {\n          const {\n            key,\n            wrappedComponent: WrappedPluginComponent\n          } = plugin;\n\n          items.push({\n            label: layerName,\n            key: layerName,\n            children: (\n              <WrappedPluginComponent\n                key={key}\n              />\n            )\n          });\n\n          pluginRendererAvailable = true;\n        }\n      });\n\n      if (!pluginRendererAvailable) {\n        items.push({\n          label: mapLayer?.get('name') || layerName,\n          key: layerName,\n          children: (\n            <div\n              key={layerName}\n            >\n              <FeatureInfoPropertyGrid\n                features={features[layerName]}\n                layerName={layerName}\n                loading={loading}\n              />\n            </div>\n          )\n        });\n      }\n    });\n\n    return (\n      <Tabs\n        items={items}\n      />\n    );\n  };\n\n  const getUnqualifiedLayerName = (layerName: string) => {\n    return layerName.split(':').length > 1 ?\n      layerName.split(':')[1] :\n      layerName.split(':')[0];\n  };\n\n  if (!enabled) {\n    return <></>;\n  }\n\n  const getFetchOpts = () => {\n    const opts: {\n      [uid: string]: RequestInit;\n    } = {};\n\n    queryLayers.forEach(layer => {\n      const layerUid = getUid(layer);\n      opts[layerUid] = {\n        headers: {\n          ...layer.get('useBearerToken') ? {\n            ...getBearerTokenHeader(client?.getKeycloak())\n          } : undefined\n        }\n      };\n    });\n\n    return opts;\n  };\n\n  const onSuccess = (coordinateInfoState: CoordinateInfoState) => {\n    const features = coordinateInfoState.features;\n\n    const serializedFeatures: SelectedFeatures = {};\n    Object.entries(features).forEach(entry => {\n      const layerName = entry[0];\n      const selectedFeatures = entry[1];\n\n      serializedFeatures[layerName] = new OlFormatGeoJSON().writeFeatures(selectedFeatures);\n    });\n\n    dispatch(setSelectedFeatures(serializedFeatures));\n  };\n\n  return (\n    <div className='feature-info-panel'>\n      <CoordinateInfo\n        featureCount={10}\n        map={map}\n        queryLayers={queryLayers}\n        resultRenderer={resultRenderer}\n        fetchOpts={getFetchOpts()}\n        onSuccess={onSuccess}\n        {...restProps}\n      />\n    </div>\n  );\n};\n\nexport default FeatureInfo;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  ReactNode,\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  faClock\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Divider\n} from 'antd';\n\nimport moment from 'moment';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport type {\n  MarkObj\n} from 'rc-slider/es/Marks';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport TimeSlider, {\n  TimeSliderProps\n} from '@terrestris/react-geo/dist/Slider/TimeSlider/TimeSlider';\n\nimport './index.less';\n\ninterface WmsTimeSliderProps extends Omit<TimeSliderProps, 'min' | 'max' | 'marks' | 'useRange' |\n  'onChange' | 'defaultValue' | 'value' | 'formatString'> {\n  layer: OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>;\n}\n\nexport const WmsTimeSlider: React.FC<WmsTimeSliderProps> = ({\n  layer,\n  ...passThroughProps\n}) => {\n  const [value, setValue] = useState<string | [string, string]>(layer.getSource()?.getParams().TIME);\n  const [min, setMin] = useState<string>();\n  const [max, setMax] = useState<string>();\n  const [marks, setMarks] = useState<Record<string | number, string> | undefined>();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    const timeValues = layer.get('dimension')?.values?.split(',');\n\n    if (!timeValues || timeValues.length === 0) {\n      return;\n    }\n\n    setMin(timeValues[0]);\n    setMax(timeValues[timeValues.length - 1]);\n    setValue(timeValues[timeValues.length - 1]);\n\n    const m: Record<string | number, string> = {};\n    timeValues.forEach((val: string, idx: number) => {\n      m[val] = moment(val).format('YYYY-MM-DD');\n    });\n\n    setMarks(m);\n\n    if (timeValues.default === 'current') {\n      let nearest: [number, string] = [NaN, ''];\n      Object.values(m).forEach(d => {\n        let diff = moment().diff(moment(d));\n\n        if (diff < nearest[0]) {\n          nearest = [diff, d];\n        }\n      });\n\n      setValue(nearest[1]);\n    }\n  }, [layer]);\n\n  const onChange = (val: string | [string, string]) => {\n    setValue(val);\n\n    layer.getSource()?.updateParams({\n      TIME: val\n    });\n  };\n\n  return (\n    <div\n      className=\"wms-time-slider\"\n    >\n      <Divider>\n        <FontAwesomeIcon\n          icon={faClock}\n        />\n        {t('WmsTimeSlider.title')}\n      </Divider>\n      {\n        marks ?\n          <TimeSlider\n            min={min}\n            max={max}\n            marks={marks}\n            value={value}\n            onChange={onChange}\n            step={null}\n            {...passThroughProps}\n          /> :\n          <span>\n            {t('WmsTimeSlider.warning')}\n          </span>\n      }\n    </div>\n  );\n};\n\nexport default WmsTimeSlider;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faEllipsisV\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Dropdown,\n  DropDownProps,\n  notification,\n  Spin\n} from 'antd';\nimport {\n  ItemType\n} from 'antd/lib/menu/hooks/useItems';\n\nimport {\n  getUid\n} from 'ol';\nimport OlLayerBase from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport {\n  transformExtent\n} from 'ol/proj';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  MenuInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport LayerUtil from '@terrestris/ol-util/dist/LayerUtil/LayerUtil';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  DownloadConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from '../../../../hooks/useSHOGunAPIClient';\n\nexport type LayerTreeContextMenuProps = {\n  layer: OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>;\n  visibleLegendsIds: string[];\n  setVisibleLegendsIds: (ids: string[]) => void;\n} & Partial<DropDownProps>;\n\nexport const LayerTreeContextMenu: React.FC<LayerTreeContextMenuProps> = ({\n  layer,\n  visibleLegendsIds,\n  setVisibleLegendsIds,\n  ...restProps\n}): JSX.Element => {\n\n  const [settingsVisible, setSettingsVisible] = useState<boolean>(false);\n  const [extentLoading, setExtentLoading] = useState<boolean>(false);\n\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  const downloadConfig: DownloadConfig[] = layer.get('downloadConfig') ?? null;\n\n  const onContextMenuItemClick = (evt: MenuInfo): void => {\n    if (evt?.key.startsWith('downloadLayer')) {\n      const url = evt.key.split('|')[1];\n      downloadLayer(decodeURI(url));\n    }\n    switch (evt?.key) {\n      case 'zoomToExtent':\n        zoomToLayerExtent();\n        break;\n      case 'removeExternal':\n        removeExternalLayer();\n        break;\n      case 'toggleLegend':\n        const legendId: string = getUid(layer);\n        const newLegendIds = [...visibleLegendsIds];\n        if (newLegendIds.includes(legendId)) {\n          newLegendIds.splice(newLegendIds.indexOf(legendId), 1);\n        } else {\n          newLegendIds.push(legendId);\n        }\n        setVisibleLegendsIds(newLegendIds);\n        break;\n      default:\n        break;\n    }\n    setSettingsVisible(false);\n  };\n\n  const zoomToLayerExtent = async (): Promise<void> => {\n    if (!map) {\n      return;\n    }\n\n    setExtentLoading(true);\n\n    try {\n      let extent = await LayerUtil.getExtentForLayer(layer, {\n        headers: layer.get('useBearerToken') ? {\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : {}\n      });\n      extent = transformExtent(extent, 'EPSG:4326', map.getView().getProjection());\n      map.getView().fit(extent);\n    } catch (error) {\n      Logger.error(error);\n      notification.error({\n        message: t('LayerTreeContextMenu.extentError')\n      });\n    } finally {\n      setExtentLoading(false);\n    }\n  };\n\n  const getParentLayerGroups = (l: OlLayerBase): OlLayerGroup[] => {\n    if (!map) {\n      return [];\n    }\n\n    const layerGroups = getAllLayerGroups(map.getLayerGroup())\n      .filter(layerGroup => layerGroup.getLayers().getArray().includes(l));\n\n    return layerGroups;\n  };\n\n  const getAllLayerGroups = (layerGroup: OlLayerGroup): OlLayerGroup[] => {\n    const layerGroups = [layerGroup];\n\n    for (const l of layerGroup.getLayers().getArray()) {\n      if (l instanceof OlLayerGroup) {\n        layerGroups.push(...getAllLayerGroups(l));\n      }\n    }\n\n    return layerGroups;\n  };\n\n  const removeLayer = (l: OlLayerBase) => {\n    const parentGroups = getParentLayerGroups(l);\n\n    parentGroups.forEach(parentGroup => parentGroup.getLayers().remove(l));\n  };\n\n  const removeExternalLayer = () => {\n    if (!map) {\n      return;\n    }\n\n    removeLayer(layer);\n\n    const externalLayerGroup = MapUtil.getLayerByName(map, t('AddLayerModal.externalWmsFolder')) as OlLayerGroup;\n    const uploadedLayerGroup = MapUtil.getLayerByName(map, t('UploadDataModal.uploadedDataFolder')) as OlLayerGroup;\n\n    if (externalLayerGroup && externalLayerGroup.getLayers().getLength() === 0) {\n      removeLayer(externalLayerGroup);\n    }\n\n    if (uploadedLayerGroup && uploadedLayerGroup.getLayers().getLength() === 0) {\n      removeLayer(uploadedLayerGroup);\n    }\n  };\n\n  const downloadLayer = async (url: string) => {\n    if (!layer) {\n      return;\n    }\n    const reqOpts = {\n      method: 'GET',\n      headers: {\n        ...layer.get('useBearerToken') ? {\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : undefined\n      }\n    };\n\n    const res = await fetch(url, reqOpts);\n    const blob = await res.blob();\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.setAttribute('download', layer.get('name'));\n    a.click();\n  };\n\n  let dropdownMenuItems: ItemType[] = [];\n\n  if (isWmsLayer(layer)) {\n    dropdownMenuItems.push({\n      label: (\n        <Spin\n          spinning={extentLoading}\n        >\n          {t('LayerTreeContextMenu.layerZoomToExtent')}\n        </Spin>\n      ),\n      key: 'zoomToExtent'\n    });\n  }\n\n  const legendVisible = visibleLegendsIds.includes(getUid(layer));\n  if (isWmsLayer(layer) && layer.getVisible()) {\n    dropdownMenuItems.push({\n      label: legendVisible ? t('LayerTreeContextMenu.hideLegend') : t('LayerTreeContextMenu.showLegend'),\n      key: 'toggleLegend'\n    });\n  }\n\n  if (layer.get('isExternalLayer') || layer.get('isUploadedLayer')) {\n    dropdownMenuItems.push({\n      label: t('LayerTreeContextMenu.removeLayer'),\n      key: 'removeExternal'\n    });\n  }\n\n  if (downloadConfig) {\n    const downloadItems = downloadConfig.map((dlConfig: DownloadConfig) => {\n      return {\n        label: t('LayerTreeContextMenu.downloadLayer', {\n          formatName: dlConfig.formatName ?? 'XML'\n        }),\n        key: `downloadLayer|${encodeURI(dlConfig.downloadUrl)}`\n      };\n    });\n    dropdownMenuItems.push(...downloadItems);\n  }\n\n  return (\n    <Dropdown\n      menu={{\n        items: dropdownMenuItems,\n        onClick: onContextMenuItemClick\n      }}\n      placement=\"bottomLeft\"\n      onOpenChange={setSettingsVisible}\n      open={settingsVisible}\n      trigger={['click']}\n      {...restProps}\n    >\n      <FontAwesomeIcon icon={faEllipsisV} />\n    </Dropdown>\n  );\n};\n\nexport default LayerTreeContextMenu;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport { Progress } from 'antd';\n\nimport {\n  getUid, MapBrowserEvent\n} from 'ol';\nimport OlBaseLayer from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayer from 'ol/layer/Layer';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSource from 'ol/source/Source';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport RgLayerTree, {\n  LayerTreeProps as RgLayerTreeProps\n} from '@terrestris/react-geo/dist/LayerTree/LayerTree';\nimport Legend from '@terrestris/react-geo/dist/Legend/Legend';\nimport LayerTransparencySlider from '@terrestris/react-geo/dist/Slider/LayerTransparencySlider/LayerTransparencySlider';\n\nimport LayerType from '@terrestris/shogun-util/dist/model/enum/LayerType';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport WmsTimeSlider from '../../WmsTimeSlider';\n\nimport LayerTreeContextMenu from './LayerTreeContextMenu';\n\nimport './index.less';\n\nexport type LayerTreeProps = {} & Partial<RgLayerTreeProps>;\n\nexport type LayerTileLoadCounter = {\n  [key: string]: {\n    loading: number;\n    loaded: number;\n    percent: number;\n  };\n};\n\nexport const LayerTree: React.FC<LayerTreeProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const {\n    t\n  } = useTranslation();\n\n  const [visibleLegendsIds, setVisibleLegendsIds] = useState<string[]>([]);\n  const [layerTileLoadCounter, setLayerTileLoadCounter] = useState<LayerTileLoadCounter>({});\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const allLayers = MapUtil.getAllLayers(map);\n    allLayers.forEach(layer => {\n      if (layer instanceof OlLayer) {\n        const source = layer.getSource();\n        if (!source.hasListener('tileloadstart')) {\n          source.on('tileloadstart', tileLoadStartListener);\n        }\n        if (!source.hasListener('tileloadend') && !source.hasListener('tileloaderror')) {\n          source.on(['tileloadend', 'tileloaderror'], tileLoadEndListener);\n        }\n      }\n    });\n\n    return () => {\n      allLayers.forEach(layer => {\n        if (layer instanceof OlLayer) {\n          const source = layer.getSource();\n          if (source.hasListener('tileloadstart')) {\n            source.un('tileloadstart', tileLoadStartListener);\n          }\n          if (source.hasListener('tileloadend')) {\n            source.un('tileloadend', tileLoadEndListener);\n          }\n          if (source.hasListener('tileloaderror')) {\n            source.un('tileloaderror', tileLoadEndListener);\n          }\n        }\n      });\n    };\n  }, [map]);\n\n  const tileLoadStartListener = (evt: MapBrowserEvent<UIEvent>) => {\n    setLayerTileLoadCounter((counter: LayerTileLoadCounter) => {\n      const uid = parseInt(getUid(evt.target), 10);\n      const update = {...counter};\n      // reset when load was finished\n      if (update[uid] && update[uid].loaded >= update[uid].loading) {\n        update[uid].loading = 1;\n        update[uid].loaded = 0;\n        update[uid].percent = 0;\n        return update;\n      }\n      if (!update[uid]) {\n        update[uid] = {\n          loading: 0,\n          loaded: 0,\n          percent: 0\n        };\n      }\n      update[uid].loading = Number.isInteger(update[uid].loading) ?\n        update[uid].loading + 1 : 1;\n      return update;\n    });\n  };\n\n  const tileLoadEndListener = (evt: MapBrowserEvent<UIEvent>) => {\n    setLayerTileLoadCounter((counter: LayerTileLoadCounter) => {\n      const uid = parseInt(getUid(evt.target), 10);\n      const update = {...counter};\n      if (!update[uid]) {\n        update[uid] = {\n          loading: 0,\n          loaded: 0,\n          percent: 0\n        };\n      }\n      update[uid].loaded = Number.isInteger(update[uid].loaded) ?\n        update[uid].loaded + 1 : 1;\n      const percent = Math.round(update[uid].loaded / update[uid].loading * 100);\n      if (percent > update[uid].percent) {\n        update[uid].percent = percent;\n      }\n      return update;\n    });\n  };\n\n  const treeFilterFunction = (layer: OlLayer<OlSource> | OlLayerGroup) => {\n    if ((layer as OlLayerGroup).getLayers) {\n      return !layer.get('hideInLayerTree');\n    }\n\n    return !((layer as OlLayer).getSource && ((layer as OlLayer).getSource() as OlSourceVector)?.forEachFeature);\n  };\n\n  const treeNodeTitleRenderer = (layer: OlBaseLayer) => {\n    if (!map) {\n      return;\n    }\n\n    const mapView = map.getView();\n    const unit = mapView.getProjection().getUnits() || 'm';\n    const resolution = mapView.getResolution();\n    const scale = resolution ? MapUtil.getScaleForResolution(resolution, unit) : undefined;\n    const percent = layer instanceof OlLayer && getUid(layer.getSource()) ?\n      layerTileLoadCounter[getUid(layer.getSource())]?.percent : 100;\n\n    if (layer instanceof OlLayerGroup) {\n      return (\n        <div>\n          {layer.get('name')}\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"tree-node-header\">\n            <Progress\n              className='loading-indicator'\n              type=\"circle\"\n              percent={percent}\n              format={() => ''}\n              width={16}\n              strokeWidth={20}\n            />\n            <span>{layer.get('name')}</span>\n            {\n              (layer instanceof OlLayerTile || layer instanceof OlLayerImage) && (\n                <LayerTreeContextMenu\n                  layer={layer}\n                  visibleLegendsIds={visibleLegendsIds}\n                  setVisibleLegendsIds={setVisibleLegendsIds}\n                />\n              )\n            }\n\n          </div>\n          {\n            layer.get('visible') &&\n            <div className=\"layer-transparency\">\n              <LayerTransparencySlider\n                tooltip={{\n                  formatter: val => `${t('LayerTree.transparency')}: ${val}%`\n                }}\n                layer={layer}\n              />\n            </div>\n          }\n          {\n            (layer.get('visible') && layer.get('type') as LayerType === 'WMSTime') &&\n            <div className=\"layer-time-slider\">\n              <WmsTimeSlider\n                layer={layer as OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>}\n              />\n            </div>\n          }\n          {\n            (layer.get('visible') && visibleLegendsIds.includes(getUid(layer))) &&\n            <Legend\n              layer={layer as OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>}\n              errorMsg={t('LayerTree.noLegendAvailable')}\n              extraParams={{\n                scale,\n                LEGEND_OPTIONS: 'fontAntiAliasing:true;forceLabels:on',\n                TRANSPARENT: true\n              }}\n              headers={\n                layer.get('useBearerToken') ?\n                  {\n                    ...getBearerTokenHeader(client?.getKeycloak())\n                  } :\n                  {}\n              }\n            />\n          }\n        </>\n      );\n    }\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <RgLayerTree\n      className=\"layertree\"\n      map={map}\n      nodeTitleRenderer={treeNodeTitleRenderer}\n      filterFunction={treeFilterFunction}\n      draggable\n      {...restProps}\n    />\n  );\n};\n\nexport default LayerTree;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faDrawPolygon,\n  faPenRuler\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MeasureButton from '@terrestris/react-geo/dist/Button/MeasureButton/MeasureButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\ninterface DefaultMeasureProps {\n  showMeasureDistance?: boolean;\n  showMeasureArea?: boolean;\n}\n\nexport interface MeasureProps extends Partial<DefaultMeasureProps> { }\n\nexport const Measure: React.FC<MeasureProps> = ({\n  showMeasureDistance,\n  showMeasureArea\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <ToggleGroup>\n      {showMeasureDistance ? (\n        <MeasureButton\n          geodesic\n          name=\"line\"\n          map={map}\n          measureType=\"line\"\n          type=\"link\"\n          continueLineMsg={t('Measure.clicktodrawline')}\n        >\n          <FontAwesomeIcon icon={faPenRuler} />\n          <span className=\"measure-text\">{t('Measure.line')}</span>\n        </MeasureButton>\n      ) : <></>}\n\n      {showMeasureArea ? (\n        <MeasureButton\n          geodesic\n          name=\"poly\"\n          map={map}\n          measureType=\"polygon\"\n          type=\"link\"\n          continuePolygonMsg={t('Measure.clicktodrawarea')}\n        >\n          <FontAwesomeIcon icon={faDrawPolygon} />\n          <span className=\"measure-text\">{t('Measure.area')}</span>\n        </MeasureButton>\n      ) : <></>}\n\n    </ToggleGroup>\n  );\n};\n\nexport default Measure;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport type {\n  IconDefinition\n} from '@fortawesome/fontawesome-common-types';\n\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faDrawPolygon,\n  faFileDownload,\n  faLanguage,\n  faMousePointer,\n  faPlus,\n  faRuler,\n  faShareNodes,\n  faStream,\n  faUpload\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Collapse,\n  CollapsePanelProps,\n  Tooltip\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _toArray from 'lodash/toArray';\n\nconst { Panel } = Collapse;\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport usePlugins from '../../hooks/usePlugins';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nimport {\n  isToolMenuIntegration\n} from '../../plugin';\n\nimport {\n  show as showAdd\n} from '../../store/addLayerModal';\nimport {\n  setActiveKeys\n} from '../../store/toolMenu';\nimport {\n  show as showUpload\n} from '../../store/uploadDataModal';\n\nimport LanguageSelect from '../LanguageSelector';\nimport Permalink from '../Permalink';\nimport PrintForm from '../PrintForm';\n\nimport Draw from './Draw';\nimport FeatureInfo from './FeatureInfo';\nimport LayerTree from './LayerTree';\nimport Measure from './Measure';\n\nimport './index.less';\n\nexport interface TitleEventEntity {\n  key: string;\n  domEvent: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>;\n}\n\nexport type ToolPanelConfig = {\n  icon: IconDefinition;\n  title: string;\n  wrappedComponent: JSX.Element;\n};\n\nexport type ToolMenuProps = {} & Partial<CollapsePanelProps>;\n\nexport const ToolMenu: React.FC<ToolMenuProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n  const map = useMap();\n\n  const plugins = usePlugins();\n\n  const dispatch = useAppDispatch();\n  const availableTools = useAppSelector(state => state.toolMenu.availableTools);\n  const activeKeys = useAppSelector(state => state.toolMenu.activeKeys);\n\n  const client = useSHOGunAPIClient();\n  const keycloak = client?.getKeycloak();\n\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const [menuTools, setMenuTools] = useState<string[]>([]);\n\n  useEffect(() => {\n    const mobileQuery = window.matchMedia('only screen and (max-width: 450px) and (orientation: portrait),' +\n      'only screen and (max-width: 750px) and (orientation: landscape), only screen and (max-width: 580px)');\n    const mobileNavigatorRegEx = new RegExp('/Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle' +\n      '|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/');\n    const isMobile = mobileQuery.matches || mobileNavigatorRegEx.test(window.navigator.userAgent);\n\n    if (isMobile) {\n      setCollapsed(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (menuTools.length < 1) {\n      if (availableTools.includes('default')) {\n        setMenuTools([\n          'measure_tools',\n          'draw_tools',\n          'feature_info',\n          'print',\n          'tree',\n          'permalink',\n          'language_selector'\n        ]);\n      } else {\n        setMenuTools(availableTools);\n      }\n    }\n  }, [menuTools, availableTools]);\n\n  useEffect(() => {\n    if (\n      activeKeys.includes('print') &&\n      activeKeys.includes('measure_tools')\n    ) {\n      if (activeKeys.indexOf('print') < activeKeys.indexOf('measure_tools')) {\n        dispatch(setActiveKeys(activeKeys.filter(keys => keys !== 'print')));\n      } else {\n        dispatch(\n          setActiveKeys(activeKeys.filter(keys => keys !== 'measure_tools'))\n        );\n      }\n    }\n  }, [activeKeys, dispatch]);\n\n  const getToolPanels = (): JSX.Element[] => {\n\n    const panels: JSX.Element[] = [];\n\n    menuTools.forEach((tool: string) => {\n      const toolPanelConfig: ToolPanelConfig | undefined = getToolPanelConfig(tool);\n\n      if (!toolPanelConfig) {\n        return;\n      }\n      const {\n        icon,\n        title,\n        wrappedComponent\n      } = toolPanelConfig;\n\n      const panel = (\n        <Panel\n          className={tool}\n          header={\n            <>\n              {icon ? <FontAwesomeIcon icon={icon} /> : undefined}\n              <span>{title}</span>\n            </>\n          }\n          key={tool}\n        >\n          {wrappedComponent}\n        </Panel>\n      );\n      panels.push(panel);\n    });\n\n    if (plugins) {\n      plugins.forEach(plugin => {\n        if (isToolMenuIntegration(plugin.integration)) {\n          const {\n            key,\n            wrappedComponent: WrappedPluginComponent,\n            integration: {\n              placement,\n              label = 'Plugin',\n              insertionIndex,\n              icon,\n              ...passThroughProps\n            }\n          } = plugin;\n\n          panels.splice(insertionIndex || 0, 0, (\n            <Panel\n              header={\n                <>\n                  {icon ? <FontAwesomeIcon icon={icon} /> : undefined}\n                  <span>{t(label)}</span>\n                </>\n              }\n              key={key}\n              {...passThroughProps}\n            >\n              <WrappedPluginComponent />\n            </Panel>\n          ));\n        }\n      });\n    }\n    return panels;\n  };\n\n  const getToolPanelConfig = (tool: string): ToolPanelConfig | undefined => {\n    switch (tool) {\n      case 'measure_tools':\n        return {\n          icon: faRuler,\n          title: t('ToolMenu.measure'),\n          wrappedComponent: (\n            <Measure\n              showMeasureDistance={\n                availableTools.includes('default') || availableTools.includes('measure_tools_distance')\n              }\n              showMeasureArea={availableTools.includes('default') || availableTools.includes('measure_tools_area')}\n            />\n          )\n        };\n      case 'draw_tools':\n        return {\n          icon: faDrawPolygon,\n          title: t('ToolMenu.draw'),\n          wrappedComponent: (\n            <Draw\n              showDrawPoint={availableTools.includes('default') || availableTools.includes('draw_tools_point')}\n              showDrawLine={availableTools.includes('default') || availableTools.includes('draw_tools_line')}\n              showDrawPolygon={availableTools.includes('default') || availableTools.includes('draw_tools_polygon')}\n              showDrawCircle={availableTools.includes('default') || availableTools.includes('draw_tools_circle')}\n              showDrawRectangle={availableTools.includes('default') || availableTools.includes('draw_tools_rectangle')}\n              showDrawAnnotation={\n                availableTools.includes('default') || availableTools.includes('draw_tools_annotation')\n              }\n              showModifyFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_modify')}\n              showUploadFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_upload')}\n              showDownloadFeatures={\n                availableTools.includes('default') || availableTools.includes('draw_tools_download')\n              }\n              showDeleteFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_delete')}\n            />\n          )\n        };\n      case 'feature_info':\n        return {\n          icon: faMousePointer,\n          title: t('ToolMenu.featureInfo'),\n          wrappedComponent: (\n            <FeatureInfo\n              enabled={activeKeys.includes('feature_info')}\n            />\n          )\n        };\n      case 'print':\n        return {\n          icon: faFileDownload,\n          title: t('ToolMenu.print'),\n          wrappedComponent: map ? (\n            <PrintForm\n              active={activeKeys.includes('print')}\n              layerBlackList={[\n                'react-geo_measure',\n                'hoverVectorLayer'\n              ]}\n            />\n          ) : <></>\n        };\n      case 'tree':\n        return {\n          icon: faStream,\n          title: t('ToolMenu.layertree'),\n          wrappedComponent: (\n            <div className='tree-wrapper'>\n              <LayerTree />\n              <Button\n                className='add-wms-button tool-menu-button'\n                icon={<FontAwesomeIcon icon={faPlus} />}\n                onClick={() => dispatch(showAdd())}\n              >\n                {t('ToolMenu.addWms')}\n              </Button>\n              {\n                keycloak && ClientConfiguration.geoserver?.upload?.authorizedRoles?.some(\n                  role => keycloak.hasResourceRole(role, keycloak.clientId)) && (\n                  <Button\n                    className='upload-data-button tool-menu-button'\n                    icon={<FontAwesomeIcon icon={faUpload} />}\n                    onClick={() => dispatch(showUpload())}\n                  >\n                    {t('ToolMenu.uploadData')}\n                  </Button>\n                )\n              }\n            </div>\n          )\n        };\n      case 'permalink':\n        return {\n          icon: faShareNodes,\n          title: t('Permalink.title'),\n          wrappedComponent: <Permalink />\n        };\n      case 'language_selector':\n        return {\n          icon: faLanguage,\n          title: t('ToolMenu.languageSelect'),\n          wrappedComponent: <LanguageSelect />\n        };\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className={`tool-menu ${collapsed ? 'collapsed' : ''}`}>\n      <Collapse\n        expandIconPosition='end'\n        activeKey={activeKeys}\n        destroyInactivePanel={true}\n        onChange={(keys: string[] | string) => {\n          setCollapsed(false);\n          dispatch(setActiveKeys(_toArray(keys)));\n        }}\n        {...restProps}\n      >\n        {getToolPanels()}\n      </Collapse>\n      <Tooltip\n        placement={'right'}\n        title={collapsed ? t('ToolMenu.expand') : t('ToolMenu.collapse')}\n      >\n        <Button\n          className=\"collapse-btn\"\n          icon={\n            collapsed ?\n              <FontAwesomeIcon icon={faChevronRight} /> :\n              <FontAwesomeIcon icon={faChevronLeft} />\n          }\n          onClick={() => {\n            dispatch(setActiveKeys([]));\n            setCollapsed(!collapsed);\n          }}\n        />\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default ToolMenu;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faUpload\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Alert,\n  Modal,\n  ModalProps,\n  Spin,\n  Upload\n} from 'antd';\n\nconst { Dragger } = Upload;\n\nimport {\n  RcFile,\n  UploadChangeParam,\n  UploadFile\n} from 'antd/lib/upload/interface';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport TileLayer from 'ol/layer/Tile';\nimport TileWMSSource from 'ol/source/TileWMS';\n\nimport {\n  UploadRequestOption\n} from 'rc-upload/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Shapefile\n} from 'shapefile.js';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport {\n  hide\n} from '../../store/uploadDataModal';\n\nimport './index.less';\n\ntype FeatureTypeAttribute = {\n  name: string;\n  minOccurs: number;\n  maxOccurs: number;\n  nillable: boolean;\n  binding?: string | null;\n  length?: number;\n};\n\ntype FeatureTypeAttributes = {\n  attribute: FeatureTypeAttribute[];\n};\n\nexport type LayerUploadOptions = {\n  baseUrl: string;\n  workspace: string;\n  storeName: string;\n  layerName: string;\n  file: RcFile;\n};\n\nexport type LayerUploadResponse = {\n  layerName: string;\n  workspace: string;\n  baseUrl: string;\n};\n\nexport type UploadDataModalProps = {} & Partial<ModalProps>;\n\nexport const UploadDataModal: React.FC<UploadDataModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [uploadError, setUploadError] = useState('');\n  const [uploadSuccess, setUploadSuccess] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n\n  const isModalVisible = useAppSelector(state => state.uploadDataModal.visible);\n  const user = useAppSelector((state) => state.user);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const closeModal = () => {\n    setUploadError('');\n    setUploadSuccess('');\n    dispatch(hide());\n  };\n\n  const addLayer = (layer: TileLayer<TileWMSSource>) => {\n    if (!map) {\n      return;\n    }\n\n    const targetFolderName = t('UploadDataModal.uploadedDataFolder');\n    let targetGroup = MapUtil.getLayerByName(map, targetFolderName) as OlLayerGroup;\n\n    if (!targetGroup) {\n      targetGroup = new OlLayerGroup({\n        layers: [],\n        properties: {\n          name: targetFolderName\n        }\n      });\n      const existingGroups = map.getLayerGroup().getLayers();\n      existingGroups.insertAt(existingGroups?.getLength() || 0, targetGroup);\n    }\n\n    if (!targetGroup.getLayers().getArray().includes(layer)) {\n      targetGroup.getLayers().push(layer);\n    }\n  };\n\n  const onBeforeFileUpload = (file: RcFile) => {\n    const maxSize = ClientConfiguration.geoserver?.upload?.limit || 200000000;\n    const fileType = file.type;\n    const fileSize = file.size;\n\n    setUploadError('');\n    setUploadSuccess('');\n\n    if (fileSize > maxSize) {\n      setUploadError(t('UploadDataModal.error.maxSize', {\n        maxSize: maxSize / 1000000\n      }));\n\n      return false;\n    }\n\n    const supportedFormats = ['application/zip', 'image/tiff'];\n    if (!supportedFormats.includes(fileType)) {\n      setUploadError(t('UploadDataModal.error.supportedFormats', {\n        supportedFormats: supportedFormats.join(', ')\n      }));\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const uploadGeoTiff = async (options: LayerUploadOptions): Promise<void> => {\n    const {\n      baseUrl,\n      workspace,\n      storeName,\n      layerName,\n      file\n    } = options;\n\n    const coverageStoreUrl = `${baseUrl}/rest/workspaces/${workspace}/coveragestores/` +\n      `${storeName}/file.geotiff?configure=none`;\n\n    const coverageStoreResponse = await fetch(coverageStoreUrl, {\n      method: 'PUT',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'image/tiff'\n      },\n      body: file\n    });\n\n    if (!coverageStoreResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n\n    const coverageUrl = `${baseUrl}/rest/workspaces/${workspace}/coveragestores/${storeName}/coverages`;\n\n    const coverageResponse = await fetch(coverageUrl, {\n      method: 'POST',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        coverage: {\n          enabled: true,\n          name: layerName,\n          nativeName: layerName,\n          title: layerName,\n          keywords: {\n            // eslint-disable-next-line quote-props\n            'string': [\n              'User upload',\n              `Uploaded by ${user.providerDetails?.username}`\n            ]\n          }\n        }\n      })\n    });\n\n    if (!coverageResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n  };\n\n  const uploadShapeZip = async (options: LayerUploadOptions): Promise<void> => {\n    const {\n      baseUrl,\n      workspace,\n      storeName,\n      layerName,\n      file\n    } = options;\n\n    const shp = await Shapefile.load(file);\n\n    let featureTypeName = '';\n    let featureTypeAttributes: FeatureTypeAttributes = {\n      attribute: []\n    };\n\n    if (Object.entries(shp).length !== 1) {\n      throw new Error(t('UploadDataModal.error.zipContent'));\n    }\n\n    Object.entries(shp).forEach(([k, v]) => {\n      featureTypeName = k;\n\n      const dbfContent = v.parse('dbf', {\n        properties: false\n      });\n\n      featureTypeAttributes.attribute = dbfContent.fields.map(field => ({\n        name: field.name,\n        minOccurs: 0,\n        maxOccurs: 1,\n        nillable: true,\n        binding: getAttributeType(field.type),\n        length: field.length\n      }));\n\n      const shxContent = v.parse('shx');\n\n      featureTypeAttributes.attribute.push({\n        name: 'the_geom',\n        minOccurs: 0,\n        maxOccurs: 1,\n        nillable: true,\n        binding: getGeometryType(shxContent.header.type)\n      });\n    });\n\n    const url = `${baseUrl}/rest/workspaces/${workspace}/datastores/` +\n      `${storeName}/file.shp?configure=none`;\n\n    const response = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/zip'\n      },\n      body: file\n    });\n\n    if (!response.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n\n    const featureTypeUrl = `${baseUrl}/rest/workspaces/${workspace}/datastores/${storeName}/featuretypes`;\n\n    const featureTypeResponse = await fetch(featureTypeUrl, {\n      method: 'POST',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        featureType: {\n          enabled: true,\n          name: layerName,\n          nativeName: featureTypeName,\n          title: layerName,\n          attributes: featureTypeAttributes,\n          keywords: {\n            // eslint-disable-next-line quote-props\n            'string': [\n              'User upload',\n              `Uploaded by ${user.providerDetails?.username}`\n            ]\n          }\n        }\n      })\n    });\n\n    if (!featureTypeResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n  };\n\n  const onFileUploadAction = async (options: UploadRequestOption<LayerUploadResponse>) => {\n    const {\n      onError,\n      onSuccess,\n      file\n    } = options;\n\n    const splittedFileName = (file as RcFile).name.split('.');\n    const fileType = (file as RcFile).type;\n    const geoServerBaseUrl = ClientConfiguration.geoserver?.base || '/geoserver';\n    const workspace = ClientConfiguration.geoserver?.upload?.workspace || 'SHOGUN';\n    const layerName = `${splittedFileName[0]}_${Date.now()}`.toUpperCase();\n\n    const uploadData = {\n      file: file as RcFile,\n      baseUrl: geoServerBaseUrl,\n      workspace: workspace,\n      storeName: layerName,\n      layerName: layerName\n    };\n\n    try {\n      if (fileType === 'image/tiff') {\n        await uploadGeoTiff(uploadData);\n      }\n\n      if (fileType === 'application/zip') {\n        await uploadShapeZip(uploadData);\n      }\n\n      if (onSuccess) {\n        onSuccess({\n          baseUrl: geoServerBaseUrl,\n          workspace: workspace,\n          layerName: layerName\n        });\n      }\n    } catch (error) {\n      if (onError) {\n        onError({\n          name: 'UploadError',\n          message: (error instanceof Error) ? error.message : t('UploadDataModal.error.general', {\n            fileName: (file as RcFile).name\n          })\n        });\n      }\n    }\n  };\n\n  const onFileUploadChange = async (info: UploadChangeParam<UploadFile<LayerUploadResponse>>) => {\n    const file = info.file;\n\n    if (file.status === 'uploading') {\n      setIsUploading(true);\n    }\n\n    if (file.status === 'done') {\n      if (!client || !file.response) {\n        return;\n      }\n\n      const layerConfig: Layer = {\n        name: file.response.layerName,\n        type: 'TILEWMS',\n        clientConfig: {\n          hoverable: true\n        },\n        sourceConfig: {\n          url: `${file.response.baseUrl}/ows?`,\n          layerNames: `${file.response.workspace}:${file.response.layerName}`,\n          useBearerToken: true\n        }\n      };\n\n      const parser = new SHOGunApplicationUtil({\n        client\n      });\n\n      const olLayer = parser.parseTileLayer(layerConfig);\n      olLayer.set('layerConfig', layerConfig);\n      olLayer.set('isUploadedLayer', true);\n      olLayer.set('groupName', t('UploadDataModal.uploadedDataFolder'));\n      addLayer(olLayer);\n\n      setUploadSuccess(t('UploadDataModal.success', {\n        fileName: file.name,\n        layerName: file.response.layerName\n      }));\n\n      setIsUploading(false);\n    } else if (file.status === 'error') {\n      setIsUploading(false);\n\n      Logger.error(file.error);\n\n      if (file.error && file.error.message) {\n        setUploadError(file.error.message);\n      } else {\n        setUploadError(t('UploadDataModal.error.general', {\n          fileName: file.name\n        }));\n      }\n    }\n  };\n\n  const getGeometryType = (type: number) => {\n    const types: {\n      [key: number]: string | null;\n    } = {\n      0: null, // Null\n      1: 'org.locationtech.jts.geom.Point', // Point\n      3: 'org.locationtech.jts.geom.LineString', // Polyline\n      5: 'org.locationtech.jts.geom.Polygon', // Polygon\n      8: 'org.locationtech.jts.geom.MultiPoint', // MultiPoint\n      11: 'org.locationtech.jts.geom.Point', // PointZ\n      13: 'org.locationtech.jts.geom.LineString', // PolylineZ\n      15: 'org.locationtech.jts.geom.Polygon', // PolygonZ\n      18: 'org.locationtech.jts.geom.MultiPoint', // MultiPointZ\n      21: 'org.locationtech.jts.geom.Point', // PointM\n      23: 'org.locationtech.jts.geom.LineString', // PolylineM\n      25: 'org.locationtech.jts.geom.Polygon', // PolygonM\n      28: 'org.locationtech.jts.geom.MultiPoint', // MultiPointM\n      31: null // MultiPatch\n    };\n\n    return types[type];\n  };\n\n  const getAttributeType = (dbfFieldType: string) => {\n    switch (dbfFieldType) {\n      case 'C': // Character\n        return 'java.lang.String';\n      case 'D': // Date\n        return 'java.util.Date';\n      case 'N': // Numeric\n        return 'java.lang.Long';\n      case 'F': // Floating point\n        return 'java.lang.Double';\n      case 'L': // Logical\n        return 'java.lang.Boolean';\n      case 'M': // Memo\n        return null;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Modal\n      className=\"upload-data-modal\"\n      title={t('UploadDataModal.title')}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={600}\n      footer={false}\n      {...restProps}\n    >\n      {\n        uploadSuccess && (\n          <Alert\n            message={uploadSuccess}\n            closable={true}\n            type=\"success\"\n          />\n        )\n      }\n\n      {\n        uploadError && (\n          <Alert\n            message={uploadError}\n            closable={true}\n            type=\"error\"\n          />\n        )\n      }\n\n      <Spin\n        spinning={isUploading}\n      >\n        <Dragger\n          customRequest={onFileUploadAction}\n          accept='image/tiff,application/zip'\n          maxCount={1}\n          showUploadList={false}\n          beforeUpload={onBeforeFileUpload}\n          onChange={onFileUploadChange}\n        >\n          <p className=\"ant-upload-drag-icon\">\n            <FontAwesomeIcon\n              icon={faUpload}\n            />\n          </p>\n          <p className=\"ant-upload-text\">\n            {t('UploadDataModal.description')}\n          </p>\n          <p className=\"ant-upload-hint\">\n            {t('UploadDataModal.hint')}\n          </p>\n        </Dragger>\n      </Spin>\n    </Modal>\n  );\n};\n\nexport default UploadDataModal;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport AddLayerModal from './components/AddLayerModal/index';\nimport BasicMapComponent from './components/BasicMapComponent';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport ToolMenu from './components/ToolMenu';\nimport UploadDataModal from './components/UploadDataModal';\n\nimport './App.less';\n\nexport interface AppProps extends React.ComponentProps<'div'> { };\n\nexport const App: React.FC<AppProps> = ({\n  ...restProps\n}): JSX.Element => {\n\n  useEffect(() => {\n    const loadingMask = document.querySelectorAll('.loadmask')[0];\n\n    if (loadingMask) {\n      loadingMask.classList.add('loadmask-hidden');\n    }\n  }, []);\n\n  return (\n    <div\n      className=\"App\"\n      {...restProps}\n    >\n      <Header />\n      <BasicMapComponent />\n      <ToolMenu />\n      <Footer />\n      <AddLayerModal />\n      <UploadDataModal />\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport {\n  AppInfo\n} from '@terrestris/shogun-util/dist/model/AppInfo';\n\nconst initialState: AppInfo = {\n  authorities: [],\n  buildTime: '',\n  commitHash: '',\n  userId: -1,\n  version: ''\n};\n\nexport const slice = createSlice({\n  name: 'appInfo',\n  initialState,\n  reducers: {\n    setAppInfo(state, action: PayloadAction<AppInfo>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setAppInfo\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = '';\n\nexport const slice = createSlice({\n  name: 'description',\n  initialState,\n  reducers: {\n    setDescription: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setDescription\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice, PayloadAction\n} from '@reduxjs/toolkit';\n\nexport type Legal = {\n  contact?: string;\n  imprint?: string;\n  privacy?: string;\n};\n\nconst initialState: Legal = {\n  contact: 'https://www.terrestris.de/de/kontakt/',\n  imprint: 'https://www.terrestris.de/de/impressum/',\n  privacy: 'https://www.terrestris.de/de/datenschutzerklaerung/'\n};\n\nexport const slice = createSlice({\n  name: 'legal',\n  initialState,\n  reducers: {\n    setLegal: (state, action: PayloadAction<Legal>) => {\n      return {\n        contact: action.payload.contact || initialState.contact,\n        imprint: action.payload.imprint || initialState.imprint,\n        privacy: action.payload.privacy || initialState.privacy\n      };\n    }\n  }\n});\n\nexport const { setLegal } = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = './shogun_logo.png';\n\nexport const slice = createSlice({\n  name: 'logoPath',\n  initialState,\n  reducers: {\n    setLogoPath: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setLogoPath\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = 'SHOGun Client';\n\nexport const slice = createSlice({\n  name: 'title',\n  initialState,\n  reducers: {\n    setTitle: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setTitle\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport User from '@terrestris/shogun-util/dist/model/User';\n\nconst initialState: User = { };\n\nexport const slice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser(state, action: PayloadAction<User>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setUser\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  combineReducers,\n  configureStore,\n  Reducer\n} from '@reduxjs/toolkit';\n\nimport addLayerModal from './addLayerModal';\nimport appInfo from './appInfo';\nimport description from './description';\nimport legal from './legal';\nimport logoPath from './logoPath';\nimport print from './print';\nimport selectedFeatures from './selectedFeatures';\nimport title from './title';\nimport toolMenu from './toolMenu';\nimport uploadDataModal from './uploadDataModal';\nimport user from './user';\n\ntype AsyncReducer = {\n  [key: string]: Reducer;\n};\n\nexport const createReducer = (asyncReducers?: AsyncReducer) => {\n  return combineReducers({\n    addLayerModal,\n    appInfo,\n    description,\n    legal,\n    logoPath,\n    print,\n    selectedFeatures,\n    title,\n    toolMenu,\n    uploadDataModal,\n    user,\n    ...asyncReducers\n  });\n};\n\nexport const store = configureStore({\n  reducer: createReducer()\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  Alert,\n  ConfigProvider,\n  notification\n} from 'antd';\n\nimport deDE from 'antd/lib/locale/de_DE';\nimport enGB from 'antd/lib/locale/en_GB';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport Color from 'color';\n\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport Keycloak from 'keycloak-js';\n\nimport {\n  defaults as OlControlDefaults\n} from 'ol/control';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlMap from 'ol/Map';\nimport {\n  fromLonLat\n} from 'ol/proj';\nimport OlSourceOsm from 'ol/source/OSM';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\nimport OlView from 'ol/View';\n\nimport {\n  render\n} from 'react-dom';\n\nimport {\n  Provider\n} from 'react-redux';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport MapContext from '@terrestris/react-geo/dist/Context/MapContext/MapContext';\n\nimport {\n  AppInfo\n} from '@terrestris/shogun-util/dist/model/AppInfo';\nimport Application, {\n  DefaultApplicationTheme,\n  DefaultApplicationToolConfig\n} from '@terrestris/shogun-util/dist/model/Application';\nimport User from '@terrestris/shogun-util/dist/model/User';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nconst App = React.lazy(() => import('./App'));\n\nimport {\n  PluginProvider\n} from './context/PluginContext';\nimport {\n  SHOGunAPIClientProvider\n} from './context/SHOGunAPIClientContext';\n\nimport i18n, {\n  initOpts\n} from './i18n';\n\nimport {\n  ClientPluginInternal\n} from './plugin';\n\nimport {\n  setAppInfo\n} from './store/appInfo';\nimport {\n  setDescription\n} from './store/description';\nimport {\n  setLegal\n} from './store/legal';\nimport {\n  setLogoPath\n} from './store/logoPath';\nimport {\n  createReducer,\n  store\n} from './store/store';\nimport {\n  setTitle\n} from './store/title';\nimport {\n  setAvailableTools\n} from './store/toolMenu';\nimport {\n  setUser\n} from './store/user';\n\nimport './index.less';\n\n// TODO: extend antd properties too\nexport interface ThemeProperties extends React.CSSProperties {\n  '--primaryColor'?: string;\n  '--secondaryColor'?: string;\n  '--complementaryColor'?: string;\n}\n\nconst client = new SHOGunAPIClient({\n  url: ClientConfiguration.shogunBase || '/'\n});\n\nconst parser = new SHOGunApplicationUtil({\n  client\n});\n\nconst getConfigLang = (lang: string) => {\n  switch (lang) {\n    case 'en':\n      return enGB;\n    case 'de':\n      return deDE;\n    default:\n      return enGB;\n  }\n};\n\nconst getApplicationConfiguration = async () => {\n  const applicationId = UrlUtil.getQueryParam(window.location.href, 'applicationId');\n\n  if (!applicationId) {\n    Logger.info('No application ID given, can\\'t load any configuration.');\n    return;\n  }\n\n  try {\n    Logger.info(`Loading application with ID ${applicationId}`);\n\n    const application = await client.application().findOne(applicationId);\n\n    Logger.info(`Successfully loaded application with ID ${applicationId}`);\n\n    return application;\n  } catch (error) {\n    Logger.error(`Error while loading application with ID ${applicationId}: ${error}`);\n\n    notification.error({\n      message: i18n.t('Index.applicationLoadErrorMessage'),\n      description: i18n.t('Index.applicationLoadErrorDescription', {\n        applicationId: applicationId\n      }),\n      duration: 0\n    });\n  }\n};\n\nconst getApplicationInfo = async () => {\n  try {\n    Logger.info('Loading application info');\n\n    const appInfo = await client.info().getAppInfo();\n\n    Logger.info('Successfully loaded application info');\n\n    return appInfo;\n  } catch (error) {\n    Logger.error('Error while loading application info: ', error);\n  }\n};\n\nconst getUser = async (userId?: number) => {\n  if (!userId) {\n    Logger.info('No user ID given, can\\'t load it\\'s details.');\n    return;\n  }\n\n  try {\n    Logger.info(`Loading user with ID ${userId}`);\n\n    const user = await client.user().findOne(userId);\n\n    Logger.info(`Successfully loaded user with ID ${userId}`);\n\n    return user;\n  } catch (error) {\n    Logger.error(`Error while loading user with ID ${userId}: `, error);\n  }\n};\n\nconst setApplicationToStore = async (application?: Application) => {\n  if (!application) {\n    Logger.info('No application configuration provided, the default store will be loaded');\n\n    return;\n  }\n\n  if (application.name) {\n    store.dispatch(setTitle(application.name));\n  }\n\n  if (application.clientConfig?.description) {\n    store.dispatch(setDescription(application.clientConfig?.description));\n  }\n\n  if (application.clientConfig?.legal) {\n    store.dispatch(setLegal(application.clientConfig.legal));\n  }\n\n  if (application?.clientConfig?.theme?.logoPath) {\n    store.dispatch(setLogoPath(application.clientConfig.theme.logoPath));\n  }\n\n  if (application.toolConfig && application.toolConfig.length > 0) {\n    const availableTools: string[] = [];\n    application.toolConfig\n      .map((tool: DefaultApplicationToolConfig) => {\n        if (tool.config.visible) {\n          availableTools.push(tool.name);\n        }\n      });\n\n    store.dispatch(setAvailableTools(availableTools));\n  }\n};\n\nconst setAppInfoToStore = async (appInfo?: AppInfo) => {\n  if (!appInfo) {\n    return;\n  }\n\n  store.dispatch(setAppInfo(appInfo));\n};\n\nconst setUserToStore = async (user?: User) => {\n  if (!user) {\n    return;\n  }\n\n  store.dispatch(setUser(user));\n};\n\nconst initKeycloak = async () => {\n  const keycloakEnabled = ClientConfiguration.keycloak?.enabled;\n  const keycloakOnLoad = ClientConfiguration.keycloak?.onLoadAction;\n  const keycloakHost = ClientConfiguration.keycloak?.host;\n  const keycloakRealm = ClientConfiguration.keycloak?.realm;\n  const keycloakClientId = ClientConfiguration.keycloak?.clientId;\n\n  if (!keycloakEnabled) {\n    return undefined;\n  }\n\n  if (!keycloakHost) {\n    throw new Error('Neither config key keycloak.host nor environment KEYCLOAK_HOST is set');\n  }\n\n  if (!keycloakRealm) {\n    throw new Error('Neither config key keycloak.realm nor environment KEYCLOAK_REALM is set');\n  }\n\n  if (!keycloakClientId) {\n    throw new Error('Neither config key keycloak.clientId nor environment KEYCLOAK_CLIENT_ID is set');\n  }\n\n  const keycloak = new Keycloak({\n    url: `${keycloakHost}`,\n    realm: keycloakRealm,\n    clientId: keycloakClientId\n  });\n\n  keycloak.onTokenExpired = async () => {\n    try {\n      await keycloak.updateToken(0);\n    } catch (error) {\n      Logger.error('Error while refreshing the access token: ', error);\n    }\n  };\n\n  await keycloak.init({\n    onLoad: keycloakOnLoad\n  });\n\n  return keycloak;\n};\n\nconst setApplicationTitle = () => {\n  store.subscribe(() => {\n    document.title = store.getState().title;\n  });\n};\n\nconst setupMap = async (application?: Application) => {\n  if (application) {\n    return await setupSHOGunMap(application);\n  }\n\n  Logger.info('No application configuration provided, the default map will be loaded');\n\n  return setupDefaultMap();\n};\n\nconst setupSHOGunMap = async (application: Application) => {\n  const view = await parser.parseMapView(application, {\n    constrainOnlyCenter: true\n  });\n\n  let extent;\n  const projection = application.clientConfig?.mapView.projection;\n  const mapView = application.clientConfig?.mapView;\n  if (projection && mapView?.extent && mapView.extent.length === 4) {\n    const ll = fromLonLat([mapView.extent[0], mapView.extent[1]], projection);\n    const ur = fromLonLat([mapView.extent[2], mapView.extent[3]], projection);\n    extent = [\n      ll[0],\n      ll[1],\n      ur[0],\n      ur[1]\n    ];\n  }\n  if (extent) {\n    view.set('extent', extent);\n  }\n\n  view.setConstrainResolution(true);\n\n  const layers = await parser.parseLayerTree(application, projection);\n\n  return new OlMap({\n    view,\n    layers,\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\nconst setupDefaultMap = () => {\n  const osmLayer = new OlLayerTile({\n    source: new OlSourceOsm()\n  });\n  osmLayer.set('name', 'OpenStreetMap');\n\n  const temperatureLayer = new OlLayerTile({\n    opacity: 0.5,\n    visible: true,\n    source: new OlSourceTileWMS({\n      url: 'https://gibs.earthdata.nasa.gov/wms/epsg3857/best/wms.cgi',\n      projection: 'EPSG:3857',\n      params: {\n        LAYERS: 'MERRA2_2m_Air_Temperature_Assimilated_Monthly'\n      }\n    })\n  });\n  temperatureLayer.setProperties({\n    name: '2-meter Air Temperature, Assimilated (Monthly, MERRA2)',\n    hoverable: true\n  });\n\n  const eoLayerGroup = new OlLayerGroup({\n    layers: [temperatureLayer]\n  });\n  eoLayerGroup.set('name', 'NASA Earth Observations');\n\n  const backgroundLayerGroup = new OlLayerGroup({\n    layers: [osmLayer]\n  });\n  backgroundLayerGroup.set('name', 'Background');\n\n  const center = fromLonLat([0, 40], 'EPSG:3857');\n\n  return new OlMap({\n    view: new OlView({\n      center: center,\n      zoom: 0\n    }),\n    layers: [backgroundLayerGroup, eoLayerGroup],\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\nconst parseTheme = (theme?: DefaultApplicationTheme): ThemeProperties => {\n  const style: ThemeProperties = {\n    '--primaryColor': '#59666C',\n    '--secondaryColor': '#70B3BE',\n    '--complementaryColor': '#FFFFFF'\n  };\n  if (!theme) {\n    return style;\n  }\n  if (theme.primaryColor) {\n    style['--primaryColor'] = theme.primaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--secondaryColor'] = theme.secondaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--complementaryColor'] = theme.complementaryColor;\n  }\n  return style;\n};\n\n// ExamplePlugin: 'ExamplePlugin@/client-plugin/remoteEntry.js'\nconst loadPluginModules = async (moduleName: string, moduleUrl: string, remoteNames: string[]) => {\n  await __webpack_init_sharing__('default');\n\n  await new Promise<void>((resolve, reject) => {\n    const element = document.createElement('script');\n\n    element.src = moduleUrl;\n    element.type = 'text/javascript';\n    element.async = true;\n\n    element.onload = () => {\n      element.parentElement?.removeChild(element);\n      resolve();\n    };\n\n    element.onerror = (err) => {\n      element.parentElement?.removeChild(element);\n      reject(err);\n    };\n\n    document.head.appendChild(element);\n  });\n\n  // @ts-ignore\n  const container = window[moduleName];\n\n  // eslint-disable-next-line camelcase\n  await container.init(__webpack_share_scopes__.default);\n\n  const modules = [];\n  for (const remoteName of remoteNames) {\n    const factory = await container.get(remoteName);\n    const module = factory();\n    modules.push(module);\n  }\n\n  return modules;\n};\n\nconst loadPlugins = async (map: OlMap) => {\n  if (!ClientConfiguration.plugins || ClientConfiguration.plugins.length === 0) {\n    Logger.info('No plugins found');\n    return [];\n  }\n\n  Logger.info('Loading plugins');\n\n  const clientPlugins: ClientPluginInternal[] = [];\n\n  for (const plugin of ClientConfiguration.plugins) {\n    const name = plugin.name;\n    const resourcePath = plugin.resourcePath;\n    const exposedPaths = plugin.exposedPaths;\n\n    if (!name) {\n      Logger.error('Required plugin configuration \\'name\\' is not set');\n      return clientPlugins;\n    }\n\n    if (!resourcePath) {\n      Logger.error('Required plugin configuration \\'resourcePath\\' is not set');\n      return clientPlugins;\n    }\n\n    if (!exposedPaths) {\n      Logger.error('Required plugin configuration \\'exposedPaths\\' is not set');\n      return clientPlugins;\n    }\n\n    Logger.info(`Loading plugin ${name} (with exposed paths ${exposedPaths.join(' and ')}) from ${resourcePath}`);\n\n    let clientPluginModules: any[];\n    try {\n      clientPluginModules = await loadPluginModules(name, resourcePath, exposedPaths);\n      Logger.info(`Successfully loaded plugin ${name}`);\n    } catch (error) {\n      Logger.error(`Could not load plugin ${name}:`, error);\n      return clientPlugins;\n    }\n\n    clientPluginModules.forEach(module => {\n      const clientPluginDefault: ClientPluginInternal = module.default;\n      const PluginComponent = clientPluginDefault.component;\n\n      const WrappedPluginComponent = () => (\n        <PluginComponent\n          map={map}\n          client={client}\n        />\n      );\n\n      clientPluginDefault.wrappedComponent = WrappedPluginComponent;\n\n      if (clientPluginDefault.i18n) {\n        Object.entries(clientPluginDefault.i18n).forEach(locale => {\n          const lng = locale[0];\n          const resources = locale[1].translation;\n          i18n.addResourceBundle(lng, 'translation', resources, true, true);\n        });\n      }\n\n      if (clientPluginDefault.reducers) {\n        const reducers = createReducer(clientPluginDefault.reducers);\n        store.replaceReducer(reducers);\n      }\n\n      clientPlugins.push(clientPluginDefault);\n    });\n  }\n\n  return clientPlugins;\n};\n\nconst renderApp = async () => {\n  try {\n    const keycloak = await initKeycloak();\n\n    if (keycloak) {\n      client.setKeycloak(keycloak);\n    }\n\n    const appConfig = await getApplicationConfiguration();\n\n    const defaultLanguage = appConfig?.clientConfig?.defaultLanguage;\n\n    if (!defaultLanguage) {\n      i18n.use(LanguageDetector);\n    }\n\n    await i18n.init(initOpts);\n\n    if (defaultLanguage) {\n      i18n.changeLanguage(defaultLanguage);\n    }\n\n    const style = parseTheme(appConfig?.clientConfig?.theme);\n\n    ConfigProvider.config({\n      theme: {\n        primaryColor: Color(style['--primaryColor']).isLight() ?\n          Color(style['--primaryColor']).darken(0.5).hexa() :\n          style['--primaryColor']\n      }\n    });\n\n    Object.keys(style).forEach((key: any) => {\n      document.body.style.setProperty(key, style[key as keyof ThemeProperties] as string);\n    });\n\n    setApplicationTitle();\n\n    setApplicationToStore(appConfig);\n\n    const appInfo = await getApplicationInfo();\n\n    setAppInfoToStore(appInfo);\n\n    const user = await getUser(appInfo?.userId);\n\n    setUserToStore(user);\n\n    const map = await setupMap(appConfig);\n\n    const plugins = await loadPlugins(map);\n\n    render(\n      <React.StrictMode>\n        <React.Suspense fallback={<span></span>}>\n          <SHOGunAPIClientProvider client={client}>\n            <PluginProvider plugins={plugins}>\n              <ConfigProvider locale={getConfigLang(i18n.language)}>\n                <Provider store={store}>\n                  <MapContext.Provider value={map}>\n                    <App />\n                  </MapContext.Provider>\n                </Provider>\n              </ConfigProvider>\n            </PluginProvider>\n          </SHOGunAPIClientProvider>\n        </React.Suspense>\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  } catch (error) {\n    const loadingMask = document.querySelectorAll('.loadmask')[0];\n\n    if (loadingMask) {\n      loadingMask.classList.add('loadmask-hidden');\n    }\n\n    Logger.error(error);\n\n    render(\n      <React.StrictMode>\n        <Alert\n          className=\"error-boundary\"\n          message={i18n.t('Index.errorMessage')}\n          description={i18n.t('Index.errorDescription')}\n          type=\"error\"\n          showIcon\n        />\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  }\n};\n\nrenderApp();\n","import React from 'react';\n\nimport {\n  ClientPluginInternal\n} from '../plugin';\n\nexport type PluginProviderProps = {\n  plugins: ClientPluginInternal[];\n  children: JSX.Element;\n};\n\nexport const PluginContext = React.createContext<(ClientPluginInternal[])>([]);\n\nexport const PluginProvider: React.FC<PluginProviderProps> = ({\n  plugins,\n  children\n}): JSX.Element => {\n  return (\n    <PluginContext.Provider\n      value={plugins}\n    >\n      {children}\n    </PluginContext.Provider>\n  );\n};\n\nexport default PluginContext;\n","import React from 'react';\n\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nexport type SHOGunAPIClientProviderProps = {\n  client: SHOGunAPIClient;\n  children: JSX.Element;\n};\n\nexport const SHOGunAPIClientContext = React.createContext<(SHOGunAPIClient | null)>(null);\n\nexport const SHOGunAPIClientProvider: React.FC<SHOGunAPIClientProviderProps> = ({\n  client,\n  children\n}): JSX.Element => {\n  return (\n    <SHOGunAPIClientContext.Provider\n      value={client}\n    >\n      {children}\n    </SHOGunAPIClientContext.Provider>\n  );\n};\n\nexport default SHOGunAPIClientContext;\n","import i18n, {\n  InitOptions\n} from 'i18next';\nimport {\n  initReactI18next\n} from 'react-i18next';\n\nimport resources from './translations';\n\nexport const initOpts: InitOptions = {\n  resources,\n  fallbackLng: 'en',\n  debug: false,\n  interpolation: {\n    escapeValue: false\n  },\n  returnNull: false\n};\n\n// eslint-disable-next-line import/no-named-as-default-member\ni18n\n  .use(initReactI18next);\n\ni18n.options = initOpts;\n\nexport default i18n;\n","export default {\n  de: {\n    translation: {\n      ApplicationInfo: {\n        title: 'Über',\n        clientVersionTitle: 'Client Version',\n        backendVersionTitle: 'Backend Version'\n      },\n      AddLayerModal: {\n        addSelectedLayers: 'Auswahl hinzufügen',\n        addAllLayers: 'Alle hinzufügen',\n        inputPlaceholder: 'WMS GetCapabilities URL angeben…',\n        externalWmsFolder: 'Externe Themen',\n        title: 'WMS hinzufügen',\n        columnTitle: 'Name',\n        errorMessage: 'Fehler',\n        errorDescription: 'Das Capabilities Dokument konnte nicht geladen werden, bitte prüfen Sie die URL',\n        version: 'Version'\n      },\n      BasicMapComponent: {\n        processedLayersFolder: 'Prozessierte Layer'\n      },\n      Permalink: {\n        title: 'Teilen',\n        twitterTooltip: 'Link via Twitter teilen',\n        whatsAppTooltip: 'Link via WhatsApp teilen',\n        mailTooltip: 'Link via Mail teilen',\n        copyTooltip: 'Link in die Zwischenablage kopieren',\n        copiedToClipboard: 'Link wurde in Zwischenablage kopiert',\n        copyToClipboardFailed: 'Link konnte nicht kopiert werden'\n      },\n      Measure: {\n        title: 'Messen',\n        line: 'Entfernung',\n        area: 'Fläche',\n        clicktodrawline: 'Zum Zeichnen einer Linie klicken',\n        clicktodrawarea: 'Zum Zeichnen einer Fläche klicken'\n      },\n      Draw: {\n        point: 'Punkt',\n        line: 'Linie',\n        polygon: 'Polygon',\n        circle: 'Kreis',\n        rectangle: 'Rechteck',\n        text: 'Anmerkung',\n        modify: 'Bearbeitung',\n        upload: 'Hochladen',\n        delete: 'Löschen',\n        export: 'Exportieren'\n      },\n      StylingDrawer: {\n        pickColor: 'Farbschema bearbeiten',\n        title: 'Farbschema bearbeiten'\n      },\n      FeatureInfo: {\n        usageHint: 'Klicken Sie in die Karte, um Detailinformationen zu erhalten.'\n      },\n      LayerTree: {\n        transparency: 'Transparenz',\n        noLegendAvailable: 'Keine Legende verfügbar'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Auf Layerausdehnung zoomen',\n        extentError: 'Konnte nicht auf die Layerausdehnung zoomen',\n        removeLayer: 'Layer entfernen',\n        showLegend: 'Legende anzeigen',\n        hideLegend: 'Legende ausblenden',\n        downloadLayer: 'Layer exportieren ({{formatName}})'\n      },\n      ToolMenu: {\n        expand: 'Menu ausklappen',\n        collapse: 'Menu einklappen',\n        measure: 'Messen',\n        draw: 'Zeichnen',\n        featureInfo: 'Karteninhalte abfragen',\n        addWms: 'WMS hinzufügen',\n        uploadData: 'Daten hochladen',\n        print: 'Export',\n        layertree: 'Karten',\n        languageSelect: 'Sprachauswahl'\n      },\n      PrintForm: {\n        title: 'Kartentitel',\n        initialTitle: 'Druckausgabe',\n        titlePlaceholder: 'Bitte geben Sie einen Titel ein',\n        comment: 'Bemerkung',\n        commentPlaceholder: 'Bitte geben Sie einen Kommentar ein',\n        layout: 'Vorlage',\n        dpi: 'Auflösung',\n        format: 'Format',\n        scale: 'Maßstab',\n        downloadBtnText: 'Ausdruck erzeugen',\n        printJobErrorMsg: 'Der Kartenausdruck konnte nicht erzeugt werden',\n        initErrorMsg: 'Der Kartendruck Generator konnte nicht initialisiert werden.',\n        outputFormatPlaceholder: 'Bitte wählen Sie ein Ausgabeformat aus',\n        resolutionPlaceholder: 'Bitte wählen Sie eine Ausgabequalität aus',\n        managerErrorMessage: 'Fehler bei der Initialisierung der Export-Engine'\n      },\n      Footer: {\n        refSystem: 'Bezugssystem',\n        scale: 'Maßstab',\n        mousePosition: 'Mausposition',\n        imprint: 'Impressum',\n        contact: 'Kontakt',\n        privacypolicy: 'Datenschutz'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Fehler beim Laden der Applikation',\n        applicationLoadErrorDescription: 'Die Applikation mit der ID {{applicationId}} konnte nicht geladen werden. ' +\n          'Die Standardkonfiguration wird stattdessen geladen.',\n        errorMessage: 'Fehler beim Laden der Applikation',\n        errorDescription: 'Aufgrund eines unerwarteten Fehlers konnte die Applikation nicht geladen werden. ' +\n          'Bitte laden Sie die Seite erneut.'\n      },\n      Nominatim: {\n        placeholder: 'Ortsname, Straßenname, Stadtteilname, POI usw.'\n      },\n      UserMenu: {\n        settingsMenuTitle: 'Profil bearbeiten',\n        infoMenuTitle: 'Über',\n        logoutMenuTitle: 'Ausloggen',\n        loginMenuTitle: 'Anmelden'\n      },\n      WmsTimeSlider: {\n        title: 'Zeitlicher Bezug',\n        default: 'Keine Daten gefunden'\n      },\n      UploadDataModal: {\n        title: 'Daten hochladen',\n        uploadedDataFolder: 'Hochgeladene Daten',\n        description: 'Klicken Sie oder ziehen Sie die Datei zum Hochladen in diesen Bereich',\n        hint: 'Unterstützte Dateiformate sind Shapefile (gebündelt als *.zip) und GeoTIFF',\n        success: 'Datei {{fileName}} wurde erfolgreich geladen und der Layer {{layerName}} erstellt',\n        error: {\n          general: 'Fehler beim Hochladen der Datei {{fileName}}',\n          maxSize: 'Der Upload überschreitet das Limit von {{maxSize}} MB',\n          supportedFormats: 'Der Dateityp ist nicht unterstützt ({{supportedFormats}})',\n          zipContent: 'Mehrere Geodatensätze innerhalb eines Archivs sind nicht unterstützt'\n        }\n      }\n    }\n  },\n  en: {\n    translation: {\n      ApplicationInfo: {\n        title: 'About',\n        clientVersionTitle: 'Client version',\n        backendVersionTitle: 'Backend version'\n      },\n      AddLayerModal: {\n        addSelectedLayers: 'Add selected',\n        addAllLayers: 'Add all',\n        inputPlaceholder: 'Enter a WMS GetCapabilities URL…',\n        externalWmsFolder: 'External layers',\n        title: 'Add WMS',\n        columnTitle: 'Name',\n        errorMessage: 'Error',\n        errorDescription: 'Could not load the provided Capabilities document, please check the validity of the URL',\n        version: 'Version'\n      },\n      BasicMapComponent: {\n        processedLayersFolder: 'Processed layers'\n      },\n      Permalink: {\n        title: 'Share',\n        twitterTooltip: 'Share link via Twitter',\n        whatsAppTooltip: 'Share link via WhatsApp',\n        mailTooltip: 'Share link via Mail',\n        copyTooltip: 'Copy link to Clipboard',\n        copiedToClipboard: 'Copied to clipboard',\n        copyToClipboardFailed: 'Could not copy link to clipboard'\n      },\n      Measure: {\n        title: 'Measure',\n        line: 'Distance',\n        area: 'Area',\n        clicktodrawline: 'Click to draw line',\n        clicktodrawarea: 'Click to draw area'\n      },\n      Draw: {\n        point: 'Point',\n        line: 'Line',\n        polygon: 'Polygon',\n        circle: 'Circle',\n        rectangle: 'Rectangle',\n        text: 'Annotation',\n        modify: 'Edit',\n        upload: 'Upload',\n        delete: 'Delete',\n        export: 'Export'\n      },\n      StylingDrawer: {\n        pickColor: 'Modify color scheme',\n        title: 'Modify color scheme'\n      },\n      FeatureInfo: {\n        usageHint: 'Click on the map to get details about the clicked coordinate.'\n      },\n      LayerTree: {\n        transparency: 'Transparency',\n        noLegendAvailable: 'No legend available'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Zoom to layer extent',\n        extentError: 'Could not zoom to layer extent',\n        removeLayer: 'Remove layer',\n        showLegend: 'Show legend',\n        hideLegend: 'Hide legend',\n        downloadLayer: 'Export layer as {{formatName}}'\n      },\n      ToolMenu: {\n        expand: 'Expand',\n        collapse: 'Collapse',\n        measure: 'Measure',\n        draw: 'Draw',\n        featureInfo: 'Query map features',\n        addWms: 'Add WMS',\n        uploadData: 'Upload data',\n        print: 'Export',\n        layertree: 'Maps',\n        languageSelect: 'Language selector'\n      },\n      PrintForm: {\n        title: 'Title',\n        initialTitle: 'Title',\n        titlePlaceholder: 'Please input a title…',\n        comment: 'Comment',\n        commentPlaceholder: 'Please enter a comment…',\n        layout: 'Layout',\n        dpi: 'Resolution',\n        format: 'Format',\n        scale: 'Scale',\n        downloadBtnText: 'Create print',\n        printJobErrorMsg: 'Could not generate PDF output',\n        initErrorMsg: 'PDF Generator could not be initialized',\n        outputFormatPlaceholder: 'Please select an output format',\n        resolutionPlaceholder: 'Please select an output quality',\n        managerErrorMessage: 'Error while initializing the export engine'\n      },\n      Footer: {\n        refSystem: 'Reference system',\n        scale: 'Scale',\n        mousePosition: 'Mouse position',\n        imprint: 'Imprint',\n        contact: 'Contact',\n        privacypolicy: 'Privacy'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Error while loading the application',\n        applicationLoadErrorDescription: 'The application with ID {{applicationId}} could not be loaded correctly. ' +\n          'You\\'re seeing the default application configuration.',\n        errorMessage: 'Error while loading the application',\n        errorDescription: 'An unexpected error occured while loading the application. Please try to reload the page.'\n      },\n      Nominatim: {\n        placeholder: 'Place name, street name, district name, POI, etc.'\n      },\n      UserMenu: {\n        settingsMenuTitle: 'Edit profile',\n        infoMenuTitle: 'About',\n        logoutMenuTitle: 'Logout',\n        loginMenuTitle: 'Login'\n      },\n      WmsTimeSlider: {\n        title: 'Time reference',\n        default: 'No data found'\n      },\n      UploadDataModal: {\n        title: 'Upload data',\n        uploadedDataFolder: 'Uploaded data',\n        description: 'Click or drag file to this area to upload',\n        hint: 'Supported file formats are Shapefile (bundled as *.zip) and GeoTIFF',\n        success: 'Successfully uploaded file {{fileName}} and created layer {{layerName}}',\n        error: {\n          general: 'Error while uploading file {{fileName}}',\n          maxSize: 'The file exceeds the upload limit of {{maxSize}} MB',\n          supportedFormats: 'The given file type does not match the supported ones ({{supportedFormats}})',\n          zipContent: 'Multiple geodatasets within one archive are not supported'\n        }\n      }\n    }\n  }\n};\n","import('./bootstrap');\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface AddLayerModalState {\n  visible: boolean;\n}\n\nconst initialState: AddLayerModalState = {\n  visible: false\n};\n\nconst addLayerModalSlice = createSlice({\n  name: 'addLayerModal',\n  initialState,\n  reducers: {\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = addLayerModalSlice.actions;\n\nexport default addLayerModalSlice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport { V3CustomMapParams } from '@terrestris/mapfish-print-manager/dist/manager/MapFishPrintV3Manager';\n\nexport type PrintState = {\n  customMapParams?: V3CustomMapParams;\n  customParams?: any;\n};\n\nconst initialState: PrintState = {\n  customMapParams: {},\n  customParams: {\n    printLegend: false\n  }\n};\n\nexport const printSlice = createSlice({\n  name: 'print',\n  initialState,\n  reducers: {\n    setCustomMapParams: (state, action: PayloadAction<V3CustomMapParams>) => {\n      state.customMapParams = action.payload;\n    },\n    setCustomParams: (state, action: PayloadAction<any>) => {\n      state.customParams = action.payload;\n    },\n    addCustomMapParam: (state, action: PayloadAction<Partial<V3CustomMapParams>>) => {\n      state.customMapParams = {\n        ...state.customMapParams,\n        ...action.payload\n      };\n    },\n    addCustomParam: (state, action: PayloadAction<any>) => {\n      state.customParams = {\n        ...state.customParams,\n        ...action.payload\n      };\n    }\n  }\n});\n\nexport const {\n  setCustomMapParams,\n  setCustomParams,\n  addCustomMapParam,\n  addCustomParam\n} = printSlice.actions;\n\nexport default printSlice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nexport type SelectedFeatures = {\n  [layerName: string]: string;\n};\n\nconst initialState: SelectedFeatures = {};\n\nexport const slice = createSlice({\n  name: 'selectedFeatures',\n  initialState,\n  reducers: {\n    setSelectedFeatures(state, action: PayloadAction<SelectedFeatures>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setSelectedFeatures\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nexport interface ToolMenuState {\n  activeKeys: string[];\n  availableTools: string[];\n}\n\nconst initialState: ToolMenuState = {\n  // This is the default state. If no config is given, then load all tools\n  activeKeys: [],\n  availableTools: ['default']\n};\n\nexport const slice = createSlice({\n  name: 'toolMenu',\n  initialState,\n  reducers: {\n    setActiveKeys(state, action: PayloadAction<string[]>) {\n      state.activeKeys = [...action.payload];\n    },\n    setAvailableTools(state, action: PayloadAction<string[]>) {\n      state.availableTools = [...action.payload];\n    }\n  }\n});\n\nexport const {\n  setActiveKeys,\n  setAvailableTools\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface UploadDataModalState {\n  visible: boolean;\n}\n\nconst initialState: UploadDataModalState = {\n  visible: false\n};\n\nconst uploadDataModalSlice = createSlice({\n  name: 'uploadDataModal',\n  initialState,\n  reducers: {\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = uploadDataModalSlice.actions;\n\nexport default uploadDataModalSlice.reducer;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","AddLayerModal","restProps","loading","setLoading","useState","layers","setLayers","selectedRowKeys","setSelectedRowKeys","url","setUrl","sanitizedUrl","setSanitizedUrl","version","setVersion","isModalVisible","state","addLayerModal","visible","dispatch","map","useMap","t","useTranslation","useEffect","UrlUtil","closeModal","hide","addLayers","layersToAdd","targetFolderName","targetGroup","MapUtil","OlLayerGroup","set","existingGroups","getLayerGroup","getLayers","insertAt","getLength","forEach","layerToAdd","getArray","includes","layerUrl","ImageLayer","getSource","getUrl","TileLayer","urls","getUrls","length","undefined","layerConfig","name","get","type","opacity","getOpacity","sourceConfig","layerNames","getParams","LAYERS","useBearerToken","push","React","Modal","_extends","className","title","open","onCancel","width","footer","Button","key","disabled","onClick","onAddAll","onAddSelected","filter","layer","getUid","Input","placeholder","value","onChange","event","target","onSearch","async","capabilities","CapabilitiesUtil","externalLayers","error","notification","message","description","enterButton","addonBefore","Select","defaultValue","label","Table","columns","render","text","record","rowKey","rowSelection","pagination","dataSource","usePlugins","useContext","PluginContext","useSHOGunAPIClient","SHOGunAPIClientContext","BasicMapComponent","client","queryParams","search","window","location","URLSearchParams","useQueryParams","plugins","center","zoom","customLayerAttributes","restoreTransientLayers","useCallback","configString","permaLinkLayers","addLayerGroup","layerGroup","config","JSON","parse","Error","parser","SHOGunApplicationUtil","i","cfg","_isEmpty","olLayer","parseLayer","isExternalLayer","isUploadedLayer","groupName","setVisible","split","some","l","Logger","identifier","OlLayerTile","OlLayerImage","PermalinkUtil","pluginComponents","plugin","pluginIntegration","integration","placement","wrappedComponent","WrappedPluginComponent","MapComponent","Footer","legalInformation","legal","getControls","find","control","OlControlScaleLine","addControl","OlControlMousePosition","coordinateFormat","createStringXY","projection","getView","getProjection","id","Divider","ScaleCombo","getCode","openContactModal","contact","openImprintModal","imprint","openPrivacyModal","privacy","BasicNominatimSearch","viewBox","setViewBox","mapViewProjection","extent","transformedExtent","transformExtent","toString","NominatimSearch","countryCodes","allowClear","nominatimBaseUrl","getGravatarUrl","email","size","rating","defaultImage","force","lowerCaseEmail","toLowerCase","md5","ApplicationInfo","opener","appInfo","logoPath","appDescription","isVisible","toggleVisibility","Opener","centered","onOk","src","Statistic","PROJECT_VERSION","buildTime","UserMenu","keycloak","getKeycloak","user","onMenuClick","evt","accountManagement","login","logout","UserChip","imageSrc","providerDetails","userName","FontAwesomeIcon","icon","faAngleDown","userMenu","getMenu","faSignIn","username","divider","settings","faUserCog","info","faInfo","faSignOut","items","Header","insertPlugins","itemPosition","placementOrientation","splice","insertionIndex","getLeftItems","getCenterItems","getRightItems","Option","LanguageSelect","supportedLanguages","Object","keys","i18n","lang","supportedLanguage","toUpperCase","Permalink","layerAttributes","useMemo","initialPermalink","getVisible","permalink","setPermalink","mailSubject","mailBody","eventKeys","identifierFunction","filterFunction","updatePermalink","updateLayerConfig","getAllLayers","externalLayer","clientConfig","registerLayerCallback","layersInGroup","layerInGroup","LayerGroup","eventKeyVisibility","on","eventKeyOpacity","listenerKeyCenter","listenerKeyResolution","mapLayerGroup","unByKey","Tooltip","TwitterOutlined","twitterUrl","URL","searchParams","WhatsAppOutlined","whatsAppUrl","MailOutlined","mailToUrl","replace","readOnly","CopyOutlined","copy","SHOGunMapFishPrintV3WMSSerializer","MapFishPrintV3WMSSerializer","serialize","opts","serialized","super","baseURL","startsWith","optsToApply","tileSize","source","this","validateSource","MapFishPrintV3TiledWMSSerializer","CustomFieldInput","maxLength","inputText","setInputText","_isNil","addCustomParam","showCount","LayoutSelect","printManager","layout","setLayout","getLayouts","OutputFormatSelect","outputFormats","outputFormat","setOutputFormat","f","toLocaleUpperCase","ResolutionSelect","resolution","setResolution","setDpi","getDpis","d","ScaleSelect","scale","setScale","updateScale","pmScale","getScale","transformInteraction","getInteractions","MapFishPrintV3Manager","un","getScales","s","toLocaleString","Shared","OlSourceTileWMS","OlSourceImageWMS","customParams","VERSION","FORMAT","params","LAYER","SERVICE","REQUEST","encodeURIComponent","join","endsWith","PrintForm","active","customPrintScales","layerBlackList","form","Form","currentLanguageCode","language","customMapParams","print","setPrintManager","errorMsg","setErrorMsg","layerFilter","layerName","legendFilter","notBlacklisted","notHidden","printableLayer","res","getResolution","SCALE","initializeMapProvider","pManagerOpts","ClientConfiguration","timeout","headers","getBearerTokenHeader","transformOpts","rotate","serializers","MapFishPrintV3GeoJsonSerializer","MapFishPrintV3OSMSerializer","MapFishPrintV3WMTSSerializer","SHOGunMapFishPrintV3TiledWMSSerializer","reverse","pManager","init","apps","getPrintApps","setPrintApp","getOutputFormats","shutdownManager","Alert","closable","showIcon","onClose","onAlertClose","isInitiated","labelAlign","labelCol","flex","initialValue","getClosestScaleToFitMap","faDownload","downloadUrl","StylingComponent","passThroughProps","style","setStyle","rules","symbolizers","kind","color","outlineOpacity","fillOpacity","outlineWidth","outlineColor","wellKnownName","strokeColor","strokeOpacity","radius","font","offset","haloColor","haloWidth","olParser","OlParser","drawVectorLayer","olStylePolygon","olStyleLineString","olStylePoint","olStyleText","rule","newStyle","olStyle","writeStyle","output","drawLayerStyleFunction","feature","geometryType","getGeometry","getType","parseStyles","CardStyle","onStyleChange","StylingDrawer","setOpen","showDrawer","faPaintBrush","Drawer","mask","Draw","showDrawPoint","showDrawLine","showDrawPolygon","showDrawCircle","showDrawRectangle","showDrawAnnotation","showModifyFeatures","showUploadFeatures","showDownloadFeatures","showDeleteFeatures","onGeoJSONUpload","geoJSONFile","fileReader","FileReader","onload","geoJSONFeatures","GeoJSON","readFeatures","result","mapProjection","feat","transform","digitizeLayerSource","DigitizeUtil","addFeatures","readAsText","ToggleGroup","DrawButton","drawType","pressed","faCircle","faGripLines","faDrawPolygon","faSquare","faFont","ModifyButton","faPenToSquare","UploadButton","e","uploadedFiles","files","SimpleButton","faUpload","onGeoJSONDownload","clonedFeatures","digitizeLayer","digitizedFeatures","getFeatures","clonedFeature","clone","geoJSON","writeFeatures","fileToDownload","Blob","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","DeleteButton","faTrash","FeatureInfoPropertyGrid","features","currentPage","setCurrenPage","selectedFeature","setSelectedFeature","vectorLayerName","page","initVectorLayer","OlSourceVector","fill","OlStyleFill","stroke","OlStyleStroke","featureStyle","OlStyle","image","OlStyleCircle","OlLayerVector","addLayer","deinitVectorLayer","vectorLayer","removeLayer","clear","addFeature","PropertyGrid","sticky","Pagination","simple","total","pageSize","current","OlFormatGeoJSON","writeFeature","faCopy","dataIndex","ellipsis","defaultSortOrder","sorter","a","b","localeCompare","scroll","scrollToFirstRowOnChange","y","FeatureInfo","enabled","queryLayers","setQueryLayers","updateQueryLayers","layerCandidates","mapLayers","getUnqualifiedLayerName","CoordinateInfo","featureCount","resultRenderer","coordinateInfoState","pluginRendererAvailable","mapLayer","isWmsLayer","unqualifiedMapLayerName","Array","isArray","children","Tabs","fetchOpts","getFetchOpts","layerUid","onSuccess","serializedFeatures","entries","entry","selectedFeatures","setSelectedFeatures","WmsTimeSlider","setValue","TIME","min","setMin","max","setMax","marks","setMarks","timeValues","values","m","val","idx","moment","format","default","nearest","NaN","diff","faClock","TimeSlider","updateParams","step","LayerTreeContextMenu","visibleLegendsIds","setVisibleLegendsIds","settingsVisible","setSettingsVisible","extentLoading","setExtentLoading","downloadConfig","zoomToLayerExtent","LayerUtil","fit","getAllLayerGroups","layerGroups","parentGroups","getParentLayerGroups","parentGroup","remove","removeExternalLayer","externalLayerGroup","uploadedLayerGroup","downloadLayer","reqOpts","method","fetch","blob","dropdownMenuItems","Spin","spinning","legendVisible","downloadItems","dlConfig","formatName","encodeURI","Dropdown","menu","decodeURI","legendId","newLegendIds","indexOf","onOpenChange","trigger","faEllipsisV","LayerTree","layerTileLoadCounter","setLayerTileLoadCounter","allLayers","OlLayer","hasListener","tileLoadStartListener","tileLoadEndListener","counter","uid","parseInt","update","loaded","percent","Number","isInteger","Math","round","RgLayerTree","nodeTitleRenderer","mapView","unit","getUnits","Progress","strokeWidth","LayerTransparencySlider","tooltip","formatter","Legend","extraParams","LEGEND_OPTIONS","TRANSPARENT","forEachFeature","draggable","Measure","showMeasureDistance","showMeasureArea","MeasureButton","geodesic","measureType","continueLineMsg","faPenRuler","continuePolygonMsg","Panel","Collapse","ToolMenu","availableTools","toolMenu","activeKeys","collapsed","setCollapsed","menuTools","setMenuTools","mobileQuery","matchMedia","mobileNavigatorRegEx","RegExp","matches","test","navigator","userAgent","setActiveKeys","getToolPanelConfig","tool","faRuler","faMousePointer","faFileDownload","faStream","faPlus","showAdd","upload","authorizedRoles","role","hasResourceRole","clientId","showUpload","faShareNodes","faLanguage","expandIconPosition","activeKey","destroyInactivePanel","_toArray","getToolPanels","panels","toolPanelConfig","panel","header","faChevronRight","faChevronLeft","Dragger","Upload","UploadDataModal","uploadError","setUploadError","uploadSuccess","setUploadSuccess","isUploading","setIsUploading","uploadDataModal","getGeometryType","getAttributeType","dbfFieldType","customRequest","onError","file","splittedFileName","fileType","geoServerBaseUrl","base","workspace","Date","now","uploadData","baseUrl","storeName","coverageStoreUrl","ok","fileName","coverageUrl","stringify","coverage","nativeName","keywords","uploadGeoTiff","shp","Shapefile","featureTypeName","featureTypeAttributes","attribute","k","v","dbfContent","properties","fields","field","minOccurs","maxOccurs","nillable","binding","shxContent","featureTypeUrl","featureType","attributes","uploadShapeZip","accept","maxCount","showUploadList","beforeUpload","maxSize","limit","fileSize","supportedFormats","status","response","hoverable","parseTileLayer","App","loadingMask","querySelectorAll","classList","add","slice","createSlice","initialState","authorities","commitHash","userId","reducers","setAppInfo","action","payload","actions","setDescription","setLegal","setLogoPath","setTitle","setUser","createReducer","asyncReducers","combineReducers","store","configureStore","reducer","SHOGunAPIClient","getConfigLang","enGB","deDE","setupSHOGunMap","view","parseMapView","application","constrainOnlyCenter","ll","fromLonLat","ur","setConstrainResolution","parseLayerTree","OlMap","controls","OlControlDefaults","setupDefaultMap","osmLayer","OlSourceOsm","temperatureLayer","setProperties","eoLayerGroup","backgroundLayerGroup","OlView","loadPluginModules","moduleName","moduleUrl","remoteNames","__webpack_init_sharing__","Promise","resolve","reject","element","parentElement","onerror","err","head","container","__webpack_share_scopes__","modules","remoteName","module","keycloakEnabled","keycloakOnLoad","onLoadAction","keycloakHost","host","keycloakRealm","realm","keycloakClientId","Keycloak","onTokenExpired","updateToken","onLoad","initKeycloak","setKeycloak","appConfig","applicationId","findOne","duration","getApplicationConfiguration","defaultLanguage","LanguageDetector","initOpts","theme","primaryColor","secondaryColor","complementaryColor","parseTheme","ConfigProvider","Color","isLight","darken","hexa","setProperty","subscribe","getState","toolConfig","setAvailableTools","setApplicationToStore","getAppInfo","getApplicationInfo","setAppInfoToStore","setUserToStore","getUser","setupMap","clientPlugins","resourcePath","exposedPaths","clientPluginModules","clientPluginDefault","PluginComponent","component","locale","lng","resources","translation","replaceReducer","loadPlugins","fallback","SHOGunAPIClientProvider","PluginProvider","Provider","MapContext","getElementById","renderApp","de","clientVersionTitle","backendVersionTitle","addSelectedLayers","addAllLayers","inputPlaceholder","externalWmsFolder","columnTitle","errorMessage","errorDescription","processedLayersFolder","twitterTooltip","whatsAppTooltip","mailTooltip","copyTooltip","copiedToClipboard","copyToClipboardFailed","line","area","clicktodrawline","clicktodrawarea","point","polygon","circle","rectangle","modify","delete","export","pickColor","usageHint","transparency","noLegendAvailable","layerZoomToExtent","extentError","showLegend","hideLegend","expand","collapse","measure","draw","featureInfo","addWms","layertree","languageSelect","initialTitle","titlePlaceholder","comment","commentPlaceholder","dpi","downloadBtnText","printJobErrorMsg","initErrorMsg","outputFormatPlaceholder","resolutionPlaceholder","managerErrorMessage","refSystem","mousePosition","privacypolicy","Index","applicationLoadErrorMessage","applicationLoadErrorDescription","Nominatim","settingsMenuTitle","infoMenuTitle","logoutMenuTitle","loginMenuTitle","uploadedDataFolder","hint","success","general","zipContent","en","fallbackLng","debug","interpolation","escapeValue","returnNull","initReactI18next","addLayerModalSlice","show","toggle","printSlice","printLegend","setCustomMapParams","setCustomParams","addCustomMapParam","uploadDataModalSlice","___CSS_LOADER_EXPORT___"],"sourceRoot":""}