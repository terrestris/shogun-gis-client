define("vs/basic-languages/xml/xml",["require","require"],e=>(()=>{let t,n,o,a,i;var r=Object.create,l=Object.defineProperty,u=Object.getOwnPropertyDescriptor,m=Object.getOwnPropertyNames,c=Object.getPrototypeOf,d=Object.prototype.hasOwnProperty,s=(t=function(t){if("u">typeof e)return e.apply(this,arguments);throw Error('Dynamic require of "'+t+'" is not supported')},"u">typeof e?e:"u">typeof Proxy?new Proxy(t,{get:(t,n)=>("u">typeof e?e:t)[n]}):t),p=(e,t,n,o)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of m(t))d.call(e,a)||a===n||l(e,a,{get:()=>t[a],enumerable:!(o=u(t,a))||o.enumerable});return e},f=(e,t,n)=>(n=null!=e?r(c(e)):{},p(!t&&e&&e.__esModule?n:l(n,"default",{value:e,enumerable:!0}),e)),g=(n=(e,t)=>{t.exports=f(s("vs/editor/editor.api"))},()=>(o||n((o={exports:{}}).exports,o),o.exports)),x={},b={conf:()=>y,language:()=>q};for(var k in b)l(x,k,{get:b[k],enumerable:!0});var w={};p(w,a=f(g()),"default"),i&&p(i,a,"default");var y={comments:{blockComment:["\x3c!--","--\x3e"]},brackets:[["<",">"]],autoClosingPairs:[{open:"<",close:">"},{open:"'",close:"'"},{open:'"',close:'"'}],surroundingPairs:[{open:"<",close:">"},{open:"'",close:"'"},{open:'"',close:'"'}],onEnterRules:[{beforeText:RegExp("<([_:\\w][_:\\w-.\\d]*)([^/>]*(?!/)>)[^<]*$","i"),afterText:/^<\/([_:\w][_:\w-.\d]*)\s*>$/i,action:{indentAction:w.languages.IndentAction.IndentOutdent}},{beforeText:RegExp("<(\\w[\\w\\d]*)([^/>]*(?!/)>)[^<]*$","i"),action:{indentAction:w.languages.IndentAction.Indent}}]},q={defaultToken:"",tokenPostfix:".xml",ignoreCase:!0,qualifiedName:/(?:[\w\.\-]+:)?[\w\.\-]+/,tokenizer:{root:[[/[^<&]+/,""],{include:"@whitespace"},[/(<)(@qualifiedName)/,[{token:"delimiter"},{token:"tag",next:"@tag"}]],[/(<\/)(@qualifiedName)(\s*)(>)/,[{token:"delimiter"},{token:"tag"},"",{token:"delimiter"}]],[/(<\?)(@qualifiedName)/,[{token:"delimiter"},{token:"metatag",next:"@tag"}]],[/(<\!)(@qualifiedName)/,[{token:"delimiter"},{token:"metatag",next:"@tag"}]],[/<\!\[CDATA\[/,{token:"delimiter.cdata",next:"@cdata"}],[/&\w+;/,"string.escape"]],cdata:[[/[^\]]+/,""],[/\]\]>/,{token:"delimiter.cdata",next:"@pop"}],[/\]/,""]],tag:[[/[ \t\r\n]+/,""],[/(@qualifiedName)(\s*=\s*)("[^"]*"|'[^']*')/,["attribute.name","","attribute.value"]],[/(@qualifiedName)(\s*=\s*)("[^">?\/]*|'[^'>?\/]*)(?=[\?\/]\>)/,["attribute.name","","attribute.value"]],[/(@qualifiedName)(\s*=\s*)("[^">]*|'[^'>]*)/,["attribute.name","","attribute.value"]],[/@qualifiedName/,"attribute.name"],[/\?>/,{token:"delimiter",next:"@pop"}],[/(\/)(>)/,[{token:"tag"},{token:"delimiter",next:"@pop"}]],[/>/,{token:"delimiter",next:"@pop"}]],whitespace:[[/[ \t\r\n]+/,""],[/<!--/,{token:"comment",next:"@comment"}]],comment:[[/[^<\-]+/,"comment.content"],[/-->/,{token:"comment",next:"@pop"}],[/<!--/,"comment.content.invalid"],[/[<\-]/,"comment.content"]]}};return p(l({},"__esModule",{value:!0}),x)})());