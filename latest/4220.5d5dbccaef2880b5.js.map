{"version":3,"file":"4220.5d5dbccaef2880b5.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/constants/values.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/projs.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/constants/units.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/match.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projString.js","webpack://@terrestris/shogun-gis-client/./node_modules/wkt-parser/parser.js","webpack://@terrestris/shogun-gis-client/./node_modules/wkt-parser/process.js","webpack://@terrestris/shogun-gis-client/./node_modules/wkt-parser/index.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/defs.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/global.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/parseCode.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/extend.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/msfnz.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/sign.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/adjust_lon.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/tsfnz.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/phi2z.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/longlat.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/merc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/constants/Datum.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/datum.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/nadgrid.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/Proj.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/deriveConstants.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/datumUtils.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/datum_transform.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/adjust_axis.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/toPoint.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/checkSanity.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/transform.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/core.js","webpack://@terrestris/shogun-gis-client/./node_modules/mgrs/mgrs.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/Point.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/pj_enfn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/tmerc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/sinh.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/hypot.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/gatg.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/cosh.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/etmerc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/clens.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/asinhy.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/log1py.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/utm.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/adjust_zone.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/srat.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/gauss.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/sterea.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/stere.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/somerc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/omerc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/lcc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/krovak.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/mlfn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/e0fn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/e1fn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/e2fn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/e3fn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/gN.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/adjust_lat.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/imlfn.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/cass.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/qsfnz.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/laea.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/asinz.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/aea.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/gnom.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/cea.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/common/iqsfnz.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/eqc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/poly.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/nzmg.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/mill.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/sinu.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/moll.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/eqdc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/vandg.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/aeqd.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/ortho.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/qsc.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/robin.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/geocent.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/tpers.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/geos.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/eqearth.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/projections/bonne.js","webpack://@terrestris/shogun-gis-client/./node_modules/proj4/lib/index.js"],"sourcesContent":["export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  'mm': {to_meter: 0.001},\n  'cm': {to_meter: 0.01},\n  'ft': {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937},\n  'fath': {to_meter: 1.8288},\n  'kmi': {to_meter: 1852},\n  'us-ch': {to_meter: 20.1168402336805},\n  'us-mi': {to_meter: 1609.34721869444},\n  'km': {to_meter: 1000},\n  'ind-ft': {to_meter: 0.30479841},\n  'ind-yd': {to_meter: 0.91439523},\n  'mi': {to_meter: 1609.344},\n  'yd': {to_meter: 0.9144},\n  'ch': {to_meter: 20.1168},\n  'link': {to_meter: 0.201168},\n  'dm': {to_meter: 0.01},\n  'in': {to_meter: 0.0254},\n  'ind-ch': {to_meter: 20.11669506},\n  'us-in': {to_meter: 0.025400050800101},\n  'us-yd': {to_meter: 0.914401828803658}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r: function(v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'FITTED_CS':\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'ENGCRS':\n    case 'ENGINEERINGCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      obj[key].type = key;\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\nvar knownTypes = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS',\n  'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  var keys = Object.keys(wkt);\n  for (var i = 0, ii = keys.length; i <ii; ++i) {\n    var key = keys[i];\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    if (knownTypes.indexOf(key) !== -1) {\n      setPropertiesFromWkt(wkt[key]);\n    }\n    if (typeof wkt[key] === 'object') {\n      cleanWKT(wkt[key]);\n    }\n  }\n}\n\nfunction setPropertiesFromWkt(wkt) {\n  if (wkt.AUTHORITY) {\n    var authority = Object.keys(wkt.AUTHORITY)[0];\n    if (authority && authority in wkt.AUTHORITY) {\n      wkt.title = authority + ':' + wkt.AUTHORITY[authority];\n    }\n  }\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode === 'belge_1972') {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp[0];\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj[type];\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), \"+proj=utm +zone=\" + i + \" +datum=WGS84 +units=m\");\n    defs('EPSG:' + (32700 + i), \"+proj=utm +zone=\" + i + \" +south +datum=WGS84 +units=m\");\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var datums = {\n  wgs84: {\n    towgs84: \"0,0,0\",\n    ellipse: \"WGS84\",\n    datumName: \"WGS84\"\n  },\n  ch1903: {\n    towgs84: \"674.374,15.056,405.346\",\n    ellipse: \"bessel\",\n    datumName: \"swiss\"\n  },\n  ggrs87: {\n    towgs84: \"-199.87,74.79,246.62\",\n    ellipse: \"GRS80\",\n    datumName: \"Greek_Geodetic_Reference_System_1987\"\n  },\n  nad83: {\n    towgs84: \"0,0,0\",\n    ellipse: \"GRS80\",\n    datumName: \"North_American_Datum_1983\"\n  },\n  nad27: {\n    nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n    ellipse: \"clrk66\",\n    datumName: \"North_American_Datum_1927\"\n  },\n  potsdam: {\n    towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n    ellipse: \"bessel\",\n    datumName: \"Potsdam Rauenberg 1950 DHDN\"\n  },\n  carthage: {\n    towgs84: \"-263.0,6.0,431.0\",\n    ellipse: \"clark80\",\n    datumName: \"Carthage 1934 Tunisia\"\n  },\n  hermannskogel: {\n    towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n    ellipse: \"bessel\",\n    datumName: \"Hermannskogel\"\n  },\n  mgi: {\n    towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n    ellipse: \"bessel\",\n    datumName: \"Militar-Geographische Institut\",\n  },\n  osni52: {\n    towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n    ellipse: \"airy\",\n    datumName: \"Irish National\"\n  },\n  ire65: {\n    towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n    ellipse: \"mod_airy\",\n    datumName: \"Ireland 1965\"\n  },\n  rassadiran: {\n    towgs84: \"-133.63,-157.5,-158.62\",\n    ellipse: \"intl\",\n    datumName: \"Rassadiran\"\n  },\n  nzgd49: {\n    towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n    ellipse: \"intl\",\n    datumName: \"New Zealand Geodetic Datum 1949\"\n  },\n  osgb36: {\n    towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n    ellipse: \"airy\",\n    datumName: \"Ordnance Survey of Great Britain 1936\"\n  },\n  s_jtsk: {\n    towgs84: \"589,76,480\",\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n    ellipse: \"intl\",\n    datumName: \"Reseau National Belge 1972\"\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    gridOffset += 176 + subHeader.gridNodeCount * 16;\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.slice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"Gauss Kruger\", \"Gauss_Kruger\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\", \"Polar_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from \"../common/adjust_lon\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n  paramLatSq = paramLat * paramLat,\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat) /\n  (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n      NITER = 12,\n      paramLat = p.y,\n      paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n        break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)) /\n          Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"eqearth\", \"Equal Earth\", \"Equal_Earth\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lat from \"../common/adjust_lat\";\nimport adjust_lon from \"../common/adjust_lon\";\nimport hypot from \"../common/hypot\";\nimport pj_enfn from \"../common/pj_enfn\";\nimport pj_inv_mlfn from \"../common/pj_inv_mlfn\";\nimport pj_mlfn from \"../common/pj_mlfn\";\nimport { HALF_PI } from \"../constants/values\";\n\nvar EPS10 = 1e-10;\n\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    }\n    else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  }\n  else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = [\"bonne\", \"Bonne (Werner lat_1=90)\"];\nexport default {\n  init: init,\n  names: names\n};","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n"],"names":["proj4","HALF_PI","Math","FORTPI","TWO_PI","ignoredChar","match","obj","key","testkey","keys","Object","lkey","i","processedKey","defData","paramName","paramVal","paramOutname","self","paramObj","v","a","p","split","params","parseFloat","parseInt","unit","units","pm","legalAxis","whitespace","latin","keyword","endThings","digets","Parser","text","Error","char","newObjects","mapit","value","Array","thing","out","newObj","item","sExpr","knownTypes","d2r","input","wkt","lisp","txt","parser","type","cleanWKT","ii","setPropertiesFromWkt","authority","axisOrder","axis","geogcs","toMeter","isFinite","list","outName","inName","name","that","arguments","def","console","global","defs","codeWords","codes","code","word","checkMercator","auth","maybeProjStr","checkProjStr","ext","destination","source","property","undefined","eccent","sinphi","cosphi","con","x","sign","phi","ts","dphi","eccnth","identity","pt","projs","msfnz","y","lon","lat","adjust_lon","tsfnz","phi2z","projStore","add","proj","len","n","WGS84","datums","datum","datumCode","datum_params","b","es","ep2","nadgrids","loadedNadgrids","parseNadgridString","optional","secondsToRadians","seconds","decodeString","view","start","end","String","Uint8Array","Projection","srsCode","callback","error","rf","R_A","a2","b2","e","json","parseCode","ourProj","datumDef","sphere_","ellps","sphere","ellipse","ecc","SIXTH","RA4","grids","datumObj","extend","geodeticToGeocentric","Rn","Sin_Lat","Cos_Lat","Longitude","Latitude","Height","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau2","genau","X","Y","Z","checkParams","applyGridShift","inverse","point","output","Number","onlyMandatoryGrids","attemptedGrids","outer","grid","subgrids","j","jj","subgrid","epsilon","minX","minY","maxX","maxY","isNaN","applySubgridShift","pin","ct","val","tb","t","nadInterpolate","dif","del","inx","indx","frct","f00","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","checkCoord","num","TypeError","transform","dest","enforceAxis","wgs84","hasZ","toPoint","adjust_axis","datum_transform","compareDatums","source_a","source_es","gridShiftCode","dest_a","dest_b","dest_es","geocentricToWgs84","datum_type","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","destGridShiftResult","transformer","from","to","coords","transformedArray","NaN","checkProj","fromProj","toProj","coord","single","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","ll","accuracy","encode","utm","seasting","snorthing","get100kID","easting","northing","zoneNumber","getLetter100kID","column","row","parm","index","colOrigin","rowOrigin","colInt","rowInt","rollover","O","get100kSetForZone","LLtoUTM","eccPrimeSquared","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","eccSquared","UTMNorthing","k0","getLetterDesignator","LetterDesignator","mgrs","bbox","UTMtoLL","decode","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","result","UTMEasting","zoneLetter","e1","topRight","setParm","mgrsString","testChar","accuracyBonus","length","hunK","sb","set","east100k","getEastingFromChar","curCol","eastingValue","rewindMarker","north100k","getNorthingFromChar","curRow","northingValue","getMinNorthing","remainder","sep","sepEasting","sepNorthing","Point","z","mgrsStr","en","C00","C02","C04","C06","C22","C44","C46","C66","sphi","cphi","arg","k","s","pj_mlfn","pj_enfn","delta_lon","sin_phi","cos_phi","al","als","c","cs","ml","pj_inv_mlfn","tan_phi","d","ds","f","g","h","r","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","hr","hi1","hr1","hi","tmerc","np","gatg","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","hypot","tmp","clens_cmplx","zone","adjust_zone","etmerc","esinp","exp","srat","gauss","sinc","cosc","cosl","rho","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","phy0","sinPhy0","semiMajorAxis","flattening","e2","k1","k2","k3","Sa1","Sa2","I","rotI","rotB","lambda","S","phy","prevPhy","iteration","projectionName","com","cosph0","F","H","L","sinph0","J","gamma0","AB","gamma","lamc","lam1","lam2","phi1","phi2","alpha_c","typeAProjections","alp","gam","one_es","U","V","W","temp","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ms1","ts1","sin2","cos2","ms2","ts2","ts0","rh1","theta","gfi","deltav","eps","ro","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","qsfnz","authset","APA","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","beta","qs","asinz","eccnts","coslon","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","th_n_re1","th_n_im1","delta_lat","d_phi","d_phi_n","d_psi","th_re","th_n_re","th_n_im","z_re","z_im","delta_x","delta_y","z_n_re","z_n_im","th_im","z_n_re1","z_n_im1","num_re","num_im","den_re","den_im","den2","d_lambda","d_psi_n","delta_theta","sinth","costh","m","msq","gsq","xx","yy","xys","c1","c2","c3","a1","m1","th1","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","s2","s3","s4","s5","cosAz","Ee","sinpsi","FACE_ENUM","AREA_ENUM","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","offset","slon","sinlon","xy","nu","cosmu","tannu","invert_sign","xa","lp","COEFS_X","COEFS_Y","R2D","RC1","poly3_val","coefs","NODES","newton_rapshon","f_df","max_err","iters","upd","mode","omega","yt","ba","bm","bq","v_x","v_y","v_z","det","v_zp","paramLat","paramLatSq","paramLatPow6","A1","A2","A3","A4","fy","e_fwd","E","e_inv","s_fwd","s_inv","data","DataView","isLittleEndian","detectLittleEndian","nFields","header","readHeader","readSubgrids","gridOffset","subHeader","readGridHeader","nodes","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","lngColumnCount","latColumnCount","mapNodes","nadgrid","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","eqearth","bonne"],"mappings":"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"}