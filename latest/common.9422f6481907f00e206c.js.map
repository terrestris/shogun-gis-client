{"version":3,"file":"common.9422f6481907f00e206c.js","mappings":"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","sources":["webpack://@terrestris/shogun-gis-client/./src/hooks/useAppDispatch.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useAppSelector.ts","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.less?3a66","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/usePlugins.ts","webpack://@terrestris/shogun-gis-client/./src/components/BasicMapComponent/index.tsx","webpack://@terrestris/shogun-gis-client/./src/plugin/index.ts","webpack://@terrestris/shogun-gis-client/./src/components/CookieBanner/index.less?eff3","webpack://@terrestris/shogun-gis-client/./src/components/CookieBanner/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useSHOGunAPIClient.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteWfsTransaction.ts","webpack://@terrestris/shogun-gis-client/./src/components/FileUpload/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useConvertImageUrl.ts","webpack://@terrestris/shogun-gis-client/./src/components/ImageUpload/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoForm/index.less?d0f3","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ReferenceTable/index.less?1552","webpack://@terrestris/shogun-gis-client/./src/components/ReferenceTable/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/DisplayField/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditReferenceTable/index.less?bbe4","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditReferenceTable/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureForm/index.less?0b49","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteWfsDescribeFeatureType.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useWriteWfsTransaction.ts","webpack://@terrestris/shogun-gis-client/./src/components/MapDrawer/index.less?074d","webpack://@terrestris/shogun-gis-client/./src/components/MapDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteGetFeature.ts","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureGeometryToolbar/index.less?cbd2","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureGeometryToolbar/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureTabs/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/DeleteButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/ResetButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/SaveButton/index.less?fbda","webpack://@terrestris/shogun-gis-client/./src/components/FeedbackIcon/index.less?77c8","webpack://@terrestris/shogun-gis-client/./src/components/FeedbackIcon/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/SaveButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureToolbar/index.less?6e4b","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureToolbar/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureFullForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteWfsTransactionLock.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useGetFeatureInfo.ts","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureSwitch/index.less?2952","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureSwitch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/index.less?c362","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.less?bf45","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/BasicNominatimSearch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/MultiSearch/index.less?3fe9","webpack://@terrestris/shogun-gis-client/./src/utils/generateSolrQuery.ts","webpack://@terrestris/shogun-gis-client/./src/components/MultiSearch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/SearchField/index.less?bf24","webpack://@terrestris/shogun-gis-client/./src/components/SearchField/index.tsx","webpack://@terrestris/shogun-gis-client/./src/utils/getGravatarUrl.ts","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.less?5255","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useVersion.ts","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.less?f429","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.less?b06e","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerConfiguration/index.less?9f82","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerConfiguration/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerDetails/index.less?4108","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerDetails/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/index.less?b9d0","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/StylingDrawer/index.less?b6ee","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawerButton/StylingComponent/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/StylingDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.less?da3b","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.less?76ea","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Serializer/SHOGunMapFishPrintV3WMSSerializer.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Serializer/SHOGunMapFishPrintV3TiledWMSSerializer.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/CustomFieldInput/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/LayoutSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/OutputFormatSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/ResolutionSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/ScaleSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Shared/Shared.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.less?6377","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/Attributions/AttributionRow/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/Attributions/index.less?3fa9","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/Attributions/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/DeleteAllButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawerButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useHighlightVectorLayer.ts","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/PaginationToolbar/index.less?2293","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/PaginationToolbar/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoTabs/index.less?3c46","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoTabs/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?a4df","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.less?7905","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.less?47fb","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/LayerTreeContextMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.less?c926","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/LoadingIndicator/index.less?c9dc","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/LoadingIndicator/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.less?beca","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.less?b016","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.less?e08e","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useRestoreTransientLayers.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useQueryParams.ts","webpack://@terrestris/shogun-gis-client/./src/App.less?984e","webpack://@terrestris/shogun-gis-client/./src/App.tsx","webpack://@terrestris/shogun-gis-client/./src/store/appInfo/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/description/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/legal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/logoPath/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/searchEngines/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/title/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/user/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/store.ts","webpack://@terrestris/shogun-gis-client/./src/index.less?df1e","webpack://@terrestris/shogun-gis-client/./src/bootstrap.tsx","webpack://@terrestris/shogun-gis-client/./src/context/PluginContext.tsx","webpack://@terrestris/shogun-gis-client/./src/context/SHOGunAPIClientContext.tsx","webpack://@terrestris/shogun-gis-client/./src/i18n/index.ts","webpack://@terrestris/shogun-gis-client/./src/i18n/translations.ts","webpack://@terrestris/shogun-gis-client/./src/index.tsx","webpack://@terrestris/shogun-gis-client/./src/store/addLayerModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/editFeature/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/editFeatureDrawerOpen/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/featureInfo/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/layerDetailsModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/print/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/selectedFeatures/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/stylingDrawerVisibility/index.tsx","webpack://@terrestris/shogun-gis-client/./src/store/toolMenu/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/uploadDataModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/App.less?ee38","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.less?6017","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.less?f940","webpack://@terrestris/shogun-gis-client/./src/components/CookieBanner/index.less?0530","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureForm/index.less?a2dd","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureGeometryToolbar/index.less?141f","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureSwitch/index.less?c38e","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureToolbar/index.less?512e","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditReferenceTable/index.less?53a5","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/SaveButton/index.less?8e96","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/index.less?8ba3","webpack://@terrestris/shogun-gis-client/./src/components/FeedbackIcon/index.less?78b5","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.less?a2b7","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.less?b02d","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.less?bd2b","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerConfiguration/index.less?2da8","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerDetails/index.less?acf5","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/index.less?a101","webpack://@terrestris/shogun-gis-client/./src/components/MapDrawer/index.less?bfb2","webpack://@terrestris/shogun-gis-client/./src/components/MultiSearch/index.less?ea03","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.less?68c2","webpack://@terrestris/shogun-gis-client/./src/components/ReferenceTable/index.less?7f72","webpack://@terrestris/shogun-gis-client/./src/components/SearchField/index.less?8fd0","webpack://@terrestris/shogun-gis-client/./src/components/StylingDrawer/index.less?bc42","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/Attributions/index.less?d745","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.less?6534","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoForm/index.less?6db1","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoTabs/index.less?fd2b","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?27cc","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/PaginationToolbar/index.less?8e8c","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.less?f3c5","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/LoadingIndicator/index.less?22c2","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.less?d8e5","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.less?b29b","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.less?949c","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.less?cb8c","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.less?a168","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.less?25f0","webpack://@terrestris/shogun-gis-client/./src/index.less?2fc8"],"sourcesContent":["import {\n  useDispatch\n} from 'react-redux';\n\nimport type {\n  AppDispatch\n} from '../store/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport default useAppDispatch;\n","import {\n  TypedUseSelectorHook,\n  useSelector\n} from 'react-redux';\n\nimport type {\n  RootState\n} from '../store/store';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport default useAppSelector;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport {\n  Input,\n  Modal,\n  ModalProps,\n  notification,\n  Select,\n  Table,\n  Typography\n} from 'antd';\n\nimport {\n  InputStatus\n} from 'antd/lib/_util/statusUtils';\n\nimport {\n  getUid\n} from 'ol';\nimport OlLayerGroup from 'ol/layer/Group';\nimport ImageLayer from 'ol/layer/Image';\nimport TileLayer from 'ol/layer/Tile';\nimport ImageWMSSource from 'ol/source/ImageWMS';\nimport TileWMSSource from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\nimport CapabilitiesUtil from '@terrestris/ol-util/dist/CapabilitiesUtil/CapabilitiesUtil';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport { SimpleButton } from '@terrestris/react-geo';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport {\n  hide\n} from '../../store/addLayerModal';\n\nimport './index.less';\n\nexport type AddLayerModalProps = Partial<ModalProps>;\n\nexport const AddLayerModal: React.FC<AddLayerModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState(false);\n  const [layers, setLayers] = useState<(ImageLayer<ImageWMSSource> | TileLayer<TileWMSSource>)[]>([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n  const [validationStatus, setValidationStatus] = useState<InputStatus>('');\n  const [url, setUrl] = useState(\n    'https://sgx.geodatenzentrum.de/wms_topplus_open'\n  );\n  const [sanitizedUrl, setSanitizedUrl] = useState<string>();\n  const [version, setVersion] = useState<string>('1.3.0');\n\n  const isModalVisible = useAppSelector(state => state.addLayerModal.visible);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    if (!isModalVisible) {\n      return;\n    }\n    setSanitizedUrl(UrlUtil.createValidGetCapabilitiesRequest(url, 'WMS', version));\n  }, [version, isModalVisible, url]);\n\n  const onUrlChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = evt.target.value;\n    setValidationStatus(UrlUtil.isValid(value.trim()) ? '' : 'error');\n    setUrl(evt.target.value);\n  };\n\n  const getCapabilities = async () => {\n    if (!sanitizedUrl) {\n      return;\n    }\n    try {\n      setLoading(true);\n\n      const capabilities = await CapabilitiesUtil.getWmsCapabilities(sanitizedUrl);\n      const externalLayers = CapabilitiesUtil.getLayersFromWmsCapabilities(capabilities, 'Title');\n\n      setLayers(externalLayers);\n    } catch (error) {\n      notification.error({\n        message: t('AddLayerModal.errorMessage'),\n        description: t('AddLayerModal.errorDescription')\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const closeModal = () => {\n    setSelectedRowKeys([]);\n    setLayers([]);\n    dispatch(hide());\n  };\n\n  const onAddSelected = () => {\n    const layersToAdd = layers.filter(layer => selectedRowKeys.includes(getUid(layer)));\n    addLayers(layersToAdd);\n  };\n\n  const onAddAll = () => {\n    addLayers(layers);\n  };\n\n  const addLayers = (layersToAdd: (ImageLayer<ImageWMSSource> | TileLayer<TileWMSSource>)[]) => {\n    if (!map) {\n      return;\n    }\n\n    const targetFolderName = t('AddLayerModal.externalWmsFolder');\n    let targetGroup = MapUtil.getLayerByName(map, targetFolderName) as OlLayerGroup;\n\n    if (!targetGroup) {\n      targetGroup = new OlLayerGroup({\n        layers: []\n      });\n      targetGroup.set('name', targetFolderName);\n      const existingGroups = map.getLayerGroup().getLayers();\n      existingGroups.insertAt(existingGroups?.getLength() || 0, targetGroup);\n    }\n\n    layersToAdd.forEach(layerToAdd => {\n      if (!targetGroup.getLayers().getArray().includes(layerToAdd)) {\n        layerToAdd.set('isExternalLayer', true);\n\n        let layerUrl: string | undefined;\n        if (layerToAdd instanceof ImageLayer) {\n          layerUrl = layerToAdd.getSource()?.getUrl();\n        }\n\n        if (layerToAdd instanceof TileLayer) {\n          const urls = layerToAdd.getSource()?.getUrls();\n          layerUrl = urls?.length === 1 ? urls[0] : undefined;\n        }\n\n        const layerConfig = {\n          name: layerToAdd.get('name'),\n          type: layerToAdd instanceof TileLayer ? 'TILEWMS' : 'WMS',\n          opacity: layerToAdd.getOpacity(),\n          sourceConfig: {\n            layerNames: layerToAdd.getSource()?.getParams().LAYERS,\n            url: layerUrl,\n            useBearerToken: false\n          }\n        };\n        layerToAdd.set('layerConfig', layerConfig);\n        targetGroup.getLayers().push(layerToAdd);\n      }\n    });\n\n    closeModal();\n  };\n\n  return (\n    <Modal\n      className=\"add-layer-modal\"\n      title={t('AddLayerModal.title')}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={600}\n      footer={[\n        <SimpleButton\n          aria-label='add-all'\n          key=\"add-all\"\n          disabled={layers?.length < 1}\n          onClick={onAddAll}\n        >\n          {t('AddLayerModal.addAllLayers')}\n        </SimpleButton>,\n        <SimpleButton\n          aria-label='add-selected'\n          key=\"add-selected\"\n          disabled={selectedRowKeys?.length < 1}\n          onClick={onAddSelected}\n        >\n          {t('AddLayerModal.addSelectedLayers')}\n        </SimpleButton>\n      ]}\n      {...restProps}\n    >\n      <span>{t('AddLayerModal.requestWmsGetCapabilitiesInstruction')}</span>\n      <Input.Search\n        aria-label='input-search'\n        className='url-input'\n        placeholder={t('AddLayerModal.inputPlaceholder')}\n        value={url}\n        onChange={onUrlChange}\n        onSearch={getCapabilities}\n        status={validationStatus}\n        enterButton={true}\n        addonBefore={\n          <Select\n            aria-label='select-version'\n            defaultValue='1.3.0'\n            onChange={setVersion}\n            options={[\n              {\n                value: '1.3.0',\n                label: `${t('AddLayerModal.version')} 1.3.0`\n              },\n              {\n                value: '1.1.1',\n                label: `${t('AddLayerModal.version')} 1.1.1`\n              }\n            ]}\n          >\n          </Select>\n        }\n      />\n      {\n        validationStatus !== '' &&\n        <Typography className='error'>\n          {t('AddLayerModal.invalidUrlErrorMsg')}\n        </Typography>\n      }\n      <Table\n        aria-label='wms-table'\n        loading={loading}\n        columns={[\n          {\n            title: t('AddLayerModal.columnTitle'),\n            render: (text: any, record: any) => {\n              return record.get('title');\n            }\n          }\n        ]}\n        scroll={{\n          y: 250\n        }}\n        rowKey={(record: any) => getUid(record)}\n        rowSelection={{\n          selectedRowKeys,\n          onChange: setSelectedRowKeys\n        }}\n        pagination={false}\n        dataSource={layers}\n      />\n    </Modal>\n  );\n};\n\nexport default AddLayerModal;\n","import { useContext } from 'react';\n\nimport PluginContext from '../context/PluginContext';\n\nimport { ClientPluginInternal } from '../plugin';\n\nexport const usePlugins = (): ClientPluginInternal[] => {\n  return useContext(PluginContext);\n};\n\nexport default usePlugins;\n","import React, {\n  useEffect\n} from 'react';\n\nimport { ObjectEvent as OlObjectEvent } from 'ol/Object';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport MapComponent, {\n  MapComponentProps\n} from '@terrestris/react-geo/dist/Map/MapComponent/MapComponent';\n\nimport usePlugins from '../../hooks/usePlugins';\n\nimport {\n  isMapIntegration\n} from '../../plugin';\n\nexport const BasicMapComponent: React.FC<Partial<MapComponentProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const plugins = usePlugins();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  /**\n   * Updates external layer group name when language changes.\n   */\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const targetGroups = MapUtil.getLayersByProperty(map, 'isExternalLayerGroup', true);\n    if (targetGroups?.length !== 1) {\n      return;\n    }\n    const targetGroup = targetGroups[0];\n    const oldName = targetGroups[0].get('name');\n    targetGroup.set('name', t('AddLayerModal.externalWmsFolder'));\n    const changeEvent = new OlObjectEvent('change:layers', 'name', oldName);\n    targetGroup.dispatchEvent(changeEvent);\n  }, [i18n.language, map, t]);\n\n  const pluginComponents: JSX.Element[] = [];\n\n  if (plugins) {\n    plugins.forEach(plugin => {\n      if (isMapIntegration(plugin.integration)) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        pluginComponents.push(\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  }\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <MapComponent\n      map={map}\n      {...restProps}\n    >\n      {\n        pluginComponents\n      }\n    </MapComponent>\n  );\n};\n\nexport default BasicMapComponent;\n","import type { IconDefinition } from '@fortawesome/fontawesome-common-types';\n\nimport type {\n  Middleware,\n  Reducer\n} from '@reduxjs/toolkit';\n\nimport { CollapsePanelProps } from 'antd';\nimport type OlMap from 'ol/Map';\n\nimport type SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nexport type ClientPluginLocale = {\n  [locale: string]: {\n    translation: {\n      [key: string]: any;\n    };\n  };\n};\n\nexport type ClientPluginComponentProps = {\n  map?: OlMap;\n  client?: SHOGunAPIClient;\n};\n\nexport type ClientPluginIntegration = {\n  /**\n   * The main identifier of the integration point of the plugin.\n   */\n  placement: string;\n};\n\nexport type ClientPluginIntegrationToolMenu = ClientPluginIntegration &\n  Omit<CollapsePanelProps, 'key' | 'header'> & {\n    placement: 'tool-menu';\n    /**\n     * The label for the plugin in the tool menu.\n     */\n    label?: string;\n    /**\n     * The insertion index for the plugin in the tool menu, starting from 0 which is on top.\n     */\n    insertionIndex?: number;\n    /**\n     * The icon for the plugin in the tool menu.\n     */\n    icon?: IconDefinition;\n  };\n\nexport type HeaderPlacementOrientation = 'left' | 'center' | 'right';\n\nexport type ClientPluginIntegrationHeader = ClientPluginIntegration & {\n  placement: 'header';\n  /**\n   * The placement orientation for the plugin in the header.\n   */\n  placementOrientation: HeaderPlacementOrientation;\n  /**\n   * The insertion index for the plugin in the header, starting from 0 which is on the left.\n   */\n  insertionIndex?: number;\n};\n\nexport type ClientPluginIntegrationFeatureInfo = ClientPluginIntegration & {\n  placement: 'feature-info';\n  /**\n   * The list of layer names the plugin component should be rendered for. If not\n   * specified, the component will be rendered for all layers.\n   */\n  layers?: string[];\n};\n\nexport type ClientPluginIntegrationMap = ClientPluginIntegration & {\n  placement: 'map';\n};\n\nexport type FooterPlacementOrientation = 'left' | 'right';\n\nexport type ClientPluginIntegrationFooter = ClientPluginIntegration & {\n  placement: 'footer';\n  /**\n  * The placement orientation for the plugin in the footer.\n  */\n  placementOrientation: FooterPlacementOrientation;\n  /**\n  * The insertion index for the plugin in the footer, starting from 0 which is on the left.\n  */\n  insertionIndex?: number;\n};\n\nexport type ClientPluginIntegrationCookieConsent = ClientPluginIntegration & {\n  placement: 'cookie-banner';\n};\n\nexport type ClientPluginIntegrations =\n  | ClientPluginIntegrationToolMenu\n  | ClientPluginIntegrationHeader\n  | ClientPluginIntegrationFeatureInfo\n  | ClientPluginIntegrationMap\n  | ClientPluginIntegrationFooter\n  | ClientPluginIntegrationCookieConsent;\n\nexport type ClientPlugin = {\n  /**\n   * The key of the plugin, usually used for internal references (e.g. element class names) only.\n   */\n  key: string;\n  /**\n   * The definition of the integration point.\n   */\n  integration: ClientPluginIntegrations;\n  /**\n   * The actual component of the plugin.\n   */\n  component: React.FunctionComponent<ClientPluginComponentProps>;\n  /**\n   * The i18n definition to be used in the plugin.\n   */\n  i18n?: ClientPluginLocale;\n  /**\n   * A set of redux reducers to be used in the plugin.\n   */\n  reducers?: {\n    [key: string]: Reducer;\n  };\n  /**\n   * A set of middlewares that should be added to the store\n   * especially useful for usage of redux-rtk\n   */\n  middlewares?: Middleware[];\n};\n\nexport type ClientPluginInternal = ClientPlugin & {\n  wrappedComponent: React.FunctionComponent<ClientPluginComponentProps>;\n};\n\nexport function isToolMenuIntegration(\n  pluginIntegration: ClientPluginIntegrations\n): pluginIntegration is ClientPluginIntegrationToolMenu {\n  return pluginIntegration && pluginIntegration.placement === 'tool-menu';\n}\n\nexport function isHeaderIntegration(\n  pluginIntegration: ClientPluginIntegrations\n): pluginIntegration is ClientPluginIntegrationHeader {\n  return pluginIntegration && pluginIntegration.placement === 'header';\n}\n\nexport function isFeatureInfoIntegration(\n  pluginIntegration: ClientPluginIntegrations\n): pluginIntegration is ClientPluginIntegrationFeatureInfo {\n  return pluginIntegration && pluginIntegration.placement === 'feature-info';\n}\n\nexport function isMapIntegration(\n  pluginIntegration: ClientPluginIntegrations\n): pluginIntegration is ClientPluginIntegrationMap {\n  return pluginIntegration && pluginIntegration.placement === 'map';\n}\n\nexport function isFooterIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationFooter {\n  return pluginIntegration && pluginIntegration.placement === 'footer';\n}\n\nexport function isCookieConsentIntegration(\n  pluginIntegration: ClientPluginIntegrations\n): pluginIntegration is ClientPluginIntegrationCookieConsent {\n  return pluginIntegration && pluginIntegration.placement === 'cookie-banner';\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport { CookieConsent } from 'react-cookie-consent';\nimport { useTranslation } from 'react-i18next';\n\nimport usePlugins from '../../hooks/usePlugins';\nimport { isCookieConsentIntegration } from '../../plugin';\n\nimport './index.less';\n\nexport const CookieBanner = () => {\n  const plugins = usePlugins();\n\n  const { t } = useTranslation();\n\n  const getPlugin = () => {\n    let cookiePlugin: React.ReactElement | null = null;\n\n    plugins.forEach(plugin => {\n      if (isCookieConsentIntegration(plugin.integration)) {\n        const {\n          key, wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        cookiePlugin = <WrappedPluginComponent key={key} />;\n      }\n    });\n\n    return cookiePlugin;\n  };\n\n  return (\n    <CookieConsent\n      disableStyles={true}\n      key=\"default-cookie-consent\"\n      location=\"bottom\"\n      buttonText={t('CookieBanner.button')}\n      cookieName=\"SHOGun-Session-Cookie\"\n      buttonClasses=\"cookie-button\"\n      containerClasses=\"cookie-container\"\n      contentClasses=\"cookie-content\"\n      expires={150}\n    >\n      {getPlugin() ? getPlugin() : t('CookieBanner.info')}\n    </CookieConsent>\n  );\n};\n\nexport default CookieBanner;\n","import { useContext } from 'react';\n\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nimport SHOGunAPIClientContext from '../context/SHOGunAPIClientContext';\n\nexport const useSHOGunAPIClient = (): SHOGunAPIClient | null => {\n  return useContext(SHOGunAPIClientContext);\n};\n\nexport default useSHOGunAPIClient;\n","import {\n  useCallback\n} from 'react';\n\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type ExecuteWfsTransactionOpts = {\n  layer: WmsLayer;\n  transaction: Node;\n};\n\nexport const useExecuteWfsTransaction = () => {\n  const client = useSHOGunAPIClient();\n\n  // TODO Make detection more robust\n  const isFailed = (xmlDoc: Document) => {\n    const errorTagNameCandidates = [\n      'wfs:FAILED',\n      'ows:ExceptionReport'\n    ];\n\n    return errorTagNameCandidates.some(candidate =>\n      xmlDoc.getElementsByTagName(candidate).length > 0);\n  };\n\n  const executeWfsTransaction = useCallback(async (opts: ExecuteWfsTransactionOpts) => {\n    let url;\n\n    const source = opts.layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = source.getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = source.getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const defaultHeaders = {\n      'Content-Type': 'application/xml'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: opts.layer?.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders,\n      body: new XMLSerializer().serializeToString(opts.transaction)\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response while executing a WFS-Transaction');\n    }\n\n    const responseText = await response.text();\n\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'text/xml');\n\n    if (isFailed(xmlDoc)) {\n      throw new Error(`Something failed: ${responseText}`);\n    }\n\n    return responseText;\n  }, [client]);\n\n  return executeWfsTransaction;\n};\n\nexport default useExecuteWfsTransaction;\n","import React from 'react';\n\nimport {\n  Upload,\n  Button\n} from 'antd';\n\nimport {\n  UploadFile,\n  UploadProps\n} from 'antd/lib/upload/interface';\n\nimport _isNil from 'lodash/isNil';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport ShogunFile from '@terrestris/shogun-util/dist/model/File';\nimport {\n  PropertyFormItemEditConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\nimport {\n  getCsrfTokenHeader\n} from '@terrestris/shogun-util/dist/security/getCsrfTokenHeader';\n\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nexport type FileUploadProps = {\n  fieldConfig?: PropertyFormItemEditConfig;\n  readOnly?: boolean;\n} & Partial<UploadProps>;\n\nexport const FileUpload: React.FC<FileUploadProps> = ({\n  readOnly = false,\n  fieldConfig,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const client = useSHOGunAPIClient();\n  const {\n    t\n  } = useTranslation();\n\n  /**\n   * Workaround which allows to download files that need authentication.\n   */\n  const showPreview = async (file: UploadFile<ShogunFile>) => {\n    if (!client) {\n      return;\n    }\n    const { response } = file;\n    const fileName = response?.fileName;\n    const fileUrl = `/files/${response?.fileUuid}`;\n\n    if (_isNil(fileName) || _isNil(response?.fileUuid)) {\n      return;\n    }\n\n    const anchor = document.createElement('a');\n    document.body.appendChild(anchor);\n\n    const opts = {\n      headers: { ... getBearerTokenHeader(client.getKeycloak())}\n    };\n\n    const result = await fetch(fileUrl, opts);\n    const blob = await result.blob();\n    let objectUrl = window.URL.createObjectURL(blob);\n\n    anchor.href = objectUrl;\n    anchor.download = fileName;\n    anchor.click();\n    window.URL.revokeObjectURL(objectUrl);\n  };\n\n  const removeFile = async (file: UploadFile<ShogunFile>) => {\n    const uuid = file?.response?.fileUuid;\n    if (uuid) {\n      const url = `${client?.getBasePath()}files/${uuid}`;\n      return await fetch(url, {\n        method: 'DELETE',\n        credentials: 'same-origin',\n        headers: {\n          ...getCsrfTokenHeader(),\n          ...getBearerTokenHeader(client?.getKeycloak())\n        }\n      });\n    }\n  };\n\n  if (!client) {\n    return <></>;\n  }\n\n  return (\n    <Upload\n      multiple\n      name='file'\n      action='/files/uploadToFileSystem'\n      withCredentials={true}\n      headers={{\n        ...getCsrfTokenHeader(),\n        ...getBearerTokenHeader(client.getKeycloak())\n      }}\n      onRemove={removeFile}\n      onPreview={showPreview}\n      {...fieldConfig?.fieldProps}\n      {...passThroughProps}\n    >\n      {\n        !readOnly && (\n          <Button>{t('FileUpload.upload')}</Button>\n        )\n      }\n    </Upload>\n  );\n};\n\nexport default FileUpload;\n","import {\n  useCallback\n} from 'react';\n\nimport _isNil from 'lodash/isNil';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport const useConvertImageUrl = () => {\n  const client = useSHOGunAPIClient();\n\n  const imageUrlToBase64 = useCallback(async (url: string) => {\n    if (_isNil(url)) {\n      return Promise.reject();\n    }\n\n    const response = await fetch(url, {\n      credentials: 'include',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak())\n      }\n    });\n\n    const blob = await response.blob();\n    return new Promise<string>((onSuccess, onError) => {\n      try {\n        const reader = new FileReader() ;\n        reader.onload = function () { onSuccess(this.result as string); };\n        reader.readAsDataURL(blob);\n      } catch (e) {\n        onError(e);\n      }\n    });\n  }, [client]);\n\n  return imageUrlToBase64;\n};\n\nexport default useConvertImageUrl;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Upload,\n  Modal\n} from 'antd';\n\nimport {\n  UploadFile,\n  UploadProps\n} from 'antd/lib/upload/interface';\n\nimport _isNil from 'lodash/isNil';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport { useAsyncEffect } from '@terrestris/react-util/dist/hooks/useAsyncEffect/useAsyncEffect';\n\nimport ShogunFile from '@terrestris/shogun-util/dist/model/File';\nimport {\n  PropertyFormItemEditConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\nimport {\n  getCsrfTokenHeader\n} from '@terrestris/shogun-util/dist/security/getCsrfTokenHeader';\n\nimport useConvertImageUrl from '../../hooks/useConvertImageUrl';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nexport type ImageUploadProps = {\n  fieldConfig?: PropertyFormItemEditConfig;\n  readOnly?: boolean;\n  initialFileList?: UploadFile<any>[];\n} & Partial<UploadProps>;\n\nexport const ImageUpload: React.FC<ImageUploadProps> = ({\n  fieldConfig,\n  readOnly = false,\n  initialFileList,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const [mediaPreviewVisible, setMediaPreviewVisible] = useState<boolean>(false);\n  const [previewImage, setPreviewImage] = useState<string>('');\n  const [defaultFileListWithBlob, setDefaultFileListWithBlob] = useState<UploadFile<ShogunFile>[]>();\n\n  const client = useSHOGunAPIClient();\n  const imageUrlToBase64 = useConvertImageUrl();\n  const {\n    t\n  } = useTranslation();\n\n  useAsyncEffect(async () => {\n    if (!initialFileList || initialFileList.length === 0) {\n      return;\n    }\n    const convertDefaultFileList = async (fileList: UploadFile<ShogunFile>[]) => {\n      const fileListPromises = fileList.map(async (val: any) => ({\n        ...val,\n        thumbUrl: await imageUrlToBase64(`${client?.getBasePath()}imagefiles/${val?.response?.fileUuid}/thumbnail`),\n        url: undefined\n      }));\n      return await Promise.all(fileListPromises);\n    };\n    const fl = await convertDefaultFileList(initialFileList);\n    setDefaultFileListWithBlob(fl);\n  }, [initialFileList?.length]);\n\n  /**\n   * Shows preview of clicked uploaded image.\n   * @param {Object} file Image file object.\n   */\n  const showImagePreview = async (file: UploadFile<ShogunFile>) => {\n    const { response } = file;\n    if (_isNil(response) || _isNil(response?.fileUuid)) {\n      return;\n    }\n    const previewImageUrl = `${client?.getBasePath()}imagefiles/${response.fileUuid}`;\n    const img = await imageUrlToBase64(previewImageUrl);\n    setPreviewImage(img);\n    setMediaPreviewVisible(true);\n  };\n\n  const removeFile = async (file: UploadFile<ShogunFile>) => {\n    const uuid = file?.response?.fileUuid;\n    if (uuid) {\n      const url = `${client?.getBasePath()}imagefiles/${uuid}`;\n      return await fetch(url, {\n        method: 'DELETE',\n        credentials: 'same-origin',\n        headers: {\n          ...getCsrfTokenHeader(),\n          ...getBearerTokenHeader(client?.getKeycloak())\n        }\n      });\n    }\n  };\n\n  if (!client) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Upload\n        accept=\"image/*\"\n        multiple\n        name=\"file\"\n        action={`${client.getBasePath()}imagefiles/uploadToFileSystem`}\n        withCredentials={true}\n        listType=\"picture-card\"\n        headers={{\n          ...getCsrfTokenHeader(),\n          ...getBearerTokenHeader(client.getKeycloak())\n        }}\n        onRemove={removeFile}\n        onPreview={showImagePreview}\n        fileList={readOnly ? defaultFileListWithBlob : undefined}\n        {...fieldConfig?.fieldProps}\n        {...passThroughProps}\n      >\n        {\n          !readOnly && (\n            <div>\n              <FontAwesomeIcon icon={faPlus} />\n              <div style={{ marginTop: 8 }}>{t('ImageUpload.upload')}</div>\n            </div>\n          )\n        }\n      </Upload>\n      <Modal\n        open={mediaPreviewVisible}\n        footer={null}\n        onCancel={() => setMediaPreviewVisible(false)}\n      >\n        <img\n          alt=\"example\"\n          style={{ width: '100%' }}\n          src={previewImage}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default ImageUpload;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport {\n  Form,\n  FormProps\n} from 'antd';\n\nimport {\n  useForm\n} from 'antd/lib/form/Form';\n\nimport OlFeature from 'ol/Feature';\n\nimport {\n  PropertyFormItemReadConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport DisplayField from '../../../DisplayField';\n\nimport './index.less';\n\nexport type FeatureInfoFormProps = FormProps & {\n  feature: OlFeature;\n  formConfig?: PropertyFormItemReadConfig[];\n};\n\nexport const FeatureInfoForm: React.FC<FeatureInfoFormProps> = ({\n  feature,\n  formConfig,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const [form] = useForm();\n\n  useEffect(() => {\n    form.resetFields();\n    form.setFieldsValue(feature.getProperties());\n  }, [feature, form]);\n\n  const createFormItem = (fieldCfg: PropertyFormItemReadConfig) => {\n    return (\n      <Form.Item\n        key={fieldCfg.propertyName}\n        name={fieldCfg.propertyName}\n        label={fieldCfg.displayName || fieldCfg.propertyName}\n      >\n        <DisplayField\n          label={fieldCfg.displayName || fieldCfg.propertyName}\n          {...fieldCfg.fieldProps}\n        />\n      </Form.Item>\n    );\n  };\n\n  return (\n    <Form\n      className=\"feature-info-form\"\n      form={form}\n      labelCol={{\n        span: 8\n      }}\n      labelAlign=\"left\"\n      labelWrap\n      {...passThroughProps}\n    >\n      {formConfig?.map(createFormItem)}\n    </Form>\n  );\n\n};\n\nexport default FeatureInfoForm;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faBoxOpen\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Modal,\n  Table\n} from 'antd';\n\nimport {\n  TableProps\n} from 'antd/lib/table';\n\nimport OlFeature from 'ol/Feature';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport {\n  ReferenceConfig\n} from '../DisplayField';\n\nimport FeatureInfoForm from '../ToolMenu/FeatureInfo/FeatureInfoForm';\n\nimport './index.less';\n\nexport type ReferenceDataType = {\n  [key: string]: any;\n};\n\nexport type ReferenceTableProps = TableProps<ReferenceDataType> & {\n  value?: string;\n  referenceConfig?: ReferenceConfig;\n};\n\nexport const ReferenceTable: React.FC<ReferenceTableProps> = ({\n  value,\n  referenceConfig,\n  ...passThroughProps\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n\n  const {\n    t\n  } = useTranslation();\n\n  const defaultPropertyName = 'id';\n\n  const resolvePlaceholder = (record: ReferenceDataType) => {\n    if (referenceConfig?.tablePropertyName) {\n      const regex = /{{(.*?)}}/g;\n\n      if (referenceConfig?.tablePropertyName.match(regex)) {\n        let resolved = referenceConfig?.tablePropertyName;\n        let match;\n\n        while (match = regex.exec(referenceConfig?.tablePropertyName)) {\n          resolved = resolved.replace(match[0], record[match[1]]);\n        }\n\n        return resolved;\n      }\n\n      return record[referenceConfig?.tablePropertyName];\n    }\n\n    if (record[defaultPropertyName]) {\n      return record[defaultPropertyName];\n    }\n  };\n\n  const columns = [{\n    width: '100%',\n    render: (val: any, record: ReferenceDataType) => resolvePlaceholder(record) ?\n      resolvePlaceholder(record) :\n      t('ReferenceTable.defaultRowPlaceholder')\n  }, {\n    render: (val: any, record: ReferenceDataType) => {\n      return (\n        <Button\n          onClick={() => onDetailsClick(val, record)}\n          icon={(\n            <FontAwesomeIcon\n              icon={faBoxOpen}\n            />\n          )}\n        />\n      );\n    }\n  }];\n\n  const getDataSource = () => {\n    if (!value) {\n      return [];\n    }\n\n    try {\n      const parsedValue = JSON.parse(value);\n\n      if (Array.isArray(parsedValue)) {\n        return parsedValue;\n      }\n\n      if (parsedValue === null || parsedValue === undefined || typeof parsedValue === 'number' ||\n        typeof parsedValue === 'boolean' || typeof parsedValue === 'string') {\n        Logger.warn('Unsupported value given');\n        return [];\n      }\n\n      if (typeof parsedValue === 'object') {\n        return [parsedValue];\n      }\n    } catch (error) {\n      Logger.warn('Error while parsing the table data ', error);\n      return [];\n    }\n  };\n\n  const getModalTitle = () => {\n    if (!selectedFeature) {\n      return t('ReferenceTable.defaultModalTitle');\n    }\n\n    const placeholder = resolvePlaceholder(selectedFeature.getProperties());\n\n    if (!placeholder) {\n      return t('ReferenceTable.defaultModalTitle');\n    }\n\n    return `${t('ReferenceTable.modalTitle', {\n      referenceValue: placeholder\n    })}`;\n  };\n\n  const onDetailsClick = (val: any, record: ReferenceDataType) => {\n    const feature = new OlFeature();\n    feature.setProperties(record);\n\n    setSelectedFeature(feature);\n    setIsModalOpen(true);\n  };\n\n  const onCancel = async () => {\n    setIsModalOpen(false);\n    setSelectedFeature(undefined);\n  };\n\n  return (\n    <>\n      <Table\n        size=\"small\"\n        showHeader={false}\n        pagination={false}\n        columns={columns}\n        rowKey={defaultPropertyName}\n        dataSource={getDataSource()}\n        {...passThroughProps}\n      />\n      <Modal\n        className=\"reference-table-modal\"\n        open={isModalOpen}\n        maskClosable={false}\n        footer={null}\n        width={600}\n        destroyOnClose={true}\n        title={getModalTitle()}\n        onCancel={onCancel}\n      >\n        {selectedFeature && (\n          <FeatureInfoForm\n            feature={selectedFeature}\n            formConfig={referenceConfig?.featureInfoFormConfig}\n          />\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default ReferenceTable;\n","import React from 'react';\n\nimport {\n  Checkbox,\n  Typography,\n  UploadFile\n} from 'antd';\n\nimport {\n  isMoment\n} from 'moment';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport ShogunFile from '@terrestris/shogun-util/dist/model/File';\nimport {\n  PropertyFormItemReadConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport { isFileConfig } from '../EditFeatureDrawer/EditFeatureForm';\nimport FileUpload from '../FileUpload';\nimport ImageUpload from '../ImageUpload';\nimport ReferenceTable from '../ReferenceTable';\n\nexport type ValueType = string | number | boolean | moment.Moment | Record<string, any>;\n\nexport type ReferenceConfig = {\n  tablePropertyName?: string;\n  featureInfoFormConfig?: PropertyFormItemReadConfig[];\n};\n\nexport type DisplayFieldProps = {\n  format?: string;\n  suffix?: string;\n  value?: ValueType | ValueType[];\n  label?: string;\n  referenceConfig?: ReferenceConfig;\n};\n\nexport const DisplayField: React.FC<DisplayFieldProps> = ({\n  format = 'DD.MM.YYYY',\n  suffix,\n  value,\n  label,\n  referenceConfig,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const {\n    i18n\n  } = useTranslation();\n\n  let displayText: string = '';\n\n  if (typeof value === 'string') {\n    displayText = value;\n  }\n\n  if (typeof value === 'boolean' || value === 'false' || value === 'true') {\n    return (\n      <Checkbox\n        checked={value === true || value === 'true'}\n        disabled\n      />\n    );\n  }\n\n  if (Number.isFinite(value)) {\n    displayText = new Intl.NumberFormat(i18n.language, {\n      useGrouping: false\n    }).format(Number(value));\n  }\n\n  if (isMoment(value)) {\n    displayText = value.format(format);\n  }\n\n  if (Array.isArray(value)) {\n    displayText = value.join(', ');\n  }\n\n  const getUpload = (val: ValueType | ValueType[]): UploadFile<ShogunFile>[] | null => {\n    if (!value) {\n      return null;\n    }\n    let v = typeof val !== 'string' ? JSON.stringify(val) : val;\n\n    try {\n      v = JSON.parse(v);\n    } catch (e) {\n      return null;\n    }\n\n    if (typeof v === 'object' && v !== null && isFileConfig(v[0])) {\n      return v as UploadFile<ShogunFile>[];\n    }\n    return null;\n  };\n\n  const uploadValue = value && getUpload(value);\n\n  if (uploadValue) {\n    if (uploadValue[0].response?.fileType?.startsWith('image/')) {\n      return (\n        <ImageUpload\n          initialFileList={uploadValue}\n          disabled\n          readOnly\n        />\n      );\n    } else {\n      return (\n        <FileUpload\n          defaultFileList={uploadValue}\n          disabled\n          readOnly\n        />\n      );\n    }\n  }\n\n  const isJson = (val: ValueType | ValueType[]): boolean => {\n    let v = typeof val !== 'string' ? JSON.stringify(val) : val;\n\n    try {\n      v = JSON.parse(v);\n    } catch (e) {\n      return false;\n    }\n\n    return typeof v === 'object' && v !== null;\n  };\n\n  if (value && isJson(value)) {\n    return (\n      <ReferenceTable\n        value={typeof value === 'string' ? value : JSON.stringify(value)}\n        referenceConfig={referenceConfig}\n      />\n    );\n  }\n\n  return (\n    <Typography.Text\n      className=\"displayfield\"\n      {...passThroughProps}\n    >\n      {displayText}{displayText && suffix ? ` ${suffix}` : ''}\n    </Typography.Text>\n  );\n};\n\nexport default DisplayField;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faEdit,\n  faTrash,\n  faPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Modal,\n  Popconfirm,\n  Table\n} from 'antd';\n\nimport {\n  FormInstance,\n  useForm\n} from 'antd/lib/form/Form';\n\nimport {\n  ColumnsType,\n  TableProps\n} from 'antd/lib/table';\n\nimport { FileInfoList } from 'hooks/useWriteWfsTransaction';\n\nimport _cloneDeep from 'lodash/cloneDeep';\n\nimport moment from 'moment';\n\nimport OlFeature from 'ol/Feature';\nimport {\n  getUid\n} from 'ol/util';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport {\n  PropertyFormItemEditConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useConvertImageUrl from '../../../hooks/useConvertImageUrl';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport EditFeatureForm from '../../EditFeatureDrawer/EditFeatureForm';\n\nimport './index.less';\n\nexport type EditReferenceDataType = {\n  id?: number;\n  internalId?: number;\n  [key: string]: any;\n};\n\nexport type EditReferenceTableProps = Omit<TableProps<EditReferenceDataType>, 'onChange'> & {\n  parentForm: FormInstance<EditReferenceDataType>;\n  propertyName: string;\n  value?: EditReferenceDataType;\n  tablePropertyName?: string;\n  formConfig?: PropertyFormItemEditConfig[];\n  onChange?: (changedValues: EditReferenceDataType[]) => void;\n};\n\nexport const EditReferenceTable: React.FC<EditReferenceTableProps> = ({\n  parentForm,\n  propertyName,\n  value,\n  tablePropertyName,\n  formConfig,\n  onChange = () => {},\n  ...passThroughProps\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n\n  const [form] = useForm<EditReferenceDataType>();\n\n  const {\n    t\n  } = useTranslation();\n\n  const imageUrlToBase64 = useConvertImageUrl();\n  const client = useSHOGunAPIClient();\n\n  const defaultPropertyName = 'id';\n\n  const resolvePlaceholder = (record: EditReferenceDataType): string | number => {\n    if (!tablePropertyName) {\n      return record[defaultPropertyName] || '';\n    }\n\n    const regex = /{{(.*?)}}/g;\n\n    if (!tablePropertyName.match(regex)) {\n      return record[tablePropertyName];\n    }\n\n    let resolved = tablePropertyName;\n    let match;\n\n    while (match = regex.exec(tablePropertyName)) {\n      resolved = resolved.replace(match[0], record[match[1]]);\n    }\n\n    return resolved;\n  };\n\n  const columns: ColumnsType<EditReferenceDataType> = [{\n    width: '100%',\n    defaultSortOrder: 'ascend',\n    sorter: (a, b) => {\n      const valA = resolvePlaceholder(a);\n      const valB = resolvePlaceholder(b);\n\n      if (Number.isFinite(valA) && Number.isFinite(valB)) {\n        return (valA as number) - (valB as number);\n      }\n\n      if (typeof valA === 'string' && typeof valB === 'string') {\n        return valA.localeCompare(valB);\n      }\n\n      return 0;\n    },\n    render: (_: any, record: EditReferenceDataType) => resolvePlaceholder(record)\n  }, {\n    render: (_: any, record: EditReferenceDataType) => {\n      return (\n        <Button\n          onClick={() => onDetailsClick(record)}\n          icon={(\n            <FontAwesomeIcon\n              icon={faEdit}\n            />\n          )}\n        />\n      );\n    }\n  }, {\n    render: (_: any, record: EditReferenceDataType) => {\n      return (\n        <Popconfirm\n          title={t('EditReferenceTable.confirmDeleteTitle')}\n          onConfirm={() => onConfirmDelete(record)}\n          placement=\"bottomRight\"\n        >\n          <Button\n            danger={true}\n            icon={(\n              <FontAwesomeIcon\n                icon={faTrash}\n              />\n            )}\n          />\n        </Popconfirm>\n      );\n    }\n  }];\n\n  const getDataSource = () => {\n    if (!value) {\n      return;\n    }\n\n    if (!Array.isArray(value)) {\n      Logger.warn('Reference value must be of of type array.');\n      return;\n    }\n\n    const valueCopy = _cloneDeep(value);\n    valueCopy.forEach(v => {\n      Object.entries(v).forEach(async ([key, val]) => {\n        const isDate = formConfig?.some(cfg => cfg.propertyName === key && cfg.component === 'DATE');\n        if (isDate && val) {\n          const parsedDate = moment(value);\n\n          if (parsedDate.isValid()) {\n            v[key] = moment(val);\n          } else {\n            Logger.warn('Could not parse date');\n            v[key] = null;\n          }\n        }\n\n        const isUpload = formConfig?.some(cfg => cfg.propertyName === key && cfg.component === 'UPLOAD');\n        if (isUpload) {\n          if (Array.isArray(v[key])) {\n            const vMap = v[key]?.map(async (upload: FileInfoList) => ({\n              ...upload,\n              thumbUrl: upload.type.startsWith('image')\n                ? await imageUrlToBase64(\n                  `${client?.getBasePath()}imagefiles/${\n                    upload?.response?.fileUuid\n                  }/thumbnail`\n                )\n                : undefined,\n              url: upload.type.startsWith('image') ? undefined : upload.url\n            }));\n            const result = await Promise.all(vMap);\n            v[key] = result;\n          } else {\n            v[key] = [];\n          }\n        }\n      });\n    });\n\n    const isIdAvailable = valueCopy.every(el => {\n      if (Number.isFinite(el.id)) {\n        return true;\n      }\n\n      if (typeof el.id === 'string' && el.id.length > 0) {\n        return true;\n      }\n\n      return false;\n    });\n\n    if (!isIdAvailable) {\n      Logger.warn('Not all elements in the referenced array contain an id value. ' +\n        'This might result in unexpected behaviour');\n    }\n\n    return valueCopy;\n  };\n\n  const onAddClick = () => {\n    const feature = new OlFeature();\n    // We need to set a temporarily internal id on the feature to have it\n    // detectable while it's not being saved and has no id property set.\n    feature.set('internalId', getUid(feature));\n\n    form.setFieldsValue(feature.getProperties());\n\n    setSelectedFeature(feature);\n    setIsModalOpen(true);\n  };\n\n  const onConfirmDelete = (record: EditReferenceDataType) => {\n    const parentFormValues = parentForm.getFieldsValue();\n\n    if (!parentFormValues[propertyName]) {\n      Logger.warn(`Could not find the property ${propertyName} in the form values`);\n      return;\n    }\n\n    const deleteCandidates = _cloneDeep(parentFormValues[propertyName]);\n\n    if (!Array.isArray(deleteCandidates)) {\n      Logger.warn('The delete candidate is not of required type array');\n      return;\n    }\n\n    const deleteIdx = deleteCandidates.findIndex(deleteCandidate => {\n      if (Number.isFinite(deleteCandidate.id) && (deleteCandidate.id === record.id)) {\n        return true;\n      }\n\n      if (deleteCandidate.internalId && (deleteCandidate.internalId === record.internalId)) {\n        return true;\n      }\n\n      return false;\n    });\n\n    if (deleteIdx === -1) {\n      Logger.warn(`Could not find the index (${record.id}) to delete`);\n      return;\n    }\n\n    deleteCandidates.splice(deleteIdx, 1);\n\n    onChange(deleteCandidates);\n  };\n\n  const onDetailsClick = (record: EditReferenceDataType) => {\n    const feature = new OlFeature();\n    feature.setProperties(record);\n\n    form.setFieldsValue(feature.getProperties());\n\n    setSelectedFeature(feature);\n    setIsModalOpen(true);\n  };\n\n  const updateReferences = () => {\n    const formValues = _cloneDeep<EditReferenceDataType>(form.getFieldsValue(true));\n\n    let existingReferences: EditReferenceDataType[] = [];\n    if (Array.isArray(parentForm.getFieldValue(propertyName))) {\n      existingReferences = _cloneDeep(parentForm.getFieldValue(propertyName));\n    }\n\n    const targetIdx = existingReferences.findIndex(existingReference => {\n      if (Number.isFinite(existingReference.id) && (existingReference.id === formValues.id)) {\n        return true;\n      }\n\n      if (existingReference.internalId && (existingReference.internalId === formValues.internalId)) {\n        return true;\n      }\n\n      return false;\n    });\n\n    if (targetIdx > -1) {\n      // Update\n      existingReferences[targetIdx] = formValues;\n    } else {\n      // Add\n      existingReferences.push(formValues);\n    }\n\n    if (form.isFieldsTouched()) {\n      onChange(existingReferences);\n    }\n  };\n\n  const onCancel = () => {\n    closeModal();\n  };\n\n  const onOk = async () => {\n    try {\n      await form.validateFields();\n    } catch (error) {\n      Logger.warn('Form validation failed: ', error);\n      return;\n    }\n\n    updateReferences();\n\n    closeModal();\n  };\n\n  const closeModal = () => {\n    form.resetFields();\n\n    setIsModalOpen(false);\n    setSelectedFeature(undefined);\n  };\n\n  return (\n    <>\n      <Button\n        className=\"add-reference-button\"\n        onClick={onAddClick}\n        icon={(\n          <FontAwesomeIcon\n            icon={faPlus}\n          />\n        )}\n      />\n      <Table\n        size=\"small\"\n        showHeader={false}\n        pagination={false}\n        columns={columns}\n        rowKey={defaultPropertyName}\n        dataSource={getDataSource()}\n        {...passThroughProps}\n      />\n      <Modal\n        className=\"edit-reference-table-modal\"\n        open={isModalOpen}\n        maskClosable={false}\n        width={600}\n        destroyOnClose={true}\n        title={`${t('EditReferenceTable.modalTitle', {\n          referenceValue: selectedFeature ?\n            resolvePlaceholder(selectedFeature.getProperties() as EditReferenceDataType) :\n            undefined\n        })}`}\n        onCancel={onCancel}\n        onOk={onOk}\n      >\n        {selectedFeature && (\n          <EditFeatureForm\n            form={form}\n            formConfig={formConfig}\n            applyFormDirty={false}\n          />\n        )}\n      </Modal>\n    </>\n  );\n};\n\nexport default EditReferenceTable;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  Input,\n  InputNumber,\n  DatePicker,\n  Select,\n  Switch,\n  Checkbox,\n  Form,\n  FormItemProps\n} from 'antd';\n\nimport {\n  FormInstance,\n  FormProps\n} from 'antd/lib/form/Form';\nimport {\n  UploadChangeParam,\n  UploadFile\n} from 'antd/lib/upload/interface';\n\nimport _debounce from 'lodash/debounce';\nimport _isNil from 'lodash/isNil';\nimport _isObject from 'lodash/isObject';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport ShogunFile from '@terrestris/shogun-util/dist/model/File';\n\nimport {\n  PropertyFormItemEditConfig,\n  PropertyFormItemEditReferenceTableConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\nimport {\n  setFormDirty\n} from '../../../store/editFeature';\nimport DisplayField from '../../DisplayField';\nimport FileUpload from '../../FileUpload';\nimport ImageUpload from '../../ImageUpload';\nimport EditReferenceTable from '../EditReferenceTable';\n\nimport './index.less';\n\nexport type EditFeatureFormProps = FormProps & {\n  form: FormInstance;\n  formConfig?: PropertyFormItemEditConfig[];\n  applyFormDirty?: boolean;\n};\n\nexport function isFileConfig(val: any): val is UploadFile<ShogunFile> {\n  if (_isNil(val)) {\n    return false;\n  }\n\n  return val.uid &&\n    !_isNil(val.name) &&\n    !_isNil(val.type) &&\n    !_isNil(val.uid) &&\n    _isObject(val.response) &&\n    !_isNil(val.response.id) &&\n    !_isNil(val.response.fileUuid) &&\n    !_isNil(val.response.fileName) &&\n    !_isNil(val.response.fileType);\n}\n\nexport const EditFeatureForm: React.FC<EditFeatureFormProps> = ({\n  form,\n  formConfig,\n  applyFormDirty = true,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const client = useSHOGunAPIClient();\n  const dispatch = useAppDispatch();\n\n  const formDirty = useAppSelector(\n    state => state.editFeature.formDirty\n  );\n\n  const createFormItem = (fieldCfg: PropertyFormItemEditConfig): React.ReactNode => {\n    let field: React.ReactNode;\n    if (fieldCfg.readOnly) {\n      field = createReadOnlyComponent(fieldCfg);\n    } else if (fieldCfg.component) {\n      field = createFieldComponent(fieldCfg);\n    } else {\n      Logger.warn('FieldConfig is missing `readOnly`, `component` or `dataType` property.');\n      field = (\n        <Input\n          key={fieldCfg.propertyName}\n          placeholder=\"\"\n        />\n      );\n    }\n\n    const formItemProps: FormItemProps = {\n      rules: []\n    };\n\n    formItemProps.rules = [{\n      required: fieldCfg.required\n    }];\n\n    if ((fieldCfg.component === 'SWITCH' || fieldCfg.component === 'CHECKBOX') && !fieldCfg.readOnly) {\n      formItemProps.valuePropName = 'checked';\n    }\n\n    if (fieldCfg.component === 'UPLOAD' && !fieldCfg.readOnly) {\n      formItemProps.valuePropName = 'fileList';\n      /**\n       * Setting `getValueFromEvent` to provide the proper file list to the antd Upload component.\n       */\n      formItemProps.getValueFromEvent = (e: UploadFile<ShogunFile>[] | UploadChangeParam<UploadFile<ShogunFile>>) => {\n        if (Array.isArray(e)) {\n          return e;\n        }\n        return e && e.fileList;\n      };\n    }\n\n    return (\n      <Form.Item\n        key={fieldCfg.propertyName}\n        name={fieldCfg.propertyName}\n        label={fieldCfg.displayName || fieldCfg.propertyName}\n        {...formItemProps}\n      >\n        {field}\n      </Form.Item>\n    );\n  };\n\n  const createReadOnlyComponent = (fieldConfig: PropertyFormItemEditConfig): React.ReactNode => {\n    return (\n      <DisplayField\n        {...fieldConfig.fieldProps}\n      />\n    );\n  };\n\n  const createFieldComponent = (fieldCfg: PropertyFormItemEditConfig): React.ReactNode => {\n    if (!client) {\n      return;\n    }\n\n    switch (fieldCfg.component) {\n      case 'CHECKBOX':\n        return (\n          <Checkbox\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'DATE':\n        return (\n          <DatePicker\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'DISPLAY':\n        return (\n          <span {...fieldCfg?.fieldProps} />\n        );\n      case 'INPUT':\n        return (\n          <Input\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'NUMBER':\n        return (\n          <InputNumber\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'SELECT':\n        return (\n          <Select\n            allowClear={true}\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'SWITCH':\n        return (\n          <Switch\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'TEXTAREA':\n        return (\n          <Input.TextArea\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'UPLOAD':\n        if (fieldCfg?.fieldProps?.type === 'IMAGE') {\n          return (\n            <ImageUpload\n              {...fieldCfg?.fieldProps}\n            />\n          );\n        } else {\n          return (\n            <FileUpload\n              {...fieldCfg?.fieldProps}\n            />\n          );\n        }\n      case 'REFERENCE_TABLE':\n        const referenceTableConfig = (fieldCfg as PropertyFormItemEditReferenceTableConfig);\n\n        return (\n          <EditReferenceTable\n            key={referenceTableConfig.propertyName}\n            tablePropertyName={referenceTableConfig.tablePropertyName}\n            propertyName={referenceTableConfig.propertyName}\n            formConfig={referenceTableConfig.editFormConfig}\n            parentForm={form}\n            {...referenceTableConfig.fieldProps}\n          />\n        );\n      default:\n        Logger.error(`Component type \"${fieldCfg?.component}\" is not supported`);\n        return <></>;\n    }\n  };\n\n  const onValuesChange = async (changedValues: any) => {\n    if (applyFormDirty && changedValues && !formDirty) {\n      dispatch(setFormDirty(true));\n    }\n  };\n\n  return (\n    <Form\n      className=\"edit-feature-form\"\n      form={form}\n      labelCol={{\n        span: 8\n      }}\n      labelAlign=\"left\"\n      labelWrap\n      onValuesChange={_debounce(onValuesChange, 250)}\n      {...passThroughProps}\n    >\n      { formConfig?.map(createFormItem) }\n    </Form>\n  );\n};\n\nexport default EditFeatureForm;\n","import {\n  useCallback\n} from 'react';\n\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type LocalGeometryType = 'MultiPoint' | 'Point' | 'MultiLineString' | 'LineString' | 'MultiPolygon' | 'Polygon';\nexport type GeometryType = 'gml:MultiPoint' | 'gml:Point' | 'gml:MultiLineString' | 'gml:LineString' | 'gml:MultiPolygon' | 'gml:Polygon';\n\nexport type Property = {\n  localType: 'int' | 'number' | 'string' | 'boolean' | 'date' | LocalGeometryType;\n  maxOccurs: 0 | 1;\n  minOccurs: 0 | 1;\n  name: string;\n  nillable: boolean;\n  type: 'xsd:int' | 'xsd:number' | 'xsd:string' | 'xsd:boolean' | 'xsd:date' | GeometryType;\n};\n\nexport type FeatureType = {\n  typeName: string;\n  properties: Property[];\n};\n\nexport type DescribeFeatureType = {\n  elementFormDefault: string;\n  featureTypes: FeatureType[];\n  targetNamespace: string;\n  targetPrefix: string;\n};\n\nexport const isGeometryType = (propertyType: string): propertyType is GeometryType => {\n  const geometryTypes = [\n    'gml:MultiPoint',\n    'gml:Point',\n    'gml:MultiLineString',\n    'gml:LineString',\n    'gml:MultiPolygon',\n    'gml:Polygon'\n  ];\n\n  return geometryTypes.includes(propertyType);\n};\n\nexport const useExecuteWfsDescribeFeatureType = () => {\n  const client = useSHOGunAPIClient();\n\n  const executeWfsDescribeFeatureType = useCallback(async (layer: WmsLayer) => {\n    let url;\n\n    const source = layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = source.getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = source.getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const params = {\n      SERVICE: 'WFS',\n      REQUEST: 'DescribeFeatureType',\n      VERSION: '2.0.0',\n      OUTPUTFORMAT: 'application/json',\n      TYPENAMES: layer.getSource()?.getParams().LAYERS\n    };\n\n    const defaultHeaders = {\n      'Content-Type': 'application/json'\n    };\n\n    const response = await fetch(`${url}?${UrlUtil.objectToRequestString(params)}`, {\n      method: 'GET',\n      headers: layer.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response while executing a WFS-Transaction');\n    }\n\n    return await response.json() as DescribeFeatureType;\n  }, [client]);\n\n  return executeWfsDescribeFeatureType;\n};\n\nexport default useExecuteWfsDescribeFeatureType;\n","import {\n  useCallback\n} from 'react';\n\nimport {\n  FormInstance\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _cloneDeep from 'lodash/cloneDeep';\n\nimport {\n  isMoment\n} from 'moment';\n\nimport {\n  isEmpty\n} from 'ol/extent';\nimport OlFeature from 'ol/Feature';\nimport OlFormatWFS, {\n  WriteTransactionOptions as OlWriteTransactionOptions\n} from 'ol/format/WFS';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  PropertyFormTabConfig,\n  PropertyFormItemEditConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport {\n  isFileConfig\n} from '../components/EditFeatureDrawer/EditFeatureForm';\n\nimport useAppSelector from './useAppSelector';\nimport useExecuteWfsDescribeFeatureType, {\n  isGeometryType\n} from './useExecuteWfsDescribeFeatureType';\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type WriteWfsTransactionOpts = {\n  layer: WmsLayer;\n  upsertFeatures?: OlFeature[];\n  deleteFeatures?: OlFeature[];\n  form?: FormInstance;\n};\n\nexport type FileInfoList = {\n  uid: string;\n  lastModified: number;\n  name: string;\n  type: string;\n  url: string;\n  response: {\n    id: number;\n    created: string;\n    fileName: string;\n    fileType: string;\n    fileUuid: string;\n  };\n};\n\nexport const useWriteWfsTransaction = () => {\n  const map = useMap();\n  const executeWfsDescribeFeatureType = useExecuteWfsDescribeFeatureType();\n  const client = useSHOGunAPIClient();\n  const allowedEditMode = useAppSelector(state => state.editFeature.userEditMode);\n\n  const cleanFormValues = useCallback((formValues: Record<string, any>,\n    formConfig: PropertyFormTabConfig<PropertyFormItemEditConfig>[], stringify?: boolean) => {\n    for (const [key, value] of Object.entries(formValues)) {\n      if (Array.isArray(value)) {\n        const cleanedValue = value.map(v => cleanFormValues(v, formConfig));\n        formValues[key] = stringify ? JSON.stringify(cleanedValue) : cleanedValue;\n      }\n\n      // Transform undefined to null values.\n      if (value === undefined) {\n        formValues[key] = null;\n      }\n\n      // Filter out read-only fields.\n      const isReadOnly = formConfig.some(cfg => cfg.children\n        ?.some(child => child.propertyName === key && child.readOnly));\n\n      if (isReadOnly) {\n        delete formValues[key];\n      }\n\n      // Transform moments back to iso string.\n      if (isMoment(value)) {\n        formValues[key] = value.toISOString();\n      }\n\n      if (Array.isArray(value) && value.length > 0 && isFileConfig(value[0])) {\n        const filePath = value[0].response?.fileType?.startsWith('image/') ? 'imagefiles/' : 'files/';\n        const fileInfoList: FileInfoList[] = value.map((val: FileInfoList) => ({\n          uid: val.uid,\n          lastModified: val.lastModified,\n          name: val.name,\n          type: val.type,\n          url: `${client?.getBasePath()}${filePath}${val.response.fileUuid}`,\n          response: {\n            id: val.response?.id,\n            created: val.response?.created,\n            fileName: val.response?.fileName,\n            fileType: val.response?.fileType,\n            fileUuid: val.response?.fileUuid\n          }\n        }));\n        formValues[key] = JSON.stringify(fileInfoList);\n      }\n    }\n\n    return formValues;\n  }, [client]);\n\n  const writeWfsTransaction = useCallback(async (opts: WriteWfsTransactionOpts) => {\n    if (!map) {\n      return;\n    }\n\n    const inserts: OlFeature[] = [];\n    const updates: OlFeature[] = [];\n    const deletes: OlFeature[] = [];\n\n    const describeFeatureType = await executeWfsDescribeFeatureType(opts.layer);\n\n    if (!describeFeatureType) {\n      return;\n    }\n\n    const formConfig = opts.layer.get('editFormConfig') as PropertyFormTabConfig<PropertyFormItemEditConfig>[];\n\n    const geomProperty = describeFeatureType.featureTypes[0]?.properties\n      ?.find(property => isGeometryType(property.type));\n\n    let overallUpdateMode = false;\n\n    if (opts.upsertFeatures) {\n      for (const feature of opts.upsertFeatures) {\n        const feat = new OlFeature();\n\n        const geometry = feature.getGeometry()?.clone();\n\n        if (geometry && !isEmpty(geometry.getExtent()) && allowedEditMode?.includes('EDIT_GEOMETRY')) {\n          feat.set(geomProperty?.name || 'geom', geometry);\n          feat.setGeometryName(geomProperty?.name || 'geom');\n        }\n\n        if (opts.form) {\n          feat.setProperties(cleanFormValues(_cloneDeep(opts.form?.getFieldsValue()), formConfig, true));\n        }\n\n        const updateMode = !!feature.getId();\n\n        if (updateMode && !overallUpdateMode) {\n          overallUpdateMode = true;\n        }\n\n        if (updateMode) {\n          feat.setId(feature.getId());\n        }\n\n        if (updateMode) {\n          updates.push(feat);\n        } else {\n          inserts.push(feat);\n        }\n      }\n    }\n\n    if (opts.deleteFeatures) {\n      deletes.push(...opts.deleteFeatures);\n    }\n\n    const transactionOpts: OlWriteTransactionOptions = {\n      featureNS: describeFeatureType.targetNamespace,\n      featurePrefix: describeFeatureType.targetPrefix,\n      featureType: opts.layer.getSource()?.getParams().LAYERS,\n      srsName: map.getView().getProjection().getCode(),\n      version: '1.1.0',\n      nativeElements: []\n    };\n\n    const format = new OlFormatWFS();\n\n    const transaction = format.writeTransaction(inserts, updates, deletes, transactionOpts);\n\n    if (overallUpdateMode && ClientConfiguration.wfsLockFeatureEnabled) {\n      const rootNode = transaction.getRootNode() as Element;\n      const lockId = document.createElementNS('http://www.opengis.net/wfs', 'LockId');\n      const lockIdValue = document.createTextNode('GeoServer');\n      lockId.appendChild(lockIdValue);\n      rootNode.appendChild(lockId);\n    }\n\n    return transaction;\n  }, [map, allowedEditMode, executeWfsDescribeFeatureType, cleanFormValues]);\n\n  return writeWfsTransaction;\n};\n\nexport default useWriteWfsTransaction;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport {\n  Drawer\n} from 'antd';\n\nimport type {\n  DrawerProps\n} from 'antd/es/drawer';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\nexport type MapDrawerProps = DrawerProps;\n\nexport const MapDrawer: React.FC<MapDrawerProps> = ({\n  open,\n  children,\n  ...passThroughProps\n}) => {\n\n  const map = useMap();\n\n  useEffect(() => {\n    document.querySelectorAll('#map')[0]?.classList.toggle('bisected', !!open);\n  }, [open]);\n\n  const onAfterDrawerOpenChange = () => {\n    map?.updateSize();\n  };\n\n  return (\n    <Drawer\n      className=\"map-drawer\"\n      mask={false}\n      open={open}\n      placement=\"right\"\n      width={getComputedStyle(document.documentElement).getPropertyValue('--editDrawerWidth')}\n      afterOpenChange={onAfterDrawerOpenChange}\n      {...passThroughProps}\n    >\n      {children}\n    </Drawer>\n  );\n};\n\nexport default MapDrawer;\n","import {\n  useCallback\n} from 'react';\n\nimport {\n  FeatureCollection\n} from 'geojson';\n\nimport OlFormatFilter from 'ol/format/filter/Filter';\nimport OlFormatWFS from 'ol/format/WFS';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useExecuteWfsDescribeFeatureType from './useExecuteWfsDescribeFeatureType';\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type GetFeatureOpts = {\n  layer: WmsLayer;\n  filter?: OlFormatFilter;\n};\n\nexport const useExecuteGetFeature = () => {\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const executeWfsDescribeFeatureType = useExecuteWfsDescribeFeatureType();\n\n  const executeGetFeature = useCallback(async (opts: GetFeatureOpts) => {\n    if (!map) {\n      return;\n    }\n\n    const describeFeatureType = await executeWfsDescribeFeatureType(opts.layer);\n\n    if (!describeFeatureType) {\n      return;\n    }\n\n    let url;\n\n    const source = opts.layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = source.getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = source.getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const featureRequest = new OlFormatWFS().writeGetFeature({\n      srsName: map.getView().getProjection().getCode(),\n      featureNS: describeFeatureType.targetNamespace,\n      featurePrefix: describeFeatureType.targetPrefix,\n      featureTypes: [source?.getParams().LAYERS],\n      outputFormat: 'application/json',\n      filter: opts.filter\n    });\n\n    const defaultHeaders = {\n      'Content-Type': 'application/json'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: opts.layer?.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders,\n      body: new XMLSerializer().serializeToString(featureRequest)\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response');\n    }\n\n    return await response.json() as FeatureCollection;\n  }, [client, executeWfsDescribeFeatureType, map]);\n\n  return executeGetFeature;\n};\n\nexport default useExecuteGetFeature;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\n\nimport {\n  faPencil,\n  faTrash,\n  faDrawPolygon,\n  faUndo\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport { TooltipPlacement } from 'antd/es/tooltip';\nimport {\n  FeatureCollection,\n  Feature\n} from 'geojson';\nimport { t } from 'i18next';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport { isEmpty as isEmptyOlExtent } from 'ol/extent';\nimport OlFormatGeoJson from 'ol/format/GeoJSON';\nimport OlGeometry from 'ol/geom/Geometry';\nimport { DrawEvent as OlDrawEvent } from 'ol/interaction/Draw';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport DeleteButton from '@terrestris/react-geo/dist/Button/DeleteButton/DeleteButton';\nimport DrawButton from '@terrestris/react-geo/dist/Button/DrawButton/DrawButton';\nimport ModifyButton from '@terrestris/react-geo/dist/Button/ModifyButton/ModifyButton';\nimport SimpleButton from '@terrestris/react-geo/dist/Button/SimpleButton/SimpleButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport Toolbar, { ToolbarProps } from '@terrestris/react-geo/dist/Toolbar/Toolbar';\n\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\n\nimport {\n  setFormDirty\n} from '../../../store/editFeature';\n\nimport './index.less';\n\nexport type EditFeatureGeometryToolbarProps = ToolbarProps & {\n  feature: Feature;\n  historyLength?: number;\n};\n\ntype DrawType = 'Point' | 'LineString' | 'Polygon';\n\ntype EditHistory = {\n  past: FeatureCollection[];\n  future: FeatureCollection[];\n};\nexport const EditFeatureGeometryToolbar: React.FC<EditFeatureGeometryToolbarProps> = ({\n  feature,\n  historyLength = 10\n}) => {\n\n  const editHistory = useRef<EditHistory>({\n    past: [],\n    future: []\n  });\n\n  const map = useMap();\n  const dispatch = useAppDispatch();\n\n  const [editLayer, setEditLayer] = useState<OlLayerVector<OlSourceVector<OlGeometry>>>();\n  const [, setRevision] = useState<number>(0);\n\n  const gjFormat = useMemo(() => new OlFormatGeoJson(), []);\n\n  const allowedEditMode = useAppSelector(state => state.editFeature.userEditMode);\n  const formDirty = useAppSelector(state => state.editFeature.formDirty);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    if (!editLayer) {\n      setEditLayer(DigitizeUtil.getDigitizeLayer(map));\n    }\n\n    return () => {\n      if (editLayer) {\n        map?.removeLayer(editLayer);\n      }\n    };\n  }, [editLayer, map]);\n\n  useEffect(() => {\n    const isModified = editHistory.current.past.length > 0;\n    if (isModified && !formDirty) {\n      dispatch(setFormDirty(true));\n    }\n  // we only want to change formDirty state when the editHistory changes\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, editHistory.current.past]);\n\n  useEffect(() => {\n    if (editLayer && feature?.id) {\n      editLayer.getSource()?.clear();\n      const olFeat = gjFormat.readFeature(feature);\n      const source = editLayer.getSource() as OlSourceVector;\n      source.addFeature(olFeat);\n      setRevision(r => r + 1);\n\n      if (!isEmptyOlExtent(source.getExtent())) {\n        map?.getView().fit(source.getExtent(), {\n          padding: [50, 50, 50, 50]\n        });\n      }\n    }\n  }, [feature, editLayer, gjFormat, map]);\n\n  const undoEdit = () => {\n\n    const editSource = editLayer?.getSource();\n    const features = editSource?.getFeatures();\n\n    if (!features) {\n      return;\n    }\n\n    const clone: FeatureCollection = gjFormat.writeFeaturesObject(features);\n    const previousSource = editHistory.current.past[editHistory.current.past.length - 1];\n    if (!_isEmpty(previousSource)) {\n      editSource?.clear();\n      editSource?.addFeatures(gjFormat.readFeatures(previousSource));\n      editHistory.current = {\n        past: editHistory.current.past.slice(0, -1),\n        future: [...editHistory.current.future, clone].slice(-historyLength)\n      };\n      setRevision(r => r + 1);\n    }\n  };\n\n  const redoEdit = () => {\n\n    const editSource = editLayer?.getSource();\n    const features = editSource?.getFeatures();\n\n    if (!features) {\n      return;\n    }\n\n    const clone = gjFormat.writeFeaturesObject(features);\n    const nextSource = editHistory.current.future[editHistory.current.future.length - 1];\n    if (!_isEmpty(nextSource)) {\n      editSource?.clear();\n      editSource?.addFeatures(gjFormat.readFeatures(nextSource));\n\n      editHistory.current = {\n        future: editHistory.current.future.slice(0, -1),\n        past: [...editHistory.current.past, clone].slice(-historyLength)\n      };\n      setRevision(r => r + 1);\n    }\n  };\n\n  const onDrawEnd = (e: OlDrawEvent) => {\n    // overwrite existing geometry of feature\n    if (!feature.geometry.type.toLocaleLowerCase().startsWith('multi')) {\n      const source = editLayer?.getSource();\n      const existingFeature = source?.getFeatures()[0];\n      if (existingFeature) {\n        // drawbutton automatically adds the feature to the source so we need to remove it again\n        source?.once('addfeature', (e2) => source.removeFeature(e2.feature!));\n        existingFeature.setGeometry(e.feature.getGeometry());\n      }\n    }\n    updateRevision();\n  };\n\n  const updateRevision = () => {\n\n    const features = editLayer?.getSource()?.getFeatures();\n\n    if (!features) {\n      return;\n    }\n\n    const clone: FeatureCollection = gjFormat.writeFeaturesObject(features);\n    editHistory.current = {\n      ...editHistory.current,\n      past: [...editHistory.current.past, clone].slice(-10)\n    };\n    setRevision(r => r + 1);\n  };\n\n  const btnTooltipProps = {\n    tooltipPlacement: 'left' as TooltipPlacement,\n    tooltipProps: {\n      mouseEnterDelay: 0.5\n    }\n  };\n\n  if (!editLayer) {\n    return <></>;\n  }\n\n  if (allowedEditMode.includes('EDIT_GEOMETRY')) {\n    return (\n      <Toolbar\n        className=\"geometry-edit-tb\"\n        alignment=\"vertical\"\n      >\n        <ToggleGroup>\n          {\n            allowedEditMode.includes('CREATE') ?\n              <DrawButton\n                icon={\n                  <FontAwesomeIcon icon={faPencil} />\n                }\n                pressedIcon={\n                  <FontAwesomeIcon icon={faPencil} />\n                }\n                name=\"draw\"\n                digitizeLayer={editLayer}\n                tooltip={t('EditFeatureGeometryToolbar.draw')}\n                drawType={feature.geometry.type as DrawType}\n                onDrawEnd={onDrawEnd}\n                {...btnTooltipProps}\n              />\n              : <></>\n          }\n          {\n            allowedEditMode.includes('UPDATE') ?\n              <ModifyButton\n                icon={\n                  <FontAwesomeIcon icon={faDrawPolygon} />\n                }\n                pressedIcon={\n                  <FontAwesomeIcon icon={faDrawPolygon} />\n                }\n                name=\"edit\"\n                digitizeLayer={editLayer}\n                tooltip={t('EditFeatureGeometryToolbar.edit')}\n                onModifyStart={updateRevision}\n                onModifyEnd={updateRevision}\n                onTranslateEnd={updateRevision}\n                {...btnTooltipProps}\n              />\n              : <></>\n          }\n          {\n            allowedEditMode.includes('DELETE') ?\n              <DeleteButton\n                icon={\n                  <FontAwesomeIcon icon={faTrash} />\n                }\n                pressedIcon={\n                  <FontAwesomeIcon icon={faTrash} />\n                }\n                name=\"delete\"\n                digitizeLayer={editLayer}\n                tooltip={t('EditFeatureGeometryToolbar.delete')}\n                onFeatureRemove={updateRevision}\n                {...btnTooltipProps}\n              />\n              : <></>\n          }\n        </ToggleGroup>\n        <SimpleButton\n          icon={\n            <FontAwesomeIcon icon={faUndo} />\n          }\n          tooltip={t('EditFeatureGeometryToolbar.undo')}\n          onClick={undoEdit}\n          disabled={editHistory.current.past?.length === 0}\n          {...btnTooltipProps}\n        />\n        <SimpleButton\n          icon={\n            <FontAwesomeIcon\n              icon={faUndo}\n              flip=\"horizontal\"\n            />\n          }\n          tooltip={t('EditFeatureGeometryToolbar.redo')}\n          onClick={redoEdit}\n          disabled={editHistory.current.future?.length === 0}\n          {...btnTooltipProps}\n        />\n      </Toolbar>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default EditFeatureGeometryToolbar;\n","import React from 'react';\n\nimport {\n  Tabs,\n  TabsProps\n} from 'antd';\n\nimport {\n  FormInstance\n} from 'antd/lib/form/Form';\n\nimport {\n  Tab\n} from 'rc-tabs/lib/interface';\n\nimport {\n  PropertyFormItemEditConfig,\n  PropertyFormTabConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport EditFeatureForm from '../EditFeatureForm';\n\nexport type EditFeatureTabsProps = TabsProps & {\n  tabConfig?: PropertyFormTabConfig<PropertyFormItemEditConfig>[];\n  form: FormInstance;\n  initialValues?: Record<string, any>;\n};\n\nexport const EditFeatureTabs: React.FC<EditFeatureTabsProps> = ({\n  tabConfig,\n  form,\n  initialValues,\n  ...passThroughProps\n}) => {\n\n  const items = tabConfig?.map((config, idx) => {\n    return {\n      label: config.title,\n      key: `${idx}`,\n      forceRender: true,\n      children: (\n        <EditFeatureForm\n          name={config.title}\n          form={form}\n          initialValues={initialValues}\n          formConfig={config.children}\n        />\n      )\n    } as Tab;\n  });\n\n  return (\n    <Tabs\n      items={items}\n      {...passThroughProps}\n    />\n  );\n};\n\nexport default EditFeatureTabs;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faTrash\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  ButtonProps,\n  Popconfirm\n} from 'antd';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useExecuteWfsTransaction from '../../../hooks/useExecuteWfsTransaction';\nimport useWriteWfsTransaction from '../../../hooks/useWriteWfsTransaction';\n\nexport type DeleteButtonProps = ButtonProps & {\n  feature: Feature;\n  layer: WmsLayer;\n  onError?: (error: unknown) => void;\n  onSuccess?: () => void;\n};\n\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n  feature,\n  layer,\n  onError = () => {},\n  onSuccess = () => {},\n  ...passThroughProps\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const writeWfsTransaction = useWriteWfsTransaction();\n  const executeWfsTransaction = useExecuteWfsTransaction();\n\n  const onConfirmDelete = async () => {\n    if (!map) {\n      return;\n    }\n\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const olFeature = new OlFormatGeoJSON().readFeature(feature);\n\n      const transaction = await writeWfsTransaction({\n        deleteFeatures: [olFeature],\n        layer: layer\n      });\n\n      if (!transaction) {\n        return;\n      }\n\n      await executeWfsTransaction({\n        layer: layer,\n        transaction: transaction\n      });\n\n      layer.getSource()?.refresh();\n\n      onSuccess();\n    } catch (error) {\n      Logger.error(error);\n\n      onError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Popconfirm\n      title={t('DeleteButton.confirm')}\n      onConfirm={onConfirmDelete}\n      placement='bottomRight'\n    >\n      <Button\n        type='primary'\n        loading={loading}\n        disabled={!feature.id}\n        danger\n        icon={(\n          <FontAwesomeIcon\n            icon={faTrash}\n          />\n        )}\n        {...passThroughProps}\n      >\n        {\n          t('DeleteButton.title')\n        }\n      </Button>\n    </Popconfirm>\n  );\n};\n\nexport default DeleteButton;\n","import React from 'react';\n\nimport {\n  faRotateLeft\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  ButtonProps\n} from 'antd';\n\nimport {\n  FormInstance\n} from 'antd/lib/form/Form';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport OlFormatGeoJson from 'ol/format/GeoJSON';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport { DigitizeUtil } from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport {\n  setFormDirty\n} from '../../../store/editFeature';\n\nexport type ResetButtonProps = Omit<ButtonProps, 'form'> & {\n  feature: Feature;\n  form: FormInstance;\n};\n\nexport const ResetButton: React.FC<ResetButtonProps> = ({\n  feature,\n  form,\n  ...passThroughProps\n}) => {\n\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const dispatch = useAppDispatch();\n\n  const onClick = () => {\n    form.resetFields();\n    dispatch(setFormDirty(false));\n\n    if (map) {\n      const editLayer = DigitizeUtil.getDigitizeLayer(map);\n      if (editLayer) {\n        editLayer.getSource()?.clear();\n        const format = new OlFormatGeoJson();\n        const olFeat = format.readFeature(feature);\n        editLayer.getSource()?.addFeature(olFeat);\n      }\n    }\n  };\n\n  return (\n    <Button\n      type='primary'\n      onClick={onClick}\n      icon={(\n        <FontAwesomeIcon\n          icon={faRotateLeft}\n        />\n      )}\n      {...passThroughProps}\n    >\n      {\n        t('ResetButton.title')\n      }\n    </Button>\n  );\n};\n\nexport default ResetButton;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport './index.less';\n\nexport type FeedbackIconProps = {\n  loadComplete: boolean;\n};\n\nexport const FeedbackIcon: React.FC<FeedbackIconProps> = ({\n  loadComplete = false\n}) => {\n\n  return (\n    <div className={loadComplete ? 'feedback-icon' : 'feedback-icon hidden'}>\n      <div className={loadComplete ? 'checkmark' : 'checkmark-hidden'} />\n    </div>\n  );\n};\n\nexport default FeedbackIcon;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faFloppyDisk\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  ButtonProps\n} from 'antd';\n\nimport {\n  FormInstance\n} from 'antd/lib/form/Form';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useExecuteWfsTransaction from '../../../hooks/useExecuteWfsTransaction';\nimport useWriteWfsTransaction from '../../../hooks/useWriteWfsTransaction';\nimport {\n  setFormDirty\n} from '../../../store/editFeature';\n\nimport './index.less';\nimport FeedbackIcon from '../../FeedbackIcon';\n\nexport type SaveButtonProps = Omit<ButtonProps, 'form'> & {\n  form: FormInstance;\n  layer: WmsLayer;\n  onError?: (error: unknown) => void;\n  onSuccess?: (response?: string) => void;\n};\n\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n  form,\n  layer,\n  onError = () => {},\n  onSuccess = () => {},\n  ...passThroughProps\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [saveCompleted, setSaveCompleted] = useState(false);\n\n  const map = useMap();\n\n  const writeWfsTransaction = useWriteWfsTransaction();\n  const executeWfsTransaction = useExecuteWfsTransaction();\n\n  const dispatch = useAppDispatch();\n\n  const formDirty = useAppSelector(\n    state => state.editFeature.formDirty\n  );\n\n  const {\n    t\n  } = useTranslation();\n\n  const onClick = async () => {\n    if (!map) {\n      return;\n    }\n\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    const editLayer = DigitizeUtil.getDigitizeLayer(map);\n\n    if (!editLayer) {\n      Logger.error('Cannot find the digitize layer');\n      return;\n    }\n\n    const features = editLayer.getSource()?.getFeatures();\n\n    if (!features || features.length === 0) {\n      Logger.error('Cannot save feature without geometry');\n      return;\n    }\n\n    try {\n      await form.validateFields();\n    } catch (error) {\n      onError(error);\n      Logger.warn('Validation has failed: ', error);\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const transaction = await writeWfsTransaction({\n        upsertFeatures: features,\n        form: form,\n        layer: layer\n      });\n\n      if (!transaction) {\n        return;\n      }\n\n      const result = await executeWfsTransaction({\n        layer: layer,\n        transaction: transaction\n      });\n\n      layer.getSource()?.refresh();\n\n      setSaveCompleted(true);\n      setTimeout(() => {\n        setSaveCompleted(false);\n      }, 3000);\n\n      dispatch(setFormDirty(false));\n\n      onSuccess(result);\n    } catch (error) {\n      Logger.error(error);\n\n      onError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Button\n      className='save-button'\n      type='primary'\n      onClick={onClick}\n      loading={loading}\n      disabled={!formDirty}\n      icon={(\n        <FontAwesomeIcon\n          icon={faFloppyDisk}\n        />\n      )}\n      {...passThroughProps}\n    >\n      {\n        t('SaveButton.title')\n      }\n      <FeedbackIcon loadComplete={saveCompleted} />\n    </Button>\n  );\n};\n\nexport default SaveButton;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  FormInstance\n} from 'antd';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppSelector from '../../../hooks/useAppSelector';\n\nimport DeleteButton from '../DeleteButton';\nimport ResetButton from '../ResetButton';\nimport SaveButton from '../SaveButton';\n\nimport './index.less';\n\nexport type EditFeatureToolbarProps = {\n  feature: Feature;\n  layer: WmsLayer;\n  form: FormInstance;\n  onSaveSuccess?: (responseText?: string) => void;\n  onSaveError?: (error: unknown) => void;\n  onDeleteSuccess?: () => void;\n  onDeleteError?: (error: unknown) => void;\n};\n\nexport const EditFeatureToolbar: React.FC<EditFeatureToolbarProps> = ({\n  feature,\n  layer,\n  form,\n  onSaveSuccess = () => {},\n  onSaveError = () => {},\n  onDeleteSuccess = () => {},\n  onDeleteError = () => {}\n}) => {\n  const allowedEditMode = useAppSelector(state => state.editFeature.userEditMode);\n\n  return (\n    <div\n      className='edit-feature-toolbar'\n    >\n      {\n        allowedEditMode.includes('CREATE') ||\n        allowedEditMode.includes('UPDATE') ?\n          <>\n            <ResetButton\n              feature={feature}\n              form={form}\n            />\n            <SaveButton\n              form={form}\n              layer={layer}\n              onSuccess={onSaveSuccess}\n              onError={onSaveError}\n            />\n          </>: <></>\n      }\n      {\n        allowedEditMode.includes('DELETE') &&\n        <DeleteButton\n          feature={feature}\n          layer={layer}\n          onSuccess={onDeleteSuccess}\n          onError={onDeleteError}\n        />\n      }\n    </div>\n  );\n};\n\nexport default EditFeatureToolbar;\n","import React, {\n  ReactNode,\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Alert,\n  UploadFile\n} from 'antd';\nimport {\n  useForm\n} from 'antd/lib/form/Form';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport moment from 'moment';\n\nimport {\n  equalTo\n} from 'ol/format/filter';\n\nimport { ValidateErrorEntity } from 'rc-field-form/es/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport ShogunFile from '@terrestris/shogun-util/dist/model/File';\nimport {\n  PropertyFormItemEditConfig,\n  PropertyFormTabConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useConvertImageUrl from '../../../hooks/useConvertImageUrl';\nimport useExecuteGetFeature from '../../../hooks/useExecuteGetFeature';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport {\n  setFeature\n} from '../../../store/editFeature';\n\nimport { isFileConfig } from '../EditFeatureForm';\nimport EditFeatureGeometryToolbar from '../EditFeatureGeometryToolbar';\nimport EditFeatureTabs from '../EditFeatureTabs';\nimport EditFeatureToolbar from '../EditFeatureToolbar';\n\nexport type EditFeatureFullFormProps = {\n  feature: Feature;\n  layer: WmsLayer;\n};\n\nexport const EditFeatureFullForm: React.FC<EditFeatureFullFormProps> = ({\n  feature,\n  layer\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const executeGetFeature = useExecuteGetFeature();\n  const imageUrlToBase64 = useConvertImageUrl();\n\n  const [tabConfig, setTabConfig] = useState<PropertyFormTabConfig<PropertyFormItemEditConfig>[]>();\n  const [initialValues, setInitialValues] = useState<Record<string, any>>();\n  const [errorMsg, setErrorMsg] = useState<string | ReactNode>();\n\n  const [form] = useForm();\n  const map = useMap();\n  const dispatch = useAppDispatch();\n  const client = useSHOGunAPIClient();\n\n  const reloadFeature = useCallback(async (id: string) => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    const updatedFeatures = await executeGetFeature({\n      layer: layer,\n      filter: equalTo('id', id)\n    });\n\n    if (\n      updatedFeatures?.features[0]\n    ) {\n      dispatch(setFeature(updatedFeatures?.features[0]));\n    }\n  }, [dispatch, executeGetFeature, layer]);\n\n  const update = useCallback(async () => {\n    if (!map || !client) {\n      return;\n    }\n\n    let editFormConfig = layer.get('editFormConfig') as PropertyFormTabConfig<PropertyFormItemEditConfig>[];\n\n    if (editFormConfig?.length === 0) {\n      Logger.warn(`Layer ${layer.get('name')} has no 'editFormConfig' set`);\n      return;\n    }\n\n    const properties = structuredClone(feature?.properties) || {};\n\n    const setPropertiesPromises = Object.entries(properties).map(async ([key, value]) => {\n      const tabConfigs = editFormConfig?.filter(tabCfg => {\n        return tabCfg.children?.find(formCfg => formCfg.propertyName === key);\n      });\n\n      if (tabConfigs.length > 1) {\n        Logger.warn(`Property ${key} is configured in multiple tabs. Is this intended?`);\n      }\n\n      if (tabConfigs && tabConfigs[0]) {\n        const isDate = tabConfigs[0].children?.some(cfg => {\n          return cfg.propertyName === key && cfg.component === 'DATE';\n        });\n\n        if (isDate) {\n          const parsedDate = moment(value);\n\n          if (parsedDate.isValid()) {\n            properties[key] = parsedDate;\n          } else {\n            Logger.warn('Could not parse date');\n            properties[key] = null;\n          }\n        }\n\n        const isUpload = tabConfigs[0].children?.some(cfg => {\n          return cfg.propertyName === key && cfg.component === 'UPLOAD';\n        });\n\n        if (isUpload) {\n          if (value) {\n            try {\n              const parsedJson = JSON.parse(value);\n              if (!isFileConfig(parsedJson[0])) {\n                throw new Error('File config is no valid SHOGun file.');\n              }\n              const fileList = parsedJson as UploadFile<ShogunFile>[];\n              properties[key] = fileList;\n              const fileListWithBlob = fileList.map(async (val: any) => {\n                const isImageFile = fileList[0].response?.fileType?.startsWith('image/');\n                const thumbUrl = isImageFile ?\n                  await imageUrlToBase64(`${client.getBasePath()}imagefiles/${val?.response?.fileUuid}/thumbnail`) : undefined;\n                return {\n                  ...val,\n                  thumbUrl,\n                  url: isImageFile ? undefined : val.url\n                };\n              });\n\n              const result = await Promise.all(fileListWithBlob);\n              properties[key] = result;\n            } catch (error) {\n              Logger.error('Could not parse file list from JSON config: ', error);\n              properties[key] = [];\n            }\n          } else {\n            properties[key] = [];\n          }\n        }\n\n        const isReference = tabConfigs[0].children?.some(cfg =>\n          cfg.propertyName === key && cfg.component === 'REFERENCE_TABLE');\n\n        if (isReference) {\n          try {\n            properties[key] = JSON.parse(properties[key]);\n          } catch (error) {\n            Logger.warn('Could not parse the input for the REFERENCE_TABLE', error);\n          }\n        }\n      }\n    });\n\n    await Promise.all(setPropertiesPromises);\n\n    form.resetFields();\n    form.setFieldsValue(properties);\n\n    setTabConfig(editFormConfig);\n    setInitialValues(properties);\n  }, [map, client, layer, feature?.properties, form, imageUrlToBase64]);\n\n  useEffect(() => {\n    update();\n  }, [update]);\n\n  const formatErrorMessage = (error: ValidateErrorEntity): React.ReactNode => {\n    const collectedFieldErrors: string[] = [];\n    const errorFields = error.errorFields || [];\n\n    errorFields.forEach((field) => {\n      if (Array.isArray(field.errors)) {\n        collectedFieldErrors.push(...field.errors);\n      }\n    });\n\n    const formattedMessage = collectedFieldErrors.map((line, index) => (\n      <React.Fragment key={index}>\n        {line}\n        {index !== collectedFieldErrors.length - 1 && <br />}\n      </React.Fragment>\n    ));\n\n    return formattedMessage;\n  };\n\n  const onSaveSuccess = (responseText?: string) => {\n    if (!responseText) {\n      return;\n    }\n    setErrorMsg(undefined);\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'text/xml');\n\n    // get feature id from response\n    const featureId = xmlDoc.getElementsByTagName('ogc:FeatureId');\n    const idString = featureId.item(0)?.getAttribute('fid');\n    const id = idString?.split('.')[1];\n    if (id) {\n      reloadFeature(id);\n    }\n  };\n\n  const onSaveError = (error: unknown) => {\n    if (typeof error === 'object' && error !== null && 'errorFields' in error) {\n      const formattedErrorMessage = formatErrorMessage(\n        error as ValidateErrorEntity\n      );\n      setErrorMsg(formattedErrorMessage);\n    } else {\n      setErrorMsg(t('EditFeatureFullForm.saveErrorMsg'));\n    }\n  };\n\n  const onDeleteSuccess = () => {\n    setErrorMsg(undefined);\n    dispatch(setFeature(null));\n  };\n\n  const onDeleteError = () => {\n    setErrorMsg(t('EditFeatureFullForm.deleteErrorMsg'));\n  };\n\n  return (\n    <>\n      <EditFeatureGeometryToolbar\n        feature={feature}\n      />\n      {\n        errorMsg && (\n          <Alert\n            className=\"error-alert\"\n            message={errorMsg}\n            type=\"error\"\n            showIcon\n          />\n        )\n      }\n      <EditFeatureToolbar\n        feature={feature}\n        layer={layer}\n        form={form}\n        onSaveSuccess={onSaveSuccess}\n        onSaveError={onSaveError}\n        onDeleteSuccess={onDeleteSuccess}\n        onDeleteError={onDeleteError}\n      />\n      <EditFeatureTabs\n        tabConfig={tabConfig}\n        initialValues={initialValues}\n        form={form}\n      />\n    </>\n  );\n};\n\nexport default EditFeatureFullForm;\n","import {\n  useCallback\n} from 'react';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type ExecuteWfsLockOpts = {\n  layer: WmsLayer;\n  feature: Feature;\n};\n\nexport const useExecuteWfsLockFeature = () => {\n  const client = useSHOGunAPIClient();\n\n  const writeWfsLockFeature = (opts: ExecuteWfsLockOpts) => {\n    const featureId = opts.feature.id;\n    const featureProperties = opts.feature.properties;\n\n    if (!featureId || !featureProperties) {\n      Logger.warn('Either the id of the feature or its properties (or even both) aren\\'t available');\n      return;\n    }\n\n    let id: number;\n    if (typeof featureId === 'number') {\n      id = featureId;\n    } else {\n      id = parseInt(featureId.split('.')[1], 10);\n    }\n\n    const match = Object.entries(featureProperties).find(([, value]) => (value === id || value === id.toString()));\n\n    if (!match) {\n      Logger.warn('Count not detect the id property');\n      return;\n    }\n\n    const idProperty = match[0];\n\n    const typeName = opts.layer.getSource()?.getParams().LAYERS;\n\n    const lockFeatureDoc = document.createElementNS('http://www.opengis.net/wfs/2.0', 'LockFeature');\n\n    lockFeatureDoc.setAttribute('service', 'WFS');\n    lockFeatureDoc.setAttribute('version', '2.0.0');\n    // Expiry in seconds.\n    lockFeatureDoc.setAttribute('expiry', '300');\n    lockFeatureDoc.setAttribute('lockAction', 'SOME');\n\n    const queryElement = document.createElementNS('http://www.opengis.net/wfs/2.0', 'Query');\n    queryElement.setAttribute('typeNames', typeName);\n\n    const filterElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'Filter');\n    const isEqualToElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'PropertyIsEqualTo');\n\n    const valueReferenceElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'ValueReference');\n    const valueReferenceValue = document.createTextNode(idProperty);\n    valueReferenceElement.appendChild(valueReferenceValue);\n\n    const literalElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'Literal');\n    const literalValue = document.createTextNode(id.toString());\n    literalElement.appendChild(literalValue);\n\n    isEqualToElement.appendChild(valueReferenceElement);\n    isEqualToElement.appendChild(literalElement);\n\n    filterElement.appendChild(isEqualToElement);\n\n    queryElement.appendChild(filterElement);\n\n    lockFeatureDoc.appendChild(queryElement);\n\n    return lockFeatureDoc;\n  };\n\n  const executeWfsLockFeature = useCallback(async (opts: ExecuteWfsLockOpts) => {\n    let url;\n\n    const source = opts.layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = source.getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = source.getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const lockFeatureDoc = writeWfsLockFeature({\n      layer: opts.layer,\n      feature: opts.feature\n    });\n\n    if (!lockFeatureDoc) {\n      return;\n    }\n\n    const defaultHeaders = {\n      'Content-Type': 'application/xml'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: opts.layer?.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders,\n      body: new XMLSerializer().serializeToString(lockFeatureDoc)\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response while executing a WFS-LockFeature');\n    }\n\n    const responseText = await response.text();\n\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'text/xml');\n\n    // TODO Make detection more robust\n    const transactionLockFailed = xmlDoc.getElementsByTagName('wfs:FeaturesNotLocked');\n\n    if (transactionLockFailed.length > 0) {\n      throw new Error(`Error while locking a feature: ${responseText}`);\n    }\n\n    return responseText;\n  }, [client]);\n\n  return executeWfsLockFeature;\n};\n\nexport default useExecuteWfsLockFeature;\n","import {\n  useCallback,\n  useEffect\n} from 'react';\n\nimport {\n  FeatureCollection\n} from 'geojson';\n\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport const useGetFeatureInfo = (layer?: WmsLayer, onSuccess?: (featureCollection: FeatureCollection) => void, onFailure?: () => void) => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n\n  const onSingleClick = useCallback(async (evt: MapBrowserEvent<MouseEvent>) => {\n    if (!map || !layer) {\n      return;\n    }\n\n    const coords = evt.coordinate;\n\n    const viewResolution = map.getView().getResolution();\n\n    if (!viewResolution) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const url = source?.getFeatureInfoUrl(\n      coords,\n      viewResolution,\n      map.getView().getProjection(),\n      {\n        INFO_FORMAT: 'application/json',\n        BUFFER: 10\n      }\n    );\n\n    const defaultHeaders = {\n      'Content-Type': 'application/json'\n    };\n\n    if (!url) {\n      return;\n    }\n\n    try {\n      map.getTargetElement().style.cursor = 'wait';\n\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: layer.get('useBearerToken') ? {\n          ...defaultHeaders,\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : defaultHeaders\n      });\n\n      if (!response.ok) {\n        throw new Error('No successful response');\n      }\n\n      const featureCollection: FeatureCollection = await response.json();\n\n      if (onSuccess) {\n        onSuccess(featureCollection);\n      }\n    } catch (error) {\n      Logger.error('Error: ', error);\n\n      if (onFailure) {\n        onFailure();\n      }\n    } finally {\n      map.getTargetElement().style.cursor = '';\n    }\n  }, [client, layer, map, onSuccess, onFailure]);\n\n  const onPointerMove = useCallback((evt: MapBrowserEvent<MouseEvent>) => {\n    if (!map || !layer) {\n      return;\n    }\n\n    if (evt.dragging) {\n      return;\n    }\n\n    const data = layer.getData(evt.pixel);\n\n    if (!(data instanceof Uint8ClampedArray)) {\n      return;\n    }\n\n    const hit = data && data[3] > 0;\n\n    map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n  }, [layer, map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    map.on('pointermove', onPointerMove);\n    map.on('singleclick', onSingleClick);\n\n    return () => {\n      map.un('pointermove', onPointerMove);\n      map.un('singleclick', onSingleClick);\n    };\n  }, [map, onPointerMove, onSingleClick]);\n};\n\nexport default useGetFeatureInfo;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  Button\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useExecuteWfsDescribeFeatureType, {\n  isGeometryType\n} from '../../../hooks/useExecuteWfsDescribeFeatureType';\nimport useExecuteWfsLockFeature from '../../../hooks/useExecuteWfsTransactionLock';\nimport useGetFeatureInfo from '../../../hooks/useGetFeatureInfo';\n\nimport {\n  setFeature\n} from '../../../store/editFeature';\n\nimport './index.less';\n\nexport type EditFeatureSwitchProps = {\n  layer: WmsLayer;\n  onLockSuccess?: (responseText: string) => void;\n  onLockError?: (error: unknown) => void;\n  onCreate?: () => void;\n};\n\nexport const EditFeatureSwitch: React.FC<EditFeatureSwitchProps> = ({\n  layer,\n  onLockSuccess = () => {},\n  onLockError = () => {},\n  onCreate = () => {}\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const executeWfsDescribeFeatureType = useExecuteWfsDescribeFeatureType();\n  const executeWfsLockFeature = useExecuteWfsLockFeature();\n  const dispatch = useAppDispatch();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  useGetFeatureInfo(layer, async (featureCollection) => {\n    if (\n      featureCollection.features.length &&\n      (allowedEditMode.includes('UPDATE') || allowedEditMode.includes('DELETE'))\n    ) {\n\n      const feature = featureCollection.features[0];\n\n      if (!layer || !feature) {\n        return;\n      }\n\n      if (ClientConfiguration.wfsLockFeatureEnabled) {\n        try {\n          const response = await executeWfsLockFeature({\n            layer: layer,\n            feature: feature\n          });\n\n          if (!response) {\n            return;\n          }\n\n          dispatch(setFeature(feature));\n\n          onLockSuccess(response);\n        } catch (error) {\n          onLockError(error);\n        }\n      } else {\n        dispatch(setFeature(feature));\n      }\n    }\n  });\n\n  const getGeometryType = async () => {\n    if (!map || !layer) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const describeFeatureType = await executeWfsDescribeFeatureType(layer);\n\n      if (!describeFeatureType) {\n        return;\n      }\n\n      // We expect a single featureType here.\n      const geomProperty = describeFeatureType.featureTypes[0]?.properties\n        ?.find(property => isGeometryType(property.type));\n\n      switch (geomProperty?.type) {\n        case 'gml:MultiPoint':\n          return 'MultiPoint';\n        case 'gml:Point':\n          return 'Point';\n        case 'gml:MultiLineString':\n          return 'MultiLineString';\n        case 'gml:LineString':\n          return 'LineString';\n        case 'gml:MultiPolygon':\n          return 'MultiPolygon';\n        case 'gml:Polygon':\n          return 'Polygon';\n        default:\n          break;\n      }\n    } catch (error) {\n      Logger.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onCreateClick = async () => {\n    const geomType = await getGeometryType();\n\n    if (!geomType) {\n      return;\n    }\n\n    dispatch(setFeature({\n      type: 'Feature',\n      properties: {},\n      geometry: {\n        type: geomType,\n        coordinates: []\n      }\n    }));\n\n    onCreate();\n  };\n\n  return (\n    <div className=\"edit-feature-switch\">\n      {allowedEditMode.includes('CREATE') && (\n        <>\n          {\n            allowedEditMode.includes('UPDATE') &&\n            <div>{t('EditFeatureSwitch.usageHint')}</div>\n          }\n          <Button\n            loading={loading}\n            onClick={onCreateClick}\n          >\n            {t('EditFeatureSwitch.createFeature')}\n          </Button>\n        </>\n      )}\n      {!allowedEditMode.includes('CREATE') &&\n        (allowedEditMode.includes('UPDATE') ||\n        allowedEditMode.includes('DELETE')) && (\n        <div>{t('EditFeatureSwitch.limitedUsageHint')}</div>\n      )}\n    </div>\n  );\n};\n\nexport default EditFeatureSwitch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Alert, Modal\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport OlFeature from 'ol/Feature';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useExecuteWfsTransaction from '../../hooks/useExecuteWfsTransaction';\nimport useWriteWfsTransaction from '../../hooks/useWriteWfsTransaction';\n\nimport {\n  reset,\n  setFormDirty\n} from '../../store/editFeature';\nimport {\n  hide as hideEditFeatureDrawer\n} from '../../store/editFeatureDrawerOpen';\n\nimport MapDrawer, {\n  MapDrawerProps\n} from '../MapDrawer';\n\nimport EditFeatureFullForm from './EditFeatureFullForm';\nimport EditFeatureSwitch from './EditFeatureSwitch';\n\nimport './index.less';\n\nexport type EditFeatureDrawerProps = MapDrawerProps;\n\nexport const EditFeatureDrawer: React.FC<EditFeatureDrawerProps> = ({\n  ...passThroughProps\n}) => {\n  const {\n    t\n  } = useTranslation();\n\n  const [layer, setLayer] = useState<WmsLayer>();\n  const [isFeatureLocked, setIsFeatureLocked] = useState<boolean>(false);\n  const [drawerTitle, setDrawerTitle] = useState<string>(t('EditFeatureDrawer.featureEditor'));\n\n  const isDrawerOpen = useAppSelector(state => state.editFeatureDrawerOpen);\n  const layerId = useAppSelector(state => state.editFeature.layerId);\n  const feature = useAppSelector(state => state.editFeature.feature);\n  const formDirty = useAppSelector(state => state.editFeature.formDirty);\n\n  const map = useMap();\n  const dispatch = useAppDispatch();\n  const writeWfsTransaction = useWriteWfsTransaction();\n  const executeWfsTransaction = useExecuteWfsTransaction();\n\n  useEffect(() => {\n    if (!map || !layerId) {\n      return;\n    }\n\n    const olLayer = MapUtil.getLayerByOlUid(map, layerId);\n\n    if (!olLayer || !isWmsLayer(olLayer)) {\n      Logger.warn(`Could not find layer with id ${layerId}`);\n      return;\n    }\n\n    setDrawerTitle(`${t('EditFeatureDrawer.featureEditor')} - ${olLayer.get('name')}`);\n    setLayer(olLayer);\n  }, [map, layerId, t]);\n\n  const releaseLock = async () => {\n    if (!layer || !feature || !feature.id || !ClientConfiguration.wfsLockFeatureEnabled) {\n      return;\n    }\n\n    try {\n      const feat = new OlFeature();\n      feat.setId(feature.id);\n\n      const transaction = await writeWfsTransaction({\n        layer: layer,\n        deleteFeatures: [],\n        upsertFeatures: [feat]\n      });\n\n      if (!transaction) {\n        return;\n      }\n\n      await executeWfsTransaction({\n        layer: layer,\n        transaction: transaction\n      });\n    } catch (error) {\n      Logger.error('Error while releasing the lock on the feature');\n    }\n  };\n\n  const closeDrawer = async () => {\n    await releaseLock();\n\n    dispatch(hideEditFeatureDrawer());\n    dispatch(setFormDirty(false));\n    dispatch(reset());\n    setIsFeatureLocked(false);\n  };\n\n  const onDrawerClose = () => {\n    if (layer && feature && formDirty) {\n      Modal.confirm({\n        maskClosable: false,\n        title: t('EditFeatureDrawer.closeDrawerWarnTitle'),\n        content: t('EditFeatureDrawer.closeDrawerWarnContent'),\n        okType: 'danger',\n        onOk: closeDrawer\n      });\n    } else {\n      closeDrawer();\n    }\n  };\n\n  const onLockSuccess = () => {\n    setIsFeatureLocked(false);\n  };\n\n  const onLockError = () => {\n    setIsFeatureLocked(true);\n  };\n\n  const onCreate = () => {\n    setIsFeatureLocked(false);\n  };\n\n  return (\n    <MapDrawer\n      className=\"map-drawer edit-feature-drawer\"\n      onClose={onDrawerClose}\n      open={isDrawerOpen}\n      title={drawerTitle}\n      {...passThroughProps}\n    >\n      {\n        !layer && (\n          <Alert\n            message={t('EditFeatureDrawer.noLayerFoundError')}\n            type=\"error\"\n            showIcon\n          />\n        )\n      }\n      {\n        isFeatureLocked && (\n          <Alert\n            message={t('EditFeatureDrawer.isFeatureLockedErrorMsg')}\n            type=\"error\"\n            showIcon\n          />\n        )\n      }\n      {\n        layer && layerId && !feature &&\n        <EditFeatureSwitch\n          layer={layer}\n          onLockSuccess={onLockSuccess}\n          onLockError={onLockError}\n          onCreate={onCreate}\n        />\n      }\n      {\n        layer && feature &&\n        <EditFeatureFullForm\n          feature={feature}\n          layer={layer}\n        />\n      }\n    </MapDrawer>\n  );\n};\n\nexport default EditFeatureDrawer;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect } from 'react';\n\nimport {\n  Button, Divider\n} from 'antd';\n\nimport OlControlMousePosition from 'ol/control/MousePosition';\nimport OlControlScaleLine from 'ol/control/ScaleLine';\nimport { createStringXY } from 'ol/coordinate';\n\nimport { useTranslation } from 'react-i18next';\n\nimport ScaleCombo from '@terrestris/react-geo/dist/Field/ScaleCombo/ScaleCombo';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport { usePlugins } from '../../hooks/usePlugins';\n\nimport {\n  FooterPlacementOrientation,\n  isFooterIntegration\n} from '../../plugin';\nimport { Legal } from '../../store/legal';\n\nexport interface FooterProps extends React.ComponentProps<'div'> { }\n\nexport const Footer: React.FC<FooterProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const plugins = usePlugins();\n  const { t } = useTranslation();\n\n  const legalInformation: Legal = useAppSelector(state => state.legal);\n  const map = useMap();\n\n  const insertPlugins = (itemPosition: FooterPlacementOrientation, items: JSX.Element[]) => {\n    plugins.forEach(plugin => {\n      if (isFooterIntegration(plugin.integration) && plugin.integration?.placementOrientation === itemPosition) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        items.splice(plugin.integration?.insertionIndex || 0, 0,\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map\n      .getControls()\n      .getArray()\n      .find(control => control instanceof OlControlScaleLine);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlScaleLine({\n        target: 'scale-line-container'\n      })\n    );\n  }, [map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map\n      .getControls()\n      .getArray()\n      .find(control => control instanceof OlControlMousePosition);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlMousePosition({\n        coordinateFormat: createStringXY(2),\n        projection: map.getView().getProjection(),\n        target: 'mouse-position'\n      })\n    );\n  }, [map]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  const getLeftItems = () => {\n    const items = [\n      <div\n        key=\"scale-line-container\"\n        id=\"scale-line-container\"\n        aria-label=\"scale-line\"\n      />,\n      <Divider\n        key=\"scale-line-divider\"\n        type=\"vertical\"\n      />,\n      <div\n        key=\"scale-combo-container\"\n        className=\"scale-combo\"\n        aria-label='scale-combo'\n      >\n        {t('Footer.scale')}:&nbsp;\n        <ScaleCombo\n          aria-label='scalecombo-dropdown'\n          map={map}\n        />\n        <Divider\n          type=\"vertical\"\n        />\n      </div>,\n      <div\n        key=\"reference-system-container\"\n        className=\"reference-system\"\n        aria-label=\"reference-system\"\n      >\n        {t('Footer.refSystem')}: {map.getView().getProjection().getCode()}\n        <Divider\n          type=\"vertical\"\n        />\n      </div>,\n      <div\n        key=\"mouse-position-container\"\n        className=\"mouse-position-wrapper\"\n      >\n        {t('Footer.mousePosition')}:&nbsp;\n        <div\n          id=\"mouse-position\"\n          className=\"mouse-position\"\n          aria-label=\"mouse-position\"\n        />\n      </div>\n    ];\n\n    insertPlugins('left', items);\n\n    return items;\n  };\n\n  const getRightItems = () => {\n    const items = [\n      <Button\n        key=\"open-contact\"\n        onClick={openContactModal}\n        type=\"link\"\n      >\n        {t('Footer.contact')}\n      </Button>,\n      <Button\n        key=\"open-imprint\"\n        onClick={openImprintModal}\n        type=\"link\"\n      >\n        {t('Footer.imprint')}\n      </Button>,\n      <Button\n        key=\"open-privacy\"\n        onClick={openPrivacyModal}\n        type=\"link\"\n      >\n        {t('Footer.privacypolicy')}\n      </Button>\n    ];\n\n    if (plugins.length > 0) {\n      insertPlugins('right', items);\n    }\n\n    return items;\n  };\n\n  const openContactModal = (): void => {\n    window.open(legalInformation.contact, '_blank');\n  };\n\n  const openImprintModal = (): void => {\n    window.open(legalInformation.imprint, '_blank');\n  };\n\n  const openPrivacyModal = (): void => {\n    window.open(legalInformation.privacy, '_blank');\n  };\n\n  return (\n    <div\n      className=\"footer\"\n      {...restProps}\n    >\n      <div\n        className=\"item-container left-items\"\n      >\n        {\n          getLeftItems()\n        }\n      </div>\n      <div\n        className=\"item-container right-items\"\n      >\n        {\n          getRightItems()\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, {\n  useEffect, useState\n} from 'react';\n\nimport {\n  Extent as OlExtent\n} from 'ol/extent';\nimport {\n  transformExtent\n} from 'ol/proj';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport NominatimSearch, {\n  NominatimSearchProps\n} from '@terrestris/react-geo/dist/Field/NominatimSearch/NominatimSearch';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport const BasicNominatimSearch: React.FC<Partial<NominatimSearchProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n  const [viewBox, setViewBox] = useState<string>();\n\n  useEffect(() => {\n    const mapViewProjection = map?.getView().getProjection();\n    const extent: OlExtent = map?.getView()?.get('extent');\n    if (extent) {\n      const transformedExtent = transformExtent(extent, mapViewProjection, 'EPSG:4326');\n      setViewBox(transformedExtent.toString());\n    }\n  }, [map]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <NominatimSearch\n      countryCodes={''}\n      allowClear={true}\n      nominatimBaseUrl={'https://nominatim.terrestris.de/search.php?'}\n      placeholder={t('Nominatim.placeholder')}\n      viewBox={viewBox ? viewBox : ''}\n      {...restProps}\n    />\n  );\n};\n\nexport default BasicNominatimSearch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import Map from 'ol/Map';\n\nimport { isWmsLayer } from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  SearchConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nexport interface SolrQueryProps {\n  searchValue: string;\n  map: Map;\n}\n\ntype SolrQuery = {\n  query: string;\n  fieldList?: string;\n};\n\n/**\n * Generates a solr search query based on the `searchConfiguration` and `searchable` properties of each layer. This\n * currently considers all layers which are part of the layer tree / map.\n */\nexport const generateSolrQuery = ({\n  searchValue,\n  map\n}: SolrQueryProps): SolrQuery[] => {\n  // parse searchValue into an array of search terms,\n  // removing special characters and white spaces\n  let parts = searchValue.trim()\n    .replaceAll(/[()\\\\\\-_./\\/]/g, ' ')\n    .split(' ')\n    .map(s => s.trim())\n    .filter(s => s !== '');\n\n  const subQueriesPerLayer: SolrQuery[] = [];\n  const layers = map.getAllLayers();\n  layers.forEach(layer => {\n    if (layer.get('searchable') && isWmsLayer(layer)) {\n      const searchConfig = layer.get('searchConfig') as SearchConfig;\n      const fullLayerName = layer.getSource()?.getParams().LAYERS;\n      if (searchConfig?.attributes) {\n        // search only configured attributes\n        subQueriesPerLayer.push({\n          query: `(featureType:\"${fullLayerName}\" AND (${generateFuzzySearchQuery(parts)}))`,\n          fieldList: searchConfig.attributes.join(' ')\n        });\n      } else {\n        // search all attributes of this layer\n        subQueriesPerLayer.push({\n          query: `(featureType:\"${fullLayerName}\" AND (${generateFuzzySearchQuery(parts)}))`\n        });\n      }\n    }\n  });\n  return subQueriesPerLayer;\n};\n\n/**\n * Applies operators for wildcard and fuzzy search to a solr (sub)query for multiple search terms.\n * @param searchParts The search input which may consist of multiple search terms, e.g. [\"foo\", \"bar\"]\n */\nconst generateFuzzySearchQuery = (\n  searchParts: string[]\n): string => {\n  const subQueries = searchParts.map(part => {\n    return `(${part.trim()}*^3 OR *${part.trim()}*^2 OR ${part.trim()}~1)`;\n  });\n  return subQueries.join(' AND ');\n};\n\nexport default generateSolrQuery;\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\n\nimport {\n  LoadingOutlined,\n  SearchOutlined,\n  SettingOutlined\n} from '@ant-design/icons';\nimport {\n  Checkbox,\n  Dropdown,\n  Empty,\n  Input,\n  InputProps\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _groupBy from 'lodash/groupBy';\nimport _isNil from 'lodash/isNil';\n\nimport { getUid } from 'ol';\nimport {\n  Extent as OlExtent\n} from 'ol/extent';\nimport OlFeature from 'ol/Feature';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlFormatWKT from 'ol/format/WKT';\nimport OlGeometry from 'ol/geom/Geometry';\nimport { transformExtent } from 'ol/proj';\nimport OlStyleCircle from 'ol/style/Circle';\nimport OlStyleFill from 'ol/style/Fill';\nimport OlStyleStroke from 'ol/style/Stroke';\nimport OlStyle from 'ol/style/Style';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport { NominatimPlace } from '@terrestris/react-geo/dist/Field/NominatimSearch/NominatimSearch';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport SearchResultsPanel, {\n  Category as ResultCategory\n} from '@terrestris/react-geo/dist/Panel/SearchResultsPanel/SearchResultsPanel';\n\nimport {\n  SearchConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport './index.less';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nimport {\n  setLayerId\n} from '../../store/editFeature';\n\nimport {\n  show as showEditFeatureDrawer\n} from '../../store/editFeatureDrawerOpen';\n\nimport generateSolrQuery from '../../utils/generateSolrQuery';\n\ninterface MultiSearchProps extends InputProps {\n  useNominatim: boolean;\n}\n\nexport type DataSearchResult = {\n  [key: string]: string | string[] | number[];\n};\n\nexport type HighlightingResult = {\n  [key: string]: string;\n};\n\nexport type HighlightingResults = {\n  [key: string]: HighlightingResult;\n};\n\nconst isFulfilled = <T, >(p: PromiseSettledResult<T>): p is PromiseFulfilledResult<T> => p.status === 'fulfilled';\n\nexport type SolrQueryConfig = {\n  q: string;\n  fq?: string;\n  defType?: 'lucene' | 'dismax' | 'edismax';\n  qf?: string;\n  rows?: number;\n  hl?: boolean;\n  'hl.fl'?: string;\n  'hl.tag.pre'?: string;\n  'hl.tag.post'?: string;\n  'hl.requireFieldMatch'?: boolean;\n};\n\nexport type Item = {\n  feature: OlFeature;\n};\n\nexport const MultiSearch: React.FC<MultiSearchProps> = ({\n  useNominatim\n}): JSX.Element => {\n\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useAppDispatch();\n\n  const clickAwayRef = useRef<HTMLDivElement>(null);\n\n  const [searchNominatim, setSearchNominatim] = useState<boolean>(useNominatim);\n  const [searchData, setSearchData] = useState<boolean>(true);\n  const [useViewBox, setUseViewBox] = useState<boolean>(ClientConfiguration.search?.defaultUseViewBox ?? true);\n  const [searchValue, setSearchValue] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [resultsVisible, setResultsVisible] = useState<boolean>(false);\n  const [settingsVisible, setSettingsVisible] = useState<boolean>(false);\n  const [dataSearchResults, setDataSearchResults] = useState<DataSearchResult[]>([]);\n  const [highlightingResults, setHighlightingResults] = useState<HighlightingResults>({});\n  const [nominatimResults, setNominatimResults] = useState<NominatimPlace[]>([]);\n  const [searchResults, setSearchResults] = useState<ResultCategory[]>([]);\n\n  useEffect(() => {\n    window.addEventListener('mousedown', handleClickAway);\n\n    return () => {\n      window.removeEventListener('mousedown', handleClickAway);\n    };\n  }, []);\n\n  const handleClickAway = (e: Event) => {\n    let target = e.target;\n    while (target) {\n      target = (target as Node).parentNode;\n    }\n\n    if ((clickAwayRef.current && ((clickAwayRef.current as Element).contains(e.target as Node)))) {\n      return;\n    }\n\n    setResultsVisible(false);\n  };\n\n  const settingsMenu = useMemo(() => {\n    return {\n      items: [{\n        label: (\n          <Checkbox\n            checked={useViewBox}\n            onChange={e => setUseViewBox(e.target.checked)}\n          >\n            {t('MultiSearch.searchInViewBox')}\n          </Checkbox>\n        ),\n        key: 'viewbox'\n      }, {\n        label: (\n          <Checkbox\n            checked={searchData}\n            onChange={e => setSearchData(e.target.checked)}\n          >\n            {t('MultiSearch.searchData')}\n          </Checkbox>\n        ),\n        key: 'data'\n      }, {\n        label: (\n          <Checkbox\n            checked={searchNominatim}\n            onChange={e => setSearchNominatim(e.target.checked)}\n          >\n            {t('MultiSearch.searchNominatim')}\n          </Checkbox>\n        ),\n        key: 'nominatim'\n      }]\n    };\n  }, [searchData, searchNominatim, useViewBox, t]);\n\n  const performSearch = useCallback(async () => {\n    const minChars = ClientConfiguration.search?.minChars ?? 3;\n    if (searchValue.length < minChars) {\n      resetSearch();\n      return;\n    }\n\n    if (!searchData && !searchNominatim) {\n      return;\n    }\n\n    setLoading(true);\n    setNominatimResults([]);\n    setDataSearchResults([]);\n    setHighlightingResults({});\n\n    let response;\n    let viewBox: OlExtent | null = null;\n\n    if (useViewBox) {\n      const mapViewProjection = map?.getView().getProjection();\n      const extent = map?.getView()?.calculateExtent();\n      if (extent) {\n        viewBox = transformExtent(extent, mapViewProjection, 'EPSG:4326');\n      }\n    }\n\n    if (searchData && map) {\n      try {\n        const solrBasePath = ClientConfiguration.search?.solrBasePath ?? '/search/query';\n        const searchUrl = new URL(`${window.location.origin}${solrBasePath}`);\n        const queriesPerLayer = generateSolrQuery({\n          searchValue,\n          map\n        });\n\n        const promises = queriesPerLayer.map(q => {\n          const solrQueryConfig: SolrQueryConfig = {\n            q: q.query,\n            rows: ClientConfiguration.search?.solrQueryConfig?.rowsPerQuery ?? 100,\n            defType: ClientConfiguration.search?.solrQueryConfig?.queryParser ?? 'edismax'\n          };\n\n          if (q.fieldList) {\n            solrQueryConfig.qf = q.fieldList;\n          } else {\n            solrQueryConfig.qf = ClientConfiguration.search?.coreName ?? 'search';\n          }\n\n          if (useViewBox && viewBox) {\n            const bboxFilter = `geometry:[${viewBox[1]},${viewBox[0]} TO ${viewBox[3]},${viewBox[2]}]`;\n            solrQueryConfig.fq = bboxFilter;\n          }\n\n          if (ClientConfiguration.search?.useSolrHighlighting) {\n            solrQueryConfig.hl = true;\n            solrQueryConfig['hl.fl'] = '*';\n            solrQueryConfig['hl.tag.pre'] = ClientConfiguration.search?.solrQueryConfig?.tagPre ?? '<b>';\n            solrQueryConfig['hl.tag.post'] = ClientConfiguration.search?.solrQueryConfig?.tagPost ?? '</b>';\n            solrQueryConfig['hl.requireFieldMatch'] = ClientConfiguration.search?.solrQueryConfig?.requireFieldMatch ?? true;\n          }\n\n          const defaultHeaders = {\n            'Content-Type': 'application/json'\n          };\n\n          return fetch(searchUrl.href, {\n            method: 'POST',\n            headers: {\n              ...defaultHeaders,\n              ...getBearerTokenHeader(client?.getKeycloak())\n            },\n            body: JSON.stringify(solrQueryConfig)\n          });\n        });\n\n        const results = await Promise.allSettled(promises.map(async pr => {\n          const res = await pr;\n          return res.json();\n        }));\n\n        const successfulResults = results.filter(isFulfilled);\n        const dataResults = successfulResults.flatMap(sR => sR.value?.response?.docs);\n        const hlResults = Object.assign({}, ...successfulResults.map(sr => sr.value?.highlighting));\n\n        setDataSearchResults(dataResults);\n        setHighlightingResults(hlResults);\n      } catch (error) {\n        setDataSearchResults([]);\n        setHighlightingResults({});\n        logger.error('Error while fetching the layer search results: ', error);\n      } finally {\n        if (!searchNominatim) {\n          setLoading(false);\n        }\n      }\n    }\n\n    if (searchNominatim) {\n      try {\n        const nominatimUrl = new URL('https://nominatim.terrestris.de/search');\n        nominatimUrl.searchParams.set('q', searchValue);\n        nominatimUrl.searchParams.set('format', 'json');\n        nominatimUrl.searchParams.set('polygon_geojson', '1');\n\n        if (useViewBox && viewBox) {\n          nominatimUrl.searchParams.set('viewbox', viewBox.toString());\n          nominatimUrl.searchParams.set('bounded', '1');\n        }\n        response = await fetch(nominatimUrl.href);\n        setNominatimResults(await response.json());\n      }\n      catch (error) {\n        setNominatimResults([]);\n        logger.error('Error while fetching the nominatim results: ', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  }, [searchValue, searchData, searchNominatim, useViewBox, map, client]);\n\n  const replaceTemplates = (template: string, data: DataSearchResult): string => {\n    const pattern = /{\\s*(\\w+?)\\s*}/g; // regex for template string with values in brackets, e.g. {name}\n    return template.replace(pattern, (_, token) => data[token]?.toString() || '');\n  };\n\n  const getFeatureTitle = useCallback((dsResult: DataSearchResult, highlightResult?: HighlightingResult): string => {\n    if (!map) {\n      return '';\n    }\n\n    const layer = MapUtil.getLayerByNameParam(map, dsResult.featureType[0] as string);\n    const searchConfig = layer?.get('searchConfig') as SearchConfig;\n\n    const blacklistedAttributes = [\n      'category',\n      'id',\n      'featureType',\n      'geometry',\n      'search'\n    ];\n\n    let title: string = '';\n\n    if (searchConfig?.displayTemplate) {\n      return replaceTemplates(searchConfig.displayTemplate, dsResult);\n    }\n\n    if (highlightResult) {\n      const filteredHighlightKeys = Object.keys(highlightResult).filter(key => !blacklistedAttributes.includes(key));\n      if (filteredHighlightKeys.length > 0) {\n        const highlightValue = highlightResult[filteredHighlightKeys[0]];\n        return `${highlightValue} [${filteredHighlightKeys[0]}]`;\n      }\n    }\n\n    Object.keys(dsResult)\n      .filter(key => !blacklistedAttributes.includes(key))\n      .forEach(propKey => {\n        let propValue = dsResult[propKey]?.toString();\n        if (!title && propValue.toLowerCase().indexOf(searchValue?.toLowerCase()) > -1) {\n          // show matched value followed by the attribute name in square brackets (e.g. '53111 Bonn [city]')\n          title = `${propValue} [${propKey}]`;\n        }\n      });\n\n    if (!title) {\n      // fallback -> should never happen after adding of the valid layer search config\n      title = dsResult.id as string;\n    }\n\n    return title;\n  }, [searchValue, map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    let updatedResults: ResultCategory[] = [];\n\n    if (nominatimResults.length > 0) {\n\n      const geoJsonFormat = new OlFormatGeoJSON();\n      const nFeats = nominatimResults.filter(f => !_isNil(f?.geojson)).map(f => {\n        const olFeat = geoJsonFormat.readFeature(f.geojson, {\n          dataProjection: 'EPSG:4326',\n          featureProjection: map.getView().getProjection()\n        });\n        olFeat.set('title', f.display_name);\n        return olFeat;\n      });\n\n      const nResults: ResultCategory = {\n        title: t('MultiSearch.nominatimTitle'),\n        features: nFeats\n      };\n      updatedResults.push(nResults);\n    }\n\n    if (dataSearchResults?.length > 0) {\n\n      const wktFormat = new OlFormatWKT();\n      // 1. group by category\n      const categories = _groupBy(dataSearchResults, res => res?.category[0]);\n      // 2. build features\n      Object.keys(categories).forEach(category => {\n        const features = categories[category].map(dsResult => {\n          if (!dsResult?.geometry?.[0]) {\n            return;\n          }\n          const id = dsResult.id as string;\n\n          const geometry = wktFormat.readGeometry(dsResult.geometry[0], {\n            dataProjection: 'EPSG:4326',\n            featureProjection: map.getView().getProjection()\n          });\n          const olFeat = new OlFeature({\n            geometry\n          });\n          olFeat.set('title', getFeatureTitle(dsResult, highlightingResults?.[id]));\n          let ftName;\n          if (dsResult.featureType?.[0]) {\n            const layer = MapUtil.getLayerByNameParam(map, dsResult.featureType?.[0] as string);\n            if (layer) {\n              olFeat.set('layer', layer);\n              ftName = layer.get('name');\n            }\n          } else {\n            ftName = id.substring(0, id.lastIndexOf('_'));\n          }\n          olFeat.set('ftName', ftName);\n          return olFeat;\n        }).filter(f => f) as OlFeature<OlGeometry>[];\n        const resultCategory: ResultCategory = {\n          title: category,\n          features\n        };\n        updatedResults.push(resultCategory);\n      });\n    }\n\n    setResultsVisible(true);\n    setSearchResults(updatedResults);\n\n  }, [dataSearchResults, highlightingResults, nominatimResults, map, getFeatureTitle, t]);\n\n  useEffect(() => {\n    const delay = ClientConfiguration.search?.delay ?? 1000;\n    const timeout = setTimeout(() => {\n      performSearch();\n    }, delay);\n\n    return () => clearTimeout(timeout);\n\n  }, [performSearch]);\n\n  const resetSearch = () => {\n    setDataSearchResults([]);\n    setNominatimResults([]);\n  };\n\n  const actionsCreator = (item: any) => {\n    const feat = item.feature;\n    const layer = feat.get('layer');\n\n    if (!layer?.get('editable')) {\n      return;\n    }\n\n    // button is temporarily disabled\n    return [<></>];\n  };\n\n  const layerStyle = useMemo(() => (\n    new OlStyle({\n      stroke: new OlStyleStroke({\n        color: 'rgb(255,0,0)',\n        width: 2\n      }),\n      fill: new OlStyleFill({\n        color: 'rgba(255,255,255, 0.5)'\n      }),\n      image: new OlStyleCircle({\n        radius: 10,\n        fill: new OlStyleFill({\n          color: 'rgba(255,255,255, 0.5)'\n        }),\n        stroke: new OlStyleStroke({\n          color: 'rgb(255,0,0)',\n          width: 3\n        })\n      })\n    })\n  ), []);\n\n  const resultRenderer = () => {\n    if (searchValue.length < 2 || !resultsVisible || loading || !dataSearchResults) {\n      return null;\n    }\n\n    const numTotal = nominatimResults.length + dataSearchResults.length;\n\n    if (numTotal === 0) {\n      return (\n        <div\n          className='no-search-result-div'\n        >\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n          />\n        </div>\n      );\n    }\n\n    const zoomOffsetOnClick = (item: Item) => {\n      const extent = item.feature.getGeometry()?.getExtent();\n      const toolMenuElement = document.getElementsByClassName('tool-menu');\n      const toolMenuWidth = toolMenuElement[0]?.clientWidth ?? 0;\n      let padding = [0, 0, 0, toolMenuWidth];\n\n      if (extent) {\n        map?.getView().fit(extent, {\n          size: map.getSize(),\n          padding\n        });\n      }\n    };\n\n    return (\n      <SearchResultsPanel\n        searchResults={searchResults}\n        numTotal={numTotal}\n        accordion\n        searchTerms={searchValue.split(' ')}\n        actionsCreator={actionsCreator}\n        layerStyle={layerStyle}\n        onClick={zoomOffsetOnClick}\n      />\n    );\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <div ref={clickAwayRef}>\n      <Input\n        value={searchValue}\n        disabled={!searchData && !searchNominatim}\n        onChange={event => {\n          setLoading(event.target.value !== '');\n          setSearchValue(event.target.value);\n        }}\n        allowClear\n        addonAfter={\n          <Dropdown\n            placement=\"bottomRight\"\n            menu={settingsMenu}\n            trigger={['click']}\n            onOpenChange={setSettingsVisible}\n            open={settingsVisible}\n          >\n            <SettingOutlined />\n          </Dropdown >\n        }\n        onFocus={() => setResultsVisible(true)}\n        placeholder={t('MultiSearch.searchPlaceholder')}\n        prefix={<SearchOutlined />}\n        suffix={loading ? <LoadingOutlined /> : null}\n      />\n      {resultRenderer()}\n    </div>\n  );\n};\n\nexport default MultiSearch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  InputProps\n} from 'antd/lib/input';\n\nimport logger from '@terrestris/base-util/dist/Logger';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport BasicNominatimSearch from '../BasicNominatimSearch';\nimport MultiSearch from '../MultiSearch';\n\nimport './index.less';\n\ninterface SearchFieldProps extends InputProps { }\n\nexport const SearchField: React.FC<SearchFieldProps> = (): JSX.Element => {\n\n  const useNominatim = useAppSelector((state) => state.searchEngines.includes('nominatim'));\n  const useSolr = useAppSelector((state) => state.searchEngines.includes('solr'));\n\n  if (!useNominatim && !useSolr) {\n    logger.warn('Neither nominatim nor solr search is configured.');\n    return <></>;\n  }\n\n  return (\n    <div\n      className=\"search\"\n      aria-label='search-field'\n    >\n      {\n        useSolr ?\n          <MultiSearch\n            aria-label='search'\n            useNominatim={useNominatim}\n          /> :\n          <BasicNominatimSearch\n            aria-label='search'\n          />\n      }\n    </div>\n  );\n};\n\nexport default SearchField;\n","import md5 from 'js-md5';\n\nexport interface GravatarProps {\n  email: string;\n  size?: number;\n  rating?: 'g' | 'pg' | 'r' | 'x';\n  defaultImage?: '404' | 'mp' | 'identicon' | 'monsterid' | 'wavatar' | 'retro' | 'robohash' | 'blank';\n  force?: boolean;\n}\n\nconst GRAVATAR_BASE_URL = 'https://www.gravatar.com/avatar/';\n\n/**\n * https://de.gravatar.com/site/implement/images/\n */\nexport const getGravatarUrl = ({\n  email = '',\n  size = 80,\n  rating = 'g',\n  defaultImage = 'identicon',\n  force = false\n}: GravatarProps): string => {\n  const lowerCaseEmail = email.toLowerCase();\n  const hash = md5(lowerCaseEmail);\n\n  let url = `${GRAVATAR_BASE_URL}${hash}?s=${size}&r=${rating}&d=${defaultImage}`;\n\n  if (force) {\n    url = `${url}&f=y`;\n  }\n\n  return url;\n};\n\nexport default getGravatarUrl;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  Modal,\n  Statistic\n} from 'antd';\n\nimport {\n  ModalProps\n} from 'antd/lib/modal';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport useAppSelector from '../../hooks/useAppSelector';\n\nimport {\n  useClientVersion\n} from '../../hooks/useVersion';\n\nimport './index.less';\n\ninterface ApplicationInfoProps extends ModalProps {\n  opener?: JSX.Element;\n}\n\nexport const ApplicationInfo: React.FC<ApplicationInfoProps> = ({\n  opener,\n  ...restProps\n}) => {\n  const {\n    t\n  } = useTranslation();\n\n  const appInfo = useAppSelector(state => state.appInfo);\n  const logoPath = useAppSelector(state => state.logoPath);\n  const appDescription = useAppSelector(state => state.description);\n\n  const [isVisible, setVisible] = useState<boolean>(false);\n\n  const toggleVisibility = () => {\n    setVisible(!isVisible);\n  };\n\n  let Opener;\n  if (opener) {\n    Opener = React.cloneElement(\n      opener,\n      {\n        onClick: toggleVisibility\n      }\n    );\n  } else {\n    Opener = <button onClick={toggleVisibility}>Open</button>;\n  }\n\n  return (\n    <>\n      {\n        Opener\n      }\n      <Modal\n        className='application-info'\n        title={t('ApplicationInfo.title')}\n        centered={true}\n        open={isVisible}\n        onOk={toggleVisibility}\n        onCancel={toggleVisibility}\n        footer={null}\n        {...restProps}\n      >\n        <img\n          className=\"logo\"\n          src={logoPath}\n        />\n        <div\n          className=\"description\"\n        >\n          {appDescription}\n        </div>\n        <Statistic\n          title={t('ApplicationInfo.clientVersionTitle')}\n          value={useClientVersion()}\n        />\n        {\n          (appInfo.version && appInfo.buildTime) &&\n          <Statistic\n            title={t('ApplicationInfo.backendVersionTitle')}\n            value={`${appInfo.version} (${appInfo.buildTime})`}\n          />\n        }\n      </Modal>\n    </>\n  );\n};\n\nexport default ApplicationInfo;\n","export const useClientVersion = () => {\n  return PROJECT_VERSION;\n};\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faInfo,\n  faUserCog,\n  faSignOut,\n  faSignIn,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  ItemType\n} from 'antd/lib/menu/hooks/useItems';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport {\n  MenuInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport UserChip from '@terrestris/react-geo/dist/UserChip/UserChip';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport {\n  getGravatarUrl\n} from '../../utils/getGravatarUrl';\n\nimport ApplicationInfo from '../ApplicationInfo';\n\nimport './index.less';\n\ninterface OwnProps { }\n\ntype UserProps = OwnProps;\n\nexport const UserMenu: React.FC<UserProps> = (): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const client = useSHOGunAPIClient();\n  const keycloak = client?.getKeycloak();\n\n  const user = useAppSelector((state) => state.user);\n\n  const onMenuClick = (evt: MenuInfo) => {\n    switch (evt.key) {\n      case 'settings':\n        if (keycloak) {\n          keycloak.accountManagement();\n        }\n        break;\n      case 'info':\n        // Don't do anything, visible state will be handled by the menu itself.\n        break;\n      case 'login':\n        if (keycloak) {\n          keycloak.login();\n        }\n        break;\n      case 'logout':\n        if (keycloak) {\n          keycloak.logout();\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const getMenu = () => {\n    const login: ItemType = {\n      key: 'login',\n      icon: (\n        <FontAwesomeIcon\n          icon={faSignIn}\n        />\n      ),\n      label: t('UserMenu.loginMenuTitle')\n    };\n\n    const username: ItemType = {\n      key: 'username',\n      label: (\n        <div\n          className=\"user-name\"\n          aria-label='user-name'\n        >\n          <span>\n            {\n              user.providerDetails?.email\n            }\n          </span>\n        </div>\n      )\n    };\n\n    const divider: ItemType = {\n      type: 'divider'\n    };\n\n    const settings: ItemType = {\n      key: 'settings',\n      icon: (\n        <FontAwesomeIcon\n          icon={faUserCog}\n        />\n      ),\n      label: t('UserMenu.settingsMenuTitle')\n    };\n\n    const info: ItemType = {\n      key: 'info',\n      icon: (\n        <FontAwesomeIcon\n          icon={faInfo}\n        />\n      ),\n      label: (\n        <ApplicationInfo\n          opener={\n            <span\n              className=\"info-opener\"\n              aria-label='info-opener'\n            >\n              {t('UserMenu.infoMenuTitle')}\n            </span>\n          }\n        />\n      )\n    };\n\n    const logout: ItemType = {\n      key: 'logout',\n      icon: (\n        <FontAwesomeIcon\n          icon={faSignOut}\n        />\n      ),\n      label: (\n        <div\n          aria-label='login'\n        >\n          {t('UserMenu.logoutMenuTitle')}\n        </div>\n      )\n    };\n\n    const items: ItemType[] = [];\n\n    if (_isEmpty(user)) {\n      if (ClientConfiguration.keycloak?.enabled) {\n        items.push(login);\n      }\n      items.push(info);\n    } else {\n      const accountRoles = keycloak?.tokenParsed?.resource_access?.account?.roles;\n      const hasUserManagementAccess = Array.isArray(accountRoles) && accountRoles.indexOf('manage-account') > -1;\n      const itemsForLoggedInUser = hasUserManagementAccess ? [\n        username,\n        divider,\n        settings,\n        info,\n        divider,\n        logout\n      ] : [\n        username,\n        divider,\n        info,\n        divider,\n        logout\n      ];\n\n      items.push(...itemsForLoggedInUser);\n    }\n\n    return {\n      items,\n      onClick: onMenuClick\n    };\n  };\n\n  return (\n    <UserChip\n      size={'small'}\n      imageSrc={getGravatarUrl({\n        email: user.providerDetails?.email || '',\n        size: 28\n      })}\n      userName={\n        <FontAwesomeIcon\n          icon={faAngleDown}\n        />\n      }\n      userMenu={getMenu()}\n    />\n  );\n};\n\nexport default UserMenu;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  useAppSelector\n} from '../../hooks/useAppSelector';\nimport {\n  usePlugins\n} from '../../hooks/usePlugins';\n\nimport {\n  HeaderPlacementOrientation,\n  isHeaderIntegration\n} from '../../plugin';\nimport SearchField from '../SearchField';\n\nimport UserMenu from '../UserMenu';\n\nimport './index.less';\n\nexport interface HeaderProps extends React.ComponentProps<'div'> { }\n\nexport const Header: React.FC<HeaderProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const title = useAppSelector((state) => state.title);\n  const logoPath = useAppSelector((state) => state.logoPath);\n  const plugins = usePlugins();\n\n  const insertPlugins = (itemPosition: HeaderPlacementOrientation, items: JSX.Element[]) => {\n    plugins.forEach(plugin => {\n      if (isHeaderIntegration(plugin.integration) && plugin.integration?.placementOrientation === itemPosition) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        items.splice(plugin.integration?.insertionIndex || 0, 0,\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  };\n\n  const getLeftItems = () => {\n    const items = [(\n      <img\n        key=\"logo\"\n        className=\"logo\"\n        aria-label=\"logo\"\n        src={logoPath}\n      />\n    ), (\n      <div\n        key=\"title\"\n        className=\"title\"\n        aria-label=\"title\"\n      >\n        {title}\n      </div>\n    )];\n\n    insertPlugins('left', items);\n\n    return items;\n  };\n\n  const getCenterItems = () => {\n    const items = [\n      <SearchField\n        key=\"search\"\n        aria-label='search-input'\n        name='search-input'\n        className='search-input'\n      />\n    ];\n\n    insertPlugins('center', items);\n\n    return items;\n  };\n\n  const getRightItems = () => {\n    const items = [\n      <div\n        key=\"user-menu\"\n        aria-label=\"user-menu\"\n      >\n        <UserMenu\n          key=\"user-menu\"\n        />\n      </div>\n    ];\n\n    insertPlugins('right', items);\n\n    return items;\n  };\n\n  return (\n    <div\n      className=\"header\"\n      {...restProps}\n    >\n      <div\n        className=\"item-container left-items\"\n      >\n        {\n          getLeftItems()\n        }\n      </div>\n      <div\n        className=\"item-container center-items\"\n      >\n        {\n          getCenterItems()\n        }\n      </div>\n      <div\n        className=\"item-container right-items\"\n      >\n        {\n          getRightItems()\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\n\nimport {\n  Alert,\n  Spin\n} from 'antd';\n\nimport OlLayer from 'ol/layer/Layer';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport './index.less';\n\nexport type LayerConfigurationProps = React.ComponentProps<'pre'> & {\n  layer?: OlLayer;\n};\n\nexport const LayerConfiguration: React.FC<LayerConfigurationProps> = ({\n  layer,\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [layerConfiguration, setLayerConfiguration] = useState<Layer>();\n\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const getLayerConfiguration = useCallback(async () => {\n    try {\n      setLoading(true);\n      setErrorMessage('');\n\n      if (!layer || !layer.get('shogunId')) {\n        throw new Error('No layer provided or the layer has no shogunId set');\n      }\n\n      const conf = await client?.layer().findOne(layer.get('shogunId'));\n\n      setLayerConfiguration(conf);\n    } catch (error) {\n      Logger.error(error);\n      setErrorMessage(t('LayerConfiguration.errorMessage'));\n    } finally {\n      setLoading(false);\n    }\n  }, [t, client, layer]);\n\n  useEffect(() => {\n    getLayerConfiguration();\n  }, [getLayerConfiguration]);\n\n  if (errorMessage) {\n    return (\n      <Alert\n        type=\"error\"\n        closable={true}\n        message={errorMessage}\n      />\n    );\n  }\n\n  return (\n    <Spin\n      spinning={loading}\n    >\n      <pre\n        className=\"layer-configuration\"\n        {...restProps}\n      >\n        <code>\n          {\n            JSON.stringify(layerConfiguration, null, '  ')\n          }\n        </code>\n      </pre>\n    </Spin>\n  );\n};\n\nexport default LayerConfiguration;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\n\nimport {\n  Alert,\n  Form,\n  FormProps,\n  Spin\n} from 'antd';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayer from 'ol/layer/Layer';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport CapabilitiesUtil from '@terrestris/ol-util/dist/CapabilitiesUtil/CapabilitiesUtil';\n\nimport {\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport './index.less';\n\nexport type LayerDetailsProps = Partial<FormProps> & {\n  layer?: OlLayer;\n};\n\nexport const LayerDetails: React.FC<LayerDetailsProps> = ({\n  layer,\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [capabilities, setCapabilities] = useState<any>();\n  const [errorMessage, setErrorMessage] = useState<string>();\n\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const getCapabilities = useCallback(async () => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setErrorMessage('');\n      setCapabilities(undefined);\n\n      const capa = await CapabilitiesUtil.getWmsCapabilitiesByLayer(\n        (layer as OlLayerImage<OlSourceImageWMS> | OlLayerTile<OlSourceTileWMS>), {\n          headers: {\n            ...layer.get('useBearerToken') ? {\n              ...getBearerTokenHeader(client?.getKeycloak())\n            } : undefined\n          }\n        });\n\n      setCapabilities(capa);\n    } catch (error) {\n      Logger.error(error);\n      setErrorMessage(t('LayerDetails.errorMessage'));\n    } finally {\n      setLoading(false);\n    }\n  }, [t, client, layer]);\n\n  useEffect(() => {\n    getCapabilities();\n  }, [getCapabilities]);\n\n  const getLayerName = () => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    return layer.getSource()?.getParams().LAYERS;\n  };\n\n  const getCapabilitiesUrl = () => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    let layerUrl;\n    if (layer.getSource() instanceof OlSourceImageWMS) {\n      layerUrl = (layer.getSource() as OlSourceImageWMS).getUrl();\n    }\n    if (layer.getSource() instanceof OlSourceTileWMS) {\n      const urls = (layer.getSource() as OlSourceTileWMS).getUrls();\n      layerUrl = urls ? urls[0] : undefined;\n    }\n\n    if (layerUrl) {\n      return UrlUtil.createValidGetCapabilitiesRequest(layerUrl, 'WMS', '1.3.0');\n    }\n  };\n\n  const getCapabilitiesLayer = () => {\n    const layers: any[] = capabilities?.Capability?.Layer?.Layer;\n    const layerName = getLayerName();\n    let lay;\n    if (Array.isArray(layers)) {\n      lay = layers?.find(l => l?.Name === layerName);\n    } else {\n      return layers;\n    }\n    return lay;\n  };\n\n  const getBBox = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay || !lay.EX_GeographicBoundingBox) {\n      return;\n    }\n\n    return [\n      lay.EX_GeographicBoundingBox.westBoundLongitude,\n      lay.EX_GeographicBoundingBox.southBoundLatitude,\n      lay.EX_GeographicBoundingBox.eastBoundLongitude,\n      lay.EX_GeographicBoundingBox.northBoundLatitude\n    ].join(', ');\n  };\n\n  const getMinScale = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.MinScaleDenominator;\n  };\n\n  const getMaxScale = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.MaxScaleDenominator;\n  };\n\n  const getAbstract = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.Abstract;\n  };\n\n  const getServiceAbstract = () => {\n    return capabilities?.Service?.Abstract;\n  };\n\n  const getContact = () => {\n    return capabilities?.Service?.ContactInformation?.ContactElectronicMailAddress;\n  };\n\n  const getLayerTitle = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.Title;\n  };\n\n  const getAccessConstraints = () => {\n    return capabilities?.Service?.AccessConstraints;\n  };\n\n  if (errorMessage) {\n    return (\n      <Alert\n        type=\"error\"\n        closable={true}\n        message={errorMessage}\n      />\n    );\n  }\n\n  return (\n    <Spin\n      spinning={loading}\n    >\n      <Form\n        className=\"layer-details\"\n        layout=\"horizontal\"\n        size=\"small\"\n        labelAlign=\"left\"\n        labelWrap={true}\n        labelCol={{\n          flex: '150px'\n        }}\n        {...restProps}\n      >\n        <Form.Item\n          name=\"layerName\"\n          label={t('LayerDetails.layerNameLabel')}\n        >\n          <span>{getLayerName() ? getLayerName() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"layerTitle\"\n          label={t('LayerDetails.layerTitleLabel')}\n        >\n          <span>{getLayerTitle() ? getLayerTitle() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"service-abstract\"\n          label={t('LayerDetails.serviceAbstractLabel')}\n        >\n          <span>{getServiceAbstract() ? getServiceAbstract() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"abstract\"\n          label={t('LayerDetails.abstractLabel')}\n        >\n          <span>{getAbstract() ? getAbstract() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"accessConstraints\"\n          label={t('LayerDetails.accessConstraintsLabel')}\n        >\n          <span>{getAccessConstraints() ? getAccessConstraints() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"CapabilitiesUrl\"\n          label={t('LayerDetails.capabilitiesUrlLabel')}\n        >\n          <a href={getCapabilitiesUrl()}>{getCapabilitiesUrl()}</a>\n        </Form.Item>\n        <Form.Item\n          name=\"contact\"\n          label={t('LayerDetails.contactLabel')}\n        >\n          {getContact() ? <a href={`mailto:${getContact()}`}>{getContact()}</a> : <span>{t('LayerDetails.noDataPlaceholder')}</span>}\n        </Form.Item>\n        <Form.Item\n          name=\"minScale\"\n          label={t('LayerDetails.minScaleLabel')}\n        >\n          <span>{getMinScale() ? getMinScale() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"maxScale\"\n          label={t('LayerDetails.maxScaleLabel')}\n        >\n          <span>{getMaxScale() ? getMaxScale() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"bbox\"\n          label={t('LayerDetails.bboxLabel')}\n        >\n          <span>{getBBox() ? getBBox() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n      </Form>\n    </Spin>\n  );\n};\n\nexport default LayerDetails;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport {\n  FileTextOutlined\n} from '@ant-design/icons';\n\nimport {\n  Button,\n  Modal,\n  ModalProps,\n  Tooltip\n} from 'antd';\n\nimport OlLayer from 'ol/layer/Layer';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\n\nimport {\n  hide as hideLayerDetailsModal,\n  setLayer as setDetailsLayer\n} from '../../store/layerDetailsModal';\n\nimport LayerConfiguration from './LayerConfiguration';\nimport LayerDetails from './LayerDetails';\n\nimport './index.less';\n\nexport type LayerDetailsModalProps = Partial<ModalProps>;\n\nexport const LayerDetailsModal: React.FC<LayerDetailsModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [layer, setLayer] = useState<OlLayer>();\n  const [configurationVisible, setConfigurationVisible] = useState<boolean>(false);\n\n  const isModalVisible = useAppSelector(state => state.layerDetailsModal.visible);\n  const layerId = useAppSelector(state => state.layerDetailsModal.layerId);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    if (!layerId) {\n      setLayer(undefined);\n      return;\n    }\n\n    const l = MapUtil.getLayerByOlUid(map, layerId);\n\n    if (!(l instanceof OlLayer)) {\n      return;\n    }\n\n    setLayer(l);\n  }, [map, layerId]);\n\n  const closeModal = () => {\n    dispatch(hideLayerDetailsModal());\n    dispatch(setDetailsLayer(undefined));\n  };\n\n  const onShowConfigurationClick = () => {\n    setConfigurationVisible(!configurationVisible);\n  };\n\n  return (\n    <Modal\n      className=\"layer-details-modal\"\n      title={(\n        <div\n          className=\"title-group\"\n        >\n          <span>{t('LayerDetailsModal.title', {\n            layerName: layer?.get('name')\n          })}\n          </span>\n          {\n            layer?.get('shogunId') && (\n              <Tooltip\n                title={configurationVisible ?\n                  t('LayerDetailsModal.internalConfigurationButtonTooltipPressed') :\n                  t('LayerDetailsModal.internalConfigurationButtonTooltip')\n                }\n              >\n                <Button\n                  type=\"link\"\n                  className={configurationVisible ? 'pressed' : ''}\n                  icon={<FileTextOutlined />}\n                  onClick={onShowConfigurationClick}\n                />\n              </Tooltip>\n            )\n          }\n        </div>\n      )}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={800}\n      footer={false}\n      {...restProps}\n    >\n      <LayerDetails\n        layer={layer}\n        hidden={configurationVisible}\n      />\n      {\n        layer?.get('shogunId') && (\n          <LayerConfiguration\n            layer={layer}\n            hidden={!configurationVisible}\n          />\n        )\n      }\n    </Modal>\n  );\n};\n\nexport default LayerDetailsModal;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import * as React from 'react';\n\nimport {\n  useEffect,\n  useState\n} from 'react';\n\nimport CardStyle, {\n  CardStyleProps\n} from 'geostyler/dist/Component/CardStyle/CardStyle';\n\nimport OlParser from 'geostyler-openlayers-parser';\n\nimport {\n  Style as GsStyle\n} from 'geostyler-style';\n\nimport OlFeature from 'ol/Feature';\n\nimport OlLayerVector from 'ol/layer/Vector';\n\nimport VectorSource from 'ol/source/Vector';\n\nimport {\n  StyleFunction,\n  StyleLike as OlStyleLike\n} from 'ol/style/Style';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport type StylingComponentProps = CardStyleProps;\n\nexport const StylingComponent: React.FC<StylingComponentProps> = ({\n  ...passThroughProps\n}): JSX.Element => {\n\n  const defaultStyle: GsStyle = {\n    name: 'Default Style',\n    rules: [{\n      name: 'Area',\n      symbolizers: [{\n        kind: 'Fill',\n        color: '#00b72b',\n        outlineOpacity: 0.8,\n        opacity: 0.5,\n        fillOpacity: 0.8,\n        outlineWidth: 2,\n        outlineColor: '#00b72b'\n      }]\n    }, {\n      name: 'Line',\n      symbolizers: [{\n        kind: 'Line',\n        color: '#00b72b',\n        width: 2,\n        opacity: 0.8\n      }]\n    }, {\n      name: 'Point',\n      symbolizers: [{\n        kind: 'Mark',\n        wellKnownName: 'circle',\n        color: '#00b72b',\n        strokeColor: '#00b72b',\n        strokeOpacity: 0.8,\n        opacity: 0.5,\n        radius: 7\n      }],\n      filter: [\n        '==',\n        'label',\n        'undefined'\n      ]\n    }, {\n      name: 'Text',\n      symbolizers: [{\n        kind: 'Text',\n        label: '{{label}}',\n        size: 12,\n        font: [\n          'sans-serif'\n        ],\n        opacity: 0.8,\n        color: '#00b72b',\n        offset: [\n          5,\n          5\n        ],\n        haloColor: '#00b72b',\n        haloWidth: 1\n      }],\n      filter: [\n        '!=',\n        'label',\n        'undefined'\n      ]\n    }]\n  };\n\n  const [style, setStyle] = useState<GsStyle>(defaultStyle);\n\n  const map = useMap();\n\n  useEffect(() => {\n    if (!style || !map) {\n      return;\n    }\n\n    const olParser = new OlParser();\n\n    let drawVectorLayer = MapUtil.getLayerByName(map, 'react-geo_digitize') as OlLayerVector<VectorSource>;\n\n    const parseStyles = async () => {\n      let olStylePolygon: OlStyleLike;\n      let olStyleLineString: OlStyleLike;\n      let olStylePoint: OlStyleLike;\n      let olStyleText: OlStyleLike;\n\n      for (const rule of style.rules) {\n        const newStyle: GsStyle = {\n          name: '',\n          rules: [rule]\n        };\n\n        const olStyle = await olParser.writeStyle(newStyle);\n\n        if (!olStyle.output) {\n          return;\n        }\n\n        if (rule.symbolizers[0].kind === 'Fill') {\n          olStylePolygon = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Text') {\n          olStyleText = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Line') {\n          olStyleLineString = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Mark') {\n          olStylePoint = olStyle.output;\n        }\n      }\n\n      const drawLayerStyleFunction = (feature: OlFeature, resolution: number) => {\n        const geometryType = feature.getGeometry()?.getType();\n\n        if (!geometryType) {\n          return;\n        }\n\n        if (['MultiPolygon', 'Polygon', 'Circle'].includes(geometryType)) {\n          return typeof olStylePolygon === 'function' ? olStylePolygon(feature, resolution) : olStylePolygon;\n        }\n\n        if (['MultiLineString', 'LineString'].includes(geometryType)) {\n          return typeof olStyleLineString === 'function' ? olStyleLineString(feature, resolution) : olStyleLineString;\n        }\n\n        if (['MultiPoint', 'Point'].includes(geometryType)) {\n          if (feature.get('label')) {\n            return typeof olStyleText === 'function' ? olStyleText(feature, resolution) : olStyleText;\n          }\n\n          return typeof olStylePoint === 'function' ? olStylePoint(feature, resolution) : olStylePoint;\n        }\n      };\n\n      drawVectorLayer.setStyle(drawLayerStyleFunction as StyleFunction);\n    };\n\n    parseStyles();\n  }, [style, map]);\n\n  return (\n    <CardStyle\n      style={style}\n      onStyleChange={setStyle}\n      {...passThroughProps}\n    />\n  );\n};\n\nexport default StylingComponent;\n","import React from 'react';\n\nimport {\n  Drawer,\n  DrawerProps\n} from 'antd';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport './index.less';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport { setStylingDrawerVisibility } from '../../store/stylingDrawerVisibility';\nimport StylingComponent from '../ToolMenu/Draw/StylingDrawerButton/StylingComponent';\n\nexport type StylingDrawerProps = DrawerProps;\n\nexport const StylingDrawer: React.FC<StylingDrawerProps> = ({\n  ...passThroughProps\n}): JSX.Element => {\n\n  const dispatch = useAppDispatch();\n  const isStylingDrawerVisible = useAppSelector(state => state.stylingDrawerVisibility);\n\n  const {\n    t\n  } = useTranslation();\n\n  const onClose = () => {\n    dispatch(setStylingDrawerVisibility(false));\n  };\n\n  return (\n    <Drawer\n      title={t('StylingDrawer.title')}\n      placement=\"right\"\n      onClose={onClose}\n      open={isStylingDrawerVisible}\n      className=\"color-pick-drawer\"\n      maskClosable={false}\n      mask={false}\n      {...passThroughProps}\n    >\n      <StylingComponent />\n    </Drawer>\n  );\n};\n\nexport default StylingDrawer;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport './index.less';\n\nimport {\n  Select\n} from 'antd';\n\nconst {\n  Option\n} = Select;\n\nimport i18n from '../../i18n';\n\nexport const LanguageSelect = () => {\n  const supportedLanguages = Object.keys(i18n.services.resourceStore.data);\n\n  const onLanguageChange = (lang: string) => {\n    i18n.changeLanguage(lang);\n  };\n\n  return (\n    <div\n      className=\"language-select\"\n      aria-label='language-selector'\n    >\n      <Select\n        defaultValue={i18n.language || 'en'}\n        onChange={onLanguageChange}\n      >\n        {\n          supportedLanguages.map(supportedLanguage => {\n            return (\n              <Option\n                key={supportedLanguage}\n                value={supportedLanguage}\n              >\n                {supportedLanguage.toUpperCase()}\n              </Option>\n            );\n          })\n        }\n      </Select>\n    </div>\n  );\n};\n\nexport default LanguageSelect;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect, useState, useMemo\n} from 'react';\n\nimport {\n  CopyOutlined,\n  MailOutlined,\n  WhatsAppOutlined\n} from '@ant-design/icons';\nimport {\n  Input, Tooltip, message\n} from 'antd';\nimport copy from 'copy-to-clipboard';\nimport {\n  EventsKey\n} from 'ol/events';\nimport BaseLayer from 'ol/layer/Base';\nimport LayerGroup from 'ol/layer/Group';\nimport ImageLayer from 'ol/layer/Image';\nimport TileLayer from 'ol/layer/Tile';\nimport {\n  unByKey\n} from 'ol/Observable';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport PermalinkUtil from '@terrestris/ol-util/dist/PermalinkUtil/PermalinkUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\n\nimport './index.less';\n\ninterface DefaultPermalinkProps { }\n\nexport interface PermalinkProps extends Partial<DefaultPermalinkProps> { }\n\nexport const Permalink: React.FC<PermalinkProps> = () => {\n  const map = useMap();\n  const layerAttributes = useMemo(() => [\n    'layerConfig',\n    'isExternalLayer',\n    'isUploadedLayer',\n    'groupName'\n  ], []);\n  const {\n    t\n  } = useTranslation();\n\n  const initialPermalink = map ? PermalinkUtil.getLink(\n    map,\n    ';',\n    l => l.get('name'),\n    l => (l instanceof TileLayer || l instanceof ImageLayer) && l.getVisible(),\n    layerAttributes\n  ) : '';\n\n  const [permalink, setPermalink] = useState(initialPermalink);\n\n  const mailSubject = 'SHOGun Web-GIS';\n  const mailBody = `Hey,\\r\\ncheck out the layer-composition I created:\\r\\n\\r\\n${permalink}`;\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n    let eventKeys: EventsKey[] = [];\n\n    const identifierFunction = (l: BaseLayer) => l.get('name');\n    const filterFunction = (l: BaseLayer) => (l instanceof TileLayer || l instanceof ImageLayer) && l.getVisible();\n    const updatePermalink = () => {\n      setPermalink(PermalinkUtil.getLink(\n        map,\n        ';',\n        identifierFunction,\n        filterFunction,\n        layerAttributes\n      ));\n    };\n\n    const updateLayerConfig = () => {\n      const externalLayers = map.getAllLayers().filter(l => l.get('isExternalLayer') || l.get('isUploadedLayer'));\n      externalLayers.forEach(externalLayer => {\n        const layerConfig = externalLayer.get('layerConfig') as Layer;\n        if (layerConfig) {\n          if (layerConfig.clientConfig) {\n            layerConfig.clientConfig.opacity = externalLayer.getOpacity();\n          } else {\n            layerConfig.clientConfig = {\n              opacity: externalLayer.getOpacity()\n            };\n          }\n          externalLayer.set('layerConfig', layerConfig);\n        }\n      });\n      updatePermalink();\n    };\n\n    const registerLayerCallback = (layerGroup: LayerGroup) => {\n      const layersInGroup = layerGroup.getLayers().getArray();\n      for (let i = 0; i < layersInGroup.length; i++) {\n        const layerInGroup = layersInGroup[i];\n\n        if (layerInGroup instanceof LayerGroup) {\n          registerLayerCallback(layerInGroup);\n        } else {\n          let eventKeyVisibility = layerInGroup.on('change:visible', updatePermalink);\n          let eventKeyOpacity = layerInGroup.on('change:opacity', updateLayerConfig);\n          eventKeys.push(eventKeyVisibility, eventKeyOpacity);\n        }\n      }\n    };\n\n    const listenerKeyCenter = map.getView().on('change:center', updatePermalink);\n    const listenerKeyResolution = map.getView().on('change:resolution', updatePermalink);\n\n    let mapLayerGroup = map.getLayerGroup();\n    registerLayerCallback(mapLayerGroup);\n    updateLayerConfig();\n\n    return () => {\n      unByKey(listenerKeyCenter);\n      unByKey(listenerKeyResolution);\n      unByKey(eventKeys);\n    };\n  }, [layerAttributes, map, t]);\n\n  function onTwitterClick() {\n    const twitterUrl = new URL('https://twitter.com/intent/tweet');\n    twitterUrl.searchParams.set('url', mailBody);\n    window.open(twitterUrl);\n  }\n\n  function onWhatsAppClick() {\n    const whatsAppUrl = new URL('https://wa.me');\n    whatsAppUrl.searchParams.set('text', mailBody);\n    window.open(whatsAppUrl);\n  }\n\n  function onMailClick() {\n    const mailToUrl = new URL('mailto:');\n    mailToUrl.searchParams.set('subject', mailSubject);\n    mailToUrl.searchParams.set('body', mailBody);\n    window.open(mailToUrl.toString().replace(/\\+/g, '%20'), '_self');\n  }\n\n  function onCopyClick() {\n    const success = copy(permalink);\n    if (success) {\n      message.info(t('Permalink.copiedToClipboard'));\n    } else {\n      message.info(t('Permalink.copyToClipboardFailed'));\n    }\n  }\n\n  return (\n    <div className=\"permalink-wrapper\">\n      <div className=\"icons\">\n        <Tooltip title={t('Permalink.whatsAppTooltip')}>\n          <WhatsAppOutlined onClick={onWhatsAppClick} />\n        </Tooltip>\n        <Tooltip title={t('Permalink.mailTooltip')}>\n          <MailOutlined onClick={onMailClick} />\n        </Tooltip>\n      </div>\n      <div\n        className=\"link\"\n        aria-label='permalink-url'\n      >\n        <Input value={permalink}\n          readOnly\n        />\n        <Tooltip title={t('Permalink.copyTooltip')}>\n          <CopyOutlined onClick={onCopyClick} />\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nexport default Permalink;\n","import OlLayer from 'ol/layer/Layer';\n\nimport MapFishPrintV3WMSSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3WMSSerializer';\n\nexport class SHOGunMapFishPrintV3WMSSerializer extends MapFishPrintV3WMSSerializer {\n\n  serialize(layer: OlLayer, opts?: any) {\n    const serialized: any = super.serialize(layer, opts);\n\n    if (serialized.baseURL.startsWith('/geoserver/ows')) {\n      serialized.baseURL = `http://shogun-geoserver:8080${serialized.baseURL}`;\n    }\n\n    if (serialized.baseURL.startsWith('/geoserver/SHOGUN')) {\n      serialized.baseURL = `http://shogun-geoserver:8080${serialized.baseURL}`;\n    }\n\n    return serialized;\n  }\n}\n\nexport default SHOGunMapFishPrintV3WMSSerializer;\n","import OlLayer from 'ol/layer/Layer';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport MapFishPrintV3TiledWMSSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3TiledWMSSerializer';\n\nimport SHOGunMapFishPrintV3WMSSerializer from './SHOGunMapFishPrintV3WMSSerializer';\n\nexport class SHOGunMapFishPrintV3TiledWMSSerializer extends SHOGunMapFishPrintV3WMSSerializer {\n\n  serialize(layer: OlLayer<OlSourceTileWMS>, opts: any) {\n    const optsToApply = {\n      tileSize: [512, 512],\n      ...opts\n    };\n\n    const source = layer.getSource();\n\n    if (!source || !this.validateSource(source)) {\n      return;\n    }\n\n    const serialized = {\n      ...super.serialize(layer, optsToApply),\n      ...{\n        type: MapFishPrintV3TiledWMSSerializer.TYPE_WMS\n      },\n      ...opts\n    };\n\n    return serialized;\n  }\n}\n\nexport default SHOGunMapFishPrintV3TiledWMSSerializer;\n","import React, {\n  useEffect, useState\n} from 'react';\n\nimport { Input } from 'antd';\nimport { InputProps } from 'antd/lib/input';\n\nimport _isNil from 'lodash/isNil';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport { addCustomParam } from '../../../store/print';\n\ninterface CustomFieldInputProps extends InputProps {}\n\nexport const CustomFieldInput: React.FC<CustomFieldInputProps> = ({\n  value,\n  id,\n  placeholder,\n  maxLength,\n  ...restProps\n}): JSX.Element => {\n\n  const [inputText, setInputText] = useState<any>(value);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (!_isNil(id)) {\n      dispatch(addCustomParam({\n        [id]: inputText\n      }));\n    }\n  }, [inputText, id, dispatch]);\n\n  useEffect(() => {\n    setInputText(value);\n  }, [value]);\n\n  return (\n    <Input\n      id={id}\n      value={inputText}\n      onChange={(event) => setInputText(event.target.value)}\n      placeholder={placeholder}\n      maxLength={maxLength}\n      showCount={!!(maxLength && maxLength > 1)}\n      {...restProps}\n    />\n  );\n};\n\nexport default CustomFieldInput;\n","import React, {\n  useEffect,\n  useRef,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport {\n  Layout\n} from '../';\n\nexport interface LayoutSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n  onValueChange: Function;\n}\n\nexport const LayoutSelect: React.FC<LayoutSelectProps> = ({\n  printManager,\n  onValueChange,\n  placeholder = 'Bitte wählen Sie eine Vorlage aus',\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [layout, setLayout] = useState<any>(value);\n  const prevLayoutRef = useRef<string | null | undefined>(layout);\n\n  useEffect(() => {\n    prevLayoutRef.current = value;\n  }, [value]);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setLayout(layout);\n      if (prevLayoutRef.current !== layout) {\n        onValueChange();\n      }\n    }\n  }, [printManager, layout, onValueChange, value]);\n\n  useEffect(() => {\n    setLayout(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={layout}\n      onChange={setLayout}\n      {...restProps}\n    >\n      {\n        printManager?.getLayouts().map((l: Layout) => (\n          <Select.Option\n            key={l.name}\n            value={l.name}\n          >\n            {l.name}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default LayoutSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface OutputFormatSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n  outputFormats: string[];\n}\n\nexport const OutputFormatSelect: React.FC<OutputFormatSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  outputFormats,\n  ...restProps\n}): JSX.Element => {\n\n  const [outputFormat, setOutputFormat] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setOutputFormat(outputFormat);\n    }\n  }, [printManager, outputFormat]);\n\n  useEffect(() => {\n    setOutputFormat(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={outputFormat}\n      onChange={setOutputFormat}\n      {...restProps}\n    >\n      {\n        outputFormats.map((f: string) => (\n          <Select.Option\n            key={f}\n            value={f}\n          >\n            {f.toLocaleUpperCase()}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default OutputFormatSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface ResolutionSelectProps extends SelectProps<number> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const ResolutionSelect: React.FC<ResolutionSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [resolution, setResolution] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setDpi(resolution);\n    }\n  }, [printManager, resolution]);\n\n  useEffect(() => {\n    setResolution(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={resolution}\n      onChange={setResolution}\n      {...restProps}\n    >\n      {\n        printManager?.getDpis().map((d: number) => (\n          <Select.Option\n            key={d}\n            value={d}\n          >\n            {`${d} DPI`}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default ResolutionSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport interface ScaleSelectProps extends SelectProps<number> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const ScaleSelect: React.FC<ScaleSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const map = useMap();\n\n  const [scale, setScale] = useState<number>(0);\n\n  useEffect(() => {\n    if (printManager && scale) {\n      printManager.setScale(scale);\n    }\n  }, [printManager, scale]);\n\n  useEffect(() => {\n    const updateScale = () => {\n      const pmScale = printManager.getScale();\n      if (pmScale) {\n        setScale(pmScale);\n      }\n    };\n    const transformInteraction = map?.getInteractions().getArray().find(i => {\n      return i.get('name') === MapFishPrintV3Manager.TRANSFORM_INTERACTION_NAME;\n    });\n\n    if (printManager && transformInteraction) {\n      // @ts-ignore\n      transformInteraction.on('scaling', updateScale);\n\n      return () => {\n        // @ts-ignore\n        transformInteraction.un('scaling', updateScale);\n      };\n    }\n  }, [printManager, map]);\n\n  useEffect(() => {\n    if (value) {\n      setScale(value);\n    }\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={scale}\n      onChange={setScale}\n      {...restProps}\n    >\n      {\n        printManager?.getScales().map((s: number) => (\n          <Select.Option\n            key={s}\n            value={s}\n          >\n            {`1 : ${s.toLocaleString()}`}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default ScaleSelect;\n","import OlLayer from 'ol/layer/Layer';\nimport OlRendererLayer from 'ol/renderer/Layer';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSource from 'ol/source/Source';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport Shared from '@terrestris/mapfish-print-manager/dist/util/Shared';\n\nShared.getLegendGraphicUrl = (layer: OlLayer<OlSource, OlRendererLayer<any>>): string => {\n  if (layer.get('legendUrl')) {\n    return layer.get('legendUrl');\n  }\n\n  if (layer.getSource() instanceof OlSourceTileWMS ||\n    layer.getSource() instanceof OlSourceImageWMS) {\n\n    const customParams: any = layer.get('customPrintLegendParams');\n    const source: any = layer.getSource();\n\n    const {\n      LAYERS,\n      VERSION,\n      FORMAT\n    } = source.getParams();\n\n    let url: string = source instanceof OlSourceImageWMS ?\n      source.getUrl() :\n      source.getUrls()[0];\n\n    if (url.startsWith('/geoserver/ows')) {\n      url = `http://shogun-geoserver:8080${url}`;\n    }\n\n    const params: any = {\n      LAYER: LAYERS.split(',')[0],\n      VERSION: VERSION || '1.3.0',\n      SERVICE: 'WMS',\n      REQUEST: 'GetLegendGraphic',\n      FORMAT: FORMAT || 'image/png',\n      ...customParams\n    };\n\n    const queryParams = Object.keys(params).map(key => {\n      return `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`;\n    }).join('&');\n\n    if (url.startsWith('/geoserver/SHOGUN')) {\n      url = `http://shogun-geoserver:8080${url}/service?`;\n      return `${url}${queryParams}`;\n    }\n\n    if (url.endsWith('?')) {\n      return `${url}${queryParams}`;\n    } else {\n      return `${url}?${queryParams}`;\n    }\n  }\n\n  return '';\n};\n","import React, {\n  useCallback, useEffect, useState\n} from 'react';\n\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n  Alert, Button, Form\n} from 'antd';\nimport { FormProps } from 'antd/lib/form/Form';\nimport ClientConfiguration from 'clientConfig';\nimport _isNil from 'lodash/isNil';\n\nimport OlGeometry from 'ol/geom/Geometry';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayer from 'ol/layer/Layer';\n\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlLayerRenderer from 'ol/renderer/Layer';\nimport OlSource from 'ol/source/Source';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport { useTranslation } from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport { MapFishPrintV3Manager } from '@terrestris/mapfish-print-manager';\nimport { MapFishPrintV3ManagerOpts } from '@terrestris/mapfish-print-manager/dist/manager/MapFishPrintV3Manager';\nimport MapFishPrintV3GeoJsonSerializer\n  from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3GeoJsonSerializer';\nimport MapFishPrintV3OSMSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3OSMSerializer';\nimport MapFishPrintV3WMTSSerializer\n  from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3WMTSSerializer';\n\nimport { LayerUtil } from '@terrestris/ol-util';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport { useMap } from '@terrestris/react-geo/dist/Hook/useMap';\nimport { getBearerTokenHeader } from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport { addCustomParam } from '../../store/print';\nimport SHOGunMapFishPrintV3TiledWMSSerializer from '../PrintForm/Serializer/SHOGunMapFishPrintV3TiledWMSSerializer';\nimport SHOGunMapFishPrintV3WMSSerializer from '../PrintForm/Serializer/SHOGunMapFishPrintV3WMSSerializer';\n\nimport CustomFieldInput from './CustomFieldInput';\nimport LayoutSelect from './LayoutSelect';\nimport OutputFormatSelect from './OutputFormatSelect';\nimport ResolutionSelect from './ResolutionSelect';\nimport ScaleSelect from './ScaleSelect';\n\nimport '../PrintForm/Shared/Shared';\n\nexport interface Layout {\n  name: string;\n  attributes: any[];\n}\n\nexport interface PrintFormProps extends Omit<FormProps, 'form'> {\n  active: boolean;\n  customPrintScales?: number[];\n  layerBlackList?: string[];\n  layouts?: Layout[];\n  outputFormats?: string[];\n}\n\nexport type LayerType = OlLayer<OlSource, OlLayerRenderer<OlLayerVector<OlSourceVector<OlGeometry>>>>;\n\nexport const PrintForm: React.FC<PrintFormProps> = ({\n  active,\n  customPrintScales = [],\n\n  layerBlackList = [],\n  outputFormats= ['pdf', 'png'],\n  ...restProps\n}): JSX.Element => {\n\n  const [form] = Form.useForm();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  const map = useMap();\n\n  const dispatch = useAppDispatch();\n\n  const currentLanguageCode = i18n.language;\n\n  const client = useSHOGunAPIClient();\n\n  const customMapParams = useAppSelector(state => state.print.customMapParams);\n  const customParams = useAppSelector(state => state.print.customParams);\n\n  const [printManager, setPrintManager] = useState<MapFishPrintV3Manager | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMsg, setErrorMsg] = useState<string | null>(null);\n\n  const layerFilter = useCallback((l: OlLayer<OlSource>) => {\n    if (!map) {\n      return;\n    }\n\n    const layerName = l.get('name');\n\n    return layerName && !layerBlackList.includes(layerName) &&\n      l.getVisible() && !(l instanceof OlLayerGroup) &&\n      MapUtil.layerInResolutionRange(l, map);\n  }, [map, layerBlackList]);\n\n  const legendFilter = useCallback((l: OlLayer<OlSource>) => {\n    if (_isNil(map)) {\n      return false;\n    }\n    const layerName = l.get('name');\n    const notBlacklisted = !layerBlackList.includes(layerName);\n    const notHidden = !l.get('hideLegendInPrint');\n    const visible = l.getVisible() && MapUtil.layerInResolutionRange(l, map);\n    const printableLayer = !(l instanceof OlLayerGroup);\n\n    if (notBlacklisted && notHidden && visible && printableLayer) {\n      const res = map?.getView().getResolution();\n      if (res) {\n        l.set('customPrintLegendParams', {\n          SCALE: MapUtil.getScaleForResolution(res, 'm')\n        });\n      }\n      return true;\n    }\n    return false;\n  }, [map, layerBlackList]);\n\n  const getPrintableLayers = useCallback((printLayer: LayerType) => {\n    if (!map) {\n      return [];\n    }\n\n    return MapUtil.getAllLayers(map).filter((layer) => {\n      const layerName = layer.get('name');\n      return layerName &&\n        !(layerName.includes('react-geo')) &&\n        layer.getVisible() &&\n        !(layer instanceof OlLayerGroup) &&\n        layer !== printLayer;\n    }) as LayerType[];\n  }, [map]);\n\n  const getAttributions = useCallback((manager: MapFishPrintV3Manager) => {\n    const extentLayer = manager.getExtentLayer();\n    if (!extentLayer) {\n      return '';\n    }\n\n    const layers = getPrintableLayers(extentLayer);\n    let allAttributions: string[] = [];\n\n    layers.filter((layer: LayerType) => {\n      return layer.getSource && layer.getSource()?.getAttributions && layer.getSource()?.getAttributions();\n    }).forEach((layer: LayerType) => {\n      const currentLayerAttribution = LayerUtil.getLayerAttributionsText(layer, ',', true);\n\n      if (!allAttributions.includes(currentLayerAttribution)) {\n        allAttributions.push(currentLayerAttribution);\n      }\n    });\n    return allAttributions.join(', ').trim();\n  }, [getPrintableLayers]);\n\n  const initializeMapProvider = useCallback(async () => {\n    if (_isNil(map)) {\n      return;\n    }\n    let pManagerOpts: MapFishPrintV3ManagerOpts = {\n      url: ClientConfiguration.print?.url || '/print',\n      map,\n      customPrintScales: map\n        ?.getView()\n        ?.getResolutions()\n        ?.map((d: number | undefined) => {\n          const units = map?.getView()?.getProjection()?.getUnits();\n          if (typeof d !== 'undefined') {\n            const scale = MapUtil.getScaleForResolution(d, units);\n            if (typeof scale !== 'undefined') {\n              return MapUtil.roundScale(scale);\n            }\n          }\n          return undefined;\n        })\n        .filter((scale: number | undefined) => typeof scale !== 'undefined')\n        ?.reverse() as number[] | undefined,\n      timeout: 60000,\n      layerFilter,\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak())\n      },\n      transformOpts: {\n        rotate: false\n      },\n      serializers: [\n        new MapFishPrintV3GeoJsonSerializer(),\n        new MapFishPrintV3OSMSerializer(),\n        new MapFishPrintV3WMTSSerializer(),\n        new SHOGunMapFishPrintV3WMSSerializer(),\n        new SHOGunMapFishPrintV3TiledWMSSerializer()\n      ],\n      legendFilter\n    };\n\n    if (customPrintScales.length > 0) {\n      pManagerOpts = {\n        ...pManagerOpts,\n        ...{\n          customPrintScales: customPrintScales.toReversed()\n        }\n      };\n    }\n\n    const pManager: MapFishPrintV3Manager = new MapFishPrintV3Manager(pManagerOpts);\n\n    try {\n      await pManager.init();\n\n      // Use locale print app if available.\n      // Implies that a print app with the language code exists.\n      const apps = pManager.getPrintApps();\n\n      if (apps && currentLanguageCode && apps.includes(currentLanguageCode)) {\n        await pManager.setPrintApp(currentLanguageCode);\n      }\n\n      pManager.setOutputFormat(pManager.getOutputFormats()[0]);\n      pManager.setDpi(pManager.getDpis()[0]);\n      pManager.setLayout(pManager.getLayouts()[0]?.name);\n      setPrintManager(pManager);\n    } catch (error) {\n      setErrorMsg(() => t('PrintForm.managerErrorMessage'));\n      Logger.error('Could not initialize print manager: ', error);\n    }\n  }, [map, layerFilter, client, legendFilter, customPrintScales, currentLanguageCode, t]);\n\n  useEffect(() => {\n    if (printManager) {\n      dispatch(addCustomParam({\n        attributions: getAttributions(printManager)\n      }));\n    }\n  }, [dispatch, getAttributions, printManager]);\n\n  useEffect(() => {\n    if (active) {\n      if (!printManager) {\n        form.resetFields();\n        initializeMapProvider();\n      }\n    } else {\n      printManager?.shutdownManager();\n      setPrintManager(null);\n    }\n  }, [printManager, active, initializeMapProvider, form]);\n\n  useEffect(() => {\n    if (printManager) {\n      if (customParams) {\n        printManager.setCustomParams(customParams);\n      }\n      if (customMapParams) {\n        printManager.setCustomMapParams(customMapParams);\n      }\n    }\n  }, [printManager, customParams, customMapParams]);\n\n  const onDownloadClick = async () => {\n    try {\n      setErrorMsg(null);\n      setLoading(true);\n\n      if (!printManager) {\n        return;\n      }\n\n      const downloadUrl = await printManager.print(false);\n\n      if (!downloadUrl) {\n        throw new Error('No download URL available, the job has failed.');\n      }\n\n      window.open(downloadUrl);\n    } catch (error: any) {\n      setErrorMsg(t('PrintForm.printJobErrorMsg') || null);\n      Logger.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onAlertClose = () => {\n    setErrorMsg(null);\n  };\n\n  const handleLayoutChange = () => {\n    form.setFieldValue('dpi', printManager?.getDpis()[0]);\n  };\n\n  return (\n    <div\n      className=\"print\"\n      aria-label='print-form'\n    >\n      {\n        errorMsg && (\n          <Alert\n            className=\"print-alert\"\n            message={errorMsg}\n            type=\"error\"\n            closable\n            showIcon\n            onClose={onAlertClose}\n          />\n        )\n      }\n      {\n        printManager?.isInitiated() && (\n          <>\n            <Form\n              form={form}\n              className=\"print-form\"\n              labelAlign=\"left\"\n              labelCol={{\n                flex: '90px'\n              }}\n              {...restProps}\n            >\n              <Form.Item\n                aria-label='print-title'\n                name=\"title\"\n                label={t('PrintForm.title')}\n                initialValue={t('PrintForm.initialTitle')}\n              >\n                <CustomFieldInput\n                  aria-label='print-title-input'\n                  maxLength={50}\n                  placeholder={t('PrintForm.titlePlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                aria-label='print-comment'\n                name=\"comment\"\n                label={t('PrintForm.comment')}\n              >\n                <CustomFieldInput\n                  aria-label='print-comment-input'\n                  maxLength={200}\n                  placeholder={t('PrintForm.commentPlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                aria-label='print-layout'\n                name=\"layout\"\n                label={t('PrintForm.layout')}\n                initialValue={printManager?.getLayouts()[0]?.name}\n              >\n                <LayoutSelect\n                  aria-label='print-layout-input'\n                  printManager={printManager}\n                  onValueChange={handleLayoutChange}\n                />\n              </Form.Item>\n              <Form.Item\n                aria-label='print-scale'\n                name='scale'\n                label={t('PrintForm.scale')}\n                initialValue={printManager?.getClosestScaleToFitMap()}\n              >\n                <ScaleSelect\n                  aria-label='print-scale-input'\n                  printManager={printManager}\n                />\n              </Form.Item>\n              <Form.Item\n                aria-label='print-dpi'\n                name=\"dpi\"\n                label={t('PrintForm.dpi')}\n                initialValue={printManager.getDpis()[0]}\n              >\n                <ResolutionSelect\n                  aria-label='print-dpi-input'\n                  printManager={printManager}\n                  placeholder={t('PrintForm.resolutionPlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                aria-label='print-format'\n                name=\"format\"\n                label={t('PrintForm.format')}\n                initialValue=\"pdf\"\n              >\n                <OutputFormatSelect\n                  aria-label='print-format-input'\n                  printManager={printManager}\n                  outputFormats={outputFormats}\n                  placeholder={t('PrintForm.outputFormatPlaceholder')}\n                />\n              </Form.Item>\n            </Form>\n            <Button\n              aria-label='create-print'\n              className='print-button tool-menu-button'\n              disabled={!printManager?.isInitiated()}\n              icon={<FontAwesomeIcon icon={faDownload} />}\n              loading={loading}\n              onClick={onDownloadClick}\n            >\n              {t('PrintForm.downloadBtnText')}\n            </Button>\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default PrintForm;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  AutoComplete,\n  Form,\n  Input\n} from 'antd';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport type {\n  FormData\n} from '..';\n\nexport type AttributionRowProps = {\n  keyName: string | number;\n  onChange?: (value: string) => void;\n  options?: string[];\n};\n\nconst AttributionRow: React.FC<AttributionRowProps> = ({\n  keyName,\n  onChange = () => {},\n  options\n}) => {\n\n  const {\n    t\n  } = useTranslation();\n\n  return (\n    <>\n      <Form.Item\n        name={[keyName, 'name']}\n        rules={[{\n          required: true,\n          message: t('AttributionRow.missingKey')\n        }, ({ getFieldsValue }) => ({\n          validator(_, value: string) {\n            const fields: FormData = getFieldsValue(true);\n\n            if (fields.fields) {\n              const filtered = Object.entries(fields.fields).filter(([, val]) => val?.name === value);\n\n              if (filtered.length > 1) {\n                return Promise.reject(new Error(t('AttributionRow.keyInUse')));\n              }\n            }\n\n            return Promise.resolve();\n          }\n        })]}\n      >\n        <AutoComplete\n          placeholder={t('AttributionRow.keyPlaceholder')}\n          onChange={(value) => {\n            onChange(value);\n          }}\n          options={options?.map(o => ({ value: o }))}\n        />\n      </Form.Item>\n      <Form.Item\n        name={[keyName, 'value']}\n        rules={[{\n          required: true,\n          message: t('AttributionRow.missingValue')\n        }]}\n      >\n        <Input\n          placeholder={t('AttributionRow.valuePlaceholder')}\n          onChange={evt => {\n            onChange(evt.target.value);\n          }}\n        />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default AttributionRow;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  faMinusSquare\n} from '@fortawesome/free-regular-svg-icons';\nimport {\n  faPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Drawer,\n  DrawerProps,\n  Form,\n  FormListFieldData,\n  Popconfirm,\n  notification,\n  Row\n} from 'antd';\n\nimport OlFeature from 'ol/Feature';\nimport OlGeometry from 'ol/geom/Geometry';\nimport Select from 'ol/interaction/Select';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport AttributionRow from './AttributionRow';\n\nimport './index.less';\n\nexport type FormData = {\n  fields?: [{\n    name?: string;\n    value?: string;\n  }];\n};\n\nexport interface AttributionDrawerProps extends DrawerProps {\n  onCustomClose?: (open: boolean) => void;\n}\n\nconst AttributionDrawer: React.FC<AttributionDrawerProps> = ({\n  onCustomClose,\n  open,\n  onClose,\n  ...passThroughProps\n}) => {\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n  const [isFormValid, setIsFormIsValid] = useState(true);\n  const [availableFeatureCollectionAttributes, setAvailableFeatureCollectionAttributes] = useState<string[]>([]);\n  const [availableFeatureAttributes, setAvailableFeatureAttributes] = useState<string[]>([]);\n  const [, contextHolder] = notification.useNotification();\n  const [form] = Form.useForm<FormData>();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  const updateAvailableFeatureAttributes = useCallback((fields: FormData) => {\n    const currentKeys = fields.fields\n      ?.map(field => field?.name?.toLowerCase())\n      .filter(key => key !== undefined);\n\n    setAvailableFeatureAttributes(availableFeatureCollectionAttributes.filter(o => !(currentKeys?.includes(o.toLowerCase()))));\n  }, [availableFeatureCollectionAttributes]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const properties = selectedFeature?.getProperties();\n\n    form.setFieldValue('fields', []);\n\n    if (properties) {\n      const filteredPropertyEntries = Object.entries(properties)\n        .filter(([, value]) => !(value instanceof OlGeometry))\n        .map(([key, value]) => [key, value]);\n      const filteredProperties = Object.fromEntries(filteredPropertyEntries);\n\n      const formProperties = Object.entries(filteredProperties)\n        .map(([key, value]) => {\n          return {\n            name: key,\n            value: value\n          };\n        });\n\n      form.setFieldValue('fields', formProperties);\n    }\n\n    const digitizeLayer = DigitizeUtil.getDigitizeLayer(map);\n    const digitizedFeatures = digitizeLayer.getSource()?.getFeatures();\n\n    const featureCollectionAttributes: Set<string> = new Set();\n    digitizedFeatures?.forEach(feat => {\n      Object.keys(feat.getProperties()).forEach(prop => {\n        if (!(feat.get(prop) instanceof OlGeometry)) {\n          featureCollectionAttributes.add(prop);\n        }\n      });\n    });\n    setAvailableFeatureCollectionAttributes(Array.from(featureCollectionAttributes));\n  }, [selectedFeature, form, map]);\n\n  useEffect(() => {\n    setSelectedFeature(undefined);\n  }, [open]);\n\n  // todo revisit react-geo to make name of the slect-interaction configurable\n  const selectInteraction = map?.getInteractions().getArray().filter(interaction => {\n    if (interaction.get('active') === true && interaction.get('name') === 'react-geo-select-interaction') {\n      return true;\n    } else {\n      return false;\n    }\n  })[0] as Select;\n\n  if (selectInteraction) {\n    selectInteraction.on('select', () => {\n      setSelectedFeature(selectInteraction.getFeatures().getArray()[0]);\n    });\n  }\n\n  const onFinish = (input: FormData) => {\n    if (!selectedFeature) {\n      return;\n    }\n    notification.destroy();\n    notification.success({\n      message: (t('notificationApplyText.title')),\n      placement: 'top',\n      duration: 3.5\n    });\n\n    for (const property in selectedFeature.getProperties()) {\n      if (!(selectedFeature.get(property) instanceof OlGeometry)) {\n        selectedFeature.unset(property);\n      }\n    }\n\n    if (input.fields) {\n      Object.values(input.fields).forEach(field => {\n        if (!field?.name) {\n          return;\n        }\n        selectedFeature.set(field.name, field.value);\n      });\n    }\n  };\n\n  const remove = (rmFn: any, name: number) => {\n    rmFn(name);\n  };\n\n  const onChange = async () => {\n    try {\n      await form.validateFields();\n      setIsFormIsValid(true);\n    } catch (error) {\n      setIsFormIsValid(false);\n    }\n  };\n\n  const onValuesChange = (changedFields: FormData, fields: FormData) => {\n    updateAvailableFeatureAttributes(fields);\n  };\n\n  const getFormItems = (fields: FormListFieldData[], rmFn: any) => {\n    return fields.map((field) => {\n      const removeAndMessage = () => {\n        notification.destroy();\n        notification.info({\n          message: (t('notificationDeleteText.title')),\n          description: (t('notificationDeleteText.info')),\n          placement: 'top',\n          duration: 6\n        });\n        remove(rmFn, field.name);\n      };\n      return (\n        <div\n          key={field.key}\n          className='attribute-row'\n        >\n          <AttributionRow\n            keyName={field.name}\n            key={field.key}\n            onChange={onChange}\n            options={availableFeatureAttributes}\n          />\n          <Popconfirm\n            title={t('AttributionPopConfirm.title')}\n            okText={t('AttributionPopConfirm.okText')}\n            cancelText={t('AttributionPopConfirm.cancelText')}\n            placement='topRight'\n            onConfirm={removeAndMessage}\n          >\n            {contextHolder}\n            <Button\n              className=\"remove-attribute-button\"\n              type='primary'\n              danger={true}\n              icon={\n                <FontAwesomeIcon\n                  icon={faMinusSquare}\n                />\n              }\n            />\n          </Popconfirm>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <Drawer\n      title={t('Attribution.title')}\n      className=\"attribution-drawer\"\n      placement=\"right\"\n      mask={false}\n      maskClosable={false}\n      closable={false}\n      open={open}\n      {...passThroughProps}\n    >\n      {!selectedFeature &&\n        <>\n          {t('Attribution.select')}\n        </>\n      }\n      <Row>\n        <Form\n          onFinish={onFinish}\n          autoComplete=\"off\"\n          form={form}\n          onValuesChange={onValuesChange}\n        >\n          <Form.List\n            name=\"fields\"\n          >\n            {(fields, {\n              add,\n              remove: rmFn\n            }) => (\n              <>\n                {\n                  getFormItems(fields, rmFn)\n                }\n                <Form.Item>\n                  {\n                    selectedFeature ?\n                      <Button\n                        type=\"dashed\"\n                        onClick={() => {\n                          add();\n                        }}\n                        className=\"add-attribute-button\"\n                        icon={\n                          <FontAwesomeIcon\n                            icon={faPlus}\n                          />\n                        }\n                      >\n                        {t('Attribution.add')}\n                      </Button> :\n                      <></>\n                  }\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n          <Form.Item>\n            <Button\n              className=\"submit-attributes-button\"\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={!isFormValid}\n              hidden={selectedFeature ? false: true}\n            >\n              {t('Attribution.submit')}\n            </Button>\n          </Form.Item>\n        </Form>\n      </Row>\n    </Drawer>\n  );\n};\n\nexport default AttributionDrawer;\n","import * as React from 'react';\nimport {\n  useEffect, useState\n} from 'react';\n\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Modal } from 'antd';\nimport OlGeometry from 'ol/geom/Geometry';\nimport OlVectorLayer from 'ol/layer/Vector';\nimport OlVectorSource from 'ol/source/Vector';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  SimpleButton, useMap\n} from '@terrestris/react-geo';\nimport { SimpleButtonProps } from '@terrestris/react-geo/dist/Button/SimpleButton/SimpleButton';\nimport { DigitizeUtil } from '@terrestris/react-util/dist/Util/DigitizeUtil';\n\nconst { confirm } = Modal;\n\ninterface OwnProps {\n  /**\n   * The vector layer which will be used for digitize features.\n   * The standard digitizeLayer can be retrieved via `DigitizeUtil.getDigitizeLayer(map)`.\n   */\n  digitizeLayer?: OlVectorLayer<OlVectorSource<OlGeometry>>;\n}\n\nexport type DeleteAllButtonProps = OwnProps & SimpleButtonProps;\n\n/**\n * The className added to this component.\n */\nconst defaultClassName = 'deleteallbutton';\n\nexport const DeleteAllButton: React.FC<DeleteAllButtonProps> = ({\n  className,\n  digitizeLayer,\n  ...passThroughProps\n}) => {\n  const [layers, setLayers] = useState<[OlVectorLayer<OlVectorSource<OlGeometry>>]|null>(null);\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    if (digitizeLayer) {\n      setLayers([digitizeLayer]);\n    } else {\n      setLayers([DigitizeUtil.getDigitizeLayer(map)]);\n    }\n  }, [map, digitizeLayer]);\n\n  if (!layers) {\n    return null;\n  }\n\n  const onClick = () => {\n\n    confirm({\n      title: (t('DeleteAllButton.deleteAll')),\n      content: (t('DeleteAllButton.confirmMessage')),\n      icon: <ExclamationCircleOutlined />,\n      onOk(){\n        layers[0].getSource()?.clear();\n      }\n    });\n  };\n\n  const finalClassName = className\n    ? `${defaultClassName} ${className}`\n    : defaultClassName;\n\n  return (\n    <SimpleButton\n      onClick={onClick}\n      className={finalClassName}\n      {...passThroughProps}\n    />\n  );\n};\n\nexport default DeleteAllButton;\n","import React from 'react';\n\nimport {\n  faPaintBrush\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport { Button } from 'antd';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport useAppDispatch from '../../../../hooks/useAppDispatch';\nimport { setStylingDrawerVisibility } from '../../../../store/stylingDrawerVisibility';\n\nexport const StylingButton: React.FC = (): JSX.Element => {\n\n  const dispatch = useAppDispatch();\n\n  const {\n    t\n  } = useTranslation();\n\n  const showDrawer = () => {\n    dispatch(setStylingDrawerVisibility(true));\n  };\n\n  return (\n    <Button\n      type=\"link\"\n      onClick={showDrawer}\n      icon={<FontAwesomeIcon icon={faPaintBrush} />}\n    >\n      {t('StylingDrawer.pickColor')}\n    </Button>\n  );\n};\n\nexport default StylingButton;\n","import React, {\n  ChangeEvent,\n  useState\n} from 'react';\n\nimport {\n  faGripLines,\n  faCircle,\n  faSquare,\n  faFont,\n  faCircleNotch,\n  faShapes,\n  faPenToSquare,\n  faUpload,\n  faTrash,\n  faEraser,\n  faDownload\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport { message } from 'antd';\nimport {\n  Feature\n} from 'ol';\nimport GeoJSON from 'ol/format/GeoJSON';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport DeleteButton from '@terrestris/react-geo/dist/Button/DeleteButton/DeleteButton';\nimport DrawButton from '@terrestris/react-geo/dist/Button/DrawButton/DrawButton';\nimport ModifyButton from '@terrestris/react-geo/dist/Button/ModifyButton/ModifyButton';\nimport SimpleButton from '@terrestris/react-geo/dist/Button/SimpleButton/SimpleButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\nimport UploadButton from '@terrestris/react-geo/dist/Button/UploadButton/UploadButton';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport './index.less';\n\nimport AttributionDrawer from './Attributions';\nimport DeleteAllButton from './DeleteAllButton';\nimport StylingButton from './StylingDrawerButton';\n\ninterface DefaultDrawProps {\n  showDrawPoint?: boolean;\n  showDrawLine?: boolean;\n  showDrawPolygon?: boolean;\n  showDrawCircle?: boolean;\n  showDrawRectangle?: boolean;\n  showDrawAnnotation?: boolean;\n  showModifyFeatures?: boolean;\n  showUploadFeatures?: boolean;\n  showDownloadFeatures?: boolean;\n  showDeleteFeatures?: boolean;\n  showStyleFeatures?: boolean;\n}\n\nexport interface DrawProps extends Partial<DefaultDrawProps> { }\n\nexport const Draw: React.FC<DrawProps> = ({\n  showDrawPoint,\n  showDrawLine,\n  showDrawPolygon,\n  showDrawCircle,\n  showDrawRectangle,\n  showDrawAnnotation,\n  showModifyFeatures,\n  showUploadFeatures,\n  showDeleteFeatures\n}): JSX.Element => {\n  const [isAttributeDrawerOpen, setIsAttributeDrawerOpen] = useState(false);\n  const [selectedButton, setSelectedButton] = useState<string>();\n\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const onGeoJSONDownload = () => {\n    const clonedFeatures: Feature[] = [];\n    if (map) {\n      const mapProjection = map.getView().getProjection().getCode();\n      const digitizeLayer = DigitizeUtil.getDigitizeLayer(map);\n      const digitizedFeatures = digitizeLayer.getSource()?.getFeatures();\n      if (digitizedFeatures && digitizedFeatures.length > 0) {\n        digitizedFeatures.forEach(feat => {\n          const clonedFeature = feat.clone();\n          clonedFeature.getGeometry()?.transform(mapProjection, 'EPSG:4326');\n          clonedFeatures.push(clonedFeature);\n        });\n        const geoJSON = new GeoJSON().writeFeatures(clonedFeatures);\n\n        const fileToDownload = new Blob([geoJSON], {\n          type: 'application/geo+json'\n        });\n\n        // download the file\n        const url = window.URL.createObjectURL(fileToDownload);\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'exportedFeatures.geojson');\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n  };\n\n  const checkValidityOfUploadFile = (e: ChangeEvent<HTMLInputElement>) => {\n    const uploadedFiles = e.target.files;\n    let validity = false;\n    if (\n      (uploadedFiles && uploadedFiles.length === 1) &&\n      (\n        uploadedFiles[0].type === 'application/geo+json' ||\n        uploadedFiles[0].type === 'application/geojson' ||\n        uploadedFiles[0].name.includes('.geojson') ||\n        uploadedFiles[0].name.includes('.json')\n      )\n    ){\n      validity = true;\n    }\n    return validity;\n  };\n\n  const onUploadChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const uploadedFiles = e.target.files;\n    if (checkValidityOfUploadFile(e)){\n      onGeoJSONUpload(uploadedFiles![0]);\n    } else {\n\n      message.error(t('Draw.uploadError'));\n\n    }\n  };\n\n  const onGeoJSONUpload = (geoJSONFile: File) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      try {\n\n        const geoJSONFeatures = new GeoJSON().readFeatures(fileReader.result);\n\n        if (map) {\n          const mapProjection = map.getView().getProjection().getCode();\n          geoJSONFeatures.forEach(feat => {\n            feat.getGeometry()?.transform('EPSG:4326', mapProjection);\n          });\n          const digitizeLayer = DigitizeUtil.getDigitizeLayer(map);\n          const digitizeLayerSource = digitizeLayer.getSource();\n          digitizeLayerSource?.addFeatures(geoJSONFeatures);\n        }\n        message.success(t('Draw.uploadSuccess'));\n      } catch (err) {\n\n        message.error(t('Draw.uploadError'));\n\n      }\n    };\n\n    fileReader.readAsText(geoJSONFile);\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  const onToggleChange = (childProps: any) => {\n\n    if (childProps) {\n      setSelectedButton(childProps.name);\n    }\n  };\n\n  const onModifyButtonToggle = (active: boolean) => {\n    setIsAttributeDrawerOpen(active);\n  };\n\n  return (\n    <>\n      <ToggleGroup\n        selectedName={selectedButton}\n        onChange={onToggleChange}\n      >\n        {showDrawPoint ? (\n          <DrawButton\n            name=\"draw-point\"\n            drawType=\"Point\"\n            type=\"link\"\n            pressed={false}\n          >\n            <FontAwesomeIcon\n              icon={faCircle}\n            />\n            <span\n              className=\"draw-point\"\n            >\n              {t('Draw.point')}\n            </span>\n          </DrawButton>\n        ) : <></>}\n\n        {showDrawLine ? (\n          <DrawButton\n            name=\"draw-line\"\n            drawType=\"LineString\"\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faGripLines}\n            />\n            <span\n              className=\"draw-line\"\n            >\n              {t('Draw.line')}\n            </span>\n          </DrawButton>\n        ) : <></>}\n\n        {showDrawPolygon ? (\n          <DrawButton\n            name=\"draw-polygon\"\n            drawType=\"Polygon\"\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faShapes}\n            />\n            <span\n              className=\"draw-polygon\"\n            >\n              {t('Draw.polygon')}\n            </span>\n          </DrawButton>\n        ) : <></>}\n\n        {showDrawCircle ? (\n          <DrawButton\n            name=\"draw-circle\"\n            drawType=\"Circle\"\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faCircleNotch}\n            />\n            <span\n              className=\"draw-circle\"\n            >\n              {t('Draw.circle')}\n            </span>\n          </DrawButton>\n        ) : <></>}\n\n        {showDrawRectangle ? (\n          <DrawButton\n            name=\"draw-rectangle\"\n            drawType=\"Rectangle\"\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faSquare}\n            />\n            <span\n              className=\"draw-rectangle\"\n            >\n              {t('Draw.rectangle')}\n            </span>\n          </DrawButton>\n        ) : <></>}\n        {showDrawAnnotation ? (\n          <DrawButton\n            name=\"draw-text\"\n            drawType=\"Text\"\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faFont}\n            />\n            <span\n              className=\"draw-text\"\n            >\n              {t('Draw.text')}\n            </span>\n          </DrawButton>\n        ) : <></>}\n        <StylingButton />\n        {showModifyFeatures ? (\n          <ModifyButton\n            name=\"draw-modify\"\n            type=\"link\"\n            onToggle={onModifyButtonToggle}\n          >\n            <FontAwesomeIcon\n              icon={faPenToSquare}\n            />\n            <span\n              className=\"draw-modify\"\n            >\n              {t('Draw.modify')}\n            </span>\n          </ModifyButton>\n        ) : <></>}\n        {showDeleteFeatures ? (\n          <DeleteButton\n            name=\"draw-delete\"\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faEraser}\n            />\n            <span\n              className=\"draw-delete\"\n            >\n              {t('Draw.delete')}\n            </span>\n          </DeleteButton>\n        ) : <></>}\n        {showDeleteFeatures ? (\n          <DeleteAllButton\n            name=\"draw-delete-all\"\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faTrash}\n            />\n            <span\n              className=\"draw-delete-all\"\n            >\n              {t('DeleteAllButton.deleteAll')}\n            </span>\n          </DeleteAllButton>\n        ):<></>}\n\n        {showUploadFeatures ? (\n          <UploadButton\n            name=\"draw-upload\"\n            onChange={onUploadChange}\n            type=\"link\"\n            aria-label='draw-upload'\n          >\n            <SimpleButton\n              type=\"link\"\n            >\n              <FontAwesomeIcon\n                icon={faUpload}\n              />\n              <span\n                className=\"draw-upload\"\n              >\n                {t('Draw.upload')}\n              </span>\n            </SimpleButton>\n          </UploadButton>\n        ) : <></>}\n\n        {showUploadFeatures ? (\n          <SimpleButton\n            name=\"draw-export\"\n            onClick={onGeoJSONDownload}\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faDownload}\n            />\n            <span\n              className=\"draw-export\"\n            >\n              {t('Draw.export')}\n            </span>\n          </SimpleButton>\n        ) : <></>}\n      </ToggleGroup>\n      <AttributionDrawer\n        open={isAttributeDrawerOpen}\n        onCustomClose={() => setIsAttributeDrawerOpen(false)}\n      />\n    </>\n  );\n};\n\nexport default Draw;\n","import {\n  useCallback,\n  useEffect\n} from 'react';\n\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\nimport OlStyleCircle from 'ol/style/Circle';\nimport OlStyleFill from 'ol/style/Fill';\nimport OlStyleStroke from 'ol/style/Stroke';\nimport OlStyle from 'ol/style/Style';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport type HighlightVectorLayerOpts = {\n  layerName: string;\n};\n\nexport const useHighlightVectorLayer = (opts: HighlightVectorLayerOpts) => {\n  const map = useMap();\n\n  const initVectorLayer = useCallback(async () => {\n    if (!map) {\n      return;\n    }\n\n    if (MapUtil.getLayerByName(map, opts.layerName)) {\n      return;\n    }\n\n    const source = new OlSourceVector();\n\n    const fill = new OlStyleFill({\n      color: 'rgba(255, 255, 255, 0.15)'\n    });\n    const stroke = new OlStyleStroke({\n      color: 'rgba(209, 70, 47, 1)',\n      width: 2\n    });\n    const featureStyle = new OlStyle({\n      fill,\n      stroke,\n      image: new OlStyleCircle({\n        radius: 5,\n        fill,\n        stroke\n      })\n    });\n\n    const layer = new OlLayerVector({\n      source: source,\n      style: featureStyle\n    });\n\n    layer.set('name', opts.layerName);\n\n    map.addLayer(layer);\n  }, [map, opts.layerName]);\n\n  const deinitVectorLayer = useCallback(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, opts.layerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    map.removeLayer(vectorLayer);\n  }, [map, opts.layerName]);\n\n  useEffect(() => {\n    initVectorLayer();\n\n    return () => deinitVectorLayer();\n  }, [deinitVectorLayer, initVectorLayer]);\n};\n\nexport default useHighlightVectorLayer;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faClipboardCheck,\n  faClipboardList,\n  faEdit\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Pagination,\n  PaginationProps,\n  Tooltip\n} from 'antd';\n\nimport copy from 'copy-to-clipboard';\n\nimport {\n  Feature\n} from 'geojson';\nimport _clone from 'lodash/clone';\n\nimport {\n  getUid\n} from 'ol';\nimport { isEmpty as isEmptyOlExtent } from 'ol/extent';\nimport OlFeature from 'ol/Feature';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlGeometry from 'ol/geom/Geometry';\nimport OlLayer from 'ol/layer/Layer';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport { DigitizeUtil } from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport useAppDispatch from '../../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../../hooks/useAppSelector';\nimport {\n  setLayerId,\n  setFeature\n} from '../../../../store/editFeature';\nimport {\n  show as showEditFeatureDrawer\n} from '../../../../store/editFeatureDrawerOpen';\nimport { CopyTools } from '../../../../store/featureInfo';\n\nimport './index.less';\n\nexport type PaginationToolbarProps = {\n  exportFilter?: (propertyName: string, propertyValue: string) => boolean;\n  features: OlFeature[];\n  layer?: OlLayer;\n  selectedFeature: OlFeature;\n} & PaginationProps;\n\nexport const PaginationToolbar: React.FC<PaginationToolbarProps> = ({\n  exportFilter,\n  features,\n  layer,\n  selectedFeature,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useAppDispatch();\n  const map = useMap();\n\n  const activeCopyTools = useAppSelector(state => state.featureInfo.activeCopyTools);\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  const onCopyAsGeoJSONClick = () => {\n    if (!selectedFeature) {\n      return;\n    }\n\n    const selectedFeatureClone = selectedFeature.clone();\n\n    if (exportFilter) {\n      const propertyEntries = Object.entries(selectedFeatureClone.getProperties());\n      const filteredPropertyEntries = propertyEntries.filter(([key, value]) => exportFilter(key, value));\n\n      for (const [key, value] of propertyEntries) {\n        if (value instanceof OlGeometry) {\n          continue;\n        }\n\n        selectedFeatureClone.unset(key);\n      }\n\n      selectedFeatureClone.setProperties(Object.fromEntries(filteredPropertyEntries));\n    }\n\n    copy(new OlFormatGeoJSON().writeFeature(selectedFeatureClone));\n  };\n\n  const onCopyAsObjectClick = () => {\n    if (!selectedFeature) {\n      return;\n    }\n\n    let props = Object.entries(_clone(selectedFeature.getProperties()))\n      .filter(([, value]) => !(value instanceof OlGeometry));\n\n    if (exportFilter) {\n      props = props.filter(([key, value]) => exportFilter(key, value));\n    }\n\n    copy(JSON.stringify(Object.fromEntries(props)));\n  };\n\n  const onEditFeatureBtnClick = () => {\n    if (!layer || !map) {\n      return;\n    }\n\n    const geojsonFeatureString = new OlFormatGeoJSON().writeFeature(selectedFeature);\n\n    try {\n      const geojsonFeature = JSON.parse(geojsonFeatureString) as Feature;\n      const editLayer = DigitizeUtil.getDigitizeLayer(map);\n\n      if (!editLayer) {\n        return;\n      }\n\n      const source = editLayer.getSource();\n\n      if (!source) {\n        return;\n      }\n\n      source.clear();\n      source.addFeature(selectedFeature);\n\n      if (isEmptyOlExtent(source.getExtent())) {\n        return;\n      }\n\n      map.getView().fit(source.getExtent(), {\n        padding: [150, 150, 150, 150]\n      });\n      dispatch(setLayerId(getUid(layer)));\n      dispatch(setFeature(geojsonFeature));\n      dispatch(showEditFeatureDrawer());\n    } catch (error) {\n      Logger.error('Could not parse GeoJSON: ', error);\n    }\n  };\n\n  const isEditButtonVisible = allowedEditMode.includes('CREATE') ||\n    allowedEditMode.includes('DELETE') ||\n    allowedEditMode.includes('UPDATE');\n  const isLayerEditable = layer?.get('editable');\n\n  return (\n    <div\n      className=\"pagination-toolbar\"\n    >\n      <Pagination\n        simple\n        total={features.length}\n        size=\"small\"\n        pageSize={1}\n        {...passThroughProps}\n      />\n      <div\n        className=\"copy-buttons\"\n      >\n        {\n          isEditButtonVisible && (\n            <Tooltip\n              key=\"edit\"\n              title={isLayerEditable ? t('PaginationToolbar.editFeature') : t('PaginationToolbar.editDisabled')}\n            >\n              <Button\n                type=\"primary\"\n                size=\"small\"\n                onClick={onEditFeatureBtnClick}\n                icon={<FontAwesomeIcon icon={faEdit} />}\n                disabled={!isLayerEditable}\n              />\n            </Tooltip>\n          )\n        }\n        {\n          activeCopyTools?.includes(CopyTools.COPY_AS_GEOJSON) && (\n            <Tooltip\n              title={t('PaginationToolbar.copyAsGeoJson')}\n            >\n              <Button\n                type=\"primary\"\n                size=\"small\"\n                onClick={onCopyAsGeoJSONClick}\n                icon={<FontAwesomeIcon icon={faClipboardCheck} />}\n              />\n            </Tooltip>\n          )\n        }\n        {\n          activeCopyTools?.includes(CopyTools.COPY_AS_OBJECT) && (\n            <Tooltip\n              title={t('PaginationToolbar.copyAsObject')}\n            >\n              <Button\n                type=\"primary\"\n                size=\"small\"\n                onClick={onCopyAsObjectClick}\n                icon={<FontAwesomeIcon icon={faClipboardList} />}\n              />\n            </Tooltip>\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default PaginationToolbar;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Tabs,\n  TabsProps\n} from 'antd';\n\nimport _isNil from 'lodash/isNil';\nimport OlFeature from 'ol/Feature';\nimport OlLayer from 'ol/layer/Layer';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  Tab\n} from 'rc-tabs/lib/interface';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  PropertyFormItemReadConfig,\n  PropertyFormTabConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useHighlightVectorLayer from '../../../../hooks/useHighlightVectorLayer';\n\nimport FeatureInfoForm from '../FeatureInfoForm';\nimport PaginationToolbar from '../PaginationToolbar';\n\nimport './index.less';\n\nexport type FeatureInfoTabsProps = TabsProps & {\n  features: OlFeature[];\n  layerName: string;\n  tabConfig?: PropertyFormTabConfig<PropertyFormItemReadConfig>[];\n  layer: OlLayer;\n};\n\nexport const FeatureInfoTabs: React.FC<FeatureInfoTabsProps> = ({\n  features,\n  layerName,\n  layer,\n  tabConfig,\n  ...passThroughProps\n}) => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n  const [activeKey, setActiveKey] = useState<string>('0');\n\n  const map = useMap();\n\n  const vectorLayerName = `selection-layer-${layerName}`;\n\n  useHighlightVectorLayer({\n    layerName: vectorLayerName\n  });\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    setCurrentPage(1);\n\n    if (features.length > 0) {\n      setActiveKey('0');\n      setSelectedFeature(features[0]);\n    }\n  }, [features, map, vectorLayerName]);\n\n  useEffect(() => {\n    if (!selectedFeature || !map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    vectorLayer.getSource()?.addFeature(selectedFeature);\n  }, [selectedFeature, map, vectorLayerName]);\n\n  const onChange = (page: number) => {\n    if (page < 1) {\n      return;\n    }\n\n    setCurrentPage(page);\n    setSelectedFeature(features[page - 1]);\n  };\n\n  if (!tabConfig || !selectedFeature) {\n    return <></>;\n  }\n\n  const exportFilter = (propertyName: string) => {\n    let match = false;\n\n    for (const conf of tabConfig) {\n      if (!conf.children) {\n        continue;\n      }\n\n      for (const child of conf.children) {\n        if (child.propertyName === propertyName) {\n          match = true;\n          break;\n        }\n      }\n    }\n\n    return match;\n  };\n\n  const items = tabConfig\n    .filter(config => !_isNil(config))\n    .map((config, idx) => {\n      return {\n        label: config.title,\n        key: `${idx}`,\n        forceRender: true,\n        children: (\n          <FeatureInfoForm\n            name={config.title}\n            feature={selectedFeature}\n            formConfig={config.children}\n          />\n        )\n      } as Tab;\n    });\n\n  const changeKey = (key: string) => {\n    setActiveKey(key);\n  };\n\n  return (\n    <div\n      className=\"feature-info-tabs\"\n    >\n      <PaginationToolbar\n        current={currentPage}\n        exportFilter={exportFilter}\n        features={features}\n        layer={layer}\n        onChange={onChange}\n        selectedFeature={selectedFeature}\n      />\n      <Tabs\n        items={items}\n        activeKey={activeKey}\n        defaultActiveKey='0'\n        onTabClick={changeKey}\n        {...passThroughProps}\n      />\n    </div>\n  );\n};\n\nexport default FeatureInfoTabs;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  TableProps\n} from 'antd';\n\nimport OlFeature from 'ol/Feature';\nimport OlGeometry from 'ol/geom/Geometry';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport PropertyGrid from '@terrestris/react-geo/dist/Grid/PropertyGrid/PropertyGrid';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useHighlightVectorLayer from '../../../../hooks/useHighlightVectorLayer';\n\nimport PaginationToolbar from '../PaginationToolbar';\n\nimport './index.less';\n\nexport type FeatureInfoPropertyGridProps = {\n  features: OlFeature[];\n  layerName: string;\n} & TableProps<OlFeature>;\n\nexport const FeatureInfoPropertyGrid: React.FC<FeatureInfoPropertyGridProps> = ({\n  features,\n  layerName,\n  ...restProps\n}): JSX.Element => {\n  const [currentPage, setCurrentPage] = useState<number>();\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n  const [blacklistedAttributes, setBlacklistedAttributes] = useState<string[]>([]);\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  const vectorLayerName = `selection-layer-${layerName}`;\n\n  useHighlightVectorLayer({\n    layerName: vectorLayerName\n  });\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    setCurrentPage(1);\n\n    if (features.length > 0) {\n      setSelectedFeature(features[0]);\n    }\n  }, [features, map, vectorLayerName]);\n\n  useEffect(() => {\n    if (!selectedFeature || !map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    const geomAttributes = Object.entries(selectedFeature.getProperties())\n      .filter(([, value]) => value instanceof OlGeometry)\n      .map(([key]) => key);\n\n    setBlacklistedAttributes(geomAttributes);\n\n    vectorLayer.getSource()?.clear();\n    vectorLayer.getSource()?.addFeature(selectedFeature);\n  }, [selectedFeature, map, vectorLayerName]);\n\n  const onChange = (page: number) => {\n    setCurrentPage(page);\n    setSelectedFeature(features[page - 1]);\n  };\n\n  if (!selectedFeature) {\n    return <></>;\n  }\n\n  const attributeFilter = selectedFeature.getKeys()\n    .filter((prop: string | number | boolean) => {\n      return !blacklistedAttributes.includes((prop as string).toLocaleLowerCase());\n    });\n\n  return (\n    <PropertyGrid\n      className=\"property-grid\"\n      feature={selectedFeature}\n      attributeFilter={attributeFilter}\n      size=\"small\"\n      sticky={true}\n      title={() => (\n        <PaginationToolbar\n          features={features}\n          selectedFeature={selectedFeature}\n          current={currentPage}\n          onChange={onChange}\n        />\n      )}\n      columns={[{\n        title: t('FeaturePropertyGrid.key'),\n        dataIndex: 'attributeName',\n        key: 'attributeName',\n        width: '50%',\n        ellipsis: true,\n        defaultSortOrder: 'ascend',\n        sorter: (a, b) => a.key.localeCompare(b.key)\n      }, {\n        title: t('FeaturePropertyGrid.value'),\n        dataIndex: 'attributeValue',\n        key: 'attributeValue',\n        width: '50%',\n        ellipsis: true\n      }]}\n      scroll={{\n        scrollToFirstRowOnChange: true,\n        y: 'calc(100% - 90px)'\n      }}\n      {...restProps}\n    />\n  );\n};\n\nexport default FeatureInfoPropertyGrid;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useCallback, useEffect, useState\n} from 'react';\n\nimport {\n  FormProps, Spin, Tabs\n} from 'antd';\n\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlLayerBase from 'ol/layer/Base';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport { Tab } from 'rc-tabs/lib/interface';\n\nimport { useTranslation } from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport CoordinateInfo, {\n  CoordinateInfoProps,\n  CoordinateInfoState\n} from '@terrestris/react-geo/dist/CoordinateInfo/CoordinateInfo';\nimport { useMap } from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  isWmsLayer, WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport { getBearerTokenHeader } from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport usePlugins from '../../../hooks/usePlugins';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport { isFeatureInfoIntegration } from '../../../plugin';\n\nimport { CopyTools } from '../../../store/featureInfo';\nimport {\n  SelectedFeatures, setSelectedFeatures\n} from '../../../store/selectedFeatures';\n\nimport FeatureInfoTabs from './FeatureInfoTabs';\n\nimport FeatureInfoPropertyGrid from './FeaturePropertyGrid';\n\nimport './index.less';\n\nexport type FeatureInfoConfig = {\n  enabled?: boolean;\n  activeCopyTools?: CopyTools[];\n};\n\nexport type FeatureInfoProps = FormProps & Partial<CoordinateInfoProps>;\n\ntype LayerIndex = {\n  layerName: string;\n  index: number;\n};\n\nexport const FeatureInfo: React.FC<FeatureInfoProps> = ({\n  ...restProps\n}): JSX.Element => {\n\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const plugins = usePlugins();\n  const dispatch = useAppDispatch();\n\n  const [queryLayers, setQueryLayers] = useState<WmsLayer[]>([]);\n  const [activeTabKey, setActiveTabKey] = useState<string | undefined>(undefined);\n  const featureInfoEnabled = useAppSelector(state => state.featureInfo.enabled);\n\n  const layerFilter = (layer: OlLayerBase) => {\n    if (!layer.get('hoverable')) {\n      return false;\n    }\n    if (layer instanceof OlLayerImage && layer.getSource() instanceof OlSourceImageWMS) {\n      return true;\n    }\n    return layer instanceof OlLayerTile && layer.getSource() instanceof OlSourceTileWMS;\n  };\n\n  const updateQueryLayers = useCallback(() => {\n    if (!map) {\n      return;\n    }\n\n    const layerCandidates = MapUtil.getAllLayers(map, layerFilter) as WmsLayer[];\n    setQueryLayers(layerCandidates.filter(l => l.getVisible()));\n  }, [map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    updateQueryLayers();\n\n    const mapLayers = MapUtil.getAllLayers(map, layerFilter) as WmsLayer[];\n    mapLayers.forEach(l => l.on('change:visible', updateQueryLayers));\n\n    return () => {\n      mapLayers.forEach(l => l.un('change:visible', updateQueryLayers));\n    };\n\n  }, [map, updateQueryLayers]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  const changeActiveKey = (key: string) => {\n    setActiveTabKey(key);\n  };\n\n  const findMapLayerIndex = (layerName: string) => {\n    const allLayers = map.getAllLayers();\n\n    return allLayers.findIndex(l => {\n      if (isWmsLayer(l)) {\n        const source = l.getSource();\n        const unqualifiedMapLayerName = getUnqualifiedLayerName(source?.getParams().LAYERS);\n        const unqualifiedLayerName = getUnqualifiedLayerName(layerName);\n\n        return unqualifiedLayerName === unqualifiedMapLayerName;\n      }\n      return false;\n    });\n  };\n\n  const resultRenderer = (coordinateInfoState: CoordinateInfoState) => {\n    const features = coordinateInfoState.features;\n    const loading = coordinateInfoState.loading;\n\n    if (Object.keys(features).length === 0) {\n      return (\n        <span className='usage-hint'>\n          {t('FeatureInfo.usageHint')}\n        </span>\n      );\n    }\n\n    const items: Array<Tab & { index: number }> = [];\n\n    Object.keys(features).forEach(layerName => {\n      let pluginRendererAvailable = false;\n\n      const allLayers = map.getAllLayers();\n\n      const mapLayerIndex = findMapLayerIndex(layerName);\n      const mapLayer = allLayers[mapLayerIndex];\n\n      plugins.forEach(plugin => {\n        if (isFeatureInfoIntegration(plugin.integration) &&\n          ((Array.isArray(plugin.integration.layers) && plugin.integration.layers.includes(layerName)) ||\n            !plugin.integration.layers)) {\n          const {\n            key,\n            wrappedComponent: WrappedPluginComponent\n          } = plugin;\n\n          items.push({\n            label: layerName,\n            index: mapLayerIndex,\n            key: layerName,\n            children: (\n              <WrappedPluginComponent\n                key={key}\n              />\n            )\n          });\n\n          pluginRendererAvailable = true;\n        }\n      });\n\n      if (!pluginRendererAvailable) {\n        items.push({\n          label: mapLayer?.get('name') || layerName,\n          index: mapLayerIndex,\n          key: layerName,\n          children: (\n            <div\n              key={layerName}\n            >\n              {\n                mapLayer?.get('featureInfoFormConfig') ?\n                  <FeatureInfoTabs\n                    tabConfig={mapLayer?.get('featureInfoFormConfig')}\n                    features={features[layerName]}\n                    layerName={layerName}\n                    layer={mapLayer}\n                  /> :\n                  <FeatureInfoPropertyGrid\n                    features={features[layerName]}\n                    layerName={layerName}\n                  />\n              }\n            </div>\n          )\n        });\n      }\n    });\n\n    items.sort((a, b) => b.index - a.index);\n\n    return (\n      <Spin\n        spinning={loading}\n      >\n        <Tabs\n          destroyInactiveTabPane={true}\n          items={items}\n          activeKey={activeTabKey}\n          defaultActiveKey={items[0].key}\n          onTabClick={changeActiveKey}\n        />\n      </Spin>\n    );\n  };\n\n  const getUnqualifiedLayerName = (layerName: string) => {\n    return layerName.split(':').length > 1 ?\n      layerName.split(':')[1] :\n      layerName.split(':')[0];\n  };\n\n  if (!featureInfoEnabled) {\n    return <></>;\n  }\n\n  const getFetchOpts = (layer: WmsLayer) => {\n    return {\n      headers: {\n        ...layer.get('useBearerToken') ? {\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : undefined\n      }\n    };\n  };\n\n  const onSuccess = (coordinateInfoState: CoordinateInfoState) => {\n    const features = coordinateInfoState.features;\n\n    const serializedFeatures: SelectedFeatures = {};\n    Object.entries(features).forEach(entry => {\n      const layerName = entry[0];\n      const selectedFeatures = entry[1];\n\n      serializedFeatures[layerName] = new OlFormatGeoJSON().writeFeatures(selectedFeatures);\n    });\n\n    const layers: LayerIndex[] = Object.keys(features).map(layerName => ({\n      layerName: layerName,\n      index: findMapLayerIndex(layerName)\n    })).sort((a, b) => b.index - a.index);\n\n    if (layers.length > 0) {\n      setActiveTabKey(layers[0].layerName);\n    }\n\n    dispatch(setSelectedFeatures(serializedFeatures));\n  };\n\n  return (\n    <div className='feature-info-panel'>\n      <CoordinateInfo\n        featureCount={10}\n        map={map}\n        queryLayers={queryLayers}\n        resultRenderer={resultRenderer}\n        fetchOpts={getFetchOpts}\n        onSuccess={onSuccess}\n        {...restProps}\n      />\n    </div>\n  );\n};\n\nexport default FeatureInfo;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  faClock\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Divider\n} from 'antd';\n\nimport moment from 'moment';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport TimeSlider, {\n  TimeSliderProps\n} from '@terrestris/react-geo/dist/Slider/TimeSlider/TimeSlider';\n\nimport './index.less';\n\ninterface WmsTimeSliderProps extends Omit<TimeSliderProps, 'min' | 'max' | 'marks' | 'useRange' |\n  'onChange' | 'defaultValue' | 'value' | 'formatString'> {\n  layer: OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>;\n}\n\nexport const WmsTimeSlider: React.FC<WmsTimeSliderProps> = ({\n  layer,\n  ...passThroughProps\n}) => {\n  const [value, setValue] = useState<string | [string, string]>(layer.getSource()?.getParams().TIME);\n  const [min, setMin] = useState<string>();\n  const [max, setMax] = useState<string>();\n  const [marks, setMarks] = useState<Record<string | number, string> | undefined>();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    const dimension = layer.get('dimension');\n\n    if (!dimension) {\n      return;\n    }\n\n    let timeValues;\n    if (dimension.values) {\n      timeValues = dimension.values.split(',');\n    }\n\n    if (!timeValues || timeValues.length === 0) {\n      return;\n    }\n\n    setMin(timeValues[0]);\n    setMax(timeValues[timeValues.length - 1]);\n    setValue(timeValues[timeValues.length - 1]);\n\n    const m: Record<string | number, string> = {};\n    timeValues.forEach((val: string, idx: number) => {\n      m[val] = moment(val).format('YYYY-MM-DD');\n    });\n\n    setMarks(m);\n\n    if (timeValues.default === 'current') {\n      let nearest: [number, string] = [NaN, ''];\n      Object.values(m).forEach(d => {\n        let diff = moment().diff(moment(d));\n\n        if (diff < nearest[0]) {\n          nearest = [diff, d];\n        }\n      });\n\n      setValue(nearest[1]);\n    }\n  }, [layer]);\n\n  const onChange = (val: string | [string, string]) => {\n    setValue(val);\n\n    layer.getSource()?.updateParams({\n      TIME: val\n    });\n  };\n\n  return (\n    <div\n      className=\"wms-time-slider\"\n    >\n      <Divider>\n        <FontAwesomeIcon\n          icon={faClock}\n        />\n        {t('WmsTimeSlider.title')}\n      </Divider>\n      {\n        marks ?\n          <TimeSlider\n            min={min}\n            max={max}\n            marks={marks}\n            value={value}\n            onChange={onChange}\n            step={null}\n            {...passThroughProps}\n          /> :\n          <span>\n            {t('WmsTimeSlider.default')}\n          </span>\n      }\n    </div>\n  );\n};\n\nexport default WmsTimeSlider;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faEllipsisV\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Dropdown,\n  DropDownProps,\n  notification,\n  Spin\n} from 'antd';\nimport {\n  ItemType\n} from 'antd/lib/menu/hooks/useItems';\n\nimport {\n  getUid\n} from 'ol';\nimport OlLayerBase from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport {\n  transformExtent\n} from 'ol/proj';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  MenuInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport LayerUtil from '@terrestris/ol-util/dist/LayerUtil/LayerUtil';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  DownloadConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../../../hooks/useSHOGunAPIClient';\n\nimport {\n  setLayerId,\n  setFeature\n} from '../../../../store/editFeature';\nimport {\n  show as showEditFeatureDrawer\n} from '../../../../store/editFeatureDrawerOpen';\n\nimport {\n  setLayer as setLayerDetailsLayer,\n  show as showLayerDetailsModal\n} from '../../../../store/layerDetailsModal';\n\nexport type LayerTreeContextMenuProps = {\n  layer: OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>;\n  visibleLegendsIds: string[];\n  setVisibleLegendsIds: (ids: string[]) => void;\n} & Partial<DropDownProps>;\n\nexport const LayerTreeContextMenu: React.FC<LayerTreeContextMenuProps> = ({\n  layer,\n  visibleLegendsIds,\n  setVisibleLegendsIds,\n  ...restProps\n}): JSX.Element => {\n\n  const [settingsVisible, setSettingsVisible] = useState<boolean>(false);\n  const [extentLoading, setExtentLoading] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  const downloadConfig: DownloadConfig[] = layer.get('downloadConfig') ?? null;\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  const onContextMenuItemClick = (evt: MenuInfo): void => {\n    if (evt?.key.startsWith('downloadLayer')) {\n      const url = evt.key.split('|')[1];\n      downloadLayer(decodeURI(url));\n    }\n    switch (evt?.key) {\n      case 'zoomToExtent':\n        zoomToLayerExtent();\n        break;\n      case 'removeExternal':\n        removeExternalLayer();\n        break;\n      case 'toggleLegend':\n        const legendId: string = getUid(layer);\n        const newLegendIds = [...visibleLegendsIds];\n        if (newLegendIds.includes(legendId)) {\n          newLegendIds.splice(newLegendIds.indexOf(legendId), 1);\n        } else {\n          newLegendIds.push(legendId);\n        }\n        setVisibleLegendsIds(newLegendIds);\n        break;\n      case 'editLayer':\n        dispatch(setFeature(null));\n        dispatch(setLayerId(getUid(layer)));\n        dispatch(showEditFeatureDrawer());\n        break;\n      case 'layerDetails':\n        dispatch(setLayerDetailsLayer(getUid(layer)));\n        dispatch(showLayerDetailsModal());\n        break;\n      default:\n        break;\n    }\n    setSettingsVisible(false);\n  };\n\n  const zoomToLayerExtent = async (): Promise<void> => {\n    if (!map) {\n      return;\n    }\n\n    setExtentLoading(true);\n\n    try {\n      let extent = await LayerUtil.getExtentForLayer(layer, {\n        headers: layer.get('useBearerToken') ? {\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : {}\n      });\n      extent = transformExtent(extent, 'EPSG:4326', map.getView().getProjection());\n      map.getView().fit(extent);\n    } catch (error) {\n      Logger.error(error);\n      notification.error({\n        message: t('LayerTreeContextMenu.extentError')\n      });\n    } finally {\n      setExtentLoading(false);\n    }\n  };\n\n  const getParentLayerGroups = (l: OlLayerBase): OlLayerGroup[] => {\n    if (!map) {\n      return [];\n    }\n\n    const layerGroups = getAllLayerGroups(map.getLayerGroup())\n      .filter(layerGroup => layerGroup.getLayers().getArray().includes(l));\n\n    return layerGroups;\n  };\n\n  const getAllLayerGroups = (layerGroup: OlLayerGroup): OlLayerGroup[] => {\n    const layerGroups = [layerGroup];\n\n    for (const l of layerGroup.getLayers().getArray()) {\n      if (l instanceof OlLayerGroup) {\n        layerGroups.push(...getAllLayerGroups(l));\n      }\n    }\n\n    return layerGroups;\n  };\n\n  const removeLayer = (l: OlLayerBase) => {\n    const parentGroups = getParentLayerGroups(l);\n\n    parentGroups.forEach(parentGroup => parentGroup.getLayers().remove(l));\n  };\n\n  const removeExternalLayer = () => {\n    if (!map) {\n      return;\n    }\n\n    removeLayer(layer);\n\n    const externalLayerGroup = MapUtil.getLayerByName(map, t('AddLayerModal.externalWmsFolder')) as OlLayerGroup;\n    const uploadedLayerGroup = MapUtil.getLayerByName(map, t('UploadDataModal.uploadedDataFolder')) as OlLayerGroup;\n\n    if (externalLayerGroup && externalLayerGroup.getLayers().getLength() === 0) {\n      removeLayer(externalLayerGroup);\n    }\n\n    if (uploadedLayerGroup && uploadedLayerGroup.getLayers().getLength() === 0) {\n      removeLayer(uploadedLayerGroup);\n    }\n  };\n\n  const downloadLayer = async (url: string) => {\n    if (!layer) {\n      return;\n    }\n    const reqOpts = {\n      method: 'GET',\n      headers: {\n        ...layer.get('useBearerToken') ? {\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : undefined\n      }\n    };\n\n    const res = await fetch(url, reqOpts);\n    const blob = await res.blob();\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.setAttribute('download', layer.get('name'));\n    a.click();\n  };\n\n  let dropdownMenuItems: ItemType[] = [];\n\n  if (isWmsLayer(layer)) {\n    dropdownMenuItems.push({\n      label: (\n        <Spin\n          spinning={extentLoading}\n        >\n          {t('LayerTreeContextMenu.layerZoomToExtent')}\n        </Spin>\n      ),\n      key: 'zoomToExtent'\n    });\n  }\n\n  if (isWmsLayer(layer) && layer.getVisible()) {\n    const legendVisible = visibleLegendsIds.includes(getUid(layer));\n\n    dropdownMenuItems.push({\n      label: legendVisible ? t('LayerTreeContextMenu.hideLegend') : t('LayerTreeContextMenu.showLegend'),\n      key: 'toggleLegend'\n    });\n  }\n\n  if (layer.get('isExternalLayer') || layer.get('isUploadedLayer')) {\n    dropdownMenuItems.push({\n      label: t('LayerTreeContextMenu.removeLayer'),\n      key: 'removeExternal'\n    });\n  }\n\n  if (downloadConfig) {\n    const downloadItems = downloadConfig.map((dlConfig: DownloadConfig) => {\n      return {\n        label: t('LayerTreeContextMenu.downloadLayer', {\n          formatName: dlConfig.formatName ?? 'XML'\n        }),\n        key: `downloadLayer|${encodeURI(dlConfig.downloadUrl)}`\n      };\n    });\n    dropdownMenuItems.push(...downloadItems);\n  }\n\n  if (\n    layer.get('editable') &&\n    (allowedEditMode.includes('CREATE') ||\n      allowedEditMode.includes('UPDATE') ||\n      allowedEditMode.includes('DELETE'))\n  ) {\n    dropdownMenuItems.push({\n      label: t('LayerTreeContextMenu.editLayer'),\n      key: 'editLayer'\n    });\n  }\n\n  dropdownMenuItems.push({\n    label: t('LayerTreeContextMenu.layerDetails'),\n    key: 'layerDetails'\n  });\n\n  return (\n    <div\n      aria-label='layer-context'\n    >\n      <Dropdown\n        menu={{\n          items: dropdownMenuItems,\n          onClick: onContextMenuItemClick\n        }}\n        placement=\"bottomLeft\"\n        onOpenChange={setSettingsVisible}\n        open={settingsVisible}\n        trigger={['click']}\n        {...restProps}\n      >\n        <FontAwesomeIcon icon={faEllipsisV} />\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default LayerTreeContextMenu;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport './index.less';\n\nexport const LoadingIndicator: React.FC = (): JSX.Element => {\n  return (\n    <div className=\"layer-node-title-loading-animation\">\n      <span className=\"dot-one\">.</span>\n      <span className=\"dot-two\">.</span>\n      <span className=\"dot-three\">.</span>\n    </div>\n  );\n};\n\nexport default LoadingIndicator;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\n\nimport {\n  getUid\n} from 'ol';\nimport BaseEvent from 'ol/events/Event';\nimport OlBaseLayer from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayer from 'ol/layer/Layer';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSource from 'ol/source/Source';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport RgLayerTree, {\n  LayerTreeProps as RgLayerTreeProps\n} from '@terrestris/react-geo/dist/LayerTree/LayerTree';\nimport Legend from '@terrestris/react-geo/dist/Legend/Legend';\nimport LayerTransparencySlider from '@terrestris/react-geo/dist/Slider/LayerTransparencySlider/LayerTransparencySlider';\n\nimport LayerType from '@terrestris/shogun-util/dist/model/enum/LayerType';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport WmsTimeSlider from '../../WmsTimeSlider';\n\nimport LayerTreeContextMenu from './LayerTreeContextMenu';\n\nimport './index.less';\nimport LoadingIndicator from './LoadingIndicator';\n\nexport type LayerTreeProps = Partial<RgLayerTreeProps>;\n\nexport type LayerTileLoadCounter = {\n  [key: string]: {\n    loading: number;\n    loaded: number;\n    percent: number;\n  };\n};\n\nexport const LayerTree: React.FC<LayerTreeProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const {\n    t\n  } = useTranslation();\n\n  const [visibleLegendsIds, setVisibleLegendsIds] = useState<string[]>([]);\n  const [layerTileLoadCounter, setLayerTileLoadCounter] = useState<LayerTileLoadCounter>({});\n\n  const initialLayersUid = map?.getAllLayers().map(l => getUid(l));\n\n  const registerTileLoadHandler = useCallback(() => {\n    if (!map) {\n      return;\n    }\n\n    const allLayers = MapUtil.getAllLayers(map);\n    allLayers.forEach(layer => {\n      if (layer instanceof OlLayer) {\n        const source = layer.getSource();\n        if (source instanceof OlSourceTileWMS) {\n          if (!source.hasListener('tileloadstart')) {\n            source.on('tileloadstart', tileLoadStartListener);\n          }\n          if (!source.hasListener('tileloadend') && !source.hasListener('tileloaderror')) {\n            source.on(['tileloadend', 'tileloaderror'], tileLoadEndListener);\n          }\n        }\n        if (source instanceof OlSourceImageWMS) {\n          if (!source.hasListener('imageloadstart')) {\n            source.on('imageloadstart', tileLoadStartListener);\n          }\n          if (!source.hasListener('imageloadend') && !source.hasListener('imageloaderror')) {\n            source.on(['imageloadend', 'imageloaderror'], tileLoadEndListener);\n          }\n        }\n      }\n    });\n  }, [map]);\n\n  const checkListeners = useCallback(() => {\n    const activeLayers = map?.getAllLayers().map(l => getUid(l));\n\n    if (activeLayers?.length !== initialLayersUid?.length) {\n      registerTileLoadHandler();\n    }\n  }, [map, initialLayersUid, registerTileLoadHandler]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    registerTileLoadHandler();\n\n    map.getLayers().on('change', checkListeners);\n\n    return () => {\n      const allLayers = MapUtil.getAllLayers(map);\n      allLayers.forEach(layer => {\n        if (layer instanceof OlLayer) {\n          const source = layer.getSource();\n          if (source.hasListener('tileloadstart')) {\n            source.un('tileloadstart', tileLoadStartListener);\n          }\n          if (source.hasListener('tileloadend')) {\n            source.un('tileloadend', tileLoadEndListener);\n          }\n          if (source.hasListener('tileloaderror')) {\n            source.un('tileloaderror', tileLoadEndListener);\n          }\n        }\n      });\n      map.getLayers().un('change', checkListeners);\n    };\n  }, [map, registerTileLoadHandler, checkListeners]);\n\n  const tileLoadStartListener = (evt: BaseEvent) => {\n    setLayerTileLoadCounter((counter: LayerTileLoadCounter) => {\n      const uid = parseInt(getUid(evt.target), 10);\n      const update = { ...counter };\n      // reset when load was finished\n      if (update[uid] && update[uid].loaded >= update[uid].loading) {\n        update[uid].loading = 1;\n        update[uid].loaded = 0;\n        update[uid].percent = 0;\n        return update;\n      }\n      if (!update[uid]) {\n        update[uid] = {\n          loading: 0,\n          loaded: 0,\n          percent: 0\n        };\n      }\n      update[uid].loading = Number.isInteger(update[uid].loading) ?\n        update[uid].loading + 1 : 1;\n      return update;\n    });\n  };\n\n  const tileLoadEndListener = (evt: BaseEvent | Event) => {\n    setLayerTileLoadCounter((counter: LayerTileLoadCounter) => {\n      const uid = parseInt(getUid(evt.target), 10);\n      const update = { ...counter };\n      if (!update[uid]) {\n        update[uid] = {\n          loading: 0,\n          loaded: 0,\n          percent: 0\n        };\n      }\n      update[uid].loaded = Number.isInteger(update[uid].loaded) ?\n        update[uid].loaded + 1 : 1;\n      const percent = Math.round(update[uid].loaded / update[uid].loading * 100);\n      if (percent > update[uid].percent) {\n        update[uid].percent = percent;\n      }\n      return update;\n    });\n  };\n\n  const treeFilterFunction = (layer: OlLayer<OlSource> | OlLayerGroup) => {\n    if ((layer as OlLayerGroup).getLayers) {\n      return !layer.get('hideInLayerTree');\n    }\n\n    return !((layer as OlLayer).getSource && ((layer as OlLayer).getSource() as OlSourceVector)?.forEachFeature);\n  };\n\n  const treeNodeTitleRenderer = (layer: OlBaseLayer) => {\n    if (!map) {\n      return;\n    }\n\n    const mapView = map.getView();\n    const unit = mapView.getProjection().getUnits() || 'm';\n    const resolution = mapView.getResolution();\n    const scale = resolution ? MapUtil.getScaleForResolution(resolution, unit) : undefined;\n    const percent = layer instanceof OlLayer && getUid(layer.getSource()) ?\n      layerTileLoadCounter[getUid(layer.getSource())]?.percent : 100;\n\n    if (layer instanceof OlLayerGroup) {\n      return (\n        <div\n          aria-label='layer-group'\n        >\n          {layer.get('name')}\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div\n            className=\"tree-node-header\"\n            aria-label=\"tree-node-header\"\n          >\n            <span\n              aria-label='layer-name'\n            >\n              {layer.get('name')}\n              {percent < 100 && <LoadingIndicator /> }\n            </span>\n            {\n              (layer instanceof OlLayerTile || layer instanceof OlLayerImage) && (\n                <div\n                  aria-label='layer-context-menu'\n                >\n                  <LayerTreeContextMenu\n                    layer={layer}\n                    visibleLegendsIds={visibleLegendsIds}\n                    setVisibleLegendsIds={setVisibleLegendsIds}\n                  />\n                </div>\n              )\n            }\n\n          </div>\n          {\n            layer.get('visible') &&\n            <div\n              className=\"layer-transparency\"\n              aria-label='transparency-slider'\n            >\n              <LayerTransparencySlider\n                tooltip={{\n                  formatter: val => `${t('LayerTree.transparency')}: ${val}%`\n                }}\n                layer={layer}\n              />\n            </div>\n          }\n          {\n            (layer.get('visible') && layer.get('type') as LayerType === 'WMSTIME') &&\n            <div className=\"layer-time-slider\">\n              <WmsTimeSlider\n                layer={layer as OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>}\n              />\n            </div>\n          }\n          {\n            (layer.get('visible') && visibleLegendsIds.includes(getUid(layer))) &&\n            <Legend\n              layer={layer as OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>}\n              errorMsg={t('LayerTree.noLegendAvailable')}\n              extraParams={{\n                scale,\n                LEGEND_OPTIONS: 'fontAntiAliasing:true;forceLabels:on',\n                TRANSPARENT: true\n              }}\n              headers={\n                layer.get('useBearerToken') ?\n                  {\n                    ...getBearerTokenHeader(client?.getKeycloak())\n                  } :\n                  {}\n              }\n            />\n          }\n        </>\n      );\n    }\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <RgLayerTree\n      aria-label=\"layertree\"\n      className=\"layertree\"\n      map={map}\n      nodeTitleRenderer={treeNodeTitleRenderer}\n      filterFunction={treeFilterFunction}\n      draggable\n      {...restProps}\n    />\n  );\n};\n\nexport default LayerTree;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faDrawPolygon,\n  faPenRuler\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MeasureButton from '@terrestris/react-geo/dist/Button/MeasureButton/MeasureButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\ninterface DefaultMeasureProps {\n  showMeasureDistance?: boolean;\n  showMeasureArea?: boolean;\n}\n\nexport interface MeasureProps extends Partial<DefaultMeasureProps> { }\n\nexport const Measure: React.FC<MeasureProps> = ({\n  showMeasureDistance,\n  showMeasureArea\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <ToggleGroup>\n      {showMeasureDistance ? (\n        <MeasureButton\n          geodesic\n          name=\"line\"\n          map={map}\n          measureType=\"line\"\n          type=\"link\"\n          continueLineMsg={t('Measure.clicktodrawline')}\n        >\n          <FontAwesomeIcon icon={faPenRuler} />\n          <span className=\"measure-text\">{t('Measure.line')}</span>\n        </MeasureButton>\n      ) : <></>}\n\n      {showMeasureArea ? (\n        <MeasureButton\n          geodesic\n          name=\"poly\"\n          map={map}\n          measureType=\"polygon\"\n          type=\"link\"\n          continuePolygonMsg={t('Measure.clicktodrawarea')}\n        >\n          <FontAwesomeIcon icon={faDrawPolygon} />\n          <span className=\"measure-text\">{t('Measure.area')}</span>\n        </MeasureButton>\n      ) : <></>}\n\n    </ToggleGroup>\n  );\n};\n\nexport default Measure;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport type {\n  IconDefinition\n} from '@fortawesome/fontawesome-common-types';\n\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faPalette,\n  faFileDownload,\n  faLanguage,\n  faMousePointer,\n  faPlus,\n  faRuler,\n  faShareNodes,\n  faStream,\n  faUpload\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Collapse,\n  CollapsePanelProps,\n  Tooltip\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _toArray from 'lodash/toArray';\n\nconst { Panel } = Collapse;\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport usePlugins from '../../hooks/usePlugins';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nimport {\n  isToolMenuIntegration\n} from '../../plugin';\n\nimport {\n  show as showAdd\n} from '../../store/addLayerModal';\nimport { setFeatureInfoEnabled } from '../../store/featureInfo';\nimport {\n  setActiveKeys\n} from '../../store/toolMenu';\nimport {\n  show as showUpload\n} from '../../store/uploadDataModal';\n\nimport LanguageSelect from '../LanguageSelector';\nimport Permalink from '../Permalink';\nimport PrintForm from '../PrintForm';\n\nimport Draw from './Draw';\nimport FeatureInfo from './FeatureInfo';\nimport LayerTree from './LayerTree';\n\nimport Measure from './Measure';\nimport './index.less';\n\nexport interface TitleEventEntity {\n  key: string;\n  domEvent: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>;\n}\n\nexport type ToolPanelConfig = {\n  icon: IconDefinition;\n  title: string;\n  wrappedComponent: JSX.Element;\n};\n\nexport type ToolMenuProps = Partial<CollapsePanelProps>;\n\nexport const ToolMenu: React.FC<ToolMenuProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n  const map = useMap();\n\n  const plugins = usePlugins();\n\n  const dispatch = useAppDispatch();\n  const availableTools = useAppSelector(state => state.toolMenu.availableTools);\n  const activeKeys = useAppSelector(state => state.toolMenu.activeKeys);\n\n  const client = useSHOGunAPIClient();\n  const keycloak = client?.getKeycloak();\n\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const [menuTools, setMenuTools] = useState<string[]>([]);\n\n  useEffect(() => {\n    const mobileQuery = window.matchMedia('only screen and (max-width: 450px) and (orientation: portrait),' +\n      'only screen and (max-width: 750px) and (orientation: landscape), only screen and (max-width: 580px)');\n    const mobileNavigatorRegEx = new RegExp('/Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle' +\n      '|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/');\n    const isMobile = mobileQuery.matches || mobileNavigatorRegEx.test(window.navigator.userAgent);\n\n    if (isMobile) {\n      setCollapsed(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (menuTools.length < 1) {\n      if (availableTools.includes('default')) {\n        setMenuTools([\n          'measure_tools',\n          'draw_tools',\n          'feature_info',\n          'print',\n          'tree',\n          'permalink',\n          'language_selector'\n        ]);\n      } else {\n        setMenuTools(availableTools);\n      }\n    }\n  }, [menuTools, availableTools]);\n\n  useEffect(() => {\n    const exclusiveTools = [\n      'print',\n      'measure_tools',\n      'draw_tools',\n      'feature_info'\n    ];\n\n    const activeExclusiveTools = exclusiveTools.filter(tool =>\n      activeKeys.includes(tool)\n    );\n\n    if (activeExclusiveTools.length > 1) {\n      const lastExclusiveTool = activeKeys\n        .slice(0, activeKeys.length - 1)\n        .reverse()\n        .find(tool => exclusiveTools.includes(tool));\n\n      if (lastExclusiveTool) {\n        dispatch(\n          setActiveKeys(activeKeys.filter(keys => keys !== lastExclusiveTool))\n        );\n      }\n    }\n\n    dispatch(setFeatureInfoEnabled(activeKeys.includes('feature_info')));\n  }, [activeKeys, dispatch]);\n\n  const getToolPanels = (): JSX.Element[] => {\n\n    const panels: JSX.Element[] = [];\n\n    menuTools.forEach((tool: string) => {\n      const toolPanelConfig: ToolPanelConfig | undefined = getToolPanelConfig(tool);\n\n      if (!toolPanelConfig) {\n        return;\n      }\n      const {\n        icon,\n        title,\n        wrappedComponent\n      } = toolPanelConfig;\n\n      const panel = (\n        <Panel\n          className={tool}\n          header={\n            <>\n              {icon ? <FontAwesomeIcon icon={icon} /> : undefined}\n              <span>{title}</span>\n            </>\n          }\n          key={tool}\n        >\n          {wrappedComponent}\n        </Panel>\n      );\n      panels.push(panel);\n    });\n\n    if (plugins) {\n      plugins.forEach(plugin => {\n        if (isToolMenuIntegration(plugin.integration)) {\n          const {\n            key,\n            wrappedComponent: WrappedPluginComponent,\n            integration: {\n              placement,\n              label = 'Plugin',\n              insertionIndex,\n              icon,\n              ...passThroughProps\n            }\n          } = plugin;\n\n          panels.splice(insertionIndex || 0, 0, (\n            <Panel\n              header={\n                <>\n                  {icon ? <FontAwesomeIcon icon={icon} /> : undefined}\n                  <span>{t(label)}</span>\n                </>\n              }\n              key={key}\n              {...passThroughProps}\n            >\n              <WrappedPluginComponent />\n            </Panel>\n          ));\n        }\n      });\n    }\n    return panels;\n  };\n\n  const getToolPanelConfig = (tool: string): ToolPanelConfig | undefined => {\n    switch (tool) {\n      case 'measure_tools':\n        return {\n          icon: faRuler,\n          title: t('ToolMenu.measure'),\n          wrappedComponent: (\n            <Measure\n              showMeasureDistance={\n                availableTools.includes('default') || availableTools.includes('measure_tools_distance')\n              }\n              showMeasureArea={availableTools.includes('default') || availableTools.includes('measure_tools_area')}\n            />\n          )\n        };\n      case 'draw_tools':\n        return {\n          icon: faPalette,\n          title: t('ToolMenu.draw'),\n          wrappedComponent: (\n            <Draw\n              showDrawPoint={availableTools.includes('default') || availableTools.includes('draw_tools_point')}\n              showDrawLine={availableTools.includes('default') || availableTools.includes('draw_tools_line')}\n              showDrawPolygon={availableTools.includes('default') || availableTools.includes('draw_tools_polygon')}\n              showDrawCircle={availableTools.includes('default') || availableTools.includes('draw_tools_circle')}\n              showDrawRectangle={availableTools.includes('default') || availableTools.includes('draw_tools_rectangle')}\n              showDrawAnnotation={\n                availableTools.includes('default') || availableTools.includes('draw_tools_annotation')\n              }\n              showModifyFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_modify')}\n              showUploadFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_upload')}\n              showDownloadFeatures={\n                availableTools.includes('default') || availableTools.includes('draw_tools_download')\n              }\n              showDeleteFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_delete')}\n              showStyleFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_style')}\n            />\n          )\n        };\n      case 'feature_info':\n        return {\n          icon: faMousePointer,\n          title: t('ToolMenu.featureInfo'),\n          wrappedComponent: (\n            <FeatureInfo />\n          )\n        };\n      case 'print':\n        return {\n          icon: faFileDownload,\n          title: t('ToolMenu.print'),\n          wrappedComponent: map ? (\n            <PrintForm\n              active={activeKeys.includes('print')}\n              layerBlackList={[\n                'react-geo_measure',\n                'hoverVectorLayer'\n              ]}\n            />\n          ) : <></>\n        };\n      case 'tree':\n        return {\n          icon: faStream,\n          title: t('ToolMenu.layertree'),\n          wrappedComponent: (\n            <div className='tree-wrapper'>\n              <LayerTree />\n              <Button\n                className='add-wms-button tool-menu-button'\n                icon={<FontAwesomeIcon icon={faPlus} />}\n                onClick={() => dispatch(showAdd())}\n              >\n                {t('ToolMenu.addWms')}\n              </Button>\n              {\n                keycloak && ClientConfiguration.geoserver?.upload?.authorizedRoles?.some(\n                  role => keycloak.hasResourceRole(role, keycloak.clientId)) && (\n                  <Button\n                    className='upload-data-button tool-menu-button'\n                    icon={<FontAwesomeIcon icon={faUpload} />}\n                    onClick={() => dispatch(showUpload())}\n                  >\n                    {t('ToolMenu.uploadData')}\n                  </Button>\n                )\n              }\n            </div>\n          )\n        };\n      case 'permalink':\n        return {\n          icon: faShareNodes,\n          title: t('Permalink.title'),\n          wrappedComponent: <Permalink />\n        };\n      case 'language_selector':\n        return {\n          icon: faLanguage,\n          title: t('ToolMenu.languageSelect'),\n          wrappedComponent: <LanguageSelect />\n        };\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div\n      aria-label=\"tool-menu\"\n      className={`tool-menu ${collapsed ? 'collapsed' : ''}`}\n    >\n      <Collapse\n        expandIconPosition='end'\n        activeKey={activeKeys}\n        destroyInactivePanel={true}\n        onChange={(keys: string[] | string) => {\n          setCollapsed(false);\n          dispatch(setActiveKeys(_toArray(keys)));\n        }}\n        {...restProps}\n      >\n        {getToolPanels()}\n      </Collapse>\n      <Tooltip\n        placement={'right'}\n        title={collapsed ? t('ToolMenu.expand') : t('ToolMenu.collapse')}\n      >\n        <Button\n          className=\"collapse-btn\"\n          aria-label=\"collapse-button\"\n          icon={\n            collapsed ?\n              <FontAwesomeIcon icon={faChevronRight} /> :\n              <FontAwesomeIcon icon={faChevronLeft} />\n          }\n          onClick={() => {\n            dispatch(setActiveKeys([]));\n            setCollapsed(!collapsed);\n          }}\n        />\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default ToolMenu;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faUpload\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Alert,\n  Modal,\n  ModalProps,\n  Spin,\n  Upload\n} from 'antd';\n\nconst { Dragger } = Upload;\n\nimport {\n  RcFile,\n  UploadChangeParam,\n  UploadFile\n} from 'antd/lib/upload/interface';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport TileLayer from 'ol/layer/Tile';\nimport TileWMSSource from 'ol/source/TileWMS';\n\nimport {\n  UploadRequestOption\n} from 'rc-upload/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Shapefile\n} from 'shapefile.js';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport {\n  hide\n} from '../../store/uploadDataModal';\n\nimport './index.less';\n\ntype FeatureTypeAttribute = {\n  name: string;\n  minOccurs: number;\n  maxOccurs: number;\n  nillable: boolean;\n  binding?: string | null;\n  length?: number;\n};\n\ntype FeatureTypeAttributes = {\n  attribute: FeatureTypeAttribute[];\n};\n\nexport type LayerUploadOptions = {\n  baseUrl: string;\n  workspace: string;\n  storeName: string;\n  layerName: string;\n  file: RcFile;\n};\n\nexport type LayerUploadResponse = {\n  layerName: string;\n  workspace: string;\n  baseUrl: string;\n};\n\nexport type UploadDataModalProps = Partial<ModalProps>;\n\nexport const UploadDataModal: React.FC<UploadDataModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [uploadError, setUploadError] = useState('');\n  const [uploadSuccess, setUploadSuccess] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n\n  const isModalVisible = useAppSelector(state => state.uploadDataModal.visible);\n  const user = useAppSelector((state) => state.user);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const closeModal = () => {\n    setUploadError('');\n    setUploadSuccess('');\n    dispatch(hide());\n  };\n\n  const addLayer = (layer: TileLayer<TileWMSSource>) => {\n    if (!map) {\n      return;\n    }\n\n    const targetFolderName = t('UploadDataModal.uploadedDataFolder');\n    let targetGroup = MapUtil.getLayerByName(map, targetFolderName) as OlLayerGroup;\n\n    if (!targetGroup) {\n      targetGroup = new OlLayerGroup({\n        layers: [],\n        properties: {\n          name: targetFolderName\n        }\n      });\n      const existingGroups = map.getLayerGroup().getLayers();\n      existingGroups.insertAt(existingGroups?.getLength() || 0, targetGroup);\n    }\n\n    if (!targetGroup.getLayers().getArray().includes(layer)) {\n      targetGroup.getLayers().push(layer);\n    }\n  };\n\n  const onBeforeFileUpload = (file: RcFile) => {\n    const maxSize = ClientConfiguration.geoserver?.upload?.limit || 200000000;\n    const fileType = file.type;\n    const fileSize = file.size;\n\n    setUploadError('');\n    setUploadSuccess('');\n\n    if (fileSize > maxSize) {\n      setUploadError(t('UploadDataModal.error.maxSize', {\n        maxSize: maxSize / 1000000\n      }));\n\n      return false;\n    }\n\n    const supportedFormats = ['application/zip', 'image/tiff'];\n    if (!supportedFormats.includes(fileType)) {\n      setUploadError(t('UploadDataModal.error.supportedFormats', {\n        supportedFormats: supportedFormats.join(', ')\n      }));\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const uploadGeoTiff = async (options: LayerUploadOptions): Promise<void> => {\n    const {\n      baseUrl,\n      workspace,\n      storeName,\n      layerName,\n      file\n    } = options;\n\n    const coverageStoreUrl = `${baseUrl}/rest/workspaces/${workspace}/coveragestores/` +\n      `${storeName}/file.geotiff?configure=none`;\n\n    const coverageStoreResponse = await fetch(coverageStoreUrl, {\n      method: 'PUT',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'image/tiff'\n      },\n      body: file\n    });\n\n    if (!coverageStoreResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n\n    const coverageUrl = `${baseUrl}/rest/workspaces/${workspace}/coveragestores/${storeName}/coverages`;\n\n    const coverageResponse = await fetch(coverageUrl, {\n      method: 'POST',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        coverage: {\n          enabled: true,\n          name: layerName,\n          nativeName: layerName,\n          title: layerName,\n          keywords: {\n            // eslint-disable-next-line quote-props\n            'string': [\n              'User upload',\n              `Uploaded by ${user.providerDetails?.username}`\n            ]\n          }\n        }\n      })\n    });\n\n    if (!coverageResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n  };\n\n  const uploadShapeZip = async (options: LayerUploadOptions): Promise<void> => {\n    const {\n      baseUrl,\n      workspace,\n      storeName,\n      layerName,\n      file\n    } = options;\n\n    const shp = await Shapefile.load(file);\n\n    let featureTypeName = '';\n    let featureTypeAttributes: FeatureTypeAttributes = {\n      attribute: []\n    };\n\n    if (Object.entries(shp).length !== 1) {\n      throw new Error(t('UploadDataModal.error.zipContent'));\n    }\n\n    Object.entries(shp).forEach(([k, v]) => {\n      featureTypeName = k;\n\n      const dbfContent = v.parse('dbf', {\n        properties: false\n      });\n\n      featureTypeAttributes.attribute = dbfContent.fields.map(field => ({\n        name: field.name,\n        minOccurs: 0,\n        maxOccurs: 1,\n        nillable: true,\n        binding: getAttributeType(field.type),\n        length: field.length\n      }));\n\n      const shxContent = v.parse('shx');\n\n      featureTypeAttributes.attribute.push({\n        name: 'the_geom',\n        minOccurs: 0,\n        maxOccurs: 1,\n        nillable: true,\n        binding: getGeometryType(shxContent.header.type)\n      });\n    });\n\n    const url = `${baseUrl}/rest/workspaces/${workspace}/datastores/` +\n      `${storeName}/file.shp?configure=none`;\n\n    const response = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/zip'\n      },\n      body: file\n    });\n\n    if (!response.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n\n    const featureTypeUrl = `${baseUrl}/rest/workspaces/${workspace}/datastores/${storeName}/featuretypes`;\n\n    const featureTypeResponse = await fetch(featureTypeUrl, {\n      method: 'POST',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        featureType: {\n          enabled: true,\n          name: layerName,\n          nativeName: featureTypeName,\n          title: layerName,\n          attributes: featureTypeAttributes,\n          keywords: {\n            // eslint-disable-next-line quote-props\n            'string': [\n              'User upload',\n              `Uploaded by ${user.providerDetails?.username}`\n            ]\n          }\n        }\n      })\n    });\n\n    if (!featureTypeResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n  };\n\n  const onFileUploadAction = async (options: UploadRequestOption<LayerUploadResponse>) => {\n    const {\n      onError,\n      onSuccess,\n      file\n    } = options;\n\n    const splittedFileName = (file as RcFile).name.split('.');\n    const fileType = (file as RcFile).type;\n    const geoServerBaseUrl = ClientConfiguration.geoserver?.base || '/geoserver';\n    const workspace = ClientConfiguration.geoserver?.upload?.workspace || 'SHOGUN';\n    const layerName = `${splittedFileName[0]}_${Date.now()}`.toUpperCase();\n\n    const uploadData = {\n      file: file as RcFile,\n      baseUrl: geoServerBaseUrl,\n      workspace: workspace,\n      storeName: layerName,\n      layerName: layerName\n    };\n\n    try {\n      if (fileType === 'image/tiff') {\n        await uploadGeoTiff(uploadData);\n      }\n\n      if (fileType === 'application/zip') {\n        await uploadShapeZip(uploadData);\n      }\n\n      if (onSuccess) {\n        onSuccess({\n          baseUrl: geoServerBaseUrl,\n          workspace: workspace,\n          layerName: layerName\n        });\n      }\n    } catch (error) {\n      if (onError) {\n        onError({\n          name: 'UploadError',\n          message: (error instanceof Error) ? error.message : t('UploadDataModal.error.general', {\n            fileName: (file as RcFile).name\n          })\n        });\n      }\n    }\n  };\n\n  const onFileUploadChange = async (info: UploadChangeParam<UploadFile<LayerUploadResponse>>) => {\n    const file = info.file;\n\n    if (file.status === 'uploading') {\n      setIsUploading(true);\n    }\n\n    if (file.status === 'done') {\n      if (!client || !file.response) {\n        return;\n      }\n\n      const layerConfig: Layer = {\n        name: file.response.layerName,\n        type: 'TILEWMS',\n        clientConfig: {\n          hoverable: true\n        },\n        sourceConfig: {\n          url: `${file.response.baseUrl}/ows?`,\n          layerNames: `${file.response.workspace}:${file.response.layerName}`,\n          useBearerToken: true\n        }\n      };\n\n      const parser = new SHOGunApplicationUtil({\n        client\n      });\n\n      const olLayer = parser.parseTileLayer(layerConfig);\n      olLayer.set('layerConfig', layerConfig);\n      olLayer.set('isUploadedLayer', true);\n      olLayer.set('groupName', t('UploadDataModal.uploadedDataFolder'));\n      addLayer(olLayer);\n\n      setUploadSuccess(t('UploadDataModal.success', {\n        fileName: file.name,\n        layerName: file.response.layerName\n      }));\n\n      setIsUploading(false);\n    } else if (file.status === 'error') {\n      setIsUploading(false);\n\n      Logger.error(file.error);\n\n      if (file.error && file.error.message) {\n        setUploadError(file.error.message);\n      } else {\n        setUploadError(t('UploadDataModal.error.general', {\n          fileName: file.name\n        }));\n      }\n    }\n  };\n\n  const getGeometryType = (type: number) => {\n    const types: {\n      [key: number]: string | null;\n    } = {\n      0: null, // Null\n      1: 'org.locationtech.jts.geom.Point', // Point\n      3: 'org.locationtech.jts.geom.LineString', // Polyline\n      5: 'org.locationtech.jts.geom.Polygon', // Polygon\n      8: 'org.locationtech.jts.geom.MultiPoint', // MultiPoint\n      11: 'org.locationtech.jts.geom.Point', // PointZ\n      13: 'org.locationtech.jts.geom.LineString', // PolylineZ\n      15: 'org.locationtech.jts.geom.Polygon', // PolygonZ\n      18: 'org.locationtech.jts.geom.MultiPoint', // MultiPointZ\n      21: 'org.locationtech.jts.geom.Point', // PointM\n      23: 'org.locationtech.jts.geom.LineString', // PolylineM\n      25: 'org.locationtech.jts.geom.Polygon', // PolygonM\n      28: 'org.locationtech.jts.geom.MultiPoint', // MultiPointM\n      31: null // MultiPatch\n    };\n\n    return types[type];\n  };\n\n  const getAttributeType = (dbfFieldType: string) => {\n    switch (dbfFieldType) {\n      case 'C': // Character\n        return 'java.lang.String';\n      case 'D': // Date\n        return 'java.util.Date';\n      case 'N': // Numeric\n        return 'java.lang.Long';\n      case 'F': // Floating point\n        return 'java.lang.Double';\n      case 'L': // Logical\n        return 'java.lang.Boolean';\n      case 'M': // Memo\n        return null;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Modal\n      className=\"upload-data-modal\"\n      title={t('UploadDataModal.title')}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={600}\n      footer={false}\n      {...restProps}\n    >\n      {\n        uploadSuccess && (\n          <Alert\n            message={uploadSuccess}\n            closable={true}\n            type=\"success\"\n          />\n        )\n      }\n\n      {\n        uploadError && (\n          <Alert\n            message={uploadError}\n            closable={true}\n            type=\"error\"\n          />\n        )\n      }\n\n      <Spin\n        spinning={isUploading}\n      >\n        <Dragger\n          customRequest={onFileUploadAction}\n          accept='image/tiff,application/zip'\n          maxCount={1}\n          showUploadList={false}\n          beforeUpload={onBeforeFileUpload}\n          onChange={onFileUploadChange}\n        >\n          <p className=\"ant-upload-drag-icon\">\n            <FontAwesomeIcon\n              icon={faUpload}\n            />\n          </p>\n          <p className=\"ant-upload-text\">\n            {t('UploadDataModal.description')}\n          </p>\n          <p className=\"ant-upload-hint\">\n            {t('UploadDataModal.hint')}\n          </p>\n        </Dragger>\n      </Spin>\n    </Modal>\n  );\n};\n\nexport default UploadDataModal;\n","import _isEmpty from 'lodash/isEmpty';\n\nimport BaseLayer from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport PermalinkUtil from '@terrestris/ol-util/dist/PermalinkUtil/PermalinkUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\n\nimport useQueryParams from './useQueryParams';\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport const useRestoreTransientLayers = async () => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const queryParams = useQueryParams();\n  const {\n    t\n  } = useTranslation();\n\n  const layers = queryParams.get('layers');\n\n  if (!map) {\n    return;\n  }\n\n  const identifier = (l: BaseLayer) => l.get('name');\n  const filter = (l: BaseLayer) => (l instanceof OlLayerTile || l instanceof OlLayerImage);\n  const configString = PermalinkUtil.applyLink(map, ';', identifier, filter);\n\n  if (!configString) {\n    return;\n  }\n\n  const addLayerGroup = (name: string) => {\n    const layerGroup = new OlLayerGroup({\n      layers: []\n    });\n    layerGroup.set('name', name);\n    const existingGroups = map.getLayerGroup().getLayers();\n    existingGroups.insertAt(existingGroups?.getLength() || 0, layerGroup);\n\n    return layerGroup;\n  };\n\n  try {\n    const config = JSON.parse(configString);\n\n    if (!client) {\n      throw new Error('Client is not available');\n    }\n\n    const parser = new SHOGunApplicationUtil({\n      client\n    });\n\n    for (let i = 0; i < config.length; i++) {\n      const cfg = config[i];\n      if (!_isEmpty(cfg?.layerConfig)) {\n        const layerConfig: Layer = cfg.layerConfig;\n        const olLayer = await parser.parseLayer(layerConfig);\n\n        if (!olLayer) {\n          continue;\n        }\n\n        if (cfg.isExternalLayer) {\n          olLayer.set('isExternalLayer', cfg.isExternalLayer);\n        }\n\n        if (cfg.isUploadedLayer) {\n          olLayer.set('isUploadedLayer', cfg.isUploadedLayer);\n        }\n\n        olLayer.set('groupName', cfg.groupName);\n        olLayer.set('layerConfig', cfg.layerConfig);\n\n        olLayer.setVisible(!!layers?.split(';').some(l => l === layerConfig.name));\n\n        if (!(olLayer.get('isExternalLayer') || olLayer.get('isUploadedLayer'))) {\n          continue;\n        }\n\n        let targetGroup: OlLayerGroup;\n\n        if (olLayer.get('groupName')) {\n          // handle custom layer group\n          targetGroup = MapUtil.getLayerByName(map, olLayer.get('groupName')) as OlLayerGroup;\n\n          if (!targetGroup) {\n            targetGroup = addLayerGroup(olLayer.get('groupName'));\n          }\n        } else {\n          // handle default layer group for external layers (external and uploaded layers)\n          targetGroup = MapUtil.getLayersByProperty(map, 'isExternalLayerGroup', true)?.[0] as OlLayerGroup;\n          if (!targetGroup) {\n            targetGroup = addLayerGroup(t('AddLayerModal.externalWmsFolder'));\n            targetGroup.set('isExternalLayerGroup', true);\n          }\n        }\n\n        if (!MapUtil.getLayerByName(map, olLayer.get('name'))) {\n          targetGroup.getLayers().push(olLayer);\n        }\n      }\n    }\n  } catch (error) {\n    Logger.error(error);\n  }\n};\n\nexport default useRestoreTransientLayers;\n","import React from 'react';\n\nexport default function useQueryParams() {\n  const {\n    search\n  } = window.location;\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport AddLayerModal from './components/AddLayerModal/index';\nimport BasicMapComponent from './components/BasicMapComponent';\nimport CookieBanner from './components/CookieBanner';\nimport EditFeatureDrawer from './components/EditFeatureDrawer';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport LayerDetailsModal from './components/LayerDetailsModal';\nimport StylingDrawer from './components/StylingDrawer';\nimport ToolMenu from './components/ToolMenu';\nimport UploadDataModal from './components/UploadDataModal';\n\nimport useRestoreTransientLayers from './hooks/useRestoreTransientLayers';\n\nimport './App.less';\n\nexport interface AppProps extends React.ComponentProps<'div'> {}\n\nexport const App: React.FC<AppProps> = ({\n  ...restProps\n}): JSX.Element => {\n\n  useRestoreTransientLayers();\n\n  useEffect(() => {\n    const loadingMask = document.querySelectorAll('.loadmask')[0];\n\n    if (loadingMask) {\n      loadingMask.classList.add('loadmask-hidden');\n    }\n  }, []);\n\n  return (\n    <div\n      className=\"App\"\n      {...restProps}\n    >\n      <Header />\n      <BasicMapComponent />\n      <ToolMenu />\n      <Footer />\n      <CookieBanner />\n      <AddLayerModal />\n      <UploadDataModal />\n      <EditFeatureDrawer />\n      <LayerDetailsModal />\n      <StylingDrawer />\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport {\n  AppInfo\n} from '@terrestris/shogun-util/dist/model/AppInfo';\n\nconst initialState: AppInfo = {\n  authorities: [],\n  buildTime: '',\n  commitHash: '',\n  userId: -1,\n  version: ''\n};\n\nexport const slice = createSlice({\n  name: 'appInfo',\n  initialState,\n  reducers: {\n    setAppInfo(state, action: PayloadAction<AppInfo>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setAppInfo\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = '';\n\nexport const slice = createSlice({\n  name: 'description',\n  initialState,\n  reducers: {\n    setDescription: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setDescription\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice, PayloadAction\n} from '@reduxjs/toolkit';\n\nexport type Legal = {\n  contact?: string;\n  imprint?: string;\n  privacy?: string;\n};\n\nconst initialState: Legal = {\n  contact: 'https://www.terrestris.de/de/kontakt/',\n  imprint: 'https://www.terrestris.de/de/impressum/',\n  privacy: 'https://www.terrestris.de/de/datenschutzerklaerung/'\n};\n\nexport const slice = createSlice({\n  name: 'legal',\n  initialState,\n  reducers: {\n    setLegal: (state, action: PayloadAction<Legal>) => {\n      return {\n        contact: action.payload.contact || initialState.contact,\n        imprint: action.payload.imprint || initialState.imprint,\n        privacy: action.payload.privacy || initialState.privacy\n      };\n    }\n  }\n});\n\nexport const { setLegal } = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = './shogun_logo.png';\n\nexport const slice = createSlice({\n  name: 'logoPath',\n  initialState,\n  reducers: {\n    setLogoPath: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setLogoPath\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string[] = ['nominatim'];\n\nexport const slice = createSlice({\n  name: 'searchEngines',\n  initialState,\n  reducers: {\n    setSearchEngines: (state, action: PayloadAction<string[]>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setSearchEngines\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = 'SHOGun Client';\n\nexport const slice = createSlice({\n  name: 'title',\n  initialState,\n  reducers: {\n    setTitle: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setTitle\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport User from '@terrestris/shogun-util/dist/model/User';\n\nconst initialState: User = { };\n\nexport const slice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser(state, action: PayloadAction<User>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setUser\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  Action,\n  combineReducers,\n  configureStore,\n  createDynamicMiddleware,\n  Reducer,\n  ThunkDispatch\n} from '@reduxjs/toolkit';\n\nimport addLayerModal from './addLayerModal';\nimport appInfo from './appInfo';\nimport description from './description';\nimport editFeature from './editFeature';\nimport editFeatureDrawerOpen from './editFeatureDrawerOpen';\nimport featureInfo from './featureInfo';\nimport layerDetailsModal from './layerDetailsModal';\nimport legal from './legal';\nimport logoPath from './logoPath';\nimport print from './print';\nimport searchEngines from './searchEngines';\nimport selectedFeatures from './selectedFeatures';\nimport stylingDrawerVisibility from './stylingDrawerVisibility';\nimport title from './title';\nimport toolMenu from './toolMenu';\nimport uploadDataModal from './uploadDataModal';\nimport user from './user';\n\ntype AsyncReducer = {\n  [key: string]: Reducer;\n};\n\nexport const dynamicMiddleware = createDynamicMiddleware();\n\nexport const createReducer = (asyncReducers?: AsyncReducer) => {\n  return combineReducers({\n    addLayerModal,\n    appInfo,\n    description,\n    editFeature,\n    editFeatureDrawerOpen,\n    featureInfo,\n    layerDetailsModal,\n    legal,\n    logoPath,\n    print,\n    selectedFeatures,\n    title,\n    toolMenu,\n    uploadDataModal,\n    searchEngines,\n    user,\n    stylingDrawerVisibility,\n    ...asyncReducers\n  });\n};\n\nexport const store = configureStore({\n  reducer: createReducer(),\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().prepend(dynamicMiddleware.middleware)\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch & ThunkDispatch<RootState, undefined, Action>;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  loader\n} from '@monaco-editor/react';\n\nimport {\n  Alert,\n  AlertProps,\n  ConfigProvider,\n  notification\n} from 'antd';\n\nimport csCZ from 'antd/lib/locale/cs_CZ';\nimport deDE from 'antd/lib/locale/de_DE';\nimport enGB from 'antd/lib/locale/en_GB';\nimport plPl from 'antd/lib/locale/pl_PL';\n\nimport ClientConfiguration, {\n  FeatureEditConfiguration\n} from 'clientConfig';\n\nimport Color from 'color';\n\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport Keycloak from 'keycloak-js';\n\nimport {\n  defaults as OlControlDefaults\n} from 'ol/control';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlMap from 'ol/Map';\nimport {\n  fromLonLat\n} from 'ol/proj';\nimport OlSourceOsm from 'ol/source/OSM';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\nimport OlView from 'ol/View';\n\nimport {\n  render\n} from 'react-dom';\n\nimport {\n  Provider\n} from 'react-redux';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport MapContext from '@terrestris/react-geo/dist/Context/MapContext/MapContext';\n\nimport {\n  AppInfo\n} from '@terrestris/shogun-util/dist/model/AppInfo';\nimport Application, {\n  DefaultApplicationTheme,\n  DefaultApplicationToolConfig\n} from '@terrestris/shogun-util/dist/model/Application';\nimport User from '@terrestris/shogun-util/dist/model/User';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nconst App = React.lazy(() => import('./App'));\n\nimport {\n  PluginProvider\n} from './context/PluginContext';\nimport {\n  SHOGunAPIClientProvider\n} from './context/SHOGunAPIClientContext';\n\nimport i18n, {\n  initOpts\n} from './i18n';\n\nimport {\n  ClientPluginInternal\n} from './plugin';\n\nimport {\n  setAppInfo\n} from './store/appInfo';\nimport {\n  setDescription\n} from './store/description';\nimport {\n  setUserEditMode,\n  EditLevel\n} from './store/editFeature';\nimport { setFeatureInfoActiveCopyTools } from './store/featureInfo';\nimport {\n  setLegal\n} from './store/legal';\nimport {\n  setLogoPath\n} from './store/logoPath';\nimport {\n  setSearchEngines\n} from './store/searchEngines';\nimport {\n  createReducer, dynamicMiddleware,\n  store\n} from './store/store';\nimport {\n  setTitle\n} from './store/title';\nimport {\n  setAvailableTools\n} from './store/toolMenu';\nimport {\n  setUser\n} from './store/user';\n\nimport './index.less';\n\n// TODO: extend antd properties too\nexport interface ThemeProperties extends React.CSSProperties {\n  '--primaryColor'?: string;\n  '--secondaryColor'?: string;\n  '--complementaryColor'?: string;\n}\n\n// eslint-disable-next-line no-shadow\nenum LoadingErrorCode {\n  APP_ID_NOT_SET = 'APP_ID_NOT_SET',\n  APP_CONFIG_NOT_FOUND = 'APP_CONFIG_NOT_FOUND',\n  APP_UNAUTHORIZED = 'APP_UNAUTHORIZED',\n  APP_CONFIG_STATIC_NOT_FOUND = 'APP_CONFIG_STATIC_NOT_FOUND'\n}\n\nconst client = ClientConfiguration.shogunBase !== false ? new SHOGunAPIClient({\n  url: ClientConfiguration.shogunBase || '/'\n}) : undefined;\n\nconst parser = new SHOGunApplicationUtil({\n  client\n});\n\nconst getConfigLang = (lang: string) => {\n  switch (lang) {\n    case 'en':\n      return enGB;\n    case 'de':\n      return deDE;\n    case 'pl':\n      return plPl;\n    case 'cz':\n      return csCZ;\n    default:\n      return enGB;\n  }\n};\n\nconst getApplicationConfiguration = async (shogunClient: SHOGunAPIClient, applicationId: number) => {\n  try {\n    Logger.info(`Loading application with ID ${applicationId}`);\n\n    const application = await shogunClient.application().findOne(applicationId);\n\n    Logger.info(`Successfully loaded application with ID ${applicationId}`);\n\n    return application;\n  } catch (error) {\n    if ((error as Error).message.indexOf('401') > -1) {\n      throw new Error(LoadingErrorCode.APP_UNAUTHORIZED);\n    }\n    Logger.error(`Error while loading application with ID ${applicationId}: ${error}`);\n  }\n};\n\nconst getStaticApplicationConfiguration = async (staticAppContextUrl: string) => {\n  try {\n    Logger.info('Loading static application');\n\n    const response = await fetch(staticAppContextUrl);\n\n    if (!response.ok) {\n      throw new Error(`HTTP error status: ${response.status}`);\n    }\n\n    const application = await response.json();\n\n    Logger.info('Successfully loaded static application');\n\n    return application;\n  } catch (error) {\n    if ((error as Error).message.indexOf('401') > -1) {\n      throw new Error(LoadingErrorCode.APP_UNAUTHORIZED);\n    }\n    Logger.error(`Error while loading static application: ${error}`);\n  }\n};\n\nconst getApplicationInfo = async (shogunClient: SHOGunAPIClient) => {\n  try {\n    Logger.info('Loading application info');\n\n    const appInfo = await shogunClient.info().getAppInfo();\n\n    Logger.info('Successfully loaded application info');\n\n    return appInfo;\n  } catch (error) {\n    Logger.error('Error while loading application info: ', error);\n  }\n};\n\nconst getUser = async (shogunClient: SHOGunAPIClient, userId?: number) => {\n  if (!userId) {\n    Logger.info('No user ID given, can\\'t load it\\'s details.');\n    return;\n  }\n\n  try {\n    Logger.info(`Loading user with ID ${userId}`);\n\n    const user = await shogunClient.user().findOne(userId);\n\n    Logger.info(`Successfully loaded user with ID ${userId}`);\n\n    return user;\n  } catch (error) {\n    Logger.error(`Error while loading user with ID ${userId}: `, error);\n  }\n};\n\nconst setApplicationToStore = async (application?: Application) => {\n  if (!application) {\n    Logger.info('No application configuration provided, the default store will be loaded');\n\n    return;\n  }\n\n  if (application.name) {\n    store.dispatch(setTitle(application.name));\n  }\n\n  if (application.clientConfig?.description) {\n    store.dispatch(setDescription(application.clientConfig?.description));\n  }\n\n  if (application.clientConfig?.legal) {\n    store.dispatch(setLegal(application.clientConfig.legal));\n  }\n\n  if (application?.clientConfig?.theme?.logoPath) {\n    store.dispatch(setLogoPath(application.clientConfig.theme.logoPath));\n  }\n\n  // nominatim search is active by default\n  store.dispatch(setSearchEngines(['nominatim']));\n\n  if (application.toolConfig && application.toolConfig.length > 0) {\n    const availableTools: string[] = [];\n    application.toolConfig\n      .forEach((tool: DefaultApplicationToolConfig) => {\n        if (tool.config.visible && tool.name !== 'search') {\n          availableTools.push(tool.name);\n        }\n        if (tool.name === 'search' && tool.config.engines.length > 0) {\n          store.dispatch(setSearchEngines(tool.config.engines));\n        }\n        if (tool.name === 'feature_info' && Array.isArray(tool.config.activeCopyTools)) {\n          store.dispatch(setFeatureInfoActiveCopyTools(tool.config.activeCopyTools));\n        }\n      });\n    store.dispatch(setAvailableTools(availableTools));\n  }\n};\n\nconst setAppInfoToStore = async (appInfo?: AppInfo) => {\n  if (!appInfo) {\n    return;\n  }\n\n  store.dispatch(setAppInfo(appInfo));\n};\n\nconst setUserToStore = async (user?: User) => {\n  if (!user) {\n    return;\n  }\n\n  store.dispatch(setUser(user));\n};\n\nconst initKeycloak = async () => {\n  const keycloakEnabled = ClientConfiguration.keycloak?.enabled;\n  const keycloakOnLoad = ClientConfiguration.keycloak?.onLoadAction;\n  const keycloakHost = ClientConfiguration.keycloak?.host;\n  const keycloakRealm = ClientConfiguration.keycloak?.realm;\n  const keycloakClientId = ClientConfiguration.keycloak?.clientId;\n\n  if (!keycloakEnabled) {\n    return undefined;\n  }\n\n  if (!keycloakHost) {\n    throw new Error('Neither config key keycloak.host nor environment KEYCLOAK_HOST is set');\n  }\n\n  if (!keycloakRealm) {\n    throw new Error('Neither config key keycloak.realm nor environment KEYCLOAK_REALM is set');\n  }\n\n  if (!keycloakClientId) {\n    throw new Error('Neither config key keycloak.clientId nor environment KEYCLOAK_CLIENT_ID is set');\n  }\n\n  const keycloak = new Keycloak({\n    url: `${keycloakHost}`,\n    realm: keycloakRealm,\n    clientId: keycloakClientId\n  });\n\n  keycloak.onTokenExpired = async () => {\n    try {\n      await keycloak.updateToken(0);\n    } catch (error) {\n      Logger.error('Error while refreshing the access token: ', error);\n    }\n  };\n\n  await keycloak.init({\n    onLoad: keycloakOnLoad,\n    checkLoginIframe: false\n  });\n\n  return keycloak;\n};\n\nconst setApplicationTitle = () => {\n  store.subscribe(() => {\n    document.title = store.getState().title;\n  });\n};\n\nconst setupMap = async (application?: Application) => {\n  if (application) {\n    return await setupSHOGunMap(application);\n  }\n\n  Logger.info('No application configuration provided, the default map will be loaded');\n\n  return setupDefaultMap();\n};\n\nconst setupSHOGunMap = async (application: Application) => {\n  const view = await parser.parseMapView(application, {\n    constrainOnlyCenter: true\n  });\n\n  let extent;\n  const projection = application.clientConfig?.mapView.projection;\n  const mapView = application.clientConfig?.mapView;\n  if (projection && mapView?.extent && mapView.extent.length === 4) {\n    const ll = fromLonLat([mapView.extent[0], mapView.extent[1]], projection);\n    const ur = fromLonLat([mapView.extent[2], mapView.extent[3]], projection);\n    extent = [\n      ll[0],\n      ll[1],\n      ur[0],\n      ur[1]\n    ];\n  }\n  if (extent) {\n    view.set('extent', extent);\n  }\n\n  view.setConstrainResolution(true);\n\n  let layers;\n  if (!ClientConfiguration.layerConfigUrl) {\n    layers = await parser.parseLayerTree(application, projection);\n  } else {\n    const response = await fetch(ClientConfiguration.layerConfigUrl);\n    const layersConfig = await response.json();\n    layers = await parser.parseLayerTreeNodes(application, layersConfig, projection);\n  }\n\n  return new OlMap({\n    view,\n    layers,\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\n// TODO Make default/fallback app configurable?\nconst setupDefaultMap = () => {\n  const osmLayer = new OlLayerTile({\n    source: new OlSourceOsm()\n  });\n  osmLayer.set('name', 'OpenStreetMap');\n\n  const temperatureLayer = new OlLayerTile({\n    opacity: 0.5,\n    visible: true,\n    source: new OlSourceTileWMS({\n      url: 'https://gibs.earthdata.nasa.gov/wms/epsg3857/best/wms.cgi',\n      projection: 'EPSG:3857',\n      params: {\n        LAYERS: 'MERRA2_2m_Air_Temperature_Assimilated_Monthly'\n      }\n    })\n  });\n  temperatureLayer.setProperties({\n    name: '2-meter Air Temperature, Assimilated (Monthly, MERRA2)',\n    hoverable: true\n  });\n\n  const eoLayerGroup = new OlLayerGroup({\n    layers: [temperatureLayer]\n  });\n  eoLayerGroup.set('name', 'NASA Earth Observations');\n\n  const backgroundLayerGroup = new OlLayerGroup({\n    layers: [osmLayer]\n  });\n  backgroundLayerGroup.set('name', 'Background');\n\n  const center = fromLonLat([0, 40], 'EPSG:3857');\n\n  return new OlMap({\n    view: new OlView({\n      center: center,\n      zoom: 0\n    }),\n    layers: [backgroundLayerGroup, eoLayerGroup],\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\nconst parseTheme = (theme?: DefaultApplicationTheme): ThemeProperties => {\n  const style: ThemeProperties = {\n    '--primaryColor': '#59666C',\n    '--secondaryColor': '#70B3BE',\n    '--complementaryColor': '#FFFFFF'\n  };\n  if (!theme) {\n    return style;\n  }\n  if (theme.primaryColor) {\n    style['--primaryColor'] = theme.primaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--secondaryColor'] = theme.secondaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--complementaryColor'] = theme.complementaryColor;\n  }\n  if (theme.faviconPath) {\n    const favicon = document.querySelector('link[rel=\"shortcut icon\"]') as HTMLLinkElement;\n    if (favicon) {\n      favicon.href = theme.faviconPath;\n    } else {\n      // If no favicon is set, create a new one\n      const newLink = document.createElement('link');\n      newLink.rel = 'shortcut icon';\n      newLink.type = 'image/x-icon';\n      newLink.href = theme.faviconPath;\n      document.head.appendChild(newLink);\n    }\n  }\n\n  return style;\n};\n\n// ExamplePlugin: 'ExamplePlugin@/client-plugin/remoteEntry.js'\nconst loadPluginModules = async (moduleName: string, moduleUrl: string, remoteNames: string[]) => {\n  await __webpack_init_sharing__('default');\n\n  await new Promise<void>((resolve, reject) => {\n    const element = document.createElement('script');\n\n    element.src = moduleUrl;\n    element.type = 'text/javascript';\n    element.async = true;\n\n    element.onload = () => {\n      element.parentElement?.removeChild(element);\n      resolve();\n    };\n\n    element.onerror = (err) => {\n      element.parentElement?.removeChild(element);\n      reject(err);\n    };\n\n    document.head.appendChild(element);\n  });\n\n  // @ts-ignore\n  const container = window[moduleName];\n\n  // eslint-disable-next-line camelcase\n  await container.init(__webpack_share_scopes__.default);\n\n  const modules = [];\n  for (const remoteName of remoteNames) {\n    const factory = await container.get(remoteName);\n    const module = factory();\n    modules.push(module);\n  }\n\n  return modules;\n};\n\nconst loadPlugins = async (map: OlMap) => {\n  if (!ClientConfiguration.plugins || ClientConfiguration.plugins.length === 0) {\n    Logger.info('No plugins found');\n    return [];\n  }\n\n  Logger.info('Loading plugins');\n\n  const clientPlugins: ClientPluginInternal[] = [];\n\n  for (const plugin of ClientConfiguration.plugins) {\n    const name = plugin.name;\n    const resourcePath = plugin.resourcePath;\n    const exposedPaths = plugin.exposedPaths;\n\n    if (!name) {\n      Logger.error('Required plugin configuration \\'name\\' is not set');\n      return clientPlugins;\n    }\n\n    if (!resourcePath) {\n      Logger.error('Required plugin configuration \\'resourcePath\\' is not set');\n      return clientPlugins;\n    }\n\n    if (!exposedPaths) {\n      Logger.error('Required plugin configuration \\'exposedPaths\\' is not set');\n      return clientPlugins;\n    }\n\n    Logger.info(`Loading plugin ${name} (with exposed paths ${exposedPaths.join(' and ')}) from ${resourcePath}`);\n\n    let clientPluginModules: any[];\n    try {\n      clientPluginModules = await loadPluginModules(name, resourcePath, exposedPaths);\n      Logger.info(`Successfully loaded plugin ${name}`);\n    } catch (error) {\n      Logger.error(`Could not load plugin ${name}:`, error);\n      return clientPlugins;\n    }\n\n    clientPluginModules.forEach(module => {\n      const clientPluginDefault: ClientPluginInternal = module.default;\n      const PluginComponent = clientPluginDefault.component;\n\n      const WrappedPluginComponent = () => (\n        <PluginComponent\n          map={map}\n          client={client}\n        />\n      );\n\n      clientPluginDefault.wrappedComponent = WrappedPluginComponent;\n\n      if (clientPluginDefault.i18n) {\n        Object.entries(clientPluginDefault.i18n).forEach(locale => {\n          const lng = locale[0];\n          const resources = locale[1].translation;\n          i18n.addResourceBundle(lng, 'translation', resources, true, true);\n        });\n      }\n\n      if (clientPluginDefault.reducers) {\n        const reducers = createReducer(clientPluginDefault.reducers);\n        store.replaceReducer(reducers);\n      }\n\n      if (Array.isArray(clientPluginDefault.middlewares)) {\n        clientPluginDefault.middlewares?.forEach(mw => dynamicMiddleware.addMiddleware(mw));\n      }\n\n      clientPlugins.push(clientPluginDefault);\n    });\n  }\n\n  return clientPlugins;\n};\n\nconst checkRoles = (\n  list: string[],\n  featureEditRoles: FeatureEditConfiguration\n): EditLevel[] => {\n  const {\n    authorizedRolesForCreate,\n    authorizedRolesForUpdate,\n    authorizedRolesForDelete,\n    authorizedRolesForEditingGeometries\n  } = featureEditRoles;\n\n  const result: EditLevel[] = [];\n\n  for (const element of list) {\n    if (authorizedRolesForCreate?.some(role => matchRole(role, element))) {\n      result.push('CREATE');\n    }\n    if (authorizedRolesForUpdate?.some(role => matchRole(role, element))) {\n      result.push('UPDATE');\n    }\n    if (authorizedRolesForDelete?.some(role => matchRole(role, element))) {\n      result.push('DELETE');\n    }\n    if (authorizedRolesForEditingGeometries?.some(role => matchRole(role, element))) {\n      result.push('EDIT_GEOMETRY');\n    }\n  }\n  return result;\n};\n\nconst matchRole = (role: string | RegExp, element: string): boolean => {\n  if (typeof role === 'string') {\n    return element === role;\n  }\n  if (role instanceof RegExp) {\n    return role.test(element);\n  }\n  return false;\n};\n\nconst renderApp = async () => {\n  try {\n    loader.config({\n      paths: {\n        vs: './vs'\n      }\n    });\n\n    const keycloak = await initKeycloak();\n\n    if (keycloak && client) {\n      client.setKeycloak(keycloak);\n    }\n\n    const applicationIdString = UrlUtil.getQueryParam(window.location.href, 'applicationId');\n    const applicationId = applicationIdString ? parseInt(applicationIdString, 10) : undefined;\n\n    if (!applicationId && !ClientConfiguration.enableFallbackConfig && !ClientConfiguration.staticAppConfigUrl) {\n      throw new Error(LoadingErrorCode.APP_ID_NOT_SET);\n    }\n\n    let appConfig;\n    if (applicationId && client) {\n      appConfig = await getApplicationConfiguration(client, applicationId);\n    } else if (ClientConfiguration.staticAppConfigUrl) {\n      appConfig = await getStaticApplicationConfiguration(ClientConfiguration.staticAppConfigUrl);\n\n      if (!appConfig) {\n        throw new Error(LoadingErrorCode.APP_CONFIG_STATIC_NOT_FOUND);\n      }\n    }\n\n    if (!appConfig && !ClientConfiguration.enableFallbackConfig) {\n      throw new Error(LoadingErrorCode.APP_CONFIG_NOT_FOUND);\n    }\n\n    const defaultLanguage = appConfig?.clientConfig?.defaultLanguage;\n\n    if (!defaultLanguage) {\n      i18n.use(LanguageDetector);\n    }\n\n    await i18n.init(initOpts);\n\n    if (defaultLanguage) {\n      i18n.changeLanguage(defaultLanguage);\n    }\n\n    const style = parseTheme(appConfig?.clientConfig?.theme);\n\n    ConfigProvider.config({\n      theme: {\n        primaryColor: Color(style['--primaryColor']).isLight() ?\n          Color(style['--primaryColor']).darken(0.5).hexa() :\n          style['--primaryColor']\n      }\n    });\n\n    Object.keys(style).forEach((key: any) => {\n      document.body.style.setProperty(key, style[key as keyof ThemeProperties] as string);\n    });\n\n    setApplicationToStore(appConfig);\n\n    setApplicationTitle();\n\n    if (client) {\n      const appInfo = await getApplicationInfo(client);\n\n      setAppInfoToStore(appInfo);\n\n      const user = await getUser(client, appInfo?.userId);\n\n      setUserToStore(user);\n    }\n\n    const userRoles: string[] | undefined =\n      client?.getKeycloak()?.tokenParsed?.realm_access?.roles;\n\n    let allowedEditMode: EditLevel[] = ['NONE'];\n\n    if (userRoles && ClientConfiguration.featureEditRoles) {\n      allowedEditMode = checkRoles(\n        userRoles,\n        ClientConfiguration.featureEditRoles\n      );\n    }\n\n    store.dispatch(setUserEditMode(allowedEditMode));\n\n    const map = await setupMap(appConfig);\n\n    const plugins = await loadPlugins(map);\n\n    if (!appConfig) {\n      notification.error({\n        message: i18n.t('Index.applicationLoadErrorMessage'),\n        description: i18n.t('Index.applicationLoadErrorDescription', {\n          applicationId: applicationId\n        }),\n        duration: 0\n      });\n    }\n\n    render(\n      <React.StrictMode>\n        <React.Suspense fallback={<span></span>}>\n          <SHOGunAPIClientProvider client={client}>\n            <PluginProvider plugins={plugins}>\n              <ConfigProvider locale={getConfigLang(i18n.language)}>\n                <Provider store={store}>\n                  <MapContext.Provider value={map}>\n                    <App />\n                  </MapContext.Provider>\n                </Provider>\n              </ConfigProvider>\n            </PluginProvider>\n          </SHOGunAPIClientProvider>\n        </React.Suspense>\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  } catch (error) {\n    Logger.error(error);\n\n    const loadingMask = document.querySelectorAll('.loadmask')[0];\n\n    if (loadingMask) {\n      loadingMask.classList.add('loadmask-hidden');\n    }\n\n    if (!i18n.isInitialized) {\n      i18n.use(LanguageDetector);\n      await i18n.init(initOpts);\n    }\n\n    let type: AlertProps['type'] = 'warning';\n    let errorDescription = i18n.t('Index.errorDescription');\n\n    if ((error as Error)?.message === LoadingErrorCode.APP_ID_NOT_SET) {\n      errorDescription = i18n.t('Index.errorDescriptionAppIdNotSet');\n    }\n\n    if ((error as Error)?.message === LoadingErrorCode.APP_UNAUTHORIZED) {\n      errorDescription = i18n.t('Index.permissionDeniedUnauthorized');\n      type = 'error';\n    }\n\n    if ((error as Error)?.message === LoadingErrorCode.APP_CONFIG_NOT_FOUND) {\n      const appId = UrlUtil.getQueryParam(window.location.href, 'applicationId');\n\n      errorDescription = i18n.t('Index.errorDescriptionAppConfigNotFound', {\n        applicationId: appId\n      });\n    }\n\n    if ((error as Error)?.message === LoadingErrorCode.APP_CONFIG_STATIC_NOT_FOUND) {\n      errorDescription = i18n.t('Index.errorDescriptionAppConfigStaticNotFound');\n    }\n\n    render(\n      <React.StrictMode>\n        <Alert\n          className=\"error-boundary\"\n          message={i18n.t('Index.errorMessage')}\n          description={errorDescription}\n          type={type}\n          showIcon\n        />\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  }\n};\n\nrenderApp();\n","import React from 'react';\n\nimport {\n  ClientPluginInternal\n} from '../plugin';\n\nexport type PluginProviderProps = {\n  plugins: ClientPluginInternal[];\n  children: JSX.Element;\n};\n\nexport const PluginContext = React.createContext<(ClientPluginInternal[])>([]);\n\nexport const PluginProvider: React.FC<PluginProviderProps> = ({\n  plugins,\n  children\n}): JSX.Element => {\n  return (\n    <PluginContext.Provider\n      value={plugins}\n    >\n      {children}\n    </PluginContext.Provider>\n  );\n};\n\nexport default PluginContext;\n","import React from 'react';\n\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nexport type SHOGunAPIClientProviderProps = {\n  client?: SHOGunAPIClient;\n  children: JSX.Element;\n};\n\nexport const SHOGunAPIClientContext = React.createContext<(SHOGunAPIClient | null)>(null);\n\nexport const SHOGunAPIClientProvider: React.FC<SHOGunAPIClientProviderProps> = ({\n  client,\n  children\n}): JSX.Element => {\n  return (\n    <SHOGunAPIClientContext.Provider\n      value={client ?? null}\n    >\n      {children}\n    </SHOGunAPIClientContext.Provider>\n  );\n};\n\nexport default SHOGunAPIClientContext;\n","import i18n, {\n  InitOptions\n} from 'i18next';\nimport {\n  initReactI18next\n} from 'react-i18next';\n\nimport resources from './translations';\n\nexport const initOpts: InitOptions = {\n  resources,\n  fallbackLng: 'en',\n  debug: false,\n  interpolation: {\n    escapeValue: false\n  },\n  returnNull: false\n};\n\n// eslint-disable-next-line import/no-named-as-default-member\ni18n\n  .use(initReactI18next);\n\ni18n.options = initOpts;\n\nexport default i18n;\n","export default {\n  de: {\n    translation: {\n      ApplicationInfo: {\n        title: 'Über',\n        clientVersionTitle: 'Client Version',\n        backendVersionTitle: 'Backend Version'\n      },\n      AddLayerModal: {\n        addSelectedLayers: 'Auswahl hinzufügen',\n        addAllLayers: 'Alle hinzufügen',\n        inputPlaceholder: 'WMS GetCapabilities URL angeben…',\n        externalWmsFolder: 'Externe Themen',\n        title: 'WMS hinzufügen',\n        columnTitle: 'Name',\n        errorMessage: 'Fehler',\n        errorDescription: 'Das Capabilities Dokument konnte nicht geladen werden, bitte prüfen Sie die URL',\n        invalidUrlErrorMsg: 'Ungültige URL. Bitte geben Sie eine gültige URL wie z.B. ' +\n          'https://ows.terrestris.de/osm/service ein.',\n        version: 'Version',\n        requestWmsGetCapabilitiesInstruction: 'Bitte geben Sie eine gültige WMS GetCapabilities Adresse ein ' +\n          'und bestätigen Sie die Eingabe mit \\'Enter ↲\\' oder über den Button rechts vom Eingabefeld.'\n\n      },\n      BasicMapComponent: {\n        processedLayersFolder: 'Prozessierte Layer'\n      },\n      CookieBanner: {\n        info:\n          'Wir verwenden technisch notwendige Erstanbieter-Cookies, um Ihnen die bestmögliche Nutzung unserer ' +\n          'Website zu ermöglichen. Wenn Sie diese Website weiterhin nutzen, gehen wir davon aus, ' +\n          'dass Sie damit zufrieden sind.',\n        button: 'Akzeptieren'\n      },\n      Permalink: {\n        title: 'Teilen',\n        whatsAppTooltip: 'Link via WhatsApp teilen',\n        mailTooltip: 'Link via Mail teilen',\n        copyTooltip: 'Link in die Zwischenablage kopieren',\n        copiedToClipboard: 'Link wurde in Zwischenablage kopiert',\n        copyToClipboardFailed: 'Link konnte nicht kopiert werden'\n      },\n      Measure: {\n        title: 'Messen',\n        line: 'Entfernung',\n        area: 'Fläche',\n        clicktodrawline: 'Zum Zeichnen einer Linie klicken',\n        clicktodrawarea: 'Zum Zeichnen einer Fläche klicken'\n      },\n      Draw: {\n        point: 'Punkt',\n        line: 'Linie',\n        polygon: 'Polygon',\n        circle: 'Kreis',\n        rectangle: 'Rechteck',\n        text: 'Anmerkung',\n        modify: 'Bearbeitung',\n        upload: 'Hochladen',\n        uploadSuccess: 'Die Datei wurde erfolgreich importiert',\n        uploadError: 'Der Import ist fehlgeschlagen. Bitte beachten Sie, dass nur .geojson-Dateien unterstützt werden.',\n        delete: 'Löschen',\n        export: 'Exportieren'\n      },\n      DeleteAllButton:{\n        deleteAll: 'Alles Löschen',\n        confirmMessage: 'Bitte bestätigen Sie, dass Sie alle Zeichnungen löschen möchten.'\n      },\n      StylingDrawer: {\n        pickColor: 'Farbschema bearbeiten',\n        title: 'Farbschema bearbeiten'\n      },\n      FeatureInfo: {\n        usageHint:\n          'Klicken Sie in die Karte, um Detailinformationen zu erhalten.'\n      },\n      FileUpload: {\n        upload: 'Dateien hochladen'\n      },\n      ImageUpload: {\n        upload: 'Bilder hochladen'\n      },\n      LayerTree: {\n        transparency: 'Transparenz',\n        noLegendAvailable: 'Keine Legende verfügbar'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Auf Layerausdehnung zoomen',\n        extentError: 'Konnte nicht auf die Layerausdehnung zoomen',\n        removeLayer: 'Layer entfernen',\n        showLegend: 'Legende anzeigen',\n        hideLegend: 'Legende ausblenden',\n        downloadLayer: 'Layer exportieren ({{formatName}})',\n        editLayer: 'Layer bearbeiten',\n        layerDetails: 'Eigenschaften'\n      },\n      LayerDetailsModal: {\n        title: 'Eigenschaften des Layers {{layerName}}',\n        internalConfigurationButtonTooltip: 'Interne Konfiguration anzeigen',\n        internalConfigurationButtonTooltipPressed: 'Interne Konfiguration verbergen'\n      },\n      LayerDetails: {\n        noDataPlaceholder: '-',\n        layerNameLabel: 'Name',\n        layerTitleLabel: 'Titel',\n        serviceAbstractLabel: 'Service Beschreibung',\n        abstractLabel: 'Beschreibung',\n        accessConstraintsLabel: 'Nutzungseinschränkungen',\n        capabilitiesUrlLabel: 'GetCapabilities URL',\n        contactLabel: 'Kontakt',\n        minScaleLabel: 'Min. Maßstab',\n        maxScaleLabel: 'Max. Maßstab',\n        bboxLabel: 'Bounding Box',\n        errorMessage: 'Fehler beim Laden der Layer Capabilities'\n      },\n      LayerConfiguration: {\n        errorMessage: 'Fehler beim Laden der internen Konfiguration'\n      },\n      ToolMenu: {\n        expand: 'Menu ausklappen',\n        collapse: 'Menu einklappen',\n        measure: 'Messen',\n        draw: 'Zeichnen',\n        featureInfo: 'Karteninhalte abfragen',\n        addWms: 'WMS hinzufügen',\n        uploadData: 'Daten hochladen',\n        print: 'Export',\n        layertree: 'Karten',\n        languageSelect: 'Sprachauswahl'\n      },\n      PrintForm: {\n        title: 'Kartentitel',\n        initialTitle: 'Druckausgabe',\n        titlePlaceholder: 'Bitte geben Sie einen Titel ein',\n        comment: 'Bemerkung',\n        commentPlaceholder: 'Bitte geben Sie einen Kommentar ein',\n        layout: 'Vorlage',\n        dpi: 'Auflösung',\n        format: 'Format',\n        scale: 'Maßstab',\n        downloadBtnText: 'Ausdruck erzeugen',\n        printJobErrorMsg: 'Der Kartenausdruck konnte nicht erzeugt werden',\n        initErrorMsg:\n          'Der Kartendruck Generator konnte nicht initialisiert werden.',\n        outputFormatPlaceholder: 'Bitte wählen Sie ein Ausgabeformat aus',\n        resolutionPlaceholder: 'Bitte wählen Sie eine Ausgabequalität aus',\n        managerErrorMessage: 'Fehler bei der Initialisierung der Export-Engine'\n      },\n      Footer: {\n        refSystem: 'Bezugssystem',\n        scale: 'Maßstab',\n        mousePosition: 'Mausposition',\n        imprint: 'Impressum',\n        contact: 'Kontakt',\n        privacypolicy: 'Datenschutz'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Fehler beim Laden der Applikation',\n        applicationLoadErrorDescription:\n          'Die Applikation mit der ID {{applicationId}} konnte nicht geladen werden. ' +\n          'Die Standardkonfiguration wird stattdessen geladen.',\n        errorMessage: 'Fehler beim Laden der Applikation',\n        errorDescription: 'Aufgrund eines unerwarteten Fehlers konnte die Applikation nicht geladen werden.',\n        errorDescriptionAppIdNotSet: 'Keine Applikations-ID angegeben. Bitte geben Sie die ID als Abfrageparameter an, z.B. ?applicationId=1909',\n        errorDescriptionAppConfigNotFound: 'Die Applikation mit der ID {{applicationId}} konnte nicht geladen werden.',\n        errorDescriptionAppConfigStaticNotFound: 'Die Konfiguration der Applikation konnte nicht geladen werden.',\n        permissionDeniedUnauthorized: 'Dies ist keine öffentliche Applikation. Anmeldung erforderlich.'\n      },\n      Nominatim: {\n        placeholder: 'Ortsname, Straßenname, Stadtteilname, POI usw.'\n      },\n      UserMenu: {\n        settingsMenuTitle: 'Profil bearbeiten',\n        infoMenuTitle: 'Über',\n        logoutMenuTitle: 'Ausloggen',\n        loginMenuTitle: 'Anmelden'\n      },\n      WmsTimeSlider: {\n        title: 'Zeitlicher Bezug',\n        default: 'Keine Daten gefunden'\n      },\n      UploadDataModal: {\n        title: 'Daten hochladen',\n        uploadedDataFolder: 'Hochgeladene Daten',\n        description: 'Klicken Sie oder ziehen Sie die Datei zum Hochladen in diesen Bereich',\n        hint: 'Unterstützte Dateiformate sind Shapefile (gebündelt als *.zip) und GeoTIFF',\n        success: 'Datei {{fileName}} wurde erfolgreich geladen und der Layer {{layerName}} erstellt',\n        error: {\n          general: 'Fehler beim Hochladen der Datei {{fileName}}',\n          maxSize: 'Der Upload überschreitet das Limit von {{maxSize}} MB',\n          supportedFormats: 'Der Dateityp ist nicht unterstützt ({{supportedFormats}})',\n          zipContent: 'Mehrere Geodatensätze innerhalb eines Archivs sind nicht unterstützt'\n        }\n      },\n      MultiSearch: {\n        searchInViewBox: 'Im aktuellen Kartenausschnitt suchen',\n        searchData: 'Layerdaten durchsuchen',\n        searchNominatim: 'Ortssuche (Nominatim)',\n        nominatimTitle: 'Ortssuche',\n        searchPlaceholder: 'Orts- und Datensuche…'\n      },\n      EditFeatureDrawer: {\n        featureEditor: 'Objekteditor',\n        noLayerFoundError: 'Kein passender Layer gefunden - das Editieren ist nicht möglich.',\n        isFeatureLockedErrorMsg: 'Das ausgewählte Objekt wird bereits in einer anderen Sitzung bearbeitet.',\n        closeDrawerWarnTitle: 'Wollen Sie wirklich fortfahren?',\n        closeDrawerWarnContent: 'Dadurch werden alle nicht gespeicherten Änderungen an dem Objekt verworfen.'\n      },\n      EditFeatureSwitch: {\n        usageHint: 'Objekt zum Editieren auf der Karte auswählen oder…',\n        limitedUsageHint: 'Zum Editieren bitte eine Objekt auf der Karte auswählen',\n        createFeature: 'Neues Objekt erstellen'\n      },\n      EditFeatureFullForm: {\n        saveErrorMsg: 'Das Objekt konnte nicht gespeichert werden',\n        deleteErrorMsg: 'Das Objekt konnte nicht gelöscht werden'\n      },\n      EditFeatureGeometryToolbar: {\n        draw: 'Neue Geometrie zeichnen',\n        edit: 'Geometrie editieren',\n        delete: 'Geometrie löschen',\n        undo: 'Rückgängig',\n        redo: 'Wiederherstellen'\n      },\n      Attribution: {\n        title: 'Attribute',\n        add: 'Attribut hinzufügen',\n        select: 'Wählen Sie zunächst eine Geometrie aus.',\n        submit: 'Speichern'\n      },\n      AttributionRow: {\n        missingKey: 'Fehlender Name',\n        missingValue: 'Fehlender Wert',\n        keyPlaceholder: 'Name',\n        valuePlaceholder: 'Wert',\n        keyInUse: 'Dieser Name existiert bereits!'\n      },\n      AttributionPopConfirm:{\n        title: 'Attribut löschen?',\n        okText: 'Löschen',\n        cancelText: 'Abbrechen'\n      },\n      ResetButton: {\n        title: 'Zurücksetzen'\n      },\n      notificationDeleteText:{\n        title: 'Drücke \"Speichern\" um die Änderung zu bestätigen.',\n        info: 'Wenn \"Übernehmen\" nicht geklickt wird, werden alle an dieser Zeichnung vorgenommenen Änderungen verworfen.'\n      },\n      notificationApplyText:{\n        title: 'Änderungen wurden erfolgreich gespeichert!'\n      },\n      SaveButton: {\n        title: 'Speichern'\n      },\n      DeleteButton: {\n        title: 'Objekt löschen',\n        confirm: 'Das Objekt wird vollständig gelöscht. Fortfahren?'\n      },\n      EditFeatureButton: {\n        title: 'Objekt bearbeiten'\n      },\n      FeaturePropertyGrid: {\n        key: 'Name',\n        value: 'Wert'\n      },\n      PaginationToolbar: {\n        copyAsGeoJson: 'Als GeoJSON kopieren (inkl. Geometrie)',\n        copyAsObject: 'Als Objekt kopieren (nur angezeigte Werte)',\n        editDisabled: 'Layer ist nicht editierbar',\n        editFeature: 'Feature editieren'\n      },\n      JsonModal: {\n        buttonTitle: 'Öffne {{propertyName}}'\n      },\n      ReferenceTable: {\n        modalTitle: 'Details zu {{referenceValue}}',\n        defaultModalTitle: 'Details',\n        defaultRowPlaceholder: 'Klicken Sie auf den Button, um die Details anzuzeigen'\n      },\n      EditReferenceTable: {\n        modalTitle: 'Details zu {{referenceValue}}',\n        confirmDeleteTitle: 'Das referenzierte Objekt wird vollständig gelöscht. Fortfahren?'\n      }\n    }\n  },\n  en: {\n    translation: {\n      ApplicationInfo: {\n        title: 'About',\n        clientVersionTitle: 'Client version',\n        backendVersionTitle: 'Backend version'\n      },\n      AddLayerModal: {\n        addSelectedLayers: 'Add selected',\n        addAllLayers: 'Add all',\n        inputPlaceholder: 'Enter a WMS GetCapabilities URL…',\n        externalWmsFolder: 'External layers',\n        title: 'Add WMS',\n        columnTitle: 'Name',\n        errorMessage: 'Error',\n        errorDescription: 'Could not load the provided Capabilities document, please check the validity of the URL',\n        invalidUrlErrorMsg: 'Invalid URL specified. Please provide an URL like https://ows.terrestris.de/osm/service',\n        version: 'Version',\n        requestWmsGetCapabilitiesInstruction: 'Please provide a valid GetCapabilities URL and submit ' +\n          'your input by pressing the \\'Enter ↲\\' key or by clicking on the button right of the field.'\n      },\n      BasicMapComponent: {\n        processedLayersFolder: 'Processed layers'\n      },\n      CookieBanner: {\n        info:\n          'We use technically necessary first-party cookies to ensure that we give you the best experience ' +\n          'on our website. If you continue to use this site we will assume that you are happy with it.',\n        button: 'Accept'\n      },\n      Permalink: {\n        title: 'Share',\n        whatsAppTooltip: 'Share link via WhatsApp',\n        mailTooltip: 'Share link via Mail',\n        copyTooltip: 'Copy link to Clipboard',\n        copiedToClipboard: 'Copied to clipboard',\n        copyToClipboardFailed: 'Could not copy link to clipboard'\n      },\n      Measure: {\n        title: 'Measure',\n        line: 'Distance',\n        area: 'Area',\n        clicktodrawline: 'Click to draw line',\n        clicktodrawarea: 'Click to draw area'\n      },\n      Draw: {\n        point: 'Point',\n        line: 'Line',\n        polygon: 'Polygon',\n        circle: 'Circle',\n        rectangle: 'Rectangle',\n        text: 'Annotation',\n        modify: 'Edit',\n        upload: 'Upload',\n        uploadSuccess: 'The file was uploaded successfully',\n        uploadError: 'The import failed, please note that only .geojson files are supported',\n        delete: 'Delete',\n        export: 'Export'\n      },\n      DeleteAllButton:{\n        deleteAll: 'Delete all',\n        confirmMessage: 'Please confirm, that you wish to delete all drawings.'\n      },\n      StylingDrawer: {\n        pickColor: 'Modify color scheme',\n        title: 'Modify color scheme'\n      },\n      FeatureInfo: {\n        usageHint:\n          'Click on the map to get details about the clicked coordinate.'\n      },\n      FileUpload: {\n        upload: 'Upload files'\n      },\n      ImageUpload: {\n        upload: 'Upload images'\n      },\n      LayerTree: {\n        transparency: 'Transparency',\n        noLegendAvailable: 'No legend available'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Zoom to layer extent',\n        extentError: 'Could not zoom to layer extent',\n        removeLayer: 'Remove layer',\n        showLegend: 'Show legend',\n        hideLegend: 'Hide legend',\n        downloadLayer: 'Export layer as {{formatName}}',\n        editLayer: 'Edit layer',\n        layerDetails: 'Properties'\n      },\n      LayerDetailsModal: {\n        title: 'Properties of layer {{layerName}}',\n        internalConfigurationButtonTooltip: 'Show internal configuration',\n        internalConfigurationButtonTooltipPressed: 'Hide internal configuration'\n      },\n      LayerDetails: {\n        noDataPlaceholder: '-',\n        layerNameLabel: 'Name',\n        layerTitleLabel: 'Title',\n        serviceAbstractLabel: 'Service abstract',\n        abstractLabel: 'Abstract',\n        accessConstraintsLabel: 'Access constraints',\n        capabilitiesUrlLabel: 'GetCapabilities URL',\n        contactLabel: 'Contact',\n        minScaleLabel: 'Min. scale',\n        maxScaleLabel: 'Max. scale',\n        bboxLabel: 'Bounding box',\n        errorMessage: 'Error while loading the layer capabilities'\n      },\n      LayerConfiguration: {\n        errorMessage: 'Error while loading the internal configuration'\n      },\n      ToolMenu: {\n        expand: 'Expand',\n        collapse: 'Collapse',\n        measure: 'Measure',\n        draw: 'Draw',\n        featureInfo: 'Query map features',\n        addWms: 'Add WMS',\n        uploadData: 'Upload data',\n        print: 'Export',\n        layertree: 'Maps',\n        languageSelect: 'Language selector'\n      },\n      PrintForm: {\n        title: 'Title',\n        initialTitle: 'Title',\n        titlePlaceholder: 'Please input a title…',\n        comment: 'Comment',\n        commentPlaceholder: 'Please enter a comment…',\n        layout: 'Layout',\n        dpi: 'Resolution',\n        format: 'Format',\n        scale: 'Scale',\n        downloadBtnText: 'Create print',\n        printJobErrorMsg: 'Could not generate PDF output',\n        initErrorMsg: 'PDF Generator could not be initialized',\n        outputFormatPlaceholder: 'Please select an output format',\n        resolutionPlaceholder: 'Please select an output quality',\n        managerErrorMessage: 'Error while initializing the export engine'\n      },\n      Footer: {\n        refSystem: 'Reference system',\n        scale: 'Scale',\n        mousePosition: 'Mouse position',\n        imprint: 'Imprint',\n        contact: 'Contact',\n        privacypolicy: 'Privacy'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Error while loading the application',\n        applicationLoadErrorDescription:\n          'The application with ID {{applicationId}} could not be loaded correctly. ' +\n          'You\\'re seeing the default application configuration.',\n        errorMessage: 'Error while loading the application',\n        errorDescription: 'An unexpected error occurred while loading the application.',\n        errorDescriptionAppIdNotSet: 'No application ID given. Please provide the ID as query parameter, e.g. ?applicationId=1909',\n        errorDescriptionAppConfigNotFound: 'The application with ID {{applicationId}} could not be loaded correctly.',\n        errorDescriptionAppConfigStaticNotFound: 'The configuration of the application could not be loaded correctly.',\n        permissionDeniedUnauthorized: 'This application is not public. Authentication required.'\n      },\n      Nominatim: {\n        placeholder: 'Place name, street name, district name, POI, etc.'\n      },\n      UserMenu: {\n        settingsMenuTitle: 'Edit profile',\n        infoMenuTitle: 'About',\n        logoutMenuTitle: 'Logout',\n        loginMenuTitle: 'Login'\n      },\n      WmsTimeSlider: {\n        title: 'Time reference',\n        default: 'No data found'\n      },\n      UploadDataModal: {\n        title: 'Upload data',\n        uploadedDataFolder: 'Uploaded data',\n        description: 'Click or drag file to this area to upload',\n        hint: 'Supported file formats are Shapefile (bundled as *.zip) and GeoTIFF',\n        success: 'Successfully uploaded file {{fileName}} and created layer {{layerName}}',\n        error: {\n          general: 'Error while uploading file {{fileName}}',\n          maxSize: 'The file exceeds the upload limit of {{maxSize}} MB',\n          supportedFormats: 'The given file type does not match the supported ones ({{supportedFormats}})',\n          zipContent: 'Multiple geodatasets within one archive are not supported'\n        }\n      },\n      MultiSearch: {\n        searchInViewBox: 'Search in current extent',\n        searchData: 'Search layer data',\n        searchNominatim: 'Search nominatim',\n        nominatimTitle: 'Nominatim',\n        searchPlaceholder: 'Address and data search…'\n      },\n      EditFeatureDrawer: {\n        featureEditor: 'Feature editor',\n        noLayerFoundError: 'No layer found - the editing is not possible.',\n        isFeatureLockedErrorMsg: 'The selected feature is already being edited in another session.',\n        closeDrawerWarnTitle: 'Do you really want to quit?',\n        closeDrawerWarnContent: 'This will discard any unsaved changes to the feature.'\n      },\n      EditFeatureSwitch: {\n        usageHint: 'Select an existing feature for editing on the map or…',\n        limitedUsageHint: 'To edit please select an object on the map',\n        createFeature: 'Create new feature'\n      },\n      EditFeatureFullForm: {\n        saveErrorMsg: 'Error while saving the feature',\n        deleteErrorMsg: 'Error while deleting the feature'\n      },\n      EditFeatureGeometryToolbar: {\n        draw: 'Draw new geometry',\n        edit: 'Edit geometry',\n        delete: 'Delete geometry',\n        undo: 'Undo',\n        redo: 'Redo'\n      },\n      Attribution: {\n        title: 'Properties',\n        add: 'Add Property',\n        select: 'Please select a geometry first.',\n        submit: 'Apply'\n      },\n      AttributionRow: {\n        missingKey: 'Missing Key',\n        missingValue: 'Missing Value',\n        keyPlaceholder: 'Key',\n        valuePlaceholder: 'Value',\n        keyInUse: 'Key already exists!'\n      },\n      AttributionPopConfirm:{\n        title: 'Delete property?',\n        okText: 'Delete',\n        cancelText: 'Cancel'\n      },\n      ResetButton: {\n        title: 'Reset'\n      },\n      notificationDeleteText:{\n        title: 'Press \"Apply\" to confirm changes.',\n        info: 'Not pressing \"Apply\" will reverse all changes made to this drawing.'\n      },\n      notificationApplyText:{\n        title: 'Changes were applied successfully!'\n      },\n      SaveButton: {\n        title: 'Save'\n      },\n      DeleteButton: {\n        title: 'Delete feature',\n        confirm: 'The feature will be deleted completely. Proceed?'\n      },\n      EditFeatureButton: {\n        title: 'Edit feature'\n      },\n      FeaturePropertyGrid: {\n        key: 'Name',\n        value: 'Value'\n      },\n      PaginationToolbar: {\n        copyAsGeoJson: 'Copy as GeoJSON (incl. geometry)',\n        copyAsObject: 'Copy as object (displayed values only)',\n        editDisabled: 'This layer is not editable',\n        editFeature: 'Edit feature'\n      },\n      JsonModal: {\n        buttonTitle: 'Show {{propertyName}}'\n      },\n      ReferenceTable: {\n        modalTitle: 'Details for {{referenceValue}}',\n        defaultModalTitle: 'Details',\n        defaultRowPlaceholder: 'Click the button to show the details'\n      },\n      EditReferenceTable: {\n        modalTitle: 'Details for {{referenceValue}}',\n        confirmDeleteTitle: 'The referenced feature will be deleted completely. Proceed?'\n      }\n    }\n  }\n};\n","import('./bootstrap');\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface AddLayerModalState {\n  visible: boolean;\n}\n\nconst initialState: AddLayerModalState = {\n  visible: false\n};\n\nconst addLayerModalSlice = createSlice({\n  name: 'addLayerModal',\n  initialState,\n  reducers: {\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = addLayerModalSlice.actions;\n\nexport default addLayerModalSlice.reducer;\n","import {\n  PayloadAction,\n  createSlice\n} from '@reduxjs/toolkit';\n\nimport {\n  Feature\n} from 'geojson';\n\nexport type EditLevel =\n  | 'CREATE'\n  | 'UPDATE'\n  | 'DELETE'\n  | 'EDIT_GEOMETRY'\n  | 'NONE';\nexport interface EditFeatureState {\n  layerId: string | null;\n  feature: Feature | null;\n  userEditMode: EditLevel[];\n  formDirty: boolean;\n}\n\nconst initialState: EditFeatureState = {\n  layerId: null,\n  feature: null,\n  userEditMode: ['NONE'],\n  formDirty: false\n};\n\nconst editFeatureSlice = createSlice({\n  name: 'editFeature',\n  initialState,\n  reducers: {\n    setLayerId(state, action: PayloadAction<string | null>) {\n      state.layerId = action.payload;\n    },\n    setFeature(state, action: PayloadAction<Feature | null>) {\n      state.feature = action.payload;\n    },\n    reset(state) {\n      state.layerId = null;\n      state.feature = null;\n    },\n    setUserEditMode(state, action: PayloadAction<EditLevel[]>) {\n      state.userEditMode = action.payload;\n    },\n    setFormDirty(state, action: PayloadAction<boolean>) {\n      state.formDirty = action.payload;\n    }\n  }\n});\n\nexport const {\n  setLayerId,\n  setFeature,\n  reset,\n  setUserEditMode,\n  setFormDirty\n} = editFeatureSlice.actions;\n\nexport default editFeatureSlice.reducer;\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nconst initialState: boolean = false;\n\nconst editFeatureDrawerOpenSlice = createSlice({\n  name: 'editFeatureDrawerOpen',\n  initialState,\n  reducers: {\n    show() {\n      return true;\n    },\n    hide() {\n      return false;\n    },\n    toggle(state) {\n      return !state;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = editFeatureDrawerOpenSlice.actions;\n\nexport default editFeatureDrawerOpenSlice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport { FeatureInfoConfig } from '../../components/ToolMenu/FeatureInfo';\n\n// eslint-disable-next-line no-shadow\nexport enum CopyTools {\n  COPY_AS_GEOJSON = 'COPY_AS_GEOJSON',\n  COPY_AS_OBJECT = 'COPY_AS_OBJECT'\n}\n\nconst initialState: FeatureInfoConfig = {\n  enabled: false,\n  activeCopyTools: [CopyTools.COPY_AS_GEOJSON, CopyTools.COPY_AS_OBJECT]\n};\n\nexport const slice = createSlice({\n  name: 'featureInfo',\n  initialState,\n  reducers: {\n    setFeatureInfoConfig(state, action: PayloadAction<FeatureInfoConfig>) {\n      state = action.payload;\n    },\n    setFeatureInfoEnabled(state, action: PayloadAction<boolean>) {\n      state.enabled = action.payload;\n    },\n    setFeatureInfoActiveCopyTools(state, action: PayloadAction<CopyTools[]>) {\n      state.activeCopyTools = action.payload;\n    }\n  }\n});\n\nexport const {\n  setFeatureInfoEnabled,\n  setFeatureInfoActiveCopyTools\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  PayloadAction,\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface LayerDetailsModalState {\n  visible: boolean;\n  layerId?: string;\n}\n\nconst initialState: LayerDetailsModalState = {\n  visible: false\n};\n\nconst layerDetailsModalSlice = createSlice({\n  name: 'layerDetailsModal',\n  initialState,\n  reducers: {\n    setLayer(state, action: PayloadAction<string | undefined>) {\n      state.layerId = action.payload;\n    },\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  setLayer,\n  show,\n  hide,\n  toggle\n} = layerDetailsModalSlice.actions;\n\nexport default layerDetailsModalSlice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport { V3CustomMapParams } from '@terrestris/mapfish-print-manager/dist/manager/MapFishPrintV3Manager';\n\nexport type PrintState = {\n  customMapParams?: V3CustomMapParams;\n  customParams?: any;\n};\n\nconst initialState: PrintState = {\n  customMapParams: {},\n  customParams: {\n    printLegend: false\n  }\n};\n\nexport const printSlice = createSlice({\n  name: 'print',\n  initialState,\n  reducers: {\n    setCustomMapParams: (state, action: PayloadAction<V3CustomMapParams>) => {\n      state.customMapParams = action.payload;\n    },\n    setCustomParams: (state, action: PayloadAction<any>) => {\n      state.customParams = action.payload;\n    },\n    addCustomMapParam: (state, action: PayloadAction<Partial<V3CustomMapParams>>) => {\n      state.customMapParams = {\n        ...state.customMapParams,\n        ...action.payload\n      };\n    },\n    addCustomParam: (state, action: PayloadAction<any>) => {\n      state.customParams = {\n        ...state.customParams,\n        ...action.payload\n      };\n    }\n  }\n});\n\nexport const {\n  setCustomMapParams,\n  setCustomParams,\n  addCustomMapParam,\n  addCustomParam\n} = printSlice.actions;\n\nexport default printSlice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nexport type SelectedFeatures = {\n  [layerName: string]: string;\n};\n\nconst initialState: SelectedFeatures = {};\n\nexport const slice = createSlice({\n  name: 'selectedFeatures',\n  initialState,\n  reducers: {\n    setSelectedFeatures(state, action: PayloadAction<SelectedFeatures>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setSelectedFeatures\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: boolean = false;\n\nexport const slice = createSlice({\n  name: 'stylingDrawerVisibility',\n  initialState,\n  reducers: {\n    setStylingDrawerVisibility: (state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setStylingDrawerVisibility\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nexport interface ToolMenuState {\n  activeKeys: string[];\n  availableTools: string[];\n}\n\nconst initialState: ToolMenuState = {\n  // This is the default state. If no config is given, then load all tools\n  activeKeys: [],\n  availableTools: ['default']\n};\n\nexport const slice = createSlice({\n  name: 'toolMenu',\n  initialState,\n  reducers: {\n    setActiveKeys(state, action: PayloadAction<string[]>) {\n      state.activeKeys = [...action.payload];\n    },\n    setAvailableTools(state, action: PayloadAction<string[]>) {\n      state.availableTools = [...action.payload];\n    }\n  }\n});\n\nexport const {\n  setActiveKeys,\n  setAvailableTools\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface UploadDataModalState {\n  visible: boolean;\n}\n\nconst initialState: UploadDataModalState = {\n  visible: false\n};\n\nconst uploadDataModalSlice = createSlice({\n  name: 'uploadDataModal',\n  initialState,\n  reducers: {\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = uploadDataModalSlice.actions;\n\nexport default uploadDataModalSlice.reducer;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","AddLayerModal","restProps","loading","setLoading","useState","layers","setLayers","selectedRowKeys","setSelectedRowKeys","validationStatus","setValidationStatus","url","setUrl","sanitizedUrl","setSanitizedUrl","version","setVersion","isModalVisible","state","addLayerModal","visible","dispatch","map","useMap","t","useTranslation","useEffect","UrlUtil","closeModal","hide","addLayers","layersToAdd","targetFolderName","targetGroup","MapUtil","OlLayerGroup","set","existingGroups","getLayerGroup","getLayers","insertAt","getLength","forEach","layerToAdd","getArray","includes","layerUrl","ImageLayer","getSource","getUrl","TileLayer","urls","getUrls","length","undefined","layerConfig","name","get","type","opacity","getOpacity","sourceConfig","layerNames","getParams","LAYERS","useBearerToken","push","React","Modal","_extends","className","title","open","onCancel","width","footer","SimpleButton","key","disabled","onClick","onAddAll","onAddSelected","filter","layer","getUid","Input","Search","placeholder","value","onChange","evt","target","trim","onSearch","async","capabilities","CapabilitiesUtil","externalLayers","error","notification","message","description","status","enterButton","addonBefore","Select","defaultValue","label","Typography","Table","columns","render","text","record","scroll","y","rowKey","rowSelection","pagination","dataSource","usePlugins","useContext","PluginContext","BasicMapComponent","plugins","i18n","targetGroups","oldName","changeEvent","OlObjectEvent","dispatchEvent","language","pluginComponents","plugin","pluginIntegration","integration","placement","wrappedComponent","WrappedPluginComponent","MapComponent","CookieBanner","getPlugin","cookiePlugin","CookieConsent","disableStyles","location","buttonText","cookieName","buttonClasses","containerClasses","contentClasses","expires","useSHOGunAPIClient","SHOGunAPIClientContext","useExecuteWfsTransaction","client","useCallback","source","opts","OlSourceImageWMS","OlSourceTileWMS","endsWith","slice","defaultHeaders","response","fetch","method","headers","getBearerTokenHeader","getKeycloak","body","XMLSerializer","serializeToString","transaction","ok","Error","responseText","xmlDoc","some","candidate","getElementsByTagName","isFailed","DOMParser","parseFromString","FileUpload","readOnly","fieldConfig","passThroughProps","Upload","multiple","action","withCredentials","getCsrfTokenHeader","onRemove","uuid","file","fileUuid","getBasePath","credentials","onPreview","fileName","fileUrl","_isNil","anchor","document","createElement","appendChild","result","blob","objectUrl","window","URL","createObjectURL","href","download","click","revokeObjectURL","fieldProps","Button","useConvertImageUrl","Promise","reject","onSuccess","onError","reader","FileReader","onload","this","readAsDataURL","e","ImageUpload","initialFileList","mediaPreviewVisible","setMediaPreviewVisible","previewImage","setPreviewImage","defaultFileListWithBlob","setDefaultFileListWithBlob","imageUrlToBase64","useAsyncEffect","fl","fileListPromises","fileList","val","thumbUrl","all","convertDefaultFileList","accept","listType","previewImageUrl","img","FontAwesomeIcon","icon","faPlus","style","marginTop","alt","src","FeatureInfoForm","feature","formConfig","form","useForm","resetFields","setFieldsValue","getProperties","Form","labelCol","span","labelAlign","labelWrap","fieldCfg","Item","propertyName","displayName","DisplayField","ReferenceTable","referenceConfig","isModalOpen","setIsModalOpen","selectedFeature","setSelectedFeature","defaultPropertyName","resolvePlaceholder","tablePropertyName","regex","match","resolved","exec","replace","onDetailsClick","faBoxOpen","OlFeature","setProperties","size","showHeader","getDataSource","parsedValue","JSON","parse","Array","isArray","Logger","maskClosable","destroyOnClose","getModalTitle","referenceValue","featureInfoFormConfig","format","suffix","displayText","Checkbox","checked","Number","isFinite","Intl","NumberFormat","useGrouping","isMoment","join","uploadValue","v","stringify","isFileConfig","getUpload","fileType","startsWith","defaultFileList","isJson","Text","EditReferenceTable","parentForm","defaultSortOrder","sorter","a","b","valA","valB","localeCompare","_","faEdit","Popconfirm","onConfirm","onConfirmDelete","danger","faTrash","parentFormValues","getFieldsValue","deleteCandidates","_cloneDeep","deleteIdx","findIndex","deleteCandidate","id","internalId","splice","onAddClick","valueCopy","Object","entries","isDate","cfg","component","moment","isValid","isUpload","vMap","upload","every","el","onOk","validateFields","updateReferences","formValues","existingReferences","getFieldValue","targetIdx","existingReference","isFieldsTouched","EditFeatureForm","applyFormDirty","uid","_isObject","formDirty","editFeature","createReadOnlyComponent","createFieldComponent","DatePicker","InputNumber","allowClear","Switch","TextArea","referenceTableConfig","editFormConfig","onValuesChange","_debounce","changedValues","setFormDirty","field","formItemProps","rules","required","valuePropName","getValueFromEvent","isGeometryType","propertyType","useExecuteWfsDescribeFeatureType","params","SERVICE","REQUEST","VERSION","OUTPUTFORMAT","TYPENAMES","json","useWriteWfsTransaction","executeWfsDescribeFeatureType","allowedEditMode","userEditMode","cleanFormValues","cleanedValue","children","child","toISOString","filePath","fileInfoList","lastModified","created","inserts","updates","deletes","describeFeatureType","geomProperty","featureTypes","properties","find","property","overallUpdateMode","upsertFeatures","feat","geometry","getGeometry","clone","isEmpty","getExtent","setGeometryName","updateMode","getId","setId","deleteFeatures","transactionOpts","featureNS","targetNamespace","featurePrefix","targetPrefix","featureType","srsName","getView","getProjection","getCode","nativeElements","OlFormatWFS","writeTransaction","ClientConfiguration","rootNode","getRootNode","lockId","createElementNS","lockIdValue","createTextNode","MapDrawer","querySelectorAll","classList","toggle","Drawer","mask","getComputedStyle","documentElement","getPropertyValue","afterOpenChange","onAfterDrawerOpenChange","updateSize","useExecuteGetFeature","featureRequest","writeGetFeature","outputFormat","EditFeatureGeometryToolbar","historyLength","editHistory","useRef","past","future","editLayer","setEditLayer","setRevision","gjFormat","useMemo","OlFormatGeoJson","DigitizeUtil","getDigitizeLayer","removeLayer","current","clear","olFeat","readFeature","addFeature","r","isEmptyOlExtent","fit","padding","undoEdit","editSource","features","getFeatures","writeFeaturesObject","previousSource","_isEmpty","addFeatures","readFeatures","redoEdit","nextSource","onDrawEnd","toLocaleLowerCase","existingFeature","once","e2","removeFeature","setGeometry","updateRevision","btnTooltipProps","tooltipPlacement","tooltipProps","mouseEnterDelay","Toolbar","alignment","ToggleGroup","DrawButton","faPencil","pressedIcon","digitizeLayer","tooltip","drawType","ModifyButton","faDrawPolygon","onModifyStart","onModifyEnd","onTranslateEnd","DeleteButton","onFeatureRemove","faUndo","flip","EditFeatureTabs","tabConfig","initialValues","items","config","idx","forceRender","Tabs","writeWfsTransaction","executeWfsTransaction","isWmsLayer","olFeature","OlFormatGeoJSON","refresh","ResetButton","faRotateLeft","FeedbackIcon","loadComplete","SaveButton","saveCompleted","setSaveCompleted","warn","setTimeout","faFloppyDisk","EditFeatureToolbar","onSaveSuccess","onSaveError","onDeleteSuccess","onDeleteError","EditFeatureFullForm","executeGetFeature","setTabConfig","setInitialValues","errorMsg","setErrorMsg","reloadFeature","updatedFeatures","equalTo","setFeature","update","structuredClone","setPropertiesPromises","tabConfigs","tabCfg","formCfg","parsedDate","parsedJson","fileListWithBlob","isImageFile","isReference","Alert","showIcon","featureId","idString","item","getAttribute","split","formattedErrorMessage","collectedFieldErrors","errorFields","errors","line","index","formatErrorMessage","useExecuteWfsLockFeature","lockFeatureDoc","featureProperties","parseInt","toString","idProperty","typeName","setAttribute","queryElement","filterElement","isEqualToElement","valueReferenceElement","valueReferenceValue","literalElement","literalValue","writeWfsLockFeature","useGetFeatureInfo","onFailure","onSingleClick","coords","coordinate","viewResolution","getResolution","getFeatureInfoUrl","INFO_FORMAT","BUFFER","getTargetElement","cursor","featureCollection","onPointerMove","dragging","data","getData","pixel","Uint8ClampedArray","hit","on","un","EditFeatureSwitch","onLockSuccess","onLockError","onCreate","executeWfsLockFeature","geomType","getGeometryType","coordinates","EditFeatureDrawer","setLayer","isFeatureLocked","setIsFeatureLocked","drawerTitle","setDrawerTitle","isDrawerOpen","editFeatureDrawerOpen","layerId","olLayer","closeDrawer","releaseLock","hideEditFeatureDrawer","reset","onClose","onDrawerClose","confirm","content","okType","Footer","legalInformation","legal","insertPlugins","itemPosition","placementOrientation","insertionIndex","getControls","control","OlControlScaleLine","addControl","OlControlMousePosition","coordinateFormat","createStringXY","projection","openContactModal","contact","openImprintModal","imprint","openPrivacyModal","privacy","getLeftItems","Divider","ScaleCombo","getRightItems","BasicNominatimSearch","viewBox","setViewBox","mapViewProjection","extent","transformedExtent","transformExtent","NominatimSearch","countryCodes","nominatimBaseUrl","generateFuzzySearchQuery","searchParts","part","generateSolrQuery","searchValue","parts","replaceAll","s","subQueriesPerLayer","getAllLayers","searchConfig","fullLayerName","attributes","query","fieldList","isFulfilled","p","MultiSearch","useNominatim","clickAwayRef","searchNominatim","setSearchNominatim","searchData","setSearchData","useViewBox","setUseViewBox","defaultUseViewBox","setSearchValue","resultsVisible","setResultsVisible","settingsVisible","setSettingsVisible","dataSearchResults","setDataSearchResults","highlightingResults","setHighlightingResults","nominatimResults","setNominatimResults","searchResults","setSearchResults","addEventListener","handleClickAway","removeEventListener","parentNode","contains","settingsMenu","performSearch","minChars","resetSearch","calculateExtent","solrBasePath","searchUrl","origin","promises","q","solrQueryConfig","rows","rowsPerQuery","defType","queryParser","qf","coreName","bboxFilter","fq","useSolrHighlighting","hl","tagPre","tagPost","requireFieldMatch","successfulResults","allSettled","pr","dataResults","flatMap","sR","docs","hlResults","assign","sr","highlighting","logger","nominatimUrl","searchParams","getFeatureTitle","dsResult","highlightResult","blacklistedAttributes","displayTemplate","template","token","replaceTemplates","filteredHighlightKeys","keys","propKey","propValue","toLowerCase","indexOf","updatedResults","geoJsonFormat","nFeats","f","geojson","dataProjection","featureProjection","display_name","nResults","wktFormat","OlFormatWKT","categories","_groupBy","res","category","resultCategory","readGeometry","ftName","substring","lastIndexOf","delay","timeout","clearTimeout","actionsCreator","layerStyle","OlStyle","stroke","OlStyleStroke","color","fill","OlStyleFill","image","OlStyleCircle","radius","ref","event","addonAfter","Dropdown","menu","trigger","onOpenChange","SettingOutlined","onFocus","prefix","SearchOutlined","LoadingOutlined","resultRenderer","numTotal","Empty","PRESENTED_IMAGE_SIMPLE","SearchResultsPanel","accordion","searchTerms","toolMenuElement","getElementsByClassName","clientWidth","getSize","SearchField","searchEngines","useSolr","getGravatarUrl","email","rating","defaultImage","force","lowerCaseEmail","md5","ApplicationInfo","opener","appInfo","logoPath","appDescription","isVisible","setVisible","toggleVisibility","Opener","centered","Statistic","PROJECT_VERSION","buildTime","UserMenu","keycloak","user","onMenuClick","accountManagement","login","logout","UserChip","imageSrc","providerDetails","userName","faAngleDown","userMenu","getMenu","faSignIn","username","divider","settings","faUserCog","info","faInfo","faSignOut","enabled","accountRoles","tokenParsed","resource_access","account","roles","itemsForLoggedInUser","Header","getCenterItems","LayerConfiguration","errorMessage","setErrorMessage","layerConfiguration","setLayerConfiguration","getLayerConfiguration","conf","findOne","closable","Spin","spinning","LayerDetails","setCapabilities","getCapabilities","capa","getLayerName","getCapabilitiesUrl","getCapabilitiesLayer","Capability","Layer","layerName","lay","l","Name","getBBox","EX_GeographicBoundingBox","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","getMinScale","MinScaleDenominator","getMaxScale","MaxScaleDenominator","getAbstract","Abstract","getServiceAbstract","Service","getContact","ContactInformation","ContactElectronicMailAddress","getLayerTitle","Title","getAccessConstraints","AccessConstraints","layout","flex","LayerDetailsModal","configurationVisible","setConfigurationVisible","layerDetailsModal","OlLayer","Tooltip","FileTextOutlined","onShowConfigurationClick","hideLayerDetailsModal","setDetailsLayer","hidden","StylingComponent","setStyle","symbolizers","kind","outlineOpacity","fillOpacity","outlineWidth","outlineColor","wellKnownName","strokeColor","strokeOpacity","font","offset","haloColor","haloWidth","olParser","OlParser","drawVectorLayer","olStylePolygon","olStyleLineString","olStylePoint","olStyleText","rule","newStyle","olStyle","writeStyle","output","drawLayerStyleFunction","resolution","geometryType","getType","parseStyles","CardStyle","onStyleChange","StylingDrawer","isStylingDrawerVisible","stylingDrawerVisibility","setStylingDrawerVisibility","Option","LanguageSelect","supportedLanguages","services","resourceStore","lang","changeLanguage","supportedLanguage","toUpperCase","Permalink","layerAttributes","initialPermalink","PermalinkUtil","getVisible","permalink","setPermalink","mailBody","eventKeys","identifierFunction","filterFunction","updatePermalink","updateLayerConfig","externalLayer","clientConfig","registerLayerCallback","layerGroup","layersInGroup","i","layerInGroup","LayerGroup","eventKeyVisibility","eventKeyOpacity","listenerKeyCenter","listenerKeyResolution","mapLayerGroup","unByKey","WhatsAppOutlined","whatsAppUrl","MailOutlined","mailToUrl","CopyOutlined","copy","SHOGunMapFishPrintV3WMSSerializer","MapFishPrintV3WMSSerializer","serialize","serialized","super","baseURL","optsToApply","tileSize","validateSource","MapFishPrintV3TiledWMSSerializer","CustomFieldInput","maxLength","inputText","setInputText","addCustomParam","showCount","LayoutSelect","printManager","onValueChange","setLayout","prevLayoutRef","getLayouts","OutputFormatSelect","outputFormats","setOutputFormat","toLocaleUpperCase","ResolutionSelect","setResolution","setDpi","getDpis","d","ScaleSelect","scale","setScale","updateScale","pmScale","getScale","transformInteraction","getInteractions","MapFishPrintV3Manager","TRANSFORM_INTERACTION_NAME","getScales","toLocaleString","Shared","customParams","FORMAT","LAYER","queryParams","encodeURIComponent","PrintForm","active","customPrintScales","layerBlackList","currentLanguageCode","customMapParams","print","setPrintManager","layerFilter","legendFilter","notBlacklisted","notHidden","printableLayer","SCALE","getPrintableLayers","printLayer","getAttributions","manager","extentLayer","getExtentLayer","allAttributions","currentLayerAttribution","LayerUtil","getLayerAttributionsText","initializeMapProvider","pManagerOpts","getResolutions","units","getUnits","reverse","transformOpts","rotate","serializers","MapFishPrintV3GeoJsonSerializer","MapFishPrintV3OSMSerializer","MapFishPrintV3WMTSSerializer","SHOGunMapFishPrintV3TiledWMSSerializer","toReversed","pManager","init","apps","getPrintApps","setPrintApp","getOutputFormats","attributions","shutdownManager","setCustomParams","setCustomMapParams","onAlertClose","isInitiated","initialValue","handleLayoutChange","setFieldValue","getClosestScaleToFitMap","faDownload","downloadUrl","AttributionRow","keyName","validator","fields","resolve","AutoComplete","o","AttributionDrawer","onCustomClose","isFormValid","setIsFormIsValid","availableFeatureCollectionAttributes","setAvailableFeatureCollectionAttributes","availableFeatureAttributes","setAvailableFeatureAttributes","contextHolder","useNotification","updateAvailableFeatureAttributes","currentKeys","filteredPropertyEntries","OlGeometry","filteredProperties","fromEntries","formProperties","digitizedFeatures","featureCollectionAttributes","Set","prop","add","from","selectInteraction","interaction","Row","onFinish","input","destroy","success","duration","unset","values","autoComplete","changedFields","List","remove","rmFn","getFormItems","okText","cancelText","removeAndMessage","faMinusSquare","htmlType","defaultClassName","DeleteAllButton","finalClassName","ExclamationCircleOutlined","StylingButton","showDrawer","faPaintBrush","Draw","showDrawPoint","showDrawLine","showDrawPolygon","showDrawCircle","showDrawRectangle","showDrawAnnotation","showModifyFeatures","showUploadFeatures","showDeleteFeatures","isAttributeDrawerOpen","setIsAttributeDrawerOpen","selectedButton","setSelectedButton","onGeoJSONUpload","geoJSONFile","fileReader","geoJSONFeatures","GeoJSON","mapProjection","transform","digitizeLayerSource","err","readAsText","selectedName","childProps","pressed","faCircle","faGripLines","faShapes","faCircleNotch","faSquare","faFont","onToggle","faPenToSquare","faEraser","UploadButton","uploadedFiles","files","validity","checkValidityOfUploadFile","faUpload","onGeoJSONDownload","clonedFeatures","clonedFeature","geoJSON","writeFeatures","fileToDownload","Blob","link","removeChild","initVectorLayer","OlSourceVector","featureStyle","OlLayerVector","addLayer","deinitVectorLayer","vectorLayer","PaginationToolbar","exportFilter","activeCopyTools","featureInfo","isEditButtonVisible","isLayerEditable","Pagination","simple","total","pageSize","onEditFeatureBtnClick","geojsonFeatureString","writeFeature","geojsonFeature","setLayerId","showEditFeatureDrawer","CopyTools","COPY_AS_GEOJSON","onCopyAsGeoJSONClick","selectedFeatureClone","propertyEntries","faClipboardCheck","COPY_AS_OBJECT","onCopyAsObjectClick","props","_clone","faClipboardList","FeatureInfoTabs","currentPage","setCurrentPage","activeKey","setActiveKey","vectorLayerName","useHighlightVectorLayer","page","defaultActiveKey","onTabClick","FeatureInfoPropertyGrid","setBlacklistedAttributes","geomAttributes","attributeFilter","getKeys","PropertyGrid","sticky","dataIndex","ellipsis","scrollToFirstRowOnChange","FeatureInfo","queryLayers","setQueryLayers","activeTabKey","setActiveTabKey","featureInfoEnabled","OlLayerImage","OlLayerTile","updateQueryLayers","layerCandidates","mapLayers","changeActiveKey","findMapLayerIndex","unqualifiedMapLayerName","getUnqualifiedLayerName","CoordinateInfo","featureCount","coordinateInfoState","pluginRendererAvailable","allLayers","mapLayerIndex","mapLayer","sort","destroyInactiveTabPane","fetchOpts","serializedFeatures","entry","selectedFeatures","setSelectedFeatures","WmsTimeSlider","setValue","TIME","min","setMin","max","setMax","marks","setMarks","dimension","timeValues","m","default","nearest","NaN","diff","faClock","TimeSlider","updateParams","step","LayerTreeContextMenu","visibleLegendsIds","setVisibleLegendsIds","extentLoading","setExtentLoading","downloadConfig","zoomToLayerExtent","getAllLayerGroups","layerGroups","parentGroups","getParentLayerGroups","parentGroup","removeExternalLayer","externalLayerGroup","uploadedLayerGroup","downloadLayer","reqOpts","dropdownMenuItems","legendVisible","downloadItems","dlConfig","formatName","encodeURI","decodeURI","legendId","newLegendIds","setLayerDetailsLayer","showLayerDetailsModal","faEllipsisV","LoadingIndicator","LayerTree","layerTileLoadCounter","setLayerTileLoadCounter","initialLayersUid","registerTileLoadHandler","hasListener","tileLoadStartListener","tileLoadEndListener","checkListeners","activeLayers","counter","loaded","percent","isInteger","Math","round","RgLayerTree","nodeTitleRenderer","mapView","unit","LayerTransparencySlider","formatter","Legend","extraParams","LEGEND_OPTIONS","TRANSPARENT","forEachFeature","draggable","Measure","showMeasureDistance","showMeasureArea","MeasureButton","geodesic","measureType","continueLineMsg","faPenRuler","continuePolygonMsg","Panel","Collapse","ToolMenu","availableTools","toolMenu","activeKeys","collapsed","setCollapsed","menuTools","setMenuTools","mobileQuery","matchMedia","mobileNavigatorRegEx","RegExp","matches","test","navigator","userAgent","exclusiveTools","tool","lastExclusiveTool","setActiveKeys","setFeatureInfoEnabled","getToolPanelConfig","faRuler","faPalette","showDownloadFeatures","showStyleFeatures","faMousePointer","faFileDownload","faStream","showAdd","authorizedRoles","role","hasResourceRole","clientId","showUpload","faShareNodes","faLanguage","expandIconPosition","destroyInactivePanel","_toArray","getToolPanels","panels","toolPanelConfig","panel","header","faChevronRight","faChevronLeft","Dragger","UploadDataModal","uploadError","setUploadError","uploadSuccess","setUploadSuccess","isUploading","setIsUploading","uploadDataModal","getAttributeType","dbfFieldType","customRequest","splittedFileName","geoServerBaseUrl","base","workspace","Date","now","uploadData","baseUrl","storeName","coverageStoreUrl","coverageUrl","coverage","nativeName","keywords","uploadGeoTiff","shp","Shapefile","load","featureTypeName","featureTypeAttributes","attribute","k","dbfContent","minOccurs","maxOccurs","nillable","binding","shxContent","featureTypeUrl","uploadShapeZip","maxCount","showUploadList","beforeUpload","maxSize","limit","fileSize","supportedFormats","hoverable","SHOGunApplicationUtil","parseTileLayer","search","URLSearchParams","useQueryParams","configString","addLayerGroup","parser","parseLayer","isExternalLayer","isUploadedLayer","groupName","App","useRestoreTransientLayers","loadingMask","createSlice","initialState","authorities","commitHash","userId","reducers","setAppInfo","payload","actions","setDescription","setLegal","setLogoPath","setSearchEngines","setTitle","setUser","dynamicMiddleware","createDynamicMiddleware","createReducer","asyncReducers","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","prepend","LoadingErrorCode","SHOGunAPIClient","getConfigLang","enGB","deDE","plPl","csCZ","setupSHOGunMap","view","parseMapView","application","constrainOnlyCenter","ll","fromLonLat","ur","setConstrainResolution","layersConfig","parseLayerTreeNodes","parseLayerTree","OlMap","controls","OlControlDefaults","zoom","setupDefaultMap","osmLayer","OlSourceOsm","temperatureLayer","eoLayerGroup","backgroundLayerGroup","center","OlView","loadPluginModules","moduleName","moduleUrl","remoteNames","__webpack_init_sharing__","element","parentElement","onerror","head","container","__webpack_share_scopes__","modules","remoteName","module","matchRole","loader","paths","vs","keycloakEnabled","keycloakOnLoad","onLoadAction","keycloakHost","host","keycloakRealm","realm","keycloakClientId","Keycloak","onTokenExpired","updateToken","onLoad","checkLoginIframe","initKeycloak","setKeycloak","applicationIdString","applicationId","APP_ID_NOT_SET","appConfig","shogunClient","APP_UNAUTHORIZED","getApplicationConfiguration","staticAppContextUrl","getStaticApplicationConfiguration","APP_CONFIG_STATIC_NOT_FOUND","APP_CONFIG_NOT_FOUND","defaultLanguage","use","LanguageDetector","initOpts","theme","primaryColor","secondaryColor","complementaryColor","faviconPath","favicon","querySelector","newLink","rel","parseTheme","ConfigProvider","Color","isLight","darken","hexa","setProperty","toolConfig","engines","setFeatureInfoActiveCopyTools","setAvailableTools","setApplicationToStore","subscribe","getState","getAppInfo","getApplicationInfo","setAppInfoToStore","setUserToStore","getUser","userRoles","realm_access","checkRoles","list","featureEditRoles","authorizedRolesForCreate","authorizedRolesForUpdate","authorizedRolesForDelete","authorizedRolesForEditingGeometries","setUserEditMode","setupMap","clientPlugins","resourcePath","exposedPaths","clientPluginModules","clientPluginDefault","PluginComponent","locale","lng","resources","translation","addResourceBundle","replaceReducer","middlewares","mw","addMiddleware","loadPlugins","fallback","SHOGunAPIClientProvider","PluginProvider","Provider","MapContext","getElementById","isInitialized","errorDescription","appId","renderApp","de","clientVersionTitle","backendVersionTitle","addSelectedLayers","addAllLayers","inputPlaceholder","externalWmsFolder","columnTitle","invalidUrlErrorMsg","requestWmsGetCapabilitiesInstruction","processedLayersFolder","button","whatsAppTooltip","mailTooltip","copyTooltip","copiedToClipboard","copyToClipboardFailed","area","clicktodrawline","clicktodrawarea","point","polygon","circle","rectangle","modify","delete","export","deleteAll","confirmMessage","pickColor","usageHint","transparency","noLegendAvailable","layerZoomToExtent","extentError","showLegend","hideLegend","layerDetails","internalConfigurationButtonTooltip","internalConfigurationButtonTooltipPressed","noDataPlaceholder","layerNameLabel","layerTitleLabel","serviceAbstractLabel","abstractLabel","accessConstraintsLabel","capabilitiesUrlLabel","contactLabel","minScaleLabel","maxScaleLabel","bboxLabel","expand","collapse","measure","draw","addWms","layertree","languageSelect","initialTitle","titlePlaceholder","comment","commentPlaceholder","dpi","downloadBtnText","printJobErrorMsg","initErrorMsg","outputFormatPlaceholder","resolutionPlaceholder","managerErrorMessage","refSystem","mousePosition","privacypolicy","Index","applicationLoadErrorMessage","applicationLoadErrorDescription","errorDescriptionAppIdNotSet","errorDescriptionAppConfigNotFound","errorDescriptionAppConfigStaticNotFound","permissionDeniedUnauthorized","Nominatim","settingsMenuTitle","infoMenuTitle","logoutMenuTitle","loginMenuTitle","uploadedDataFolder","hint","general","zipContent","searchInViewBox","nominatimTitle","searchPlaceholder","featureEditor","noLayerFoundError","isFeatureLockedErrorMsg","closeDrawerWarnTitle","closeDrawerWarnContent","limitedUsageHint","createFeature","saveErrorMsg","deleteErrorMsg","edit","undo","redo","Attribution","select","submit","missingKey","missingValue","keyPlaceholder","valuePlaceholder","keyInUse","AttributionPopConfirm","notificationDeleteText","notificationApplyText","EditFeatureButton","FeaturePropertyGrid","copyAsGeoJson","copyAsObject","editDisabled","JsonModal","buttonTitle","modalTitle","defaultModalTitle","defaultRowPlaceholder","confirmDeleteTitle","en","fallbackLng","debug","interpolation","escapeValue","returnNull","initReactI18next","addLayerModalSlice","show","editFeatureSlice","editFeatureDrawerOpenSlice","setFeatureInfoConfig","layerDetailsModalSlice","printSlice","printLegend","addCustomMapParam","uploadDataModalSlice","___CSS_LOADER_EXPORT___"],"sourceRoot":""}