{"version":3,"file":"5450.6043909002d8346a.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/base-util/dist/MathUtil/MathUtil.js","webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-util/dist/Hooks/useGeoLocation/useGeoLocation.js","webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-geo/dist/Button/GeoLocationButton/GeoLocationButton.js","webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-geo/dist/Button/ToggleButton/ToggleButton.js","webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-geo/dist/constants.js","webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-util/dist/Context/MapContext/MapContext.js","webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-util/dist/Hooks/useMap/useMap.js","webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-util/dist/Hooks/useOlLayer/useOlLayer.js"],"sourcesContent":["/**\n * Helper Class for various calculations.\n *\n * @class MathUtil\n */\nclass MathUtil {\n    /**\n     * Converts radians to degrees.\n     *\n     * @param {number} rad The radian value to convert.\n     */\n    static radToDeg = (rad) => rad * 360 / (Math.PI * 2);\n    /**\n     * Converts degrees to radians.\n     *\n     * @param {number} deg The degree value to convert.\n     */\n    static degToRad = (deg) => deg * Math.PI * 2 / 360;\n    /**\n     * Returns the modulo for (negative) values.\n     *\n     * @param {number} n The number.\n     */\n    static mod = (n) => ((n % (2 * Math.PI)) + (2 * Math.PI)) % (2 * Math.PI);\n}\nexport default MathUtil;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport _isNil from 'lodash/isNil';\nimport OlFeature from 'ol/Feature';\nimport OlGeolocation from 'ol/Geolocation';\nimport OlGeomLineString from 'ol/geom/LineString';\nimport OlGeomPoint from 'ol/geom/Point';\nimport OlLayerVector from 'ol/layer/Vector';\nimport { unByKey } from 'ol/Observable';\nimport OlSourceVector from 'ol/source/Vector';\nimport OlStyleIcon from 'ol/style/Icon';\nimport OlStyleStyle from 'ol/style/Style';\nimport MathUtil from '@terrestris/base-util/dist/MathUtil/MathUtil';\nimport useMap from '../useMap/useMap';\nimport { useOlLayer } from '../useOlLayer/useOlLayer';\nimport mapMarkerHeading from './geolocation-marker-heading.png';\nimport mapMarker from './geolocation-marker.png';\n/**\n * This hook allows to debounce a setState.\n */\nexport const useGeoLocation = ({ active, enableTracking = false, follow = false, onError, onGeoLocationChange, showMarker = false, trackingOptions = {\n    enableHighAccuracy: true,\n    maximumAge: 10000,\n    timeout: 600000\n} }) => {\n    const map = useMap();\n    const [actualPosition, setActualPosition] = useState();\n    const trackedLine = useMemo(() => new OlGeomLineString([], 'XYZM'), []);\n    const markerFeature = useMemo(() => new OlFeature(), []);\n    useOlLayer(() => new OlLayerVector({\n        properties: {\n            name: 'react-geo_geolocationlayer'\n        },\n        source: new OlSourceVector({\n            features: [markerFeature]\n        }),\n        style: (feature) => {\n            const heading = feature.get('heading');\n            const src = (Number.isFinite(heading) && heading !== 0) ? mapMarkerHeading : mapMarker;\n            const rotation = (Number.isFinite(heading) && heading !== 0) ? heading * Math.PI / 180 : 0;\n            return [new OlStyleStyle({\n                    image: new OlStyleIcon({\n                        rotation,\n                        src\n                    })\n                })];\n        }\n    }), [], showMarker && active);\n    /**\n     * Callback of the interactions on change event.\n     */\n    const onLocationChanged = useCallback((geoLocationEvent) => {\n        const ac = geoLocationEvent.target;\n        const position = ac.getPosition() ?? [0, 0];\n        const accuracy = ac.getAccuracy();\n        let heading = ac.getHeading() || 0;\n        const speed = ac.getSpeed() || 0;\n        const x = position[0];\n        const y = position[1];\n        const fCoords = trackedLine.getCoordinates();\n        const previous = fCoords[fCoords.length - 1];\n        const prevHeading = previous && previous[2];\n        if (prevHeading) {\n            let headingDiff = heading - MathUtil.mod(prevHeading);\n            // force the rotation change to be less than 180Â°\n            if (Math.abs(headingDiff) > Math.PI) {\n                const sign = (headingDiff >= 0) ? 1 : -1;\n                headingDiff = -sign * (2 * Math.PI - Math.abs(headingDiff));\n            }\n            heading = prevHeading + headingDiff;\n        }\n        trackedLine.appendCoordinate([x, y, heading, Date.now()]);\n        // only keep the 20 last coordinates\n        trackedLine.setCoordinates(trackedLine.getCoordinates().slice(-20));\n        const actualGeoLocation = {\n            position,\n            accuracy,\n            heading,\n            speed\n        };\n        setActualPosition(actualGeoLocation);\n        onGeoLocationChange?.(actualGeoLocation);\n    }, [trackedLine, onGeoLocationChange]);\n    // Geolocation Control\n    const olGeoLocation = useMemo(() => active ? new OlGeolocation({\n        projection: map?.getView().getProjection()\n    }) : undefined, [active, map]);\n    // re-centers the view by putting the given coordinates at 3/4 from the top or\n    // the screen\n    const getCenterWithHeading = useCallback((position, rotation, resolution) => {\n        const size = map?.getSize() ?? [0, 0];\n        const height = size[1];\n        return [\n            position[0] - Math.sin(rotation) * height * resolution / 4,\n            position[1] + Math.cos(rotation) * height * resolution / 4\n        ];\n    }, [map]);\n    useEffect(() => {\n        if (!onError || !olGeoLocation) {\n            return;\n        }\n        const key = olGeoLocation.on('error', onError);\n        return () => {\n            unByKey(key);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [olGeoLocation]);\n    useEffect(() => {\n        if (!olGeoLocation) {\n            return;\n        }\n        const key = olGeoLocation.on('change', onLocationChanged);\n        return () => {\n            unByKey(key);\n        };\n    }, [olGeoLocation, onLocationChanged]);\n    useEffect(() => {\n        olGeoLocation?.setTracking(enableTracking);\n    }, [enableTracking, olGeoLocation]);\n    useEffect(() => {\n        olGeoLocation?.setTrackingOptions(trackingOptions);\n    }, [olGeoLocation, trackingOptions]);\n    useEffect(() => {\n        const deltaMean = 500; // the geolocation sampling period mean in ms\n        // use sampling period to get a smooth transition\n        let m = Date.now() - deltaMean * 1.5;\n        m = Math.max(m, 0);\n        // interpolate position along positions LineString\n        const c = trackedLine.getCoordinateAtM(m, true);\n        if (!_isNil(c)) {\n            if (follow) {\n                map?.getView().setCenter(getCenterWithHeading([c[0], c[1]], -c[2], map?.getView().getResolution() ?? 0));\n                map?.getView().setRotation(-c[2]);\n            }\n            if (showMarker) {\n                const pointGeometry = new OlGeomPoint([c[0], c[1]]);\n                markerFeature.setGeometry(pointGeometry);\n            }\n        }\n    }, [actualPosition, showMarker, follow, map, trackedLine, getCenterWithHeading, markerFeature]);\n    return {\n        actualPosition,\n        trackedLine\n    };\n};\nexport default useGeoLocation;\n//# sourceMappingURL=useGeoLocation.js.map","import { useGeoLocation } from '@terrestris/react-util/dist/Hooks/useGeoLocation/useGeoLocation';\nimport React from 'react';\nimport { CSS_PREFIX } from '../../constants';\nimport ToggleButton from '../ToggleButton/ToggleButton';\nexport const GeoLocationButton = ({ className, follow = false, enableTracking = false, onGeoLocationChange = () => undefined, onError = () => undefined, showMarker = true, trackingOptions, pressed, ...passThroughProps }) => {\n    useGeoLocation({\n        active: !!pressed,\n        enableTracking: pressed,\n        follow,\n        onError,\n        onGeoLocationChange,\n        showMarker,\n        trackingOptions\n    });\n    const finalClassName = className\n        ? `${className} ${CSS_PREFIX}geolocationbutton`\n        : `${CSS_PREFIX}geolocationbutton`;\n    return (React.createElement(ToggleButton, { pressed: pressed, className: finalClassName, ...passThroughProps }));\n};\nexport default GeoLocationButton;\n//# sourceMappingURL=GeoLocationButton.js.map","import './ToggleButton.less';\nimport { Button, Tooltip } from 'antd';\nimport React from 'react';\nimport { CSS_PREFIX } from '../../constants';\nexport const ToggleButton = ({ type = 'primary', pressed = false, tooltipProps = {\n    mouseEnterDelay: 1.5\n}, className, tooltip, tooltipPlacement, pressedIcon, icon, children, value, onClick, onChange = () => { }, ...passThroughProps }) => {\n    const handleChange = (evt) => {\n        if (onClick) {\n            onClick(evt);\n            if (evt.defaultPrevented) {\n                return;\n            }\n        }\n        onChange(evt, value);\n    };\n    const internalClassName = `${CSS_PREFIX}togglebutton`;\n    const finalClassName = className\n        ? `${className} ${internalClassName}`\n        : internalClassName;\n    let pressedClass = '';\n    if (pressed) {\n        pressedClass = ' btn-pressed';\n    }\n    return (React.createElement(Tooltip, { title: tooltip, placement: tooltipPlacement, ...tooltipProps },\n        React.createElement(Button, { type: type, onClick: handleChange, onChange: onChange, className: `${finalClassName}${pressedClass}`, \"aria-pressed\": pressed, icon: pressed ?\n                pressedIcon :\n                icon, ...passThroughProps }, children)));\n};\nexport default ToggleButton;\n//# sourceMappingURL=ToggleButton.js.map","const CSS_PREFIX = 'react-geo-';\nexport { CSS_PREFIX };\n//# sourceMappingURL=constants.js.map","import React from 'react';\nconst MapContext = React.createContext(null);\nexport default MapContext;\n//# sourceMappingURL=MapContext.js.map","import { useContext } from 'react';\nimport MapContext from '../../Context/MapContext/MapContext';\nexport const useMap = () => {\n    return useContext(MapContext);\n};\nexport default useMap;\n//# sourceMappingURL=useMap.js.map","import { useEffect, useState } from 'react';\nimport { isNil } from 'lodash';\nimport useMap from '../useMap/useMap';\n/**\n * This hook adds a layer to the map and removes/updates it if the dependency array changes.\n * It accepts an optional visible parameter that toggles the visible state of the layer. If it is undefined the\n * visible state will not get changed.\n * @param constructor returns a layer to be added to the map, will be called again, if the layer needs\n * to be updated\n * @param dependencies\n * @param visible\n */\nexport const useOlLayer = (constructor, dependencies, visible) => {\n    const map = useMap();\n    const [layer, setLayer] = useState();\n    useEffect(() => {\n        if (!map) {\n            return undefined;\n        }\n        const newLayer = constructor();\n        if (!newLayer) {\n            return undefined;\n        }\n        map.addLayer(newLayer);\n        setLayer(newLayer);\n        return () => {\n            map.removeLayer(newLayer);\n            setLayer(undefined);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [map, ...dependencies]);\n    useEffect(() => {\n        if (!layer || isNil(visible)) {\n            return;\n        }\n        layer.setVisible(visible);\n    }, [layer, visible]);\n    return layer;\n};\nexport default useOlLayer;\n//# sourceMappingURL=useOlLayer.js.map"],"names":["rad","Math","deg","n","active","enableTracking","follow","onError","onGeoLocationChange","showMarker","trackingOptions","map","useMap","actualPosition","setActualPosition","trackedLine","markerFeature","useOlLayer","feature","heading","src","Number","rotation","onLocationChanged","geoLocationEvent","ac","position","accuracy","speed","x","y","fCoords","previous","prevHeading","headingDiff","Date","actualGeoLocation","olGeoLocation","undefined","getCenterWithHeading","resolution","height","size","key","m","deltaMean","c","pointGeometry","GeoLocationButton","className","pressed","passThroughProps","finalClassName","ToggleButton","type","tooltipProps","tooltip","tooltipPlacement","pressedIcon","icon","children","value","onClick","onChange","internalClassName","pressedClass","evt","CSS_PREFIX","constructor","dependencies","visible","layer","setLayer","newLayer"],"mappings":"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"}