{"version":3,"file":"common.de8b8f60bd2aab356c57.js","mappings":"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","sources":["webpack://@terrestris/shogun-gis-client/./src/hooks/useAppDispatch.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useAppSelector.ts","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.less?3a66","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/usePlugins.ts","webpack://@terrestris/shogun-gis-client/./src/components/BasicMapComponent/index.tsx","webpack://@terrestris/shogun-gis-client/./src/plugin/index.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useSHOGunAPIClient.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteWfsTransaction.ts","webpack://@terrestris/shogun-gis-client/./src/components/JsonModal/index.less?cebe","webpack://@terrestris/shogun-gis-client/./src/components/JsonModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/DisplayField/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/FileUpload/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useConvertImageUrl.ts","webpack://@terrestris/shogun-gis-client/./src/components/ImageUpload/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureForm/index.less?0b49","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteWfsDescribeFeatureType.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useWriteWfsTransaction.ts","webpack://@terrestris/shogun-gis-client/./src/components/MapDrawer/index.less?074d","webpack://@terrestris/shogun-gis-client/./src/components/MapDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteGetFeature.ts","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureGeometryToolbar/index.less?cbd2","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureGeometryToolbar/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureTabs/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/DeleteButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/ResetButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/SaveButton/index.less?fbda","webpack://@terrestris/shogun-gis-client/./src/components/FeedbackIcon/index.less?77c8","webpack://@terrestris/shogun-gis-client/./src/components/FeedbackIcon/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/SaveButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureToolbar/index.less?6e4b","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureToolbar/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureFullForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteWfsTransactionLock.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useGetFeatureInfo.ts","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureSwitch/index.less?2952","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureSwitch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/index.less?c362","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.less?bf45","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/BasicNominatimSearch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/MultiSearch/index.less?3fe9","webpack://@terrestris/shogun-gis-client/./src/utils/generateSolrQuery.ts","webpack://@terrestris/shogun-gis-client/./src/components/MultiSearch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/SearchField/index.less?bf24","webpack://@terrestris/shogun-gis-client/./src/components/SearchField/index.tsx","webpack://@terrestris/shogun-gis-client/./src/utils/getGravatarUrl.ts","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.less?5255","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useVersion.ts","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.less?f429","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.less?b06e","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerConfiguration/index.less?9f82","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerConfiguration/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerDetails/index.less?4108","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerDetails/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/index.less?b9d0","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.less?da3b","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.less?76ea","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Serializer/SHOGunMapFishPrintV3WMSSerializer.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Serializer/SHOGunMapFishPrintV3TiledWMSSerializer.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/CustomFieldInput/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/LayoutSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/OutputFormatSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/ResolutionSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/ScaleSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Shared/Shared.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.less?6377","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/index.less?723a","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/StylingComponent/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useHighlightVectorLayer.ts","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoForm/index.less?d0f3","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/PaginationToolbar/index.less?2293","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/PaginationToolbar/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoTabs/index.less?3c46","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoTabs/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?a4df","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.less?7905","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.less?47fb","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/LayerTreeContextMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.less?c926","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.less?beca","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.less?b016","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.less?e08e","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useRestoreTransientLayers.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useQueryParams.ts","webpack://@terrestris/shogun-gis-client/./src/App.less?984e","webpack://@terrestris/shogun-gis-client/./src/App.tsx","webpack://@terrestris/shogun-gis-client/./src/store/appInfo/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/description/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/legal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/logoPath/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/searchEngines/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/title/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/user/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/store.ts","webpack://@terrestris/shogun-gis-client/./src/index.less?df1e","webpack://@terrestris/shogun-gis-client/./src/bootstrap.tsx","webpack://@terrestris/shogun-gis-client/./src/context/PluginContext.tsx","webpack://@terrestris/shogun-gis-client/./src/context/SHOGunAPIClientContext.tsx","webpack://@terrestris/shogun-gis-client/./src/i18n/index.ts","webpack://@terrestris/shogun-gis-client/./src/i18n/translations.ts","webpack://@terrestris/shogun-gis-client/./src/index.tsx","webpack://@terrestris/shogun-gis-client/./src/store/addLayerModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/editFeature/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/editFeatureDrawerOpen/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/layerDetailsModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/print/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/selectedFeatures/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/toolMenu/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/uploadDataModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/App.less?ee38","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.less?6017","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.less?f940","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureForm/index.less?a2dd","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureGeometryToolbar/index.less?141f","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureSwitch/index.less?c38e","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureToolbar/index.less?512e","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/SaveButton/index.less?8e96","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/index.less?8ba3","webpack://@terrestris/shogun-gis-client/./src/components/FeedbackIcon/index.less?78b5","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.less?a2b7","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.less?b02d","webpack://@terrestris/shogun-gis-client/./src/components/JsonModal/index.less?4aac","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.less?bd2b","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerConfiguration/index.less?2da8","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerDetails/index.less?acf5","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/index.less?a101","webpack://@terrestris/shogun-gis-client/./src/components/MapDrawer/index.less?bfb2","webpack://@terrestris/shogun-gis-client/./src/components/MultiSearch/index.less?ea03","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.less?68c2","webpack://@terrestris/shogun-gis-client/./src/components/SearchField/index.less?8fd0","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/index.less?d252","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.less?6534","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoForm/index.less?6db1","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeatureInfoTabs/index.less?fd2b","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?27cc","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/PaginationToolbar/index.less?8e8c","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.less?f3c5","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.less?d8e5","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.less?b29b","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.less?949c","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.less?cb8c","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.less?a168","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.less?25f0","webpack://@terrestris/shogun-gis-client/./src/index.less?2fc8"],"sourcesContent":["import {\n  useDispatch\n} from 'react-redux';\n\nimport type {\n  AppDispatch\n} from '../store/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport default useAppDispatch;\n","import {\n  TypedUseSelectorHook,\n  useSelector\n} from 'react-redux';\n\nimport type {\n  RootState\n} from '../store/store';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport default useAppSelector;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport {\n  Button,\n  Input,\n  Modal,\n  ModalProps,\n  notification,\n  Select,\n  Table\n} from 'antd';\n\nimport {\n  getUid\n} from 'ol';\nimport OlLayerGroup from 'ol/layer/Group';\nimport ImageLayer from 'ol/layer/Image';\nimport TileLayer from 'ol/layer/Tile';\nimport ImageWMSSource from 'ol/source/ImageWMS';\nimport TileWMSSource from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\nimport CapabilitiesUtil from '@terrestris/ol-util/dist/CapabilitiesUtil/CapabilitiesUtil';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport {\n  hide\n} from '../../store/addLayerModal';\n\nimport './index.less';\n\nexport type AddLayerModalProps = {} & Partial<ModalProps>;\n\nexport const AddLayerModal: React.FC<AddLayerModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState(false);\n  const [layers, setLayers] = useState<(ImageLayer<ImageWMSSource> | TileLayer<TileWMSSource>)[]>([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n  const [url, setUrl] = useState(\n    'https://sgx.geodatenzentrum.de/wms_topplus_open'\n  );\n  const [sanitizedUrl, setSanitizedUrl] = useState<string>();\n  const [version, setVersion] = useState<string>('1.3.0');\n\n  const isModalVisible = useAppSelector(state => state.addLayerModal.visible);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    if (!isModalVisible) {\n      return;\n    }\n    setSanitizedUrl(UrlUtil.createValidGetCapabilitiesRequest(url, 'WMS', version));\n  }, [version, isModalVisible, url]);\n\n  const getCapabilities = async () => {\n    if (!sanitizedUrl) {\n      return;\n    }\n    try {\n      setLoading(true);\n\n      const capabilities = await CapabilitiesUtil.getWmsCapabilities(sanitizedUrl);\n      const externalLayers = CapabilitiesUtil.getLayersFromWmsCapabilities(capabilities, 'Title');\n\n      setLayers(externalLayers);\n    } catch (error) {\n      notification.error({\n        message: t('AddLayerModal.errorMessage'),\n        description: t('AddLayerModal.errorDescription')\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const closeModal = () => {\n    setSelectedRowKeys([]);\n    setLayers([]);\n    dispatch(hide());\n  };\n\n  const onAddSelected = () => {\n    const layersToAdd = layers.filter(layer => selectedRowKeys.includes(getUid(layer)));\n    addLayers(layersToAdd);\n  };\n\n  const onAddAll = () => {\n    addLayers(layers);\n  };\n\n  const addLayers = (layersToAdd: (ImageLayer<ImageWMSSource> | TileLayer<TileWMSSource>)[]) => {\n    if (!map) {\n      return;\n    }\n\n    const targetFolderName = t('AddLayerModal.externalWmsFolder');\n    let targetGroup = MapUtil.getLayerByName(map, targetFolderName) as OlLayerGroup;\n\n    if (!targetGroup) {\n      targetGroup = new OlLayerGroup({\n        layers: []\n      });\n      targetGroup.set('name', targetFolderName);\n      const existingGroups = map.getLayerGroup().getLayers();\n      existingGroups.insertAt(existingGroups?.getLength() || 0, targetGroup);\n    }\n\n    layersToAdd.forEach(layerToAdd => {\n      if (!targetGroup.getLayers().getArray().includes(layerToAdd)) {\n        layerToAdd.set('isExternalLayer', true);\n\n        let layerUrl: string | undefined;\n        if (layerToAdd instanceof ImageLayer) {\n          layerUrl = layerToAdd.getSource()?.getUrl();\n        }\n\n        if (layerToAdd instanceof TileLayer) {\n          const urls = layerToAdd.getSource()?.getUrls();\n          layerUrl = urls?.length === 1 ? urls[0] : undefined;\n        }\n\n        const layerConfig = {\n          name: layerToAdd.get('name'),\n          type: layerToAdd instanceof TileLayer ? 'TILEWMS' : 'WMS',\n          opacity: layerToAdd.getOpacity(),\n          sourceConfig: {\n            layerNames: layerToAdd.getSource()?.getParams().LAYERS,\n            url: layerUrl,\n            useBearerToken: false\n          }\n        };\n        layerToAdd.set('layerConfig', layerConfig);\n        targetGroup.getLayers().push(layerToAdd);\n      }\n    });\n\n    closeModal();\n  };\n\n  return (\n    <Modal\n      className=\"add-layer-modal\"\n      title={t('AddLayerModal.title')}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={600}\n      footer={[\n        <Button\n          aria-label='add-all'\n          key=\"add-all\"\n          disabled={layers?.length < 1}\n          onClick={onAddAll}\n        >\n          {t('AddLayerModal.addAllLayers')}\n        </Button>,\n        <Button\n          aria-label='add-selected'\n          key=\"add-selected\"\n          disabled={selectedRowKeys?.length < 1}\n          onClick={onAddSelected}\n        >\n          {t('AddLayerModal.addSelectedLayers')}\n        </Button>\n      ]}\n      {...restProps}\n    >\n      <Input.Search\n        aria-label='input-search'\n        placeholder={t('AddLayerModal.inputPlaceholder')}\n        value={url}\n        onChange={(event) => {\n          setUrl(event.target.value);\n        }}\n        onSearch={getCapabilities}\n        enterButton={true}\n        addonBefore={\n          <Select\n            aria-label='select-version'\n            defaultValue='1.3.0'\n            onChange={setVersion}\n            options={[\n              {\n                value: '1.3.0',\n                label: `${t('AddLayerModal.version')} 1.3.0`\n              },\n              {\n                value: '1.1.1',\n                label: `${t('AddLayerModal.version')} 1.1.1`\n              }\n            ]}\n          >\n          </Select>\n        }\n      />\n      <Table\n        aria-label='wms-table'\n        loading={loading}\n        columns={[\n          {\n            title: t('AddLayerModal.columnTitle'),\n            render: (text: any, record: any) => {\n              return record.get('title');\n            }\n          }\n        ]}\n        rowKey={(record: any) => getUid(record)}\n        rowSelection={{\n          selectedRowKeys,\n          onChange: setSelectedRowKeys\n        }}\n        pagination={false}\n        dataSource={layers}\n      />\n    </Modal>\n  );\n};\n\nexport default AddLayerModal;\n","import { useContext } from 'react';\n\nimport PluginContext from '../context/PluginContext';\n\nimport { ClientPluginInternal } from '../plugin';\n\nexport const usePlugins = (): ClientPluginInternal[] => {\n  return useContext(PluginContext);\n};\n\nexport default usePlugins;\n","import React, {\n  useEffect\n} from 'react';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport { ObjectEvent as OlObjectEvent } from 'ol/Object';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport MapComponent, {\n  MapComponentProps\n} from '@terrestris/react-geo/dist/Map/MapComponent/MapComponent';\n\nimport usePlugins from '../../hooks/usePlugins';\n\nimport {\n  isMapIntegration\n} from '../../plugin';\n\nexport const BasicMapComponent: React.FC<Partial<MapComponentProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const plugins = usePlugins();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  /**\n   * Updates external layer group name when language changes.\n   */\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const targetGroups = MapUtil.getLayersByProperty(map, 'isExternalLayerGroup', true);\n    if (targetGroups?.length !== 1) {\n      return;\n    }\n    const targetGroup = targetGroups[0];\n    const oldName = targetGroups[0].get('name');\n    targetGroup.set('name', t('AddLayerModal.externalWmsFolder'));\n    const changeEvent = new OlObjectEvent('change:layers', 'name', oldName);\n    targetGroup.dispatchEvent(changeEvent);\n  }, [i18n.language, map, t]);\n\n  const pluginComponents: JSX.Element[] = [];\n\n  if (plugins) {\n    plugins.forEach(plugin => {\n      if (isMapIntegration(plugin.integration)) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        pluginComponents.push(\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  }\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <MapComponent\n      map={map}\n      {...restProps}\n    >\n      {\n        pluginComponents\n      }\n    </MapComponent>\n  );\n};\n\nexport default BasicMapComponent;\n","import type {\n  IconDefinition\n} from '@fortawesome/fontawesome-common-types';\n\nimport type {\n  Reducer\n} from '@reduxjs/toolkit';\n\nimport { CollapsePanelProps } from 'antd';\nimport type OlMap from 'ol/Map';\n\nimport type SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nexport type ClientPluginLocale = {\n  [locale: string]: {\n    translation: {\n      [key: string]: any;\n    };\n  };\n};\n\nexport type ClientPluginComponentProps = {\n  map?: OlMap;\n  client?: SHOGunAPIClient;\n};\n\nexport type ClientPluginIntegration = {\n  /**\n   * The main identifier of the integration point of the plugin.\n   */\n  placement: string;\n};\n\nexport type ClientPluginIntegrationToolMenu = ClientPluginIntegration &\n  Omit<CollapsePanelProps, 'key' | 'header'> & {\n  placement: 'tool-menu';\n  /**\n   * The label for the plugin in the tool menu.\n   */\n  label?: string;\n  /**\n   * The insertion index for the plugin in the tool menu, starting from 0 which is on top.\n   */\n  insertionIndex?: number;\n  /**\n   * The icon for the plugin in the tool menu.\n   */\n  icon?: IconDefinition;\n};\n\nexport type HeaderPlacementOrientation = 'left' | 'center' | 'right';\n\nexport type ClientPluginIntegrationHeader = ClientPluginIntegration & {\n  placement: 'header';\n  /**\n   * The placement orientation for the plugin in the header.\n   */\n  placementOrientation: HeaderPlacementOrientation;\n  /**\n   * The insertion index for the plugin in the header, starting from 0 which is on the left.\n   */\n  insertionIndex?: number;\n};\n\nexport type ClientPluginIntegrationFeatureInfo = ClientPluginIntegration & {\n  placement: 'feature-info';\n  /**\n   * The list of layer names the plugin component should be rendered for. If not\n   * specified, the component will be rendered for all layers.\n   */\n  layers?: string[];\n};\n\nexport type ClientPluginIntegrationMap = ClientPluginIntegration & {\n  placement: 'map';\n};\n\nexport type FooterPlacementOrientation = 'left' | 'right';\n\nexport type ClientPluginIntegrationFooter = ClientPluginIntegration & {\n  placement: 'footer';\n  /**\n  * The placement orientation for the plugin in the footer.\n  */\n  placementOrientation: FooterPlacementOrientation;\n  /**\n  * The insertion index for the plugin in the footer, starting from 0 which is on the left.\n  */\n  insertionIndex?: number;\n};\n\nexport type ClientPluginIntegrations = ClientPluginIntegrationToolMenu | ClientPluginIntegrationHeader |\n  ClientPluginIntegrationFeatureInfo | ClientPluginIntegrationMap | ClientPluginIntegrationFooter;\n\nexport type ClientPlugin = {\n  /**\n   * The key of the plugin, usually used for internal references (e.g. element class names) only.\n   */\n  key: string;\n  /**\n   * The definition of the integration point.\n   */\n  integration: ClientPluginIntegrations;\n  /**\n   * The actual component of the plugin.\n   */\n  component: React.FunctionComponent<ClientPluginComponentProps>;\n  /**\n   * The i18n definition to be used in the plugin.\n   */\n  i18n?: ClientPluginLocale;\n  /**\n   * A set of redux reducers to be used in the plugin.\n   */\n  reducers?: {\n    [key: string]: Reducer;\n  };\n};\n\nexport type ClientPluginInternal = ClientPlugin & {\n  wrappedComponent: React.FunctionComponent<ClientPluginComponentProps>;\n};\n\nexport function isToolMenuIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationToolMenu {\n  return pluginIntegration && pluginIntegration.placement === 'tool-menu';\n}\n\nexport function isHeaderIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationHeader {\n  return pluginIntegration && pluginIntegration.placement === 'header';\n}\n\nexport function isFeatureInfoIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationFeatureInfo {\n  return pluginIntegration && pluginIntegration.placement === 'feature-info';\n}\n\nexport function isMapIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationMap {\n  return pluginIntegration && pluginIntegration.placement === 'map';\n}\n\nexport function isFooterIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationFooter {\n  return pluginIntegration && pluginIntegration.placement === 'footer';\n}\n","import { useContext } from 'react';\n\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nimport SHOGunAPIClientContext from '../context/SHOGunAPIClientContext';\n\nexport const useSHOGunAPIClient = (): SHOGunAPIClient | null => {\n  return useContext(SHOGunAPIClientContext);\n};\n\nexport default useSHOGunAPIClient;\n","import {\n  useCallback\n} from 'react';\n\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type ExecuteWfsTransactionOpts = {\n  layer: WmsLayer;\n  transaction: Node;\n};\n\nexport const useExecuteWfsTransaction = () => {\n  const client = useSHOGunAPIClient();\n\n  const executeWfsTransaction = useCallback(async (opts: ExecuteWfsTransactionOpts) => {\n    let url;\n\n    const source = opts.layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = (source as OlSourceImageWMS).getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = (source as OlSourceTileWMS).getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const defaultHeaders = {\n      'Content-Type': 'application/xml'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: opts.layer?.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders,\n      body: new XMLSerializer().serializeToString(opts.transaction)\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response while executing a WFS-Transaction');\n    }\n\n    const responseText = await response.text();\n\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'text/xml');\n\n    // TODO Make detection more robust\n    const transactionStatusFailed = xmlDoc.getElementsByTagName('wfs:FAILED');\n\n    if (transactionStatusFailed.length > 0) {\n      throw new Error(`Something failed: ${responseText}`);\n    }\n\n    return responseText;\n  }, [client]);\n\n  return executeWfsTransaction;\n};\n\nexport default useExecuteWfsTransaction;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faBoxOpen\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport Editor from '@monaco-editor/react';\n\nimport {\n  Button,\n  Modal,\n  ModalProps\n} from 'antd';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport './index.less';\n\nexport type ValueType = string | number | boolean | moment.Moment;\n\nexport type JsonModalProps = {\n  value?: string;\n  label?: string;\n} & ModalProps;\n\nexport const JsonModal: React.FC<JsonModalProps> = ({\n  value,\n  label,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const {\n    t\n  } = useTranslation();\n\n  const onButtonClick = () => {\n    setIsOpen(true);\n  };\n\n  const onCancel = () => {\n    setIsOpen(false);\n  };\n\n  if (!value) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Button\n        className='json-modal-button'\n        title={t('JsonModal.buttonTitle', {\n          propertyName: label\n        })}\n        onClick={onButtonClick}\n        icon={(\n          <FontAwesomeIcon\n            icon={faBoxOpen}\n          />\n        )}\n      >\n        {t('JsonModal.buttonTitle', {\n          propertyName: label\n        })}\n      </Button>\n      <Modal\n        open={isOpen}\n        onCancel={onCancel}\n        width={800}\n        title={label}\n        footer={false}\n        {...passThroughProps}\n      >\n        <Editor\n          height=\"500px\"\n          language=\"json\"\n          value={JSON.stringify(JSON.parse(value), null, '  ')}\n          options={{\n            automaticLayout: true,\n            readOnly: true,\n            lineNumbers: 'off',\n            scrollBeyondLastLine: false,\n            minimap: {\n              enabled: false\n            },\n            scrollbar: {\n              useShadows: false\n            },\n            showFoldingControls: 'always',\n            selectionHighlight: false,\n            renderLineHighlight: 'none',\n            occurrencesHighlight: false\n          }}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default JsonModal;\n","import React from 'react';\n\nimport {\n  Typography\n} from 'antd';\n\nimport {\n  isMoment\n} from 'moment';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport JsonModal from '../JsonModal';\n\nexport type ValueType = string | number | boolean | moment.Moment;\n\nexport type DisplayFieldProps = {\n  format?: string;\n  suffix?: string;\n  value?: ValueType | ValueType[];\n  label?: string;\n};\n\nexport const DisplayField: React.FC<DisplayFieldProps> = ({\n  format = 'DD.MM.YYYY',\n  suffix,\n  value,\n  label,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const {\n    t\n  } = useTranslation();\n\n  let displayText: string = '';\n\n  if (typeof value === 'string') {\n    displayText = value;\n  }\n\n  if (typeof value === 'boolean') {\n    displayText = value ? t('DisplayField.yesText') : t('DisplayField.noText');\n  }\n\n  if (Number.isFinite(value)) {\n    displayText = new Intl.NumberFormat().format(Number(value));\n  }\n\n  if (isMoment(value)) {\n    displayText = value.format(format);\n  }\n\n  if (Array.isArray(value)) {\n    displayText = value.join(', ');\n  }\n\n  const isJson = (val: ValueType | ValueType[]): val is string => {\n    let v = typeof val !== 'string' ? JSON.stringify(val) : val;\n\n    try {\n      v = JSON.parse(v);\n    } catch (e) {\n      return false;\n    }\n\n    return typeof v === 'object' && v !== null;\n  };\n\n  if (value && isJson(value)) {\n    return (\n      <JsonModal\n        value={value}\n        label={label}\n      />\n    );\n  }\n\n  return (\n    <Typography.Text\n      className=\"displayfield\"\n      {...passThroughProps}\n    >\n      {displayText}{displayText && suffix ? ` ${suffix}` : ''}\n    </Typography.Text>\n  );\n};\n\nexport default DisplayField;\n","import React from 'react';\n\nimport {\n  Upload,\n  Button\n} from 'antd';\n\nimport {\n  UploadFile\n} from 'antd/lib/upload/interface';\n\nimport _debounce from 'lodash/debounce';\nimport _isNil from 'lodash/isNil';\nimport _isObject from 'lodash/isObject';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport ShogunFile from '@terrestris/shogun-util/dist/model/File';\nimport {\n  PropertyFormItemEditConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\nimport {\n  getCsrfTokenHeader\n} from '@terrestris/shogun-util/dist/security/getCsrfTokenHeader';\n\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nexport type FileUploadProps = {\n  fieldConfig: PropertyFormItemEditConfig;\n};\n\nexport const FileUpload: React.FC<FileUploadProps> = ({\n  fieldConfig,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const client = useSHOGunAPIClient();\n  const {\n    t\n  } = useTranslation();\n\n  /**\n   * Workaround which allows to download files that need authentication.\n   */\n  const showPreview = async (file: UploadFile<ShogunFile>) => {\n    if (!client) {\n      return;\n    }\n    const { response } = file;\n    const fileName = response?.fileName;\n    const fileUrl = `/files/${response?.fileUuid}`;\n\n    if (_isNil(fileName) || _isNil(response?.fileUuid)) {\n      return;\n    }\n\n    const anchor = document.createElement('a');\n    document.body.appendChild(anchor);\n\n    const opts = {\n      headers: { ... getBearerTokenHeader(client.getKeycloak())}\n    };\n\n    const result = await fetch(fileUrl, opts);\n    const blob = await result.blob();\n    let objectUrl = window.URL.createObjectURL(blob);\n\n    anchor.href = objectUrl;\n    anchor.download = fileName;\n    anchor.click();\n    window.URL.revokeObjectURL(objectUrl);\n  };\n\n  const removeFile = async (file: UploadFile<ShogunFile>) => {\n    const uuid = file?.response?.fileUuid;\n    if (uuid) {\n      const url = `${client?.getBasePath()}files/${uuid}`;\n      return await fetch(url, {\n        method: 'DELETE',\n        credentials: 'same-origin',\n        headers: {\n          ...getCsrfTokenHeader(),\n          ...getBearerTokenHeader(client?.getKeycloak())\n        }\n      });\n    }\n  };\n\n  if (!client) {\n    return <></>;\n  }\n\n  return (\n    <Upload\n      multiple\n      name='file'\n      action='/files/uploadToFileSystem'\n      withCredentials={true}\n      headers={{\n        ...getCsrfTokenHeader(),\n        ...getBearerTokenHeader(client.getKeycloak())\n      }}\n      onRemove={removeFile}\n      onPreview={showPreview}\n      {...fieldConfig?.fieldProps}\n      {...passThroughProps}\n    >\n      <Button>{t('FileUpload.upload')}</Button>\n    </Upload>\n  );\n};\n\nexport default FileUpload;\n","import {\n  useCallback\n} from 'react';\n\nimport _isNil from 'lodash/isNil';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport const useConvertImageUrl = () => {\n  const client = useSHOGunAPIClient();\n\n  const imageUrlToBase64 = useCallback(async (url: string) => {\n    if (_isNil(url)) {\n      return Promise.reject();\n    }\n\n    const response = await fetch(url, {\n      credentials: 'include',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak())\n      }\n    });\n\n    const blob = await response.blob();\n    return new Promise<string>((onSuccess, onError) => {\n      try {\n        const reader = new FileReader() ;\n        reader.onload = function () { onSuccess(this.result as string); };\n        reader.readAsDataURL(blob);\n      } catch (e) {\n        onError(e);\n      }\n    });\n  }, [client]);\n\n  return imageUrlToBase64;\n};\n\nexport default useConvertImageUrl;\n","import React, { useState } from 'react';\n\nimport {\n  faPlus\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Upload,\n  Modal\n} from 'antd';\n\nimport {\n  UploadFile\n} from 'antd/lib/upload/interface';\n\nimport _debounce from 'lodash/debounce';\nimport _isNil from 'lodash/isNil';\nimport _isObject from 'lodash/isObject';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport ShogunFile from '@terrestris/shogun-util/dist/model/File';\nimport {\n  PropertyFormItemEditConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\nimport {\n  getCsrfTokenHeader\n} from '@terrestris/shogun-util/dist/security/getCsrfTokenHeader';\n\nimport useConvertImageUrl from '../../hooks/useConvertImageUrl';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nexport type ImageUploadProps = {\n  fieldConfig: PropertyFormItemEditConfig;\n};\n\nexport const ImageUpload: React.FC<ImageUploadProps> = ({\n  fieldConfig,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const [mediaPreviewVisible, setMediaPreviewVisible] = useState<boolean>(false);\n  const [previewImage, setPreviewImage] = useState<string>('');\n\n  const client = useSHOGunAPIClient();\n  const imageUrlToBase64 = useConvertImageUrl();\n  const {\n    t\n  } = useTranslation();\n\n  /**\n   * Shows preview of clicked uploaded image.\n   * @param {Object} file Image file object.\n   */\n  const showImagePreview = async (file: UploadFile<ShogunFile>) => {\n    const { response } = file;\n    if (_isNil(response) || _isNil(response?.fileUuid)) {\n      return;\n    }\n    const previewImageUrl = `${client?.getBasePath()}imagefiles/${response.fileUuid}`;\n    const img = await imageUrlToBase64(previewImageUrl);\n    setPreviewImage(img);\n    setMediaPreviewVisible(true);\n  };\n\n  const removeFile = async (file: UploadFile<ShogunFile>) => {\n    const uuid = file?.response?.fileUuid;\n    if (uuid) {\n      const url = `${client?.getBasePath()}imagefiles/${uuid}`;\n      return await fetch(url, {\n        method: 'DELETE',\n        credentials: 'same-origin',\n        headers: {\n          ...getCsrfTokenHeader(),\n          ...getBearerTokenHeader(client?.getKeycloak())\n        }\n      });\n    }\n  };\n\n  if (!client) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Upload\n        accept=\"image/*\"\n        multiple\n        name=\"file\"\n        action={`${client.getBasePath()}imagefiles/uploadToFileSystem`}\n        withCredentials={true}\n        listType=\"picture-card\"\n        headers={{\n          ...getCsrfTokenHeader(),\n          ...getBearerTokenHeader(client.getKeycloak())\n        }}\n        onRemove={removeFile}\n        onPreview={showImagePreview}\n        {...fieldConfig?.fieldProps}\n        {...passThroughProps}\n      >\n        <div>\n          <FontAwesomeIcon icon={faPlus} />\n          <div style={{ marginTop: 8 }}>{t('ImageUpload.upload')}</div>\n        </div>\n      </Upload>\n      <Modal\n        open={mediaPreviewVisible}\n        footer={null}\n        onCancel={() => setMediaPreviewVisible(false)}\n      >\n        <img\n          alt=\"example\"\n          style={{ width: '100%' }}\n          src={previewImage}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default ImageUpload;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  Input,\n  InputNumber,\n  DatePicker,\n  Select,\n  Switch,\n  Checkbox,\n  Form,\n  FormItemProps\n} from 'antd';\n\nimport {\n  FormInstance,\n  FormProps\n} from 'antd/lib/form/Form';\nimport {\n  UploadChangeParam, UploadFile\n} from 'antd/lib/upload/interface';\n\nimport _debounce from 'lodash/debounce';\nimport _isNil from 'lodash/isNil';\nimport _isObject from 'lodash/isObject';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport ShogunFile from '@terrestris/shogun-util/dist/model/File';\n\nimport {\n  PropertyFormItemEditConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\nimport {\n  setFormDirty\n} from '../../../store/editFeature';\nimport DisplayField from '../../DisplayField';\nimport FileUpload from '../../FileUpload';\nimport ImageUpload from '../../ImageUpload';\n\nimport './index.less';\n\nexport type EditFeatureFormProps = FormProps & {\n  formConfig?: PropertyFormItemEditConfig[];\n  form: FormInstance;\n};\n\nexport function isFileConfig(val: any): val is UploadFile<ShogunFile> {\n  if (_isNil(val)) {\n    return false;\n  }\n\n  return val.uid &&\n    !_isNil(val.name) &&\n    !_isNil(val.type) &&\n    !_isNil(val.uid) &&\n    _isObject(val.response) &&\n    !_isNil(val.response.id) &&\n    !_isNil(val.response.fileUuid) &&\n    !_isNil(val.response.fileName) &&\n    !_isNil(val.response.fileType);\n};\n\nexport const EditFeatureForm: React.FC<EditFeatureFormProps> = ({\n  formConfig,\n  form,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const client = useSHOGunAPIClient();\n  const dispatch = useAppDispatch();\n  const {\n    t\n  } = useTranslation();\n\n  const formDirty = useAppSelector(\n    state => state.editFeature.formDirty\n  );\n\n  const createFormItem = (fieldCfg: PropertyFormItemEditConfig): React.ReactNode => {\n    let field: React.ReactNode;\n    if (fieldCfg.readOnly) {\n      field = createReadOnlyComponent(fieldCfg);\n    } else if (fieldCfg.component) {\n      field = createFieldComponent(fieldCfg);\n    } else {\n      Logger.warn('FieldConfig is missing `readOnly`, `component` or `dataType` property.');\n      field = (\n        <Input\n          key={fieldCfg.propertyName}\n          placeholder=\"\"\n        />\n      );\n    }\n\n    const formItemProps: FormItemProps = {\n      rules: []\n    };\n\n    formItemProps.rules = [{\n      required: fieldCfg.required\n    }];\n\n    if ((fieldCfg.component === 'SWITCH' || fieldCfg.component === 'CHECKBOX') && !fieldCfg.readOnly) {\n      formItemProps.valuePropName = 'checked';\n    }\n\n    if (fieldCfg.component === 'UPLOAD' && !fieldCfg.readOnly) {\n      formItemProps.valuePropName = 'fileList';\n      /**\n       * Setting `getValueFromEvent` to provide the proper file list to the antd Upload component.\n       */\n      formItemProps.getValueFromEvent = (e: UploadFile<ShogunFile>[] | UploadChangeParam<UploadFile<ShogunFile>>) => {\n        if (Array.isArray(e)) {\n          return e;\n        }\n        return e && e.fileList;\n      };\n    }\n\n    return (\n      <Form.Item\n        key={fieldCfg.propertyName}\n        name={fieldCfg.propertyName}\n        label={fieldCfg.displayName || fieldCfg.propertyName}\n        {...formItemProps}\n        {...fieldCfg.fieldProps}\n      >\n        {field}\n      </Form.Item>\n    );\n  };\n\n  const createReadOnlyComponent = (fieldConfig: PropertyFormItemEditConfig): React.ReactNode => {\n    return (\n      <DisplayField\n        {...fieldConfig.fieldProps}\n      />\n    );\n  };\n\n  const createFieldComponent = (fieldCfg: PropertyFormItemEditConfig): React.ReactNode => {\n    if (!client) {\n      return;\n    }\n\n    switch (fieldCfg.component) {\n      case 'CHECKBOX':\n        return (\n          <Checkbox\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'DATE':\n        return (\n          <DatePicker\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'DISPLAY':\n        return (\n          <span {...fieldCfg?.fieldProps} />\n        );\n      case 'INPUT':\n        return (\n          <Input\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'NUMBER':\n        return (\n          <InputNumber\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'SELECT':\n        return (\n          <Select\n            allowClear={true}\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'SWITCH':\n        return (\n          <Switch\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'TEXTAREA':\n        return (\n          <Input.TextArea\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'UPLOAD':\n        if (fieldCfg?.fieldProps?.type === 'IMAGE') {\n          return (\n            <ImageUpload\n              {...fieldCfg?.fieldProps}\n            />\n          );\n        } else {\n          return (\n            <FileUpload\n              {...fieldCfg?.fieldProps}\n            />\n          );\n        }\n      default:\n        Logger.error(`Component type \"${fieldCfg?.component}\" is not supported`);\n        return <></>;\n    }\n  };\n\n  const onValuesChange = async (changedValues: any) => {\n    if (changedValues && !formDirty) {\n      dispatch(setFormDirty(true));\n    }\n  };\n\n  return (\n    <Form\n      className=\"edit-feature-form\"\n      form={form}\n      labelCol={{\n        span: 8\n      }}\n      labelAlign=\"left\"\n      labelWrap\n      onValuesChange={_debounce(onValuesChange, 250)}\n      {...passThroughProps}\n    >\n      { formConfig?.map(createFormItem) }\n    </Form>\n  );\n};\n\nexport default EditFeatureForm;\n","import {\n  useCallback\n} from 'react';\n\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type LocalGeometryType = 'MultiPoint' | 'Point' | 'MultiLineString' | 'LineString' | 'MultiPolygon' | 'Polygon';\nexport type GeometryType = 'gml:MultiPoint' | 'gml:Point' | 'gml:MultiLineString' | 'gml:LineString' | 'gml:MultiPolygon' | 'gml:Polygon';\n\nexport type Property = {\n  localType: 'int' | 'number' | 'string' | 'boolean' | 'date' | LocalGeometryType;\n  maxOccurs: 0 | 1;\n  minOccurs: 0 | 1;\n  name: string;\n  nillable: boolean;\n  type: 'xsd:int' | 'xsd:number' | 'xsd:string' | 'xsd:boolean' | 'xsd:date' | GeometryType;\n};\n\nexport type FeatureType = {\n  typeName: string;\n  properties: Property[];\n};\n\nexport type DescribeFeatureType = {\n  elementFormDefault: string;\n  featureTypes: FeatureType[];\n  targetNamespace: string;\n  targetPrefix: string;\n};\n\nexport const isGeometryType = (propertyType: string): propertyType is GeometryType => {\n  const geometryTypes = [\n    'gml:MultiPoint',\n    'gml:Point',\n    'gml:MultiLineString',\n    'gml:LineString',\n    'gml:MultiPolygon',\n    'gml:Polygon'\n  ];\n\n  return geometryTypes.includes(propertyType);\n};\n\nexport const useExecuteWfsDescribeFeatureType = () => {\n  const client = useSHOGunAPIClient();\n\n  const executeWfsDescribeFeatureType = useCallback(async (layer: WmsLayer) => {\n    let url;\n\n    const source = layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = (source as OlSourceImageWMS).getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = (source as OlSourceTileWMS).getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const params = {\n      SERVICE: 'WFS',\n      REQUEST: 'DescribeFeatureType',\n      VERSION: '2.0.0',\n      OUTPUTFORMAT: 'application/json',\n      TYPENAMES: layer.getSource()?.getParams().LAYERS\n    };\n\n    const defaultHeaders = {\n      'Content-Type': 'application/json'\n    };\n\n    const response = await fetch(`${url}?${UrlUtil.objectToRequestString(params)}`, {\n      method: 'GET',\n      headers: layer.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response while executing a WFS-Transaction');\n    }\n\n    return await response.json() as DescribeFeatureType;\n  }, [client]);\n\n  return executeWfsDescribeFeatureType;\n};\n\nexport default useExecuteWfsDescribeFeatureType;\n","import {\n  useCallback\n} from 'react';\n\nimport {\n  FormInstance\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _isObject from 'lodash/isObject';\n\nimport {\n  isMoment\n} from 'moment';\n\nimport {\n  isEmpty\n} from 'ol/extent';\nimport OlFeature from 'ol/Feature';\nimport OlFormatWFS, {\n  WriteTransactionOptions as OlWriteTransactionOptions\n} from 'ol/format/WFS';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport { isFileConfig } from '../components/EditFeatureDrawer/EditFeatureForm';\n\nimport useExecuteWfsDescribeFeatureType, {\n  isGeometryType\n} from './useExecuteWfsDescribeFeatureType';\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type WriteWfsTransactionOpts = {\n  layer: WmsLayer;\n  upsertFeatures?: OlFeature[];\n  deleteFeatures?: OlFeature[];\n  form?: FormInstance;\n};\n\nexport const useWriteWfsTransaction = () => {\n  const map = useMap();\n  const executeWfsDescribeFeatureType = useExecuteWfsDescribeFeatureType();\n  const client = useSHOGunAPIClient();\n\n  const writeWfsTransaction = useCallback(async (opts: WriteWfsTransactionOpts) => {\n    const cleanFormValues = (form: FormInstance) => {\n      const formValues = {...form.getFieldsValue()};\n\n      for (const [key, value] of Object.entries(formValues)) {\n        // Transform undefined to null values.\n        if (value === undefined) {\n          formValues[key] = null;\n        }\n\n        // Filter out read-only fields (which don't have any field instance associated).\n        if (!form.getFieldInstance(key)) {\n          delete formValues[key];\n        }\n\n        // Transform moments back to iso string.\n        if (isMoment(value)) {\n          formValues[key] = value.toISOString();\n        }\n\n        if (Array.isArray(value) && value.length > 0 && isFileConfig(value[0])) {\n          const fileInfoList = value.map(val => ({\n            uid: val.uid,\n            lastModified: val.lastModified,\n            name: val.name,\n            type: val.type,\n            url: `${client?.getBasePath()}files/${val.response.fileUuid}`,\n            response: {\n              id: val.response?.id,\n              created: val.response?.created,\n              fileName: val.response?.fileName,\n              fileType: val.response?.fileType,\n              fileUuid: val.response?.fileUuid\n            }\n          }));\n          formValues[key] = JSON.stringify(fileInfoList);\n        }\n      }\n      return formValues;\n    };\n\n    if (!map) {\n      return;\n    }\n\n    const inserts: OlFeature[] = [];\n    const updates: OlFeature[] = [];\n    const deletes: OlFeature[] = [];\n\n    const describeFeatureType = await executeWfsDescribeFeatureType(opts.layer);\n\n    if (!describeFeatureType) {\n      return;\n    }\n\n    const geomProperty = describeFeatureType.featureTypes[0]?.properties\n      ?.find(property => isGeometryType(property.type));\n\n    let overallUpdateMode = false;\n\n    if (opts.upsertFeatures) {\n      for (const feature of opts.upsertFeatures) {\n        const feat = new OlFeature();\n\n        const geometry = feature.getGeometry()?.clone();\n\n        if (geometry && !isEmpty(geometry.getExtent())) {\n          feat.set(geomProperty?.name || 'geom', geometry);\n          feat.setGeometryName(geomProperty?.name || 'geom');\n        }\n\n        if (opts.form) {\n          feat.setProperties(cleanFormValues(opts.form));\n        }\n\n        const updateMode = !!feature.getId();\n\n        if (updateMode && !overallUpdateMode) {\n          overallUpdateMode = true;\n        }\n\n        if (updateMode) {\n          feat.setId(feature.getId());\n        }\n\n        if (updateMode) {\n          updates.push(feat);\n        } else {\n          inserts.push(feat);\n        }\n      };\n    }\n\n    if (opts.deleteFeatures) {\n      deletes.push(...opts.deleteFeatures);\n    }\n\n    const transactionOpts: OlWriteTransactionOptions = {\n      featureNS: describeFeatureType.targetNamespace,\n      featurePrefix: describeFeatureType.targetPrefix,\n      featureType: opts.layer.getSource()?.getParams().LAYERS,\n      srsName: map.getView().getProjection().getCode(),\n      version: '1.1.0',\n      nativeElements: []\n    };\n\n    const format = new OlFormatWFS();\n\n    const transaction = format.writeTransaction(inserts, updates, deletes, transactionOpts);\n\n    if (overallUpdateMode && ClientConfiguration.wfsLockFeatureEnabled) {\n      const rootNode = transaction.getRootNode() as Element;\n      const lockId = document.createElementNS('http://www.opengis.net/wfs', 'LockId');\n      const lockIdValue = document.createTextNode('GeoServer');\n      lockId.appendChild(lockIdValue);\n      rootNode.appendChild(lockId);\n    }\n\n    return transaction;\n  }, [client, executeWfsDescribeFeatureType, map]);\n\n  return writeWfsTransaction;\n};\n\nexport default useWriteWfsTransaction;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport {\n  Drawer\n} from 'antd';\n\nimport type {\n  DrawerProps\n} from 'antd/es/drawer';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\nexport type MapDrawerProps = DrawerProps & {};\n\nexport const MapDrawer: React.FC<MapDrawerProps> = ({\n  open,\n  children,\n  ...passThroughProps\n}) => {\n\n  const map = useMap();\n\n  useEffect(() => {\n    document.querySelectorAll('#map')[0]?.classList.toggle('bisected', !!open);\n  }, [open]);\n\n  const onAfterDrawerOpenChange = () => {\n    map?.updateSize();\n  };\n\n  return (\n    <Drawer\n      className=\"map-drawer\"\n      mask={false}\n      open={open}\n      placement=\"right\"\n      width={getComputedStyle(document.documentElement).getPropertyValue('--editDrawerWidth')}\n      afterOpenChange={onAfterDrawerOpenChange}\n      {...passThroughProps}\n    >\n      {children}\n    </Drawer>\n  );\n};\n\nexport default MapDrawer;\n","import {\n  useCallback\n} from 'react';\n\nimport {\n  FeatureCollection\n} from 'geojson';\n\nimport OlFormatFilter from 'ol/format/filter/Filter';\nimport OlFormatWFS from 'ol/format/WFS';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useExecuteWfsDescribeFeatureType from './useExecuteWfsDescribeFeatureType';\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type GetFeatureOpts = {\n  layer: WmsLayer;\n  filter?: OlFormatFilter;\n};\n\nexport const useExecuteGetFeature = () => {\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const executeWfsDescribeFeatureType = useExecuteWfsDescribeFeatureType();\n\n  const executeGetFeature = useCallback(async (opts: GetFeatureOpts) => {\n    if (!map) {\n      return;\n    }\n\n    const describeFeatureType = await executeWfsDescribeFeatureType(opts.layer);\n\n    if (!describeFeatureType) {\n      return;\n    }\n\n    let url;\n\n    const source = opts.layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = (source as OlSourceImageWMS).getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = (source as OlSourceTileWMS).getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const featureRequest = new OlFormatWFS().writeGetFeature({\n      srsName: map.getView().getProjection().getCode(),\n      featureNS: describeFeatureType.targetNamespace,\n      featurePrefix: describeFeatureType.targetPrefix,\n      featureTypes: [source?.getParams().LAYERS],\n      outputFormat: 'application/json',\n      filter: opts.filter\n    });\n\n    const defaultHeaders = {\n      'Content-Type': 'application/json'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: opts.layer?.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders,\n      body: new XMLSerializer().serializeToString(featureRequest)\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response');\n    }\n\n    return await response.json() as FeatureCollection;\n  }, [client, executeWfsDescribeFeatureType, map]);\n\n  return executeGetFeature;\n};\n\nexport default useExecuteGetFeature;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\n\nimport {\n  faPencil,\n  faTrash,\n  faDrawPolygon,\n  faUndo\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport { TooltipPlacement } from 'antd/es/tooltip';\nimport {\n  FeatureCollection,\n  Feature\n} from 'geojson';\nimport { t } from 'i18next';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport { isEmpty as isEmptyOlExtent } from 'ol/extent';\nimport OlFormatGeoJson from 'ol/format/GeoJSON';\nimport OlGeometry from 'ol/geom/Geometry';\nimport { DrawEvent as OlDrawEvent } from 'ol/interaction/Draw';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport DeleteButton from '@terrestris/react-geo/dist/Button/DeleteButton/DeleteButton';\nimport DrawButton from '@terrestris/react-geo/dist/Button/DrawButton/DrawButton';\nimport ModifyButton from '@terrestris/react-geo/dist/Button/ModifyButton/ModifyButton';\nimport SimpleButton from '@terrestris/react-geo/dist/Button/SimpleButton/SimpleButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport Toolbar, { ToolbarProps } from '@terrestris/react-geo/dist/Toolbar/Toolbar';\n\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport './index.less';\nimport useAppSelector from '../../../hooks/useAppSelector';\n\nexport type EditFeatureGeometryToolbarProps = ToolbarProps & {\n  feature: Feature;\n  historyLength?: number;\n};\n\ntype DrawType = 'Point' | 'LineString' | 'Polygon';\n\ntype EditHistory = {\n  past: FeatureCollection[];\n  future: FeatureCollection[];\n};\nexport const EditFeatureGeometryToolbar: React.FC<EditFeatureGeometryToolbarProps> = ({\n  feature,\n  historyLength = 10\n}) => {\n\n  const editHistory = useRef<EditHistory>({\n    past: [],\n    future: []\n  });\n\n  const map = useMap();\n\n  const [editLayer, setEditLayer] = useState<OlLayerVector<OlSourceVector<OlGeometry>>>();\n  const [, setRevision] = useState<number>(0);\n\n  const gjFormat = useMemo(() => new OlFormatGeoJson(), []);\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    if (!editLayer) {\n      setEditLayer(DigitizeUtil.getDigitizeLayer(map));\n    }\n\n    return () => {\n      if (editLayer) {\n        map?.removeLayer(editLayer);\n      }\n    };\n  }, [editLayer, map]);\n\n  useEffect(() => {\n    if (editLayer && feature?.id) {\n      editLayer.getSource()?.clear();\n      const olFeat = gjFormat.readFeature(feature);\n      const source = editLayer.getSource() as OlSourceVector;\n      source.addFeature(olFeat);\n      setRevision(r => r + 1);\n\n      if (!isEmptyOlExtent(source.getExtent())) {\n        map?.getView().fit(source.getExtent(), {\n          padding: [50, 50, 50, 50]\n        });\n      }\n    }\n  }, [feature, editLayer, gjFormat, map]);\n\n  const undoEdit = () => {\n\n    const editSource = editLayer?.getSource();\n    const features = editSource?.getFeatures();\n\n    if (!features) {\n      return;\n    }\n\n    const clone: FeatureCollection = gjFormat.writeFeaturesObject(features);\n    const previousSource = editHistory.current.past[editHistory.current.past.length - 1];\n    if (!_isEmpty(previousSource)) {\n      editSource?.clear();\n      editSource?.addFeatures(gjFormat.readFeatures(previousSource));\n      editHistory.current = {\n        past: editHistory.current.past.slice(0, -1),\n        future: [...editHistory.current.future, clone].slice(-historyLength)\n      };\n      setRevision(r => r + 1);\n    }\n  };\n\n  const redoEdit = () => {\n\n    const editSource = editLayer?.getSource();\n    const features = editSource?.getFeatures();\n\n    if (!features) {\n      return;\n    }\n\n    const clone = gjFormat.writeFeaturesObject(features);\n    const nextSource = editHistory.current.future[editHistory.current.future.length - 1];\n    if (!_isEmpty(nextSource)) {\n      editSource?.clear();\n      editSource?.addFeatures(gjFormat.readFeatures(nextSource));\n\n      editHistory.current = {\n        future: editHistory.current.future.slice(0, -1),\n        past: [...editHistory.current.past, clone].slice(-historyLength)\n      };\n      setRevision(r => r + 1);\n    }\n  };\n\n  const onDrawEnd = (e: OlDrawEvent) => {\n    updateRevision();\n    if (!feature.geometry.type.toLocaleLowerCase().startsWith('multi')) {\n      // replace the existing geometry by the new one\n      editLayer?.getSource()?.clear();\n    }\n  };\n\n  const updateRevision = () => {\n\n    const features = editLayer?.getSource()?.getFeatures();\n\n    if (!features) {\n      return;\n    }\n\n    const clone: FeatureCollection = gjFormat.writeFeaturesObject(features);\n    editHistory.current = {\n      ...editHistory.current,\n      past: [...editHistory.current.past, clone].slice(-10)\n    };\n    setRevision(r => r + 1);\n  };\n\n  const btnTooltipProps = {\n    tooltipPlacement: 'left' as TooltipPlacement,\n    tooltipProps: {\n      mouseEnterDelay: 0.5\n    }\n  };\n\n  if (!editLayer) {\n    return <></>;\n  }\n\n  if (allowedEditMode.includes('EDIT_GEOMETRY')) {\n    return (\n      <Toolbar\n        className=\"geometry-edit-tb\"\n        alignment=\"vertical\"\n      >\n        <ToggleGroup>\n          {\n            allowedEditMode.includes('CREATE') ?\n              <DrawButton\n                icon={\n                  <FontAwesomeIcon icon={faPencil} />\n                }\n                pressedIcon={\n                  <FontAwesomeIcon icon={faPencil} />\n                }\n                name=\"draw\"\n                digitizeLayer={editLayer}\n                tooltip={t('EditFeatureGeometryToolbar.draw')}\n                drawType={feature.geometry.type as DrawType}\n                onDrawEnd={onDrawEnd}\n                {...btnTooltipProps}\n              />\n              : <></>\n          }\n          {\n            allowedEditMode.includes('UPDATE') ?\n              <ModifyButton\n                icon={\n                  <FontAwesomeIcon icon={faDrawPolygon} />\n                }\n                pressedIcon={\n                  <FontAwesomeIcon icon={faDrawPolygon} />\n                }\n                name=\"edit\"\n                digitizeLayer={editLayer}\n                tooltip={t('EditFeatureGeometryToolbar.edit')}\n                onModifyStart={updateRevision}\n                onModifyEnd={updateRevision}\n                onTranslateEnd={updateRevision}\n                {...btnTooltipProps}\n              />\n              : <></>\n          }\n          {\n            allowedEditMode.includes('DELETE') ?\n              <DeleteButton\n                icon={\n                  <FontAwesomeIcon icon={faTrash} />\n                }\n                pressedIcon={\n                  <FontAwesomeIcon icon={faTrash} />\n                }\n                name=\"delete\"\n                digitizeLayer={editLayer}\n                tooltip={t('EditFeatureGeometryToolbar.delete')}\n                onFeatureRemove={updateRevision}\n                {...btnTooltipProps}\n              />\n              : <></>\n          }\n        </ToggleGroup>\n        <SimpleButton\n          icon={\n            <FontAwesomeIcon icon={faUndo} />\n          }\n          tooltip={t('EditFeatureGeometryToolbar.undo')}\n          onClick={undoEdit}\n          disabled={editHistory.current.past?.length === 0}\n          {...btnTooltipProps}\n        />\n        <SimpleButton\n          icon={\n            <FontAwesomeIcon\n              icon={faUndo}\n              flip=\"horizontal\"\n            />\n          }\n          tooltip={t('EditFeatureGeometryToolbar.redo')}\n          onClick={redoEdit}\n          disabled={editHistory.current.future?.length === 0}\n          {...btnTooltipProps}\n        />\n      </Toolbar>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default EditFeatureGeometryToolbar;\n","import React from 'react';\n\nimport {\n  Tabs,\n  TabsProps\n} from 'antd';\n\nimport {\n  FormInstance\n} from 'antd/lib/form/Form';\n\nimport {\n  Tab\n} from 'rc-tabs/lib/interface';\n\nimport {\n  PropertyFormItemEditConfig,\n  PropertyFormTabConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport EditFeatureForm from '../EditFeatureForm';\n\nexport type EditFeatureTabsProps = TabsProps & {\n  tabConfig?: PropertyFormTabConfig<PropertyFormItemEditConfig>[];\n  form: FormInstance;\n  initialValues?: Record<string, any>;\n};\n\nexport const EditFeatureTabs: React.FC<EditFeatureTabsProps> = ({\n  tabConfig,\n  form,\n  initialValues,\n  ...passThroughProps\n}) => {\n\n  const items = tabConfig?.map((config, idx) => {\n    return {\n      label: config.title,\n      key: `${idx}`,\n      forceRender: true,\n      children: (\n        <EditFeatureForm\n          name={config.title}\n          form={form}\n          initialValues={initialValues}\n          formConfig={config.children}\n        />\n      )\n    } as Tab;\n  });\n\n  return (\n    <Tabs\n      items={items}\n      {...passThroughProps}\n    />\n  );\n};\n\nexport default EditFeatureTabs;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faTrash\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  ButtonProps,\n  Popconfirm\n} from 'antd';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useExecuteWfsTransaction from '../../../hooks/useExecuteWfsTransaction';\nimport useWriteWfsTransaction from '../../../hooks/useWriteWfsTransaction';\n\nexport type DeleteButtonProps = ButtonProps & {\n  feature: Feature;\n  layer: WmsLayer;\n  onError?: (error: unknown) => void;\n  onSuccess?: () => void;\n};\n\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n  feature,\n  layer,\n  onError = () => {},\n  onSuccess = () => {},\n  ...passThroughProps\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const writeWfsTransaction = useWriteWfsTransaction();\n  const executeWfsTransaction = useExecuteWfsTransaction();\n\n  const onConfirmDelete = async () => {\n    if (!map) {\n      return;\n    }\n\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const olFeature = new OlFormatGeoJSON().readFeature(feature);\n\n      const transaction = await writeWfsTransaction({\n        deleteFeatures: [olFeature],\n        layer: layer\n      });\n\n      if (!transaction) {\n        return;\n      }\n\n      await executeWfsTransaction({\n        layer: layer,\n        transaction: transaction\n      });\n\n      layer.getSource()?.refresh();\n\n      onSuccess();\n    } catch (error) {\n      Logger.error(error);\n\n      onError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Popconfirm\n      title={t('DeleteButton.confirm')}\n      onConfirm={onConfirmDelete}\n      placement='bottomRight'\n    >\n      <Button\n        type='primary'\n        loading={loading}\n        disabled={!feature.id}\n        danger\n        icon={(\n          <FontAwesomeIcon\n            icon={faTrash}\n          />\n        )}\n        {...passThroughProps}\n      >\n        {\n          t('DeleteButton.title')\n        }\n      </Button>\n    </Popconfirm>\n  );\n};\n\nexport default DeleteButton;\n","import React from 'react';\n\nimport {\n  faRotateLeft\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  ButtonProps\n} from 'antd';\n\nimport {\n  FormInstance\n} from 'antd/lib/form/Form';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport OlFormatGeoJson from 'ol/format/GeoJSON';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport { DigitizeUtil } from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport {\n  setFormDirty\n} from '../../../store/editFeature';\n\nexport type ResetButtonProps = Omit<ButtonProps, 'form'> & {\n  feature: Feature;\n  form: FormInstance;\n};\n\nexport const ResetButton: React.FC<ResetButtonProps> = ({\n  feature,\n  form,\n  ...passThroughProps\n}) => {\n\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const dispatch = useAppDispatch();\n\n  const onClick = () => {\n    form.resetFields();\n    dispatch(setFormDirty(false));\n\n    if (map) {\n      const editLayer = DigitizeUtil.getDigitizeLayer(map);\n      if (editLayer) {\n        editLayer.getSource()?.clear();\n        const format = new OlFormatGeoJson();\n        const olFeat = format.readFeature(feature);\n        editLayer.getSource()?.addFeature(olFeat);\n      }\n    }\n  };\n\n  return (\n    <Button\n      type='primary'\n      onClick={onClick}\n      icon={(\n        <FontAwesomeIcon\n          icon={faRotateLeft}\n        />\n      )}\n      {...passThroughProps}\n    >\n      {\n        t('ResetButton.title')\n      }\n    </Button>\n  );\n};\n\nexport default ResetButton;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport './index.less';\n\nexport type FeedbackIconProps = {\n  loadComplete: boolean;\n};\n\nexport const FeedbackIcon: React.FC<FeedbackIconProps> = ({\n  loadComplete = false\n}) => {\n\n  return (\n    <div className={loadComplete ? 'feedback-icon' : 'feedback-icon hidden'}>\n      <div className={loadComplete ? 'checkmark' : 'checkmark-hidden'} />\n    </div>\n  );\n};\n\nexport default FeedbackIcon;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faFloppyDisk\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  ButtonProps\n} from 'antd';\n\nimport {\n  FormInstance\n} from 'antd/lib/form/Form';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useExecuteWfsTransaction from '../../../hooks/useExecuteWfsTransaction';\nimport useWriteWfsTransaction from '../../../hooks/useWriteWfsTransaction';\nimport {\n  setFormDirty\n} from '../../../store/editFeature';\n\nimport './index.less';\nimport FeedbackIcon from '../../FeedbackIcon';\n\nexport type SaveButtonProps = Omit<ButtonProps, 'form'> & {\n  form: FormInstance;\n  layer: WmsLayer;\n  onError?: (error: unknown) => void;\n  onSuccess?: (response?: string) => void;\n};\n\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n  form,\n  layer,\n  onError = () => {},\n  onSuccess = () => {},\n  ...passThroughProps\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [saveCompleted, setSaveCompleted] = useState(false);\n\n  const map = useMap();\n\n  const writeWfsTransaction = useWriteWfsTransaction();\n  const executeWfsTransaction = useExecuteWfsTransaction();\n\n  const dispatch = useAppDispatch();\n\n  const formDirty = useAppSelector(\n    state => state.editFeature.formDirty\n  );\n\n  const {\n    t\n  } = useTranslation();\n\n  const onClick = async () => {\n    if (!map) {\n      return;\n    }\n\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    const editLayer = DigitizeUtil.getDigitizeLayer(map);\n\n    if (!editLayer) {\n      Logger.error('Cannot find the digitize layer');\n      return;\n    }\n\n    const features = editLayer.getSource()?.getFeatures();\n\n    if (!features || features.length === 0) {\n      Logger.error('Cannot save feature without geometry');\n      return;\n    };\n\n    try {\n      await form.validateFields();\n    } catch (error) {\n      Logger.warn('Validation has failed: ', error);\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const transaction = await writeWfsTransaction({\n        upsertFeatures: features,\n        form: form,\n        layer: layer\n      });\n\n      if (!transaction) {\n        return;\n      }\n\n      const result = await executeWfsTransaction({\n        layer: layer,\n        transaction: transaction\n      });\n\n      layer.getSource()?.refresh();\n\n      setSaveCompleted(true);\n      setTimeout(() => {\n        setSaveCompleted(false);\n      }, 3000);\n\n      onSuccess(result);\n    } catch (error) {\n      Logger.error(error);\n\n      onError(error);\n    } finally {\n      setLoading(false);\n      dispatch(setFormDirty(false));\n    }\n  };\n\n  return (\n    <Button\n      className='save-button'\n      type='primary'\n      onClick={onClick}\n      loading={loading}\n      disabled={!formDirty}\n      icon={(\n        <FontAwesomeIcon\n          icon={faFloppyDisk}\n        />\n      )}\n      {...passThroughProps}\n    >\n      {\n        t('SaveButton.title')\n      }\n      <FeedbackIcon loadComplete={saveCompleted} />\n    </Button>\n  );\n};\n\nexport default SaveButton;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  FormInstance\n} from 'antd';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppSelector from '../../../hooks/useAppSelector';\n\nimport DeleteButton from '../DeleteButton';\nimport ResetButton from '../ResetButton';\nimport SaveButton from '../SaveButton';\n\nimport './index.less';\n\nexport type EditFeatureToolbarProps = {\n  feature: Feature;\n  layer: WmsLayer;\n  form: FormInstance;\n  onSaveSuccess?: (responseText?: string) => void;\n  onSaveError?: (error: unknown) => void;\n  onDeleteSuccess?: () => void;\n  onDeleteError?: (error: unknown) => void;\n};\n\nexport const EditFeatureToolbar: React.FC<EditFeatureToolbarProps> = ({\n  feature,\n  layer,\n  form,\n  onSaveSuccess = () => {},\n  onSaveError = () => {},\n  onDeleteSuccess = () => {},\n  onDeleteError = () => {}\n}) => {\n  const allowedEditMode = useAppSelector(state => state.editFeature.userEditMode);\n\n  return (\n    <div\n      className='edit-feature-toolbar'\n    >\n      {\n        allowedEditMode.includes('CREATE') ||\n        allowedEditMode.includes('UPDATE') ?\n          <>\n            <ResetButton\n              feature={feature}\n              form={form}\n            />\n            <SaveButton\n              form={form}\n              layer={layer}\n              onSuccess={onSaveSuccess}\n              onError={onSaveError}\n            />\n          </>: <></>\n      }\n      {\n        allowedEditMode.includes('DELETE') &&\n        <DeleteButton\n          feature={feature}\n          layer={layer}\n          onSuccess={onDeleteSuccess}\n          onError={onDeleteError}\n        />\n      }\n    </div>\n  );\n};\n\nexport default EditFeatureToolbar;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Alert\n} from 'antd';\nimport {\n  useForm\n} from 'antd/lib/form/Form';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport _isNil from 'lodash/isNil';\n\nimport moment from 'moment';\n\nimport {\n  equalTo\n} from 'ol/format/filter';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  PropertyFormItemEditConfig,\n  PropertyFormTabConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useConvertImageUrl from '../../../hooks/useConvertImageUrl';\nimport useExecuteGetFeature from '../../../hooks/useExecuteGetFeature';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport {\n  setFeature\n} from '../../../store/editFeature';\n\nimport EditFeatureGeometryToolbar from '../EditFeatureGeometryToolbar';\nimport EditFeatureTabs from '../EditFeatureTabs';\nimport EditFeatureToolbar from '../EditFeatureToolbar';\n\nexport type EditFeatureFullFormProps = {\n  feature: Feature;\n  layer: WmsLayer;\n};\n\nexport const EditFeatureFullForm: React.FC<EditFeatureFullFormProps> = ({\n  feature,\n  layer\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const executeGetFeature = useExecuteGetFeature();\n  const imageUrlToBase64 = useConvertImageUrl();\n\n  const [tabConfig, setTabConfig] = useState<PropertyFormTabConfig<PropertyFormItemEditConfig>[]>();\n  const [initialValues, setInitialValues] = useState<Record<string, any>>();\n  const [errorMsg, setErrorMsg] = useState<string>();\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  const [form] = useForm();\n  const map = useMap();\n  const dispatch = useAppDispatch();\n  const client = useSHOGunAPIClient();\n\n  const reloadFeature = useCallback(async (id: string) => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    const updatedFeatures = await executeGetFeature({\n      layer: layer,\n      filter: equalTo('id', id)\n    });\n\n    if (\n      updatedFeatures?.features[0]\n    ) {\n      dispatch(setFeature(updatedFeatures?.features[0]));\n    }\n  }, [dispatch, executeGetFeature, layer]);\n\n  const update = useCallback(async () => {\n    if (!map || !client) {\n      return;\n    }\n\n    let editFormConfig = layer.get('editFormConfig') as PropertyFormTabConfig<PropertyFormItemEditConfig>[];\n\n    if (editFormConfig?.length === 0) {\n      Logger.warn(`Layer ${layer.get('name')} has no 'editFormConfig' set`);\n      return;\n    }\n\n    const properties = structuredClone(feature?.properties) || {};\n\n    const setPropertiesPromises = Object.entries(properties).map(async ([key, value]) => {\n      const tabConfigs = editFormConfig?.filter(tabCfg => {\n        return tabCfg.children?.find(formCfg => formCfg.propertyName === key);\n      });\n\n      if (tabConfigs.length > 1) {\n        Logger.warn(`Property ${key} is configured in multiple tabs. Is this intended?`);\n      }\n\n      if (tabConfigs && tabConfigs[0]) {\n        const isDate = tabConfigs[0].children?.some(cfg => {\n          return cfg.propertyName === key && cfg.component === 'DATE';\n        });\n\n        if (isDate) {\n          properties[key] = moment(value);\n        }\n\n        const isUpload = tabConfigs[0].children?.some(cfg => {\n          return cfg.propertyName === key && cfg.component === 'UPLOAD';\n        });\n\n        if (isUpload) {\n          if (value) {\n            try {\n              const fileList = JSON.parse(value);\n              properties[key] = fileList;\n              const filePath = fileList[0].response?.type?.startsWith('image/') ? 'imagefiles/' : 'files/';\n              const fileListWithBlob = fileList.map(async (val: any) => ({\n                ...val,\n                url: await imageUrlToBase64(`${client.getBasePath()}${filePath}${val?.response?.fileUuid}`)\n              }));\n\n              const result = await Promise.all(fileListWithBlob);\n              properties[key] = result;\n            } catch (error) {\n              Logger.error('Could not parse file list from JSON config: ', error);\n              properties[key] = [];\n            }\n          } else {\n            properties[key] = [];\n          }\n        }\n      }\n    });\n\n    await Promise.all(setPropertiesPromises);\n\n    form.resetFields();\n    form.setFieldsValue(properties);\n\n    setTabConfig(editFormConfig);\n    setInitialValues(properties);\n  }, [map, client, layer, feature?.properties, form, imageUrlToBase64]);\n\n  useEffect(() => {\n    update();\n  }, [update]);\n\n  const onSaveSuccess = (responseText?: string) => {\n    if (!responseText) {\n      return;\n    }\n    setErrorMsg(undefined);\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'text/xml');\n\n    // get feature id from response\n    const featureId = xmlDoc.getElementsByTagName('ogc:FeatureId');\n    const idString = featureId.item(0)?.getAttribute('fid');\n    const id = idString?.split('.')[1];\n    if (id) {\n      reloadFeature(id);\n    }\n  };\n\n  const onSaveError = () => {\n    setErrorMsg(t('EditFeatureFullForm.saveErrorMsg'));\n  };\n\n  const onDeleteSuccess = () => {\n    setErrorMsg(undefined);\n    dispatch(setFeature(null));\n  };\n\n  const onDeleteError = () => {\n    setErrorMsg(t('EditFeatureFullForm.deleteErrorMsg'));\n  };\n\n  return (\n    <>\n      <EditFeatureGeometryToolbar\n        feature={feature}\n      />\n      {\n        errorMsg && (\n          <Alert\n            className=\"error-alert\"\n            message={errorMsg}\n            type=\"error\"\n            showIcon\n          />\n        )\n      }\n      <EditFeatureToolbar\n        feature={feature}\n        layer={layer}\n        form={form}\n        onSaveSuccess={onSaveSuccess}\n        onSaveError={onSaveError}\n        onDeleteSuccess={onDeleteSuccess}\n        onDeleteError={onDeleteError}\n      />\n      <EditFeatureTabs\n        tabConfig={tabConfig}\n        initialValues={initialValues}\n        form={form}\n      />\n    </>\n  );\n};\n\nexport default EditFeatureFullForm;\n","import {\n  useCallback\n} from 'react';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type ExecuteWfsLockOpts = {\n  layer: WmsLayer;\n  feature: Feature;\n};\n\nexport const useExecuteWfsLockFeature = () => {\n  const client = useSHOGunAPIClient();\n\n  const writeWfsLockFeature = (opts: ExecuteWfsLockOpts) => {\n    const featureId = opts.feature.id;\n    const featureProperties = opts.feature.properties;\n\n    if (!featureId || !featureProperties) {\n      Logger.warn('Either the id of the feature or its properties (or even both) aren\\'t available');\n      return;\n    }\n\n    let id: number;\n    if (typeof featureId === 'number') {\n      id = featureId;\n    } else {\n      id = parseInt(featureId.split('.')[1], 10);\n    }\n\n    const match = Object.entries(featureProperties).find(([, value]) => (value === id || value === id.toString()));\n\n    if (!match) {\n      Logger.warn('Count not detect the id property');\n      return;\n    }\n\n    const idProperty = match[0];\n\n    const typeName = opts.layer.getSource()?.getParams().LAYERS;\n\n    const lockFeatureDoc = document.createElementNS('http://www.opengis.net/wfs/2.0', 'LockFeature');\n\n    lockFeatureDoc.setAttribute('service', 'WFS');\n    lockFeatureDoc.setAttribute('version', '2.0.0');\n    // Expiry in seconds.\n    lockFeatureDoc.setAttribute('expiry', '300');\n    lockFeatureDoc.setAttribute('lockAction', 'SOME');\n\n    const queryElement = document.createElementNS('http://www.opengis.net/wfs/2.0', 'Query');\n    queryElement.setAttribute('typeNames', typeName);\n\n    const filterElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'Filter');\n    const isEqualToElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'PropertyIsEqualTo');\n\n    const valueReferenceElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'ValueReference');\n    const valueReferenceValue = document.createTextNode(idProperty);\n    valueReferenceElement.appendChild(valueReferenceValue);\n\n    const literalElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'Literal');\n    const literalValue = document.createTextNode(id.toString());\n    literalElement.appendChild(literalValue);\n\n    isEqualToElement.appendChild(valueReferenceElement);\n    isEqualToElement.appendChild(literalElement);\n\n    filterElement.appendChild(isEqualToElement);\n\n    queryElement.appendChild(filterElement);\n\n    lockFeatureDoc.appendChild(queryElement);\n\n    return lockFeatureDoc;\n  };\n\n  const executeWfsLockFeature = useCallback(async (opts: ExecuteWfsLockOpts) => {\n    let url;\n\n    const source = opts.layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = (source as OlSourceImageWMS).getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = (source as OlSourceTileWMS).getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const lockFeatureDoc = writeWfsLockFeature({\n      layer: opts.layer,\n      feature: opts.feature\n    });\n\n    if (!lockFeatureDoc) {\n      return;\n    }\n\n    const defaultHeaders = {\n      'Content-Type': 'application/xml'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: opts.layer?.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders,\n      body: new XMLSerializer().serializeToString(lockFeatureDoc)\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response while executing a WFS-LockFeature');\n    }\n\n    const responseText = await response.text();\n\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'text/xml');\n\n    // TODO Make detection more robust\n    const transactionLockFailed = xmlDoc.getElementsByTagName('wfs:FeaturesNotLocked');\n\n    if (transactionLockFailed.length > 0) {\n      throw new Error(`Error while locking a feature: ${responseText}`);\n    }\n\n    return responseText;\n  }, [client]);\n\n  return executeWfsLockFeature;\n};\n\nexport default useExecuteWfsLockFeature;\n","import {\n  useCallback,\n  useEffect\n} from 'react';\n\nimport {\n  FeatureCollection\n} from 'geojson';\n\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport const useGetFeatureInfo = (layer?: WmsLayer, onSuccess?: (featureCollection: FeatureCollection) => void, onFailure?: () => void) => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n\n  const onSingleClick = useCallback(async (evt: MapBrowserEvent<MouseEvent>) => {\n    if (!map || !layer) {\n      return;\n    }\n\n    const coords = evt.coordinate;\n\n    const viewResolution = map.getView().getResolution();\n\n    if (!viewResolution) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const url = source?.getFeatureInfoUrl(\n      coords,\n      viewResolution,\n      map.getView().getProjection(),\n      {\n        INFO_FORMAT: 'application/json',\n        BUFFER: 10\n      }\n    );\n\n    const defaultHeaders = {\n      'Content-Type': 'application/json'\n    };\n\n    if (!url) {\n      return;\n    }\n\n    try {\n      map.getTargetElement().style.cursor = 'wait';\n\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: layer.get('useBearerToken') ? {\n          ...defaultHeaders,\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : defaultHeaders\n      });\n\n      if (!response.ok) {\n        throw new Error('No successful response');\n      }\n\n      const featureCollection: FeatureCollection = await response.json();\n\n      if (onSuccess) {\n        onSuccess(featureCollection);\n      }\n    } catch (error) {\n      Logger.error('Error: ', error);\n\n      if (onFailure) {\n        onFailure();\n      }\n    } finally {\n      map.getTargetElement().style.cursor = '';\n    }\n  }, [client, layer, map, onSuccess, onFailure]);\n\n  const onPointerMove = useCallback((evt: MapBrowserEvent<MouseEvent>) => {\n    if (!map || !layer) {\n      return;\n    }\n\n    if (evt.dragging) {\n      return;\n    }\n\n    const data = layer.getData(evt.pixel);\n\n    if (!(data instanceof Uint8ClampedArray)) {\n      return;\n    }\n\n    const hit = data && data[3] > 0;\n\n    map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n  }, [layer, map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    map.on('pointermove', onPointerMove);\n    map.on('singleclick', onSingleClick);\n\n    return () => {\n      map.un('pointermove', onPointerMove);\n      map.un('singleclick', onSingleClick);\n    };\n  }, [map, onPointerMove, onSingleClick]);\n};\n\nexport default useGetFeatureInfo;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  Button\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useExecuteWfsDescribeFeatureType, {\n  isGeometryType\n} from '../../../hooks/useExecuteWfsDescribeFeatureType';\nimport useExecuteWfsLockFeature from '../../../hooks/useExecuteWfsTransactionLock';\nimport useGetFeatureInfo from '../../../hooks/useGetFeatureInfo';\n\nimport {\n  setFeature\n} from '../../../store/editFeature';\n\nimport './index.less';\n\nexport type EditFeatureSwitchProps = {\n  layer: WmsLayer;\n  onLockSuccess?: (responseText: string) => void;\n  onLockError?: (error: unknown) => void;\n  onCreate?: () => void;\n};\n\nexport const EditFeatureSwitch: React.FC<EditFeatureSwitchProps> = ({\n  layer,\n  onLockSuccess = () => {},\n  onLockError = () => {},\n  onCreate = () => {}\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const executeWfsDescribeFeatureType = useExecuteWfsDescribeFeatureType();\n  const executeWfsLockFeature = useExecuteWfsLockFeature();\n  const dispatch = useAppDispatch();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  useGetFeatureInfo(layer, async (featureCollection) => {\n    if (\n      featureCollection.features.length &&\n      (allowedEditMode.includes('UPDATE') || allowedEditMode.includes('DELETE'))\n    ) {\n\n      const feature = featureCollection.features[0];\n\n      if (!layer || !feature) {\n        return;\n      }\n\n      if (ClientConfiguration.wfsLockFeatureEnabled) {\n        try {\n          const response = await executeWfsLockFeature({\n            layer: layer,\n            feature: feature\n          });\n\n          if (!response) {\n            return;\n          }\n\n          dispatch(setFeature(feature));\n\n          onLockSuccess(response);\n        } catch (error) {\n          onLockError(error);\n        }\n      } else {\n        dispatch(setFeature(feature));\n      }\n    }\n  });\n\n  const getGeometryType = async () => {\n    if (!map || !layer) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const describeFeatureType = await executeWfsDescribeFeatureType(layer);\n\n      if (!describeFeatureType) {\n        return;\n      }\n\n      // We expect a single featureType here.\n      const geomProperty = describeFeatureType.featureTypes[0]?.properties\n        ?.find(property => isGeometryType(property.type));\n\n      switch (geomProperty?.type) {\n        case 'gml:MultiPoint':\n          return 'MultiPoint';\n        case 'gml:Point':\n          return 'Point';\n        case 'gml:MultiLineString':\n          return 'MultiLineString';\n        case 'gml:LineString':\n          return 'LineString';\n        case 'gml:MultiPolygon':\n          return 'MultiPolygon';\n        case 'gml:Polygon':\n          return 'Polygon';\n        default:\n          break;\n      }\n    } catch (error) {\n      Logger.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onCreateClick = async () => {\n    const geomType = await getGeometryType();\n\n    if (!geomType) {\n      return;\n    }\n\n    dispatch(setFeature({\n      type: 'Feature',\n      properties: {},\n      geometry: {\n        type: geomType,\n        coordinates: []\n      }\n    }));\n\n    onCreate();\n  };\n\n  return (\n    <div className=\"edit-feature-switch\">\n      {allowedEditMode.includes('CREATE') && (\n        <>\n          {\n            allowedEditMode.includes('UPDATE') &&\n            <div>{t('EditFeatureSwitch.usageHint')}</div>\n          }\n          <Button\n            loading={loading}\n            onClick={onCreateClick}\n          >\n            {t('EditFeatureSwitch.createFeature')}\n          </Button>\n        </>\n      )}\n      {!allowedEditMode.includes('CREATE') &&\n        (allowedEditMode.includes('UPDATE') ||\n        allowedEditMode.includes('DELETE')) && (\n        <div>{t('EditFeatureSwitch.limitedUsageHint')}</div>\n      )}\n    </div>\n  );\n};\n\nexport default EditFeatureSwitch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Alert, Modal\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport OlFeature from 'ol/Feature';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useExecuteWfsTransaction from '../../hooks/useExecuteWfsTransaction';\nimport useWriteWfsTransaction from '../../hooks/useWriteWfsTransaction';\n\nimport {\n  reset\n} from '../../store/editFeature';\nimport {\n  hide as hideEditFeatureDrawer\n} from '../../store/editFeatureDrawerOpen';\n\nimport MapDrawer, {\n  MapDrawerProps\n} from '../MapDrawer';\n\nimport EditFeatureFullForm from './EditFeatureFullForm';\nimport EditFeatureSwitch from './EditFeatureSwitch';\n\nimport './index.less';\n\nexport type EditFeatureDrawerProps = MapDrawerProps & {};\n\nexport const EditFeatureDrawer: React.FC<EditFeatureDrawerProps> = ({\n  ...passThroughProps\n}) => {\n  const {\n    t\n  } = useTranslation();\n\n  const [layer, setLayer] = useState<WmsLayer>();\n  const [isFeatureLocked, setIsFeatureLocked] = useState<boolean>(false);\n  const [drawerTitle, setDrawerTitle] = useState<string>(t('EditFeatureDrawer.featureEditor'));\n\n  const isDrawerOpen = useAppSelector(state => state.editFeatureDrawerOpen);\n  const layerId = useAppSelector(state => state.editFeature.layerId);\n  const feature = useAppSelector(state => state.editFeature.feature);\n\n  const map = useMap();\n  const dispatch = useAppDispatch();\n  const writeWfsTransaction = useWriteWfsTransaction();\n  const executeWfsTransaction = useExecuteWfsTransaction();\n\n  useEffect(() => {\n    if (!map || !layerId) {\n      return;\n    }\n\n    const olLayer = MapUtil.getLayerByOlUid(map, layerId);\n\n    if (!olLayer || !isWmsLayer(olLayer)) {\n      Logger.warn(`Could not find layer with id ${layerId}`);\n      return;\n    }\n\n    setDrawerTitle(`${t('EditFeatureDrawer.featureEditor')} - ${olLayer.get('name')}`);\n    setLayer(olLayer);\n  }, [map, layerId, t]);\n\n  const releaseLock = async () => {\n    if (!layer || !feature || !feature.id || !ClientConfiguration.wfsLockFeatureEnabled) {\n      return;\n    }\n\n    try {\n      const feat = new OlFeature();\n      feat.setId(feature.id);\n\n      const transaction = await writeWfsTransaction({\n        layer: layer,\n        deleteFeatures: [],\n        upsertFeatures: [feat]\n      });\n\n      if (!transaction) {\n        return;\n      }\n\n      await executeWfsTransaction({\n        layer: layer,\n        transaction: transaction\n      });\n    } catch (error) {\n      Logger.error('Error while releasing the lock on the feature');\n    }\n  };\n\n  const closeDrawer = async () => {\n    await releaseLock();\n\n    dispatch(hideEditFeatureDrawer());\n    dispatch(reset());\n    setIsFeatureLocked(false);\n  };\n\n  const onDrawerClose = () => {\n    if (layer && feature) {\n      Modal.confirm({\n        maskClosable: false,\n        title: t('EditFeatureDrawer.closeDrawerWarnTitle'),\n        content: t('EditFeatureDrawer.closeDrawerWarnContent'),\n        okType: 'danger',\n        onOk: closeDrawer\n      });\n    } else {\n      closeDrawer();\n    }\n  };\n\n  const onLockSuccess = () => {\n    setIsFeatureLocked(false);\n  };\n\n  const onLockError = () => {\n    setIsFeatureLocked(true);\n  };\n\n  const onCreate = () => {\n    setIsFeatureLocked(false);\n  };\n\n  return (\n    <MapDrawer\n      className=\"map-drawer edit-feature-drawer\"\n      onClose={onDrawerClose}\n      open={isDrawerOpen}\n      title={drawerTitle}\n      {...passThroughProps}\n    >\n      {\n        !layer && (\n          <Alert\n            message={t('EditFeatureDrawer.noLayerFoundError')}\n            type=\"error\"\n            showIcon\n          />\n        )\n      }\n      {\n        isFeatureLocked && (\n          <Alert\n            message={t('EditFeatureDrawer.isFeatureLockedErrorMsg')}\n            type=\"error\"\n            showIcon\n          />\n        )\n      }\n      {\n        layer && layerId && !feature &&\n        <EditFeatureSwitch\n          layer={layer}\n          onLockSuccess={onLockSuccess}\n          onLockError={onLockError}\n          onCreate={onCreate}\n        />\n      }\n      {\n        layer && feature &&\n        <EditFeatureFullForm\n          feature={feature}\n          layer={layer}\n        />\n      }\n    </MapDrawer>\n  );\n};\n\nexport default EditFeatureDrawer;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect } from 'react';\n\nimport {\n  Button, Divider\n} from 'antd';\n\nimport OlControlMousePosition from 'ol/control/MousePosition';\nimport OlControlScaleLine from 'ol/control/ScaleLine';\nimport { createStringXY } from 'ol/coordinate';\n\nimport { useTranslation } from 'react-i18next';\n\nimport ScaleCombo from '@terrestris/react-geo/dist/Field/ScaleCombo/ScaleCombo';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport { usePlugins } from '../../hooks/usePlugins';\n\nimport {\n  FooterPlacementOrientation,\n  isFooterIntegration\n} from '../../plugin';\nimport { Legal } from '../../store/legal';\n\nexport interface FooterProps extends React.ComponentProps<'div'> { }\n\nexport const Footer: React.FC<FooterProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const plugins = usePlugins();\n  const { t } = useTranslation();\n\n  const legalInformation: Legal = useAppSelector(state => state.legal);\n  const map = useMap();\n\n  const insertPlugins = (itemPosition: FooterPlacementOrientation, items: JSX.Element[]) => {\n    plugins.forEach(plugin => {\n      if (isFooterIntegration(plugin.integration) && plugin.integration?.placementOrientation === itemPosition) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        items.splice(plugin.integration?.insertionIndex || 0, 0,\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map\n      .getControls()\n      .getArray()\n      .find(control => control instanceof OlControlScaleLine);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlScaleLine({\n        target: 'scale-line-container'\n      })\n    );\n  }, [map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map\n      .getControls()\n      .getArray()\n      .find(control => control instanceof OlControlMousePosition);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlMousePosition({\n        coordinateFormat: createStringXY(2),\n        projection: map.getView().getProjection(),\n        target: 'mouse-position'\n      })\n    );\n  }, [map]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  const getLeftItems = () => {\n    const items = [\n      <div\n        key=\"scale-line-container\"\n        id=\"scale-line-container\"\n        aria-label=\"scale-line\"\n      />,\n      <Divider\n        key=\"scale-line-divider\"\n        type=\"vertical\"\n      />,\n      <div\n        key=\"scale-combo-container\"\n        className=\"scale-combo\"\n        aria-label='scale-combo'\n      >\n        {t('Footer.scale')}:&nbsp;\n        <ScaleCombo\n          aria-label='scalecombo-dropdown'\n          map={map}\n        />\n        <Divider\n          type=\"vertical\"\n        />\n      </div>,\n      <div\n        key=\"reference-system-container\"\n        className=\"reference-system\"\n        aria-label=\"reference-system\"\n      >\n        {t('Footer.refSystem')}: {map.getView().getProjection().getCode()}\n        <Divider\n          type=\"vertical\"\n        />\n      </div>,\n      <div\n        key=\"mouse-position-container\"\n        className=\"mouse-position-wrapper\"\n      >\n        {t('Footer.mousePosition')}:&nbsp;\n        <div\n          id=\"mouse-position\"\n          className=\"mouse-position\"\n          aria-label=\"mouse-position\"\n        />\n      </div>\n    ];\n\n    insertPlugins('left', items);\n\n    return items;\n  };\n\n  const getRightItems = () => {\n    const items = [\n      <Button\n        key=\"open-contact\"\n        onClick={openContactModal}\n        type=\"link\"\n      >\n        {t('Footer.contact')}\n      </Button>,\n      <Button\n        key=\"open-imprint\"\n        onClick={openImprintModal}\n        type=\"link\"\n      >\n        {t('Footer.imprint')}\n      </Button>,\n      <Button\n        key=\"open-privacy\"\n        onClick={openPrivacyModal}\n        type=\"link\"\n      >\n        {t('Footer.privacypolicy')}\n      </Button>\n    ];\n\n    if (plugins.length > 0) {\n      insertPlugins('right', items);\n    }\n\n    return items;\n  };\n\n  const openContactModal = (): void => {\n    window.open(legalInformation.contact, '_blank');\n  };\n\n  const openImprintModal = (): void => {\n    window.open(legalInformation.imprint, '_blank');\n  };\n\n  const openPrivacyModal = (): void => {\n    window.open(legalInformation.privacy, '_blank');\n  };\n\n  return (\n    <div\n      className=\"footer\"\n      {...restProps}\n    >\n      <div\n        className=\"item-container left-items\"\n      >\n        {\n          getLeftItems()\n        }\n      </div>\n      <div\n        className=\"item-container right-items\"\n      >\n        {\n          getRightItems()\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, {\n  useEffect, useState\n} from 'react';\n\nimport {\n  Extent as OlExtent\n} from 'ol/extent';\nimport {\n  transformExtent\n} from 'ol/proj';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport NominatimSearch, {\n  NominatimSearchProps\n} from '@terrestris/react-geo/dist/Field/NominatimSearch/NominatimSearch';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport const BasicNominatimSearch: React.FC<Partial<NominatimSearchProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n  const [viewBox, setViewBox] = useState<string>();\n\n  useEffect(() => {\n    const mapViewProjection = map?.getView().getProjection();\n    const extent: OlExtent = map?.getView()?.get('extent');\n    if (extent) {\n      const transformedExtent = transformExtent(extent, mapViewProjection, 'EPSG:4326');\n      setViewBox(transformedExtent.toString());\n    }\n  }, [map]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <NominatimSearch\n      map={map}\n      countryCodes={''}\n      allowClear={true}\n      nominatimBaseUrl={'https://nominatim.terrestris.de/search.php?'}\n      placeholder={t('Nominatim.placeholder')}\n      viewBox={viewBox ? viewBox : ''}\n      {...restProps}\n    />\n  );\n};\n\nexport default BasicNominatimSearch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import Map from 'ol/Map';\n\nimport { isWmsLayer } from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  SearchConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nexport interface SolrQueryProps {\n  searchValue: string;\n  map: Map;\n}\n\ntype SolrQuery = {\n  query: string;\n  fieldList?: string;\n};\n\n/**\n * Generates a solr search query based on the `searchConfiguration` and `searchable` properties of each layer. This\n * currently considers all layers which are part of the layer tree / map.\n */\nexport const generateSolrQuery = ({\n  searchValue,\n  map\n}: SolrQueryProps): SolrQuery[] => {\n  // parse searchValue into an array of search terms,\n  // removing special characters and white spaces\n  let parts = searchValue.trim()\n    .replaceAll(/[()\\\\\\-_./\\/]/g, ' ')\n    .split(' ')\n    .map(s => s.trim())\n    .filter(s => s !== '');\n\n  const subQueriesPerLayer: SolrQuery[] = [];\n  const layers = map.getAllLayers();\n  layers.forEach(layer => {\n    if (layer.get('searchable') && isWmsLayer(layer)) {\n      const searchConfig = layer.get('searchConfig') as SearchConfig;\n      const fullLayerName = layer.getSource()?.getParams().LAYERS;\n      if (searchConfig?.attributes) {\n        // search only configured attributes\n        subQueriesPerLayer.push({\n          query: `(featureType:\"${fullLayerName}\" AND (${generateFuzzySearchQuery(parts)}))`,\n          fieldList: searchConfig.attributes.join(' ')\n        });\n      } else {\n        // search all attributes of this layer\n        subQueriesPerLayer.push({\n          query: `(featureType:\"${fullLayerName}\" AND (${generateFuzzySearchQuery(parts)}))`\n        });\n      }\n    }\n  });\n  return subQueriesPerLayer;\n};\n\n/**\n * Applies operators for wildcard and fuzzy search to a solr (sub)query for multiple search terms.\n * @param searchParts The search input which may consist of multiple search terms, e.g. [\"foo\", \"bar\"]\n */\nconst generateFuzzySearchQuery = (\n  searchParts: string[]\n): string => {\n  const subQueries = searchParts.map(part => {\n    return `(${part.trim()}*^3 OR *${part.trim()}*^2 OR ${part.trim()}~1)`;\n  });\n  return subQueries.join(' AND ');\n};\n\nexport default generateSolrQuery;\n","import React, {\n  useCallback,\n  useEffect, useMemo, useRef, useState\n} from 'react';\n\nimport {\n  EditOutlined,\n  LoadingOutlined,\n  SearchOutlined,\n  SettingOutlined\n} from '@ant-design/icons';\nimport {\n  Button,\n  Checkbox,\n  Dropdown,\n  Empty,\n  Input,\n  InputProps,\n  Tooltip\n} from 'antd';\n\nimport _groupBy from 'lodash/groupBy';\n\nimport { getUid } from 'ol';\nimport {\n  Extent as OlExtent\n} from 'ol/extent';\nimport OlFeature from 'ol/Feature';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlFormatWKT from 'ol/format/WKT';\nimport OlGeometry from 'ol/geom/Geometry';\nimport { transformExtent } from 'ol/proj';\nimport OlStyleCircle from 'ol/style/Circle';\nimport OlStyleFill from 'ol/style/Fill';\nimport OlStyleStroke from 'ol/style/Stroke';\nimport OlStyle from 'ol/style/Style';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport { NominatimPlace } from '@terrestris/react-geo/dist/Field/NominatimSearch/NominatimSearch';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport SearchResultsPanel, {\n  Category as ResultCategory\n} from '@terrestris/react-geo/dist/Panel/SearchResultsPanel/SearchResultsPanel';\n\nimport {\n  SearchConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport './index.less';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nimport {\n  setLayerId\n} from '../../store/editFeature';\n\nimport {\n  show as showEditFeatureDrawer\n} from '../../store/editFeatureDrawerOpen';\n\nimport generateSolrQuery from '../../utils/generateSolrQuery';\n\ninterface MultiSearchProps extends InputProps {\n  useNominatim: boolean;\n  delay?: number;\n  minChars?: number;\n  solrSearchBasePath?: string;\n  useSolrHighlighting?: boolean;\n};\n\nexport type DataSearchResult = {\n  [key: string]: string | string[] | number[];\n};\n\nexport type HighlightingResult = {\n  [key: string]: string;\n};\n\nexport type HighlightingResults = {\n  [key: string]: HighlightingResult;\n};\n\nconst isFulfilled = <T, >(p: PromiseSettledResult<T>): p is PromiseFulfilledResult<T> => p.status === 'fulfilled';\n\nexport type SolrQueryConfig = {\n  q: string;\n  fq?: string;\n  defType?: 'lucene' | 'dismax' | 'edismax';\n  qf?: string;\n  rows?: number;\n  hl?: boolean;\n  'hl.fl'?: string;\n  'hl.tag.pre'?: string;\n  'hl.tag.post'?: string;\n  'hl.requireFieldMatch'?: boolean;\n};\n\nexport const MultiSearch: React.FC<MultiSearchProps> = ({\n  useNominatim,\n  useSolrHighlighting = true,\n  delay = 1000,\n  minChars = 3,\n  solrSearchBasePath = '/search/query'\n}): JSX.Element => {\n\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useAppDispatch();\n\n  const clickAwayRef = useRef<HTMLDivElement>(null);\n\n  const [searchNominatim, setSearchNominatim] = useState<boolean>(useNominatim);\n  const [searchData, setSearchData] = useState<boolean>(true);\n  const [useViewBox, setUseViewBox] = useState<boolean>(true);\n  const [searchValue, setSearchValue] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [resultsVisible, setResultsVisible] = useState<boolean>(false);\n  const [settingsVisible, setSettingsVisible] = useState<boolean>(false);\n  const [dataSearchResults, setDataSearchResults] = useState<DataSearchResult[]>([]);\n  const [highlightingResults, setHighlightingResults] = useState<HighlightingResults>({});\n  const [nominatimResults, setNominatimResults] = useState<NominatimPlace[]>([]);\n  const [searchResults, setSearchResults] = useState<ResultCategory[]>([]);\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  useEffect(() => {\n    window.addEventListener('mousedown', handleClickAway);\n\n    return () => {\n      window.removeEventListener('mousedown', handleClickAway);\n    };\n  }, []);\n\n  const handleClickAway = (e: Event) => {\n    const parents = [];\n    let target = e.target;\n    while (target) {\n      parents.unshift(target);\n      target = (target as Node).parentNode;\n    }\n\n    if ((clickAwayRef.current && ((clickAwayRef.current as Element).contains(e.target as Node)))) {\n      return;\n    }\n\n    setResultsVisible(false);\n  };\n\n  const settingsMenu = useMemo(() => {\n    return {\n      items: [{\n        label: (\n          <Checkbox\n            checked={useViewBox}\n            onChange={e => setUseViewBox(e.target.checked)}\n          >\n            {t('MultiSearch.searchInViewBox')}\n          </Checkbox>\n        ),\n        key: 'viewbox'\n      }, {\n        label: (\n          <Checkbox\n            checked={searchData}\n            onChange={e => setSearchData(e.target.checked)}\n          >\n            {t('MultiSearch.searchData')}\n          </Checkbox>\n        ),\n        key: 'data'\n      }, {\n        label: (\n          <Checkbox\n            checked={searchNominatim}\n            onChange={e => setSearchNominatim(e.target.checked)}\n          >\n            {t('MultiSearch.searchNominatim')}\n          </Checkbox>\n        ),\n        key: 'nominatim'\n      }]\n    };\n  }, [searchData, searchNominatim, useViewBox, t]);\n\n  const performSearch = useCallback(async () => {\n    if (searchValue.length < minChars) {\n      resetSearch();\n      return;\n    }\n\n    if (!searchData && !searchNominatim) {\n      return;\n    }\n\n    setLoading(true);\n    setNominatimResults([]);\n    setDataSearchResults([]);\n    setHighlightingResults({});\n\n    let response;\n    let viewBox: OlExtent | null = null;\n\n    if (useViewBox) {\n      const mapViewProjection = map?.getView().getProjection();\n      const extent = map?.getView()?.calculateExtent();\n      if (extent) {\n        viewBox = transformExtent(extent, mapViewProjection, 'EPSG:4326');\n      }\n    }\n\n    if (searchData && map) {\n      try {\n        const searchUrl = new URL(`${window.location.origin}${solrSearchBasePath}`);\n        const queriesPerLayer = generateSolrQuery({\n          searchValue,\n          map\n        });\n\n        const promises = queriesPerLayer.map(q => {\n          const solrQueryConfig: SolrQueryConfig = {\n            q: q.query,\n            rows: 100,\n            defType: 'edismax'\n          };\n\n          if (q.fieldList) {\n            solrQueryConfig.qf = q.fieldList;\n          } else {\n            solrQueryConfig.qf = 'search';\n          }\n\n          if (useViewBox && viewBox) {\n            const bboxFilter = `geometry:[${viewBox[1]},${viewBox[0]} TO ${viewBox[3]},${viewBox[2]}]`;\n            solrQueryConfig.fq = bboxFilter;\n          }\n\n          if (useSolrHighlighting) {\n            solrQueryConfig.hl = true;\n            solrQueryConfig['hl.fl'] = '*';\n            solrQueryConfig['hl.tag.pre'] = '<b>';\n            solrQueryConfig['hl.tag.post'] = '</b>';\n            solrQueryConfig['hl.requireFieldMatch'] = true;\n          }\n\n          const defaultHeaders = {\n            'Content-Type': 'application/json'\n          };\n\n          return fetch(searchUrl.href, {\n            method: 'POST',\n            headers: {\n              ...defaultHeaders,\n              ...getBearerTokenHeader(client?.getKeycloak())\n            },\n            body: JSON.stringify(solrQueryConfig)\n          });\n        });\n\n        const results = await Promise.allSettled(promises.map(async pr => {\n          const res = await pr;\n          return res.json();\n        }));\n\n        const successfulResults = results.filter(isFulfilled);\n        const dataResults = successfulResults.flatMap(sR => sR.value?.response?.docs);\n        const hlResults = Object.assign({}, ...successfulResults.map(sr => sr.value?.highlighting));\n\n        setDataSearchResults(dataResults);\n        setHighlightingResults(hlResults);\n      } catch (error) {\n        setDataSearchResults([]);\n        setHighlightingResults({});\n        logger.error('Error while fetching the layer search results: ', error);\n      } finally {\n        if (!searchNominatim) {\n          setLoading(false);\n        }\n      }\n    }\n\n    if (searchNominatim) {\n      try {\n        const nominatimUrl = new URL('https://nominatim.terrestris.de/search');\n        nominatimUrl.searchParams.set('q', searchValue);\n        nominatimUrl.searchParams.set('format', 'json');\n        nominatimUrl.searchParams.set('polygon_geojson', '1');\n\n        if (useViewBox && viewBox) {\n          nominatimUrl.searchParams.set('viewbox', viewBox.toString());\n          nominatimUrl.searchParams.set('bounded', '1');\n        }\n        response = await fetch(nominatimUrl.href);\n        setNominatimResults(await response.json());\n      }\n      catch (error) {\n        setNominatimResults([]);\n        logger.error('Error while fetching the nominatim results: ', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  }, [searchValue, minChars, searchData, searchNominatim, useViewBox, map, solrSearchBasePath, useSolrHighlighting, client]);\n\n  const replaceTemplates = (template: string, data: DataSearchResult): string => {\n    const pattern = /{\\s*(\\w+?)\\s*}/g; // regex for template string with values in brackets, e.g. {name}\n    return template.replace(pattern, (_, token) => data[token]?.toString() || '');\n  };\n\n  const getFeatureTitle = useCallback((dsResult: DataSearchResult, highlightResult?: HighlightingResult): string => {\n    if (!map) {\n      return '';\n    }\n\n    const layer = MapUtil.getLayerByNameParam(map, dsResult.featureType[0] as string);\n    const searchConfig = layer?.get('searchConfig') as SearchConfig;\n\n    const blacklistedAttributes = [\n      'category',\n      'id',\n      'featureType',\n      'geometry',\n      'search'\n    ];\n\n    let title: string = '';\n\n    if (searchConfig?.displayTemplate) {\n      return replaceTemplates(searchConfig.displayTemplate, dsResult);\n    }\n\n    if (highlightResult) {\n      const filteredHighlightKeys = Object.keys(highlightResult).filter(key => !blacklistedAttributes.includes(key));\n      if (filteredHighlightKeys.length > 0) {\n        const highlightValue = highlightResult[filteredHighlightKeys[0]];\n        return `${highlightValue} [${filteredHighlightKeys[0]}]`;\n      }\n    }\n\n    Object.keys(dsResult)\n      .filter(key => !blacklistedAttributes.includes(key))\n      .forEach(propKey => {\n        let propValue = dsResult[propKey]?.toString();\n        if (!title && propValue.toLowerCase().indexOf(searchValue?.toLowerCase()) > -1) {\n          // show matched value followed by the attribute name in square brackets (e.g. '53111 Bonn [city]')\n          title = `${propValue} [${propKey}]`;\n        }\n      });\n\n    if (!title) {\n      // fallback -> should never happen after adding of the valid layer search config\n      title = dsResult.id as string;\n    }\n\n    return title;\n  }, [searchValue, map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    let updatedResults: ResultCategory[] = [];\n\n    if (nominatimResults.length > 0) {\n\n      const geoJsonFormat = new OlFormatGeoJSON();\n      const nFeats = nominatimResults.map(f => {\n        const olFeat = geoJsonFormat.readFeature(f.geojson, {\n          dataProjection: 'EPSG:4326',\n          featureProjection: map.getView().getProjection()\n        });\n        olFeat.set('title', f.display_name);\n        return olFeat;\n      });\n\n      const nResults: ResultCategory = {\n        title: t('MultiSearch.nominatimTitle'),\n        features: nFeats\n      };\n      updatedResults.push(nResults);\n    }\n\n    if (dataSearchResults?.length > 0) {\n\n      const wktFormat = new OlFormatWKT();\n      // 1. group by category\n      const categories = _groupBy(dataSearchResults, res => res.category[0]);\n      // 2. build features\n      Object.keys(categories).forEach(category => {\n        const features = categories[category].map(dsResult => {\n          if (!dsResult.geometry?.[0]) {\n            return;\n          }\n          const id = dsResult.id as string;\n\n          const geometry = wktFormat.readGeometry(dsResult.geometry[0], {\n            dataProjection: 'EPSG:4326',\n            featureProjection: map.getView().getProjection()\n          });\n          const olFeat = new OlFeature({\n            geometry\n          });\n          olFeat.set('title', getFeatureTitle(dsResult, highlightingResults?.[id]));\n          let ftName;\n          if (dsResult.featureType?.[0]) {\n            const layer = MapUtil.getLayerByNameParam(map, dsResult.featureType?.[0] as string);\n            if (layer) {\n              olFeat.set('layer', layer);\n              ftName = layer.get('name');\n            }\n          } else {\n            ftName = id.substring(0, id.lastIndexOf('_'));\n          }\n          olFeat.set('ftName', ftName);\n          return olFeat;\n        }).filter(f => f) as OlFeature<OlGeometry>[];\n        const resultCategory: ResultCategory = {\n          title: category,\n          features\n        };\n        updatedResults.push(resultCategory);\n      });\n    }\n\n    setResultsVisible(true);\n    setSearchResults(updatedResults);\n\n  }, [dataSearchResults, highlightingResults, nominatimResults, map, getFeatureTitle, t]);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      performSearch();\n    }, delay);\n\n    return () => clearTimeout(timeout);\n\n  }, [performSearch, delay]);\n\n  const resetSearch = () => {\n    setDataSearchResults([]);\n    setNominatimResults([]);\n  };\n\n  const actionsCreator = (item: any) => {\n    const feat = item.feature;\n    const layer = feat.get('layer');\n\n    if (!layer?.get('editable')) {\n      return;\n    }\n\n    const onEditFeatureBtnClick = () => {\n      dispatch(setLayerId(getUid(layer)));\n      dispatch(showEditFeatureDrawer());\n      setResultsVisible(false);\n    };\n\n    // button is temporarily disabled\n    return [<></>];\n    // if (\n    //   allowedEditMode.includes('CREATE') ||\n    //   allowedEditMode.includes('DELETE') ||\n    //   allowedEditMode.includes('UPDATE')\n    // ) {\n    //   return [\n    //     <Tooltip\n    //       key=\"edit\"\n    //       title={t('EditFeatureButton.title')}\n    //       placement=\"bottom\"\n    //     >\n    //       <Button\n    //         onClick={onEditFeatureBtnClick}\n    //         icon={<EditOutlined />}\n    //       />\n    //     </Tooltip>\n    //   ];\n    // } else {\n    //   return [<></>];\n    // }\n  };\n\n  const layerStyle = useMemo(() => (\n    new OlStyle({\n      stroke: new OlStyleStroke({\n        color: 'rgb(255,0,0)',\n        width: 2\n      }),\n      fill: new OlStyleFill({\n        color: 'rgba(255,255,255, 0.5)'\n      }),\n      image: new OlStyleCircle({\n        radius: 10,\n        fill: new OlStyleFill({\n          color: 'rgba(255,255,255, 0.5)'\n        }),\n        stroke: new OlStyleStroke({\n          color: 'rgb(255,0,0)',\n          width: 3\n        })\n      })\n    })\n  ), []);\n\n  const resultRenderer = () => {\n    if (searchValue.length < 2 || !resultsVisible || loading || !dataSearchResults) {\n      return null;\n    }\n\n    const numTotal = nominatimResults.length + dataSearchResults.length;\n\n    if (numTotal === 0) {\n      return (\n        <div\n          className='no-search-result-div'\n        >\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <SearchResultsPanel\n        searchResults={searchResults}\n        numTotal={numTotal}\n        accordion\n        searchTerms={searchValue.split(' ')}\n        actionsCreator={actionsCreator}\n        layerStyle={layerStyle}\n      />\n    );\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <div ref={clickAwayRef}>\n      <Input\n        value={searchValue}\n        disabled={!searchData && !searchNominatim}\n        onChange={event => {\n          setLoading(event.target.value !== '');\n          setSearchValue(event.target.value);\n        }}\n        allowClear\n        addonAfter={\n          <Dropdown\n            placement=\"bottomRight\"\n            menu={settingsMenu}\n            trigger={['click']}\n            onOpenChange={setSettingsVisible}\n            open={settingsVisible}\n          >\n            <SettingOutlined />\n          </Dropdown >\n        }\n        onFocus={() => setResultsVisible(true)}\n        placeholder={t('MultiSearch.searchPlaceholder')}\n        prefix={<SearchOutlined />}\n        suffix={loading ? <LoadingOutlined /> : null}\n      />\n      {resultRenderer()}\n    </div>\n  );\n};\n\nexport default MultiSearch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  InputProps\n} from 'antd/lib/input';\n\nimport logger from '@terrestris/base-util/dist/Logger';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport BasicNominatimSearch from '../BasicNominatimSearch';\nimport MultiSearch from '../MultiSearch';\n\nimport './index.less';\n\ninterface SearchFieldProps extends InputProps { };\n\nexport const SearchField: React.FC<SearchFieldProps> = (): JSX.Element => {\n\n  const useNominatim = useAppSelector((state) => state.searchEngines.includes('nominatim'));\n  const useSolr = useAppSelector((state) => state.searchEngines.includes('solr'));\n\n  if (!useNominatim && !useSolr) {\n    logger.warn('Neither nominatim nor solr search is configured.');\n    return <></>;\n  }\n\n  return (\n    <div\n      className=\"search\"\n      aria-label='search-field'\n    >\n      {\n        useSolr ?\n          <MultiSearch\n            aria-label='search'\n            useNominatim={useNominatim}\n          /> :\n          <BasicNominatimSearch\n            aria-label='search'\n          />\n      }\n    </div>\n  );\n};\n\nexport default SearchField;\n","import md5 from 'js-md5';\n\nexport interface GravatarProps {\n  email: string;\n  size?: number;\n  rating?: 'g' | 'pg' | 'r' | 'x';\n  defaultImage?: '404' | 'mp' | 'identicon' | 'monsterid' | 'wavatar' | 'retro' | 'robohash' | 'blank';\n  force?: boolean;\n}\n\nconst GRAVATAR_BASE_URL = 'https://www.gravatar.com/avatar/';\n\n/**\n * https://de.gravatar.com/site/implement/images/\n */\nexport const getGravatarUrl = ({\n  email = '',\n  size = 80,\n  rating = 'g',\n  defaultImage = 'identicon',\n  force = false\n}: GravatarProps): string => {\n  const lowerCaseEmail = email.toLowerCase();\n  const hash = md5(lowerCaseEmail);\n\n  let url = `${GRAVATAR_BASE_URL}${hash}?s=${size}&r=${rating}&d=${defaultImage}`;\n\n  if (force) {\n    url = `${url}&f=y`;\n  }\n\n  return url;\n};\n\nexport default getGravatarUrl;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  Modal,\n  Statistic\n} from 'antd';\n\nimport {\n  ModalProps\n} from 'antd/lib/modal';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport useAppSelector from '../../hooks/useAppSelector';\n\nimport {\n  useClientVersion\n} from '../../hooks/useVersion';\n\nimport './index.less';\n\ninterface ApplicationInfoProps extends ModalProps {\n  opener?: JSX.Element;\n}\n\nexport const ApplicationInfo: React.FC<ApplicationInfoProps> = ({\n  opener,\n  ...restProps\n}) => {\n  const {\n    t\n  } = useTranslation();\n\n  const appInfo = useAppSelector(state => state.appInfo);\n  const logoPath = useAppSelector(state => state.logoPath);\n  const appDescription = useAppSelector(state => state.description);\n\n  const [isVisible, setVisible] = useState<boolean>(false);\n\n  const toggleVisibility = () => {\n    setVisible(!isVisible);\n  };\n\n  let Opener;\n  if (opener) {\n    Opener = React.cloneElement(\n      opener,\n      {\n        onClick: toggleVisibility\n      }\n    );\n  } else {\n    Opener = <button onClick={toggleVisibility}>Open</button>;\n  }\n\n  return (\n    <>\n      {\n        Opener\n      }\n      <Modal\n        className='application-info'\n        title={t('ApplicationInfo.title')}\n        centered={true}\n        open={isVisible}\n        onOk={toggleVisibility}\n        onCancel={toggleVisibility}\n        footer={null}\n        {...restProps}\n      >\n        <img\n          className=\"logo\"\n          src={logoPath}\n        />\n        <div\n          className=\"description\"\n        >\n          {appDescription}\n        </div>\n        <Statistic\n          title={t('ApplicationInfo.clientVersionTitle')}\n          value={useClientVersion()}\n        />\n        {\n          (appInfo.version && appInfo.buildTime) &&\n          <Statistic\n            title={t('ApplicationInfo.backendVersionTitle')}\n            value={`${appInfo.version} (${appInfo.buildTime})`}\n          />\n        }\n      </Modal>\n    </>\n  );\n};\n\nexport default ApplicationInfo;\n","export const useClientVersion = () => {\n  return PROJECT_VERSION;\n};\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faInfo,\n  faUserCog,\n  faSignOut,\n  faSignIn,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  ItemType\n} from 'antd/lib/menu/hooks/useItems';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport {\n  MenuInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport UserChip from '@terrestris/react-geo/dist/UserChip/UserChip';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport {\n  getGravatarUrl\n} from '../../utils/getGravatarUrl';\n\nimport ApplicationInfo from '../ApplicationInfo';\n\nimport './index.less';\n\ninterface OwnProps { }\n\ntype UserProps = OwnProps;\n\nexport const UserMenu: React.FC<UserProps> = (): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const client = useSHOGunAPIClient();\n  const keycloak = client?.getKeycloak();\n\n  const user = useAppSelector((state) => state.user);\n\n  const onMenuClick = (evt: MenuInfo) => {\n    switch (evt.key) {\n      case 'settings':\n        if (keycloak) {\n          keycloak.accountManagement();\n        }\n        break;\n      case 'info':\n        // Don't do anything, visible state will be handled by the menu itself.\n        break;\n      case 'login':\n        if (keycloak) {\n          keycloak.login();\n        }\n        break;\n      case 'logout':\n        if (keycloak) {\n          keycloak.logout();\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const getMenu = () => {\n    const login: ItemType = {\n      key: 'login',\n      icon: (\n        <FontAwesomeIcon\n          icon={faSignIn}\n        />\n      ),\n      label: t('UserMenu.loginMenuTitle')\n    };\n\n    const username: ItemType = {\n      key: 'username',\n      label: (\n        <div\n          className=\"user-name\"\n          aria-label='user-name'\n        >\n          <span>\n            {\n              user.providerDetails?.email\n            }\n          </span>\n        </div>\n      )\n    };\n\n    const divider: ItemType = {\n      type: 'divider'\n    };\n\n    const settings: ItemType = {\n      key: 'settings',\n      icon: (\n        <FontAwesomeIcon\n          icon={faUserCog}\n        />\n      ),\n      label: t('UserMenu.settingsMenuTitle')\n    };\n\n    const info: ItemType = {\n      key: 'info',\n      icon: (\n        <FontAwesomeIcon\n          icon={faInfo}\n        />\n      ),\n      label: (\n        <ApplicationInfo\n          opener={\n            <span\n              className=\"info-opener\"\n              aria-label='info-opener'\n            >\n              {t('UserMenu.infoMenuTitle')}\n            </span>\n          }\n        />\n      )\n    };\n\n    const logout: ItemType = {\n      key: 'logout',\n      icon: (\n        <FontAwesomeIcon\n          icon={faSignOut}\n        />\n      ),\n      label: (\n        <div\n          aria-label='login'\n        >\n          {t('UserMenu.logoutMenuTitle')}\n        </div>\n      )\n    };\n\n    const items: ItemType[] = [];\n\n    if (_isEmpty(user)) {\n      if (ClientConfiguration.keycloak?.enabled) {\n        items.push(login);\n      }\n      items.push(info);\n    } else {\n      const accountRoles = keycloak?.tokenParsed?.resource_access?.account?.roles;\n      const hasUserManagementAccess = Array.isArray(accountRoles) && accountRoles.indexOf('manage-account') > -1;\n      const itemsForLoggedInUser = hasUserManagementAccess ? [\n        username,\n        divider,\n        settings,\n        info,\n        divider,\n        logout\n      ] : [\n        username,\n        divider,\n        info,\n        divider,\n        logout\n      ];\n\n      items.push(...itemsForLoggedInUser);\n    }\n\n    return {\n      items,\n      onClick: onMenuClick\n    };\n  };\n\n  return (\n    <UserChip\n      size={'small'}\n      imageSrc={getGravatarUrl({\n        email: user.providerDetails?.email || '',\n        size: 28\n      })}\n      userName={\n        <FontAwesomeIcon\n          icon={faAngleDown}\n        />\n      }\n      userMenu={getMenu()}\n    />\n  );\n};\n\nexport default UserMenu;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  useAppSelector\n} from '../../hooks/useAppSelector';\nimport {\n  usePlugins\n} from '../../hooks/usePlugins';\n\nimport {\n  HeaderPlacementOrientation,\n  isHeaderIntegration\n} from '../../plugin';\nimport SearchField from '../SearchField';\n\nimport UserMenu from '../UserMenu';\n\nimport './index.less';\n\nexport interface HeaderProps extends React.ComponentProps<'div'> { };\n\nexport const Header: React.FC<HeaderProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const title = useAppSelector((state) => state.title);\n  const logoPath = useAppSelector((state) => state.logoPath);\n  const plugins = usePlugins();\n\n  const insertPlugins = (itemPosition: HeaderPlacementOrientation, items: JSX.Element[]) => {\n    plugins.forEach(plugin => {\n      if (isHeaderIntegration(plugin.integration) && plugin.integration?.placementOrientation === itemPosition) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        items.splice(plugin.integration?.insertionIndex || 0, 0,\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  };\n\n  const getLeftItems = () => {\n    const items = [(\n      <img\n        key=\"logo\"\n        className=\"logo\"\n        aria-label=\"logo\"\n        src={logoPath}\n      />\n    ), (\n      <div\n        key=\"title\"\n        className=\"title\"\n        aria-label=\"title\"\n      >\n        {title}\n      </div>\n    )];\n\n    insertPlugins('left', items);\n\n    return items;\n  };\n\n  const getCenterItems = () => {\n    const items = [\n      <SearchField\n        key=\"search\"\n        aria-label='search-input'\n        name='search-input'\n        className='search-input'\n      />\n    ];\n\n    insertPlugins('center', items);\n\n    return items;\n  };\n\n  const getRightItems = () => {\n    const items = [\n      <div\n        key=\"user-menu\"\n        aria-label=\"user-menu\"\n      >\n        <UserMenu\n          key=\"user-menu\"\n        />\n      </div>\n    ];\n\n    insertPlugins('right', items);\n\n    return items;\n  };\n\n  return (\n    <div\n      className=\"header\"\n      {...restProps}\n    >\n      <div\n        className=\"item-container left-items\"\n      >\n        {\n          getLeftItems()\n        }\n      </div>\n      <div\n        className=\"item-container center-items\"\n      >\n        {\n          getCenterItems()\n        }\n      </div>\n      <div\n        className=\"item-container right-items\"\n      >\n        {\n          getRightItems()\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\n\nimport {\n  Alert,\n  Spin\n} from 'antd';\n\nimport OlLayer from 'ol/layer/Layer';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport './index.less';\n\nexport type LayerConfigurationProps = React.ComponentProps<'pre'> & {\n  layer?: OlLayer;\n};\n\nexport const LayerConfiguration: React.FC<LayerConfigurationProps> = ({\n  layer,\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [layerConfiguration, setLayerConfiguration] = useState<Layer>();\n\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const getLayerConfiguration = useCallback(async () => {\n    try {\n      setLoading(true);\n      setErrorMessage('');\n\n      if (!layer || !layer.get('shogunId')) {\n        throw new Error('No layer provided or the layer has no shogunId set');\n      }\n\n      const conf = await client?.layer().findOne(layer.get('shogunId'));\n\n      setLayerConfiguration(conf);\n    } catch (error) {\n      Logger.error(error);\n      setErrorMessage(t('LayerConfiguration.errorMessage'));\n    } finally {\n      setLoading(false);\n    }\n  }, [t, client, layer]);\n\n  useEffect(() => {\n    getLayerConfiguration();\n  }, [getLayerConfiguration]);\n\n  if (errorMessage) {\n    return (\n      <Alert\n        type=\"error\"\n        closable={true}\n        message={errorMessage}\n      />\n    );\n  }\n\n  return (\n    <Spin\n      spinning={loading}\n    >\n      <pre\n        className=\"layer-configuration\"\n        {...restProps}\n      >\n        <code>\n          {\n            JSON.stringify(layerConfiguration, null, '  ')\n          }\n        </code>\n      </pre>\n    </Spin>\n  );\n};\n\nexport default LayerConfiguration;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\n\nimport {\n  Alert,\n  Form,\n  FormProps,\n  Spin\n} from 'antd';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayer from 'ol/layer/Layer';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport CapabilitiesUtil from '@terrestris/ol-util/dist/CapabilitiesUtil/CapabilitiesUtil';\n\nimport {\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport './index.less';\n\nexport type LayerDetailsProps = Partial<FormProps> & {\n  layer?: OlLayer;\n};\n\nexport const LayerDetails: React.FC<LayerDetailsProps> = ({\n  layer,\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [capabilities, setCapabilities] = useState<any>();\n  const [errorMessage, setErrorMessage] = useState<string>();\n\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const getCapabilities = useCallback(async () => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setErrorMessage('');\n      setCapabilities(undefined);\n\n      const capa = await CapabilitiesUtil.getWmsCapabilitiesByLayer(\n        (layer as OlLayerImage<OlSourceImageWMS> | OlLayerTile<OlSourceTileWMS>), {\n          headers: {\n            ...layer.get('useBearerToken') ? {\n              ...getBearerTokenHeader(client?.getKeycloak())\n            } : undefined\n          }\n        });\n\n      setCapabilities(capa);\n    } catch (error) {\n      Logger.error(error);\n      setErrorMessage(t('LayerDetails.errorMessage'));\n    } finally {\n      setLoading(false);\n    }\n  }, [t, client, layer]);\n\n  useEffect(() => {\n    getCapabilities();\n  }, [getCapabilities]);\n\n  const getLayerName = () => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    return layer.getSource()?.getParams().LAYERS;\n  };\n\n  const getCapabilitiesUrl = () => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    let layerUrl;\n    if (layer.getSource() instanceof OlSourceImageWMS) {\n      layerUrl = (layer.getSource() as OlSourceImageWMS).getUrl();\n    }\n    if (layer.getSource() instanceof OlSourceTileWMS) {\n      const urls = (layer.getSource() as OlSourceTileWMS).getUrls();\n      layerUrl = urls ? urls[0] : undefined;\n    }\n\n    if (layerUrl) {\n      return UrlUtil.createValidGetCapabilitiesRequest(layerUrl, 'WMS', '1.3.0');\n    }\n  };\n\n  const getCapabilitiesLayer = () => {\n    const layers: any[] = capabilities?.Capability?.Layer?.Layer;\n    const layerName = getLayerName();\n\n    const lay = layers?.find(l => l.Name === layerName);\n\n    return lay;\n  };\n\n  const getBBox = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay || !lay.EX_GeographicBoundingBox) {\n      return;\n    }\n\n    return [\n      lay.EX_GeographicBoundingBox.westBoundLongitude,\n      lay.EX_GeographicBoundingBox.southBoundLatitude,\n      lay.EX_GeographicBoundingBox.eastBoundLongitude,\n      lay.EX_GeographicBoundingBox.northBoundLatitude\n    ].join(', ');\n  };\n\n  const getMinScale = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.MinScaleDenominator;\n  };\n\n  const getMaxScale = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.MaxScaleDenominator;\n  };\n\n  const getAbstract = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.Abstract;\n  };\n\n  const getServiceAbstract = () => {\n    return capabilities?.Service?.Abstract;\n  };\n\n  const getContact = () => {\n    return capabilities?.Service?.ContactInformation?.ContactElectronicMailAddress;\n  };\n\n  const getLayerTitle = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.Title;\n  };\n\n  const getAccessConstraints = () => {\n    return capabilities?.Service?.AccessConstraints;\n  };\n\n  if (errorMessage) {\n    return (\n      <Alert\n        type=\"error\"\n        closable={true}\n        message={errorMessage}\n      />\n    );\n  }\n\n  return (\n    <Spin\n      spinning={loading}\n    >\n      <Form\n        className=\"layer-details\"\n        layout=\"horizontal\"\n        size=\"small\"\n        labelAlign=\"left\"\n        labelWrap={true}\n        labelCol={{\n          flex: '150px'\n        }}\n        {...restProps}\n      >\n        <Form.Item\n          name=\"layerName\"\n          label={t('LayerDetails.layerNameLabel')}\n        >\n          <span>{getLayerName() ? getLayerName() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"layerTitle\"\n          label={t('LayerDetails.layerTitleLabel')}\n        >\n          <span>{getLayerTitle() ? getLayerTitle() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"service-abstract\"\n          label={t('LayerDetails.serviceAbstractLabel')}\n        >\n          <span>{getServiceAbstract() ? getServiceAbstract() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"abstract\"\n          label={t('LayerDetails.abstractLabel')}\n        >\n          <span>{getAbstract() ? getAbstract() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"accessConstraints\"\n          label={t('LayerDetails.accessConstraintsLabel')}\n        >\n          <span>{getAccessConstraints() ? getAccessConstraints() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"CapabilitiesUrl\"\n          label={t('LayerDetails.capabilitiesUrlLabel')}\n        >\n          <a href={getCapabilitiesUrl()}>{getCapabilitiesUrl()}</a>\n        </Form.Item>\n        <Form.Item\n          name=\"contact\"\n          label={t('LayerDetails.contactLabel')}\n        >\n          {getContact() ? <a href={`mailto:${getContact()}`}>{getContact()}</a> : <span>{t('LayerDetails.noDataPlaceholder')}</span>}\n        </Form.Item>\n        <Form.Item\n          name=\"minScale\"\n          label={t('LayerDetails.minScaleLabel')}\n        >\n          <span>{getMinScale() ? getMinScale() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"maxScale\"\n          label={t('LayerDetails.maxScaleLabel')}\n        >\n          <span>{getMaxScale() ? getMaxScale() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"bbox\"\n          label={t('LayerDetails.bboxLabel')}\n        >\n          <span>{getBBox() ? getBBox() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n      </Form>\n    </Spin>\n  );\n};\n\nexport default LayerDetails;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport {\n  FileTextOutlined\n} from '@ant-design/icons';\n\nimport {\n  Button,\n  Modal,\n  ModalProps,\n  Tooltip\n} from 'antd';\n\nimport OlLayer from 'ol/layer/Layer';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\n\nimport {\n  hide as hideLayerDetailsModal,\n  setLayer as setDetailsLayer\n} from '../../store/layerDetailsModal';\n\nimport LayerConfiguration from './LayerConfiguration';\nimport LayerDetails from './LayerDetails';\n\nimport './index.less';\n\nexport type LayerDetailsModalProps = {} & Partial<ModalProps>;\n\nexport const LayerDetailsModal: React.FC<LayerDetailsModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [layer, setLayer] = useState<OlLayer>();\n  const [configurationVisible, setConfigurationVisible] = useState<boolean>(false);\n\n  const isModalVisible = useAppSelector(state => state.layerDetailsModal.visible);\n  const layerId = useAppSelector(state => state.layerDetailsModal.layerId);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    if (!layerId) {\n      setLayer(undefined);\n      return;\n    }\n\n    const l = MapUtil.getLayerByOlUid(map, layerId);\n\n    if (!(l instanceof OlLayer)) {\n      return;\n    }\n\n    setLayer(l);\n  }, [map, layerId]);\n\n  const closeModal = () => {\n    dispatch(hideLayerDetailsModal());\n    dispatch(setDetailsLayer(undefined));\n  };\n\n  const onShowConfigurationClick = () => {\n    setConfigurationVisible(!configurationVisible);\n  };\n\n  return (\n    <Modal\n      className=\"layer-details-modal\"\n      title={(\n        <div\n          className=\"title-group\"\n        >\n          <span>{t('LayerDetailsModal.title', {\n            layerName: layer?.get('name')\n          })}\n          </span>\n          {\n            layer?.get('shogunId') && (\n              <Tooltip\n                title={configurationVisible ?\n                  t('LayerDetailsModal.internalConfigurationButtonTooltip') :\n                  t('LayerDetailsModal.internalConfigurationButtonTooltipPressed')\n                }\n              >\n                <Button\n                  type=\"link\"\n                  className={configurationVisible ? 'pressed' : ''}\n                  icon={<FileTextOutlined />}\n                  onClick={onShowConfigurationClick}\n                />\n              </Tooltip>\n            )\n          }\n        </div>\n      )}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={800}\n      footer={false}\n      {...restProps}\n    >\n      <LayerDetails\n        layer={layer}\n        hidden={configurationVisible}\n      />\n      {\n        layer?.get('shogunId') && (\n          <LayerConfiguration\n            layer={layer}\n            hidden={!configurationVisible}\n          />\n        )\n      }\n    </Modal>\n  );\n};\n\nexport default LayerDetailsModal;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport './index.less';\n\nimport {\n  Select\n} from 'antd';\n\nconst {\n  Option\n} = Select;\n\nimport i18n from '../../i18n';\n\nexport const LanguageSelect = () => {\n  const supportedLanguages = Object.keys(i18n.services.resourceStore.data);\n\n  const onLanguageChange = (lang: string) => {\n    i18n.changeLanguage(lang);\n  };\n\n  return (\n    <div\n      className=\"language-select\"\n      aria-label='language-selector'\n    >\n      <Select\n        defaultValue={i18n.language || 'en'}\n        onChange={onLanguageChange}\n      >\n        {\n          supportedLanguages.map(supportedLanguage => {\n            return (\n              <Option\n                key={supportedLanguage}\n                value={supportedLanguage}\n              >\n                {supportedLanguage.toUpperCase()}\n              </Option>\n            );\n          })\n        }\n      </Select>\n    </div>\n  );\n};\n\nexport default LanguageSelect;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect, useState, useMemo\n} from 'react';\n\nimport {\n  CopyOutlined,\n  MailOutlined,\n  TwitterOutlined,\n  WhatsAppOutlined\n} from '@ant-design/icons';\nimport {\n  Input, Tooltip, message\n} from 'antd';\nimport copy from 'copy-to-clipboard';\nimport {\n  EventsKey\n} from 'ol/events';\nimport BaseLayer from 'ol/layer/Base';\nimport LayerGroup from 'ol/layer/Group';\nimport ImageLayer from 'ol/layer/Image';\nimport TileLayer from 'ol/layer/Tile';\nimport {\n  unByKey\n} from 'ol/Observable';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport PermalinkUtil from '@terrestris/ol-util/dist/PermalinkUtil/PermalinkUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\n\nimport './index.less';\n\ninterface DefaultPermalinkProps { }\n\nexport interface PermalinkProps extends Partial<DefaultPermalinkProps> { }\n\nexport const Permalink: React.FC<PermalinkProps> = () => {\n  const map = useMap();\n  const layerAttributes = useMemo(() => [\n    'layerConfig',\n    'isExternalLayer',\n    'isUploadedLayer',\n    'groupName'\n  ], []);\n  const {\n    t\n  } = useTranslation();\n\n  const initialPermalink = map ? PermalinkUtil.getLink(\n    map,\n    ';',\n    l => l.get('name'),\n    l => (l instanceof TileLayer || l instanceof ImageLayer) && l.getVisible(),\n    layerAttributes\n  ) : '';\n\n  const [permalink, setPermalink] = useState(initialPermalink);\n\n  const mailSubject = 'SHOGun Web-GIS';\n  const mailBody = `Hey,\\r\\ncheck out the layer-composition I created:\\r\\n\\r\\n${permalink}`;\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n    let eventKeys: EventsKey[] = [];\n\n    const identifierFunction = (l: BaseLayer) => l.get('name');\n    const filterFunction = (l: BaseLayer) => (l instanceof TileLayer || l instanceof ImageLayer) && l.getVisible();\n    const updatePermalink = () => {\n      setPermalink(PermalinkUtil.getLink(\n        map,\n        ';',\n        identifierFunction,\n        filterFunction,\n        layerAttributes\n      ));\n    };\n\n    const updateLayerConfig = () => {\n      const externalLayers = map.getAllLayers().filter(l => l.get('isExternalLayer') || l.get('isUploadedLayer'));\n      externalLayers.forEach(externalLayer => {\n        const layerConfig = externalLayer.get('layerConfig') as Layer;\n        if (layerConfig) {\n          if (layerConfig.clientConfig) {\n            layerConfig.clientConfig.opacity = externalLayer.getOpacity();\n          } else {\n            layerConfig.clientConfig = {\n              opacity: externalLayer.getOpacity()\n            };\n          }\n          externalLayer.set('layerConfig', layerConfig);\n        }\n      });\n      updatePermalink();\n    };\n\n    const registerLayerCallback = (layerGroup: LayerGroup) => {\n      const layersInGroup = layerGroup.getLayers().getArray();\n      for (let i = 0; i < layersInGroup.length; i++) {\n        const layerInGroup = layersInGroup[i];\n\n        if (layerInGroup instanceof LayerGroup) {\n          registerLayerCallback(layerInGroup);\n        } else {\n          let eventKeyVisibility = layerInGroup.on('change:visible', updatePermalink);\n          let eventKeyOpacity = layerInGroup.on('change:opacity', updateLayerConfig);\n          eventKeys.push(eventKeyVisibility, eventKeyOpacity);\n        }\n      }\n    };\n\n    const listenerKeyCenter = map.getView().on('change:center', updatePermalink);\n    const listenerKeyResolution = map.getView().on('change:resolution', updatePermalink);\n\n    let mapLayerGroup = map.getLayerGroup();\n    registerLayerCallback(mapLayerGroup);\n    updateLayerConfig();\n\n    return () => {\n      unByKey(listenerKeyCenter);\n      unByKey(listenerKeyResolution);\n      unByKey(eventKeys);\n    };\n  }, [layerAttributes, map, t]);\n\n  function onTwitterClick() {\n    const twitterUrl = new URL('https://twitter.com/intent/tweet');\n    twitterUrl.searchParams.set('url', mailBody);\n    window.open(twitterUrl);\n  }\n\n  function onWhatsAppClick() {\n    const whatsAppUrl = new URL('https://wa.me');\n    whatsAppUrl.searchParams.set('text', mailBody);\n    window.open(whatsAppUrl);\n  }\n\n  function onMailClick() {\n    const mailToUrl = new URL('mailto:');\n    mailToUrl.searchParams.set('subject', mailSubject);\n    mailToUrl.searchParams.set('body', mailBody);\n    window.open(mailToUrl.toString().replace(/\\+/g, '%20'), '_self');\n  }\n\n  function onCopyClick() {\n    const success = copy(permalink);\n    if (success) {\n      message.info(t('Permalink.copiedToClipboard'));\n    } else {\n      message.info(t('Permalink.copyToClipboardFailed'));\n    }\n  }\n\n  return (\n    <div className=\"permalink-wrapper\">\n      <div className=\"icons\">\n        <Tooltip title={t('Permalink.twitterTooltip')}>\n          <TwitterOutlined onClick={onTwitterClick} />\n        </Tooltip>\n        <Tooltip title={t('Permalink.whatsAppTooltip')}>\n          <WhatsAppOutlined onClick={onWhatsAppClick} />\n        </Tooltip>\n        <Tooltip title={t('Permalink.mailTooltip')}>\n          <MailOutlined onClick={onMailClick} />\n        </Tooltip>\n      </div>\n      <div\n        className=\"link\"\n        aria-label='permalink-url'\n      >\n        <Input value={permalink}\n          readOnly\n        />\n        <Tooltip title={t('Permalink.copyTooltip')}>\n          <CopyOutlined onClick={onCopyClick} />\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nexport default Permalink;\n","import OlLayer from 'ol/layer/Layer';\n\nimport MapFishPrintV3WMSSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3WMSSerializer';\n\nexport class SHOGunMapFishPrintV3WMSSerializer extends MapFishPrintV3WMSSerializer {\n\n  serialize(layer: OlLayer, opts?: any) {\n    const serialized: any = super.serialize(layer, opts);\n\n    if (serialized.baseURL.startsWith('/geoserver/ows')) {\n      serialized.baseURL = `http://shogun-geoserver:8080${serialized.baseURL}`;\n    }\n\n    if (serialized.baseURL.startsWith('/geoserver/SHOGUN')) {\n      serialized.baseURL = `http://shogun-geoserver:8080${serialized.baseURL}`;\n    }\n\n    return serialized;\n  }\n}\n\nexport default SHOGunMapFishPrintV3WMSSerializer;\n","import defaultsDeep from 'lodash/defaultsDeep';\n\nimport OlLayer from 'ol/layer/Layer';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport MapFishPrintV3TiledWMSSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3TiledWMSSerializer';\n\nimport SHOGunMapFishPrintV3WMSSerializer from './SHOGunMapFishPrintV3WMSSerializer';\n\nexport class SHOGunMapFishPrintV3TiledWMSSerializer extends SHOGunMapFishPrintV3WMSSerializer {\n\n  serialize(layer: OlLayer<OlSourceTileWMS>, opts: any) {\n    const optsToApply = {\n      tileSize: [512, 512],\n      ...opts\n    };\n\n    const source = layer.getSource();\n\n    if (!source || !this.validateSource(source)) {\n      return;\n    }\n\n    const serialized = {\n      ...super.serialize(layer, optsToApply),\n      ...{\n        type: MapFishPrintV3TiledWMSSerializer.TYPE_WMS\n      },\n      ...opts\n    };\n\n    return serialized;\n  }\n}\n\nexport default SHOGunMapFishPrintV3TiledWMSSerializer;\n","import React, {\n  useEffect, useState\n} from 'react';\n\nimport { Input } from 'antd';\nimport { InputProps } from 'antd/lib/input';\n\nimport _isNil from 'lodash/isNil';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport { addCustomParam } from '../../../store/print';\n\ninterface CustomFieldInputProps extends InputProps {}\n\nexport const CustomFieldInput: React.FC<CustomFieldInputProps> = ({\n  value,\n  id,\n  placeholder,\n  maxLength,\n  ...restProps\n}): JSX.Element => {\n\n  const [inputText, setInputText] = useState<any>(value);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (!_isNil(id)) {\n      dispatch(addCustomParam({\n        [id]: inputText\n      }));\n    }\n  }, [inputText, id, dispatch]);\n\n  useEffect(() => {\n    setInputText(value);\n  }, [value]);\n\n  return (\n    <Input\n      id={id}\n      value={inputText}\n      onChange={(event) => setInputText(event.target.value)}\n      placeholder={placeholder}\n      maxLength={maxLength}\n      showCount={!!(maxLength && maxLength > 1)}\n      {...restProps}\n    />\n  );\n};\n\nexport default CustomFieldInput;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport {\n  Layout\n} from '../';\n\nexport interface LayoutSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const LayoutSelect: React.FC<LayoutSelectProps> = ({\n  printManager,\n  placeholder = 'Bitte wählen Sie eine Vorlage aus',\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [layout, setLayout] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setLayout(layout);\n    }\n  }, [printManager, layout]);\n\n  useEffect(() => {\n    setLayout(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={layout}\n      onChange={setLayout}\n      {...restProps}\n    >\n      {\n        printManager?.getLayouts().map((l: Layout) => (\n          <Select.Option\n            key={l.name}\n            value={l.name}\n          >\n            {l.name}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default LayoutSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface OutputFormatSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n  outputFormats: string[];\n}\n\nexport const OutputFormatSelect: React.FC<OutputFormatSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  outputFormats,\n  ...restProps\n}): JSX.Element => {\n\n  const [outputFormat, setOutputFormat] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setOutputFormat(outputFormat);\n    }\n  }, [printManager, outputFormat]);\n\n  useEffect(() => {\n    setOutputFormat(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={outputFormat}\n      onChange={setOutputFormat}\n      {...restProps}\n    >\n      {\n        outputFormats.map((f: string) => (\n          <Select.Option\n            key={f}\n            value={f}\n          >\n            {f.toLocaleUpperCase()}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default OutputFormatSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface ResolutionSelectProps extends SelectProps<number> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const ResolutionSelect: React.FC<ResolutionSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [resolution, setResolution] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setDpi(resolution);\n    }\n  }, [printManager, resolution]);\n\n  useEffect(() => {\n    setResolution(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={resolution}\n      onChange={setResolution}\n      {...restProps}\n    >\n      {\n        printManager?.getDpis().map((d: number) => (\n          <Select.Option\n            key={d}\n            value={d}\n          >\n            {`${d} DPI`}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default ResolutionSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport interface ScaleSelectProps extends SelectProps<number> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const ScaleSelect: React.FC<ScaleSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const map = useMap();\n\n  const [scale, setScale] = useState<number>(0);\n\n  useEffect(() => {\n    if (printManager && scale) {\n      printManager.setScale(scale);\n    }\n  }, [printManager, scale]);\n\n  useEffect(() => {\n    const updateScale = () => {\n      const pmScale = printManager.getScale();\n      if (pmScale) {\n        setScale(pmScale);\n      }\n    };\n    const transformInteraction = map?.getInteractions().getArray().find(i => {\n      return i.get('name') === MapFishPrintV3Manager.TRANSFORM_INTERACTION_NAME;\n    });\n\n    if (printManager && transformInteraction) {\n      if (transformInteraction) {\n        // @ts-ignore\n        transformInteraction.on('scaling', updateScale);\n\n        return () => {\n          // @ts-ignore\n          transformInteraction.un('scaling', updateScale);\n        };\n      }\n    }\n  }, [printManager, map]);\n\n  useEffect(() => {\n    if (value) {\n      setScale(value);\n    }\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={scale}\n      onChange={setScale}\n      {...restProps}\n    >\n      {\n        printManager?.getScales().map((s: number) => (\n          <Select.Option\n            key={s}\n            value={s}\n          >\n            {`1 : ${s.toLocaleString()}`}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default ScaleSelect;\n","import OlLayer from 'ol/layer/Layer';\nimport OlRendererLayer from 'ol/renderer/Layer';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSource from 'ol/source/Source';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport Shared from '@terrestris/mapfish-print-manager/dist/util/Shared';\n\nShared.getLegendGraphicUrl = (layer: OlLayer<OlSource, OlRendererLayer<any>>): string => {\n  if (layer.get('legendUrl')) {\n    return layer.get('legendUrl');\n  }\n\n  if (layer.getSource() instanceof OlSourceTileWMS ||\n    layer.getSource() instanceof OlSourceImageWMS) {\n\n    const customParams: any = layer.get('customPrintLegendParams');\n    const source: any = layer.getSource();\n\n    const {\n      LAYERS,\n      VERSION,\n      FORMAT\n    } = source.getParams();\n\n    let url: string = source instanceof OlSourceImageWMS ?\n      source.getUrl() :\n      source.getUrls()[0];\n\n    if (url.startsWith('/geoserver/ows')) {\n      url = `http://shogun-geoserver:8080${url}`;\n    }\n\n    const params: any = {\n      LAYER: LAYERS.split(',')[0],\n      VERSION: VERSION || '1.3.0',\n      SERVICE: 'WMS',\n      REQUEST: 'GetLegendGraphic',\n      FORMAT: FORMAT || 'image/png',\n      ...customParams\n    };\n\n    const queryParams = Object.keys(params).map(key => {\n      return `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`;\n    }).join('&');\n\n    if (url.startsWith('/geoserver/SHOGUN')) {\n      url = `http://shogun-geoserver:8080${url}/service?`;\n      return `${url}${queryParams}`;\n    }\n\n    if (url.endsWith('?')) {\n      return `${url}${queryParams}`;\n    } else {\n      return `${url}?${queryParams}`;\n    }\n  }\n\n  return '';\n};\n","import React, {\n  useCallback, useEffect, useState\n} from 'react';\n\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n  Alert, Button, Form\n} from 'antd';\nimport { FormProps } from 'antd/lib/form/Form';\nimport ClientConfiguration from 'clientConfig';\nimport _isNil from 'lodash/isNil';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayer from 'ol/layer/Layer';\nimport OlSource from 'ol/source/Source';\n\nimport { useTranslation } from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport { MapFishPrintV3Manager } from '@terrestris/mapfish-print-manager';\nimport { MapFishPrintV3ManagerOpts } from '@terrestris/mapfish-print-manager/dist/manager/MapFishPrintV3Manager';\nimport MapFishPrintV3GeoJsonSerializer\n  from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3GeoJsonSerializer';\nimport MapFishPrintV3OSMSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3OSMSerializer';\nimport MapFishPrintV3WMTSSerializer\n  from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3WMTSSerializer';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport { useMap } from '@terrestris/react-geo/dist/Hook/useMap';\nimport { getBearerTokenHeader } from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport SHOGunMapFishPrintV3TiledWMSSerializer from '../PrintForm/Serializer/SHOGunMapFishPrintV3TiledWMSSerializer';\nimport SHOGunMapFishPrintV3WMSSerializer from '../PrintForm/Serializer/SHOGunMapFishPrintV3WMSSerializer';\n\nimport CustomFieldInput from './CustomFieldInput';\nimport LayoutSelect from './LayoutSelect';\nimport OutputFormatSelect from './OutputFormatSelect';\nimport ResolutionSelect from './ResolutionSelect';\nimport ScaleSelect from './ScaleSelect';\n\nimport '../PrintForm/Shared/Shared';\n\nexport interface Layout {\n  name: string;\n  attributes: any[];\n}\n\nexport interface PrintFormProps extends Omit<FormProps, 'form'> {\n  active: boolean;\n  customPrintScales?: number[];\n  layerBlackList?: string[];\n  layouts?: Layout[];\n  outputFormats?: string[];\n}\n\nexport const PrintForm: React.FC<PrintFormProps> = ({\n  active,\n  customPrintScales = [],\n\n  layerBlackList = [],\n  outputFormats= ['pdf', 'png'],\n  ...restProps\n}): JSX.Element => {\n\n  const [form] = Form.useForm();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  const map = useMap();\n\n  const currentLanguageCode = i18n.language;\n\n  const client = useSHOGunAPIClient();\n\n  const customMapParams = useAppSelector(state => state.print.customMapParams);\n  const customParams = useAppSelector(state => state.print.customParams);\n\n  const [printManager, setPrintManager] = useState<MapFishPrintV3Manager | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMsg, setErrorMsg] = useState<string | null>(null);\n\n  const layerFilter = useCallback((l: OlLayer<OlSource>) => {\n    if (!map) {\n      return;\n    }\n\n    const layerName = l.get('name');\n\n    return layerName && !layerBlackList.includes(layerName) &&\n      l.getVisible() && !(l instanceof OlLayerGroup) &&\n      MapUtil.layerInResolutionRange(l, map);\n  }, [map, layerBlackList]);\n\n  const legendFilter = useCallback((l: OlLayer<OlSource>) => {\n    if (_isNil(map)) {\n      return false;\n    }\n    const layerName = l.get('name');\n    const notBlacklisted = !layerBlackList.includes(layerName);\n    const notHidden = !l.get('hideLegendInPrint');\n    const visible = l.getVisible() && MapUtil.layerInResolutionRange(l, map);\n    const printableLayer = !(l instanceof OlLayerGroup);\n\n    if (notBlacklisted && notHidden && visible && printableLayer) {\n      const res = map?.getView().getResolution();\n      if (res) {\n        l.set('customPrintLegendParams', {\n          SCALE: MapUtil.getScaleForResolution(res, 'm')\n        });\n      }\n      return true;\n    }\n    return false;\n  }, [map, layerBlackList]);\n\n  const initializeMapProvider = useCallback(async () => {\n    if (_isNil(map)) {\n      return;\n    }\n    let pManagerOpts: MapFishPrintV3ManagerOpts = {\n      url: ClientConfiguration.print?.url || '/print',\n      map,\n      customPrintScales: map\n        ?.getView()\n        ?.getResolutions()\n        ?.map((d: number | undefined) => {\n          const units = map?.getView()?.getProjection()?.getUnits();\n          if (typeof d !== 'undefined') {\n            const scale = MapUtil.getScaleForResolution(d, units);\n            if (typeof scale !== 'undefined') {\n              return MapUtil.roundScale(scale);\n            }\n          }\n          return undefined;\n        })\n        .filter((scale: number | undefined) => typeof scale !== 'undefined')\n        ?.reverse() as number[] | undefined,\n      timeout: 60000,\n      layerFilter,\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak())\n      },\n      transformOpts: {\n        rotate: false\n      },\n      serializers: [\n        new MapFishPrintV3GeoJsonSerializer(),\n        new MapFishPrintV3OSMSerializer(),\n        new MapFishPrintV3WMTSSerializer(),\n        new SHOGunMapFishPrintV3WMSSerializer(),\n        new SHOGunMapFishPrintV3TiledWMSSerializer()\n      ],\n      legendFilter\n    };\n\n    if (customPrintScales.length > 0) {\n      pManagerOpts = {\n        ...pManagerOpts,\n        ...{\n          customPrintScales: customPrintScales.reverse()\n        }\n      };\n    }\n\n    const pManager: MapFishPrintV3Manager = new MapFishPrintV3Manager(pManagerOpts);\n\n    try {\n      await pManager.init();\n\n      // Use locale print app if available.\n      // Implies that a print app with the language code exists.\n      const apps = pManager.getPrintApps();\n\n      if (apps && currentLanguageCode && apps.includes(currentLanguageCode)) {\n        await pManager.setPrintApp(currentLanguageCode);\n      }\n\n      pManager.setOutputFormat(pManager.getOutputFormats()[0]);\n      pManager.setDpi(pManager.getDpis()[0]);\n      pManager.setLayout(pManager.getLayouts()[0]?.name);\n\n      setPrintManager(pManager);\n    } catch (error) {\n      setErrorMsg(() => t('PrintForm.managerErrorMessage'));\n      Logger.error('Could not initialize print manager: ', error);\n    }\n  }, [client, layerFilter, legendFilter, map, t, customPrintScales, currentLanguageCode]);\n\n  useEffect(() => {\n    if (active) {\n      if (!printManager) {\n        initializeMapProvider();\n      }\n    } else {\n      printManager?.shutdownManager();\n      setPrintManager(null);\n    }\n  }, [printManager, active, initializeMapProvider]);\n\n  useEffect(() => {\n    if (printManager) {\n      if (customParams) {\n        printManager.setCustomParams(customParams);\n      }\n      if (customMapParams) {\n        printManager.setCustomMapParams(customMapParams);\n      }\n    }\n  }, [printManager, customParams, customMapParams]);\n\n  const onDownloadClick = async () => {\n    try {\n      setErrorMsg(null);\n      setLoading(true);\n\n      if (!printManager) {\n        return;\n      }\n\n      const downloadUrl = await printManager.print(false);\n\n      if (!downloadUrl) {\n        throw new Error('No download URL available, the job has failed.');\n      }\n\n      window.open(downloadUrl);\n    } catch (error: any) {\n      setErrorMsg(t('PrintForm.printJobErrorMsg') || null);\n      Logger.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onAlertClose = () => {\n    setErrorMsg(null);\n  };\n\n  return (\n    <div\n      className=\"print\"\n      aria-label='print-form'\n    >\n      {\n        errorMsg &&\n        <Alert\n          className=\"print-alert\"\n          message={errorMsg}\n          type=\"error\"\n          closable\n          showIcon\n          onClose={onAlertClose}\n        />\n      }\n      {\n        printManager?.isInitiated() && (\n          <>\n            <Form\n              form={form}\n              className=\"print-form\"\n              labelAlign=\"left\"\n              labelCol={{\n                flex: '90px'\n              }}\n              {...restProps}\n            >\n              <Form.Item\n                aria-label='print-title'\n                name=\"title\"\n                label={t('PrintForm.title')}\n                initialValue={t('PrintForm.initialTitle')}\n              >\n                <CustomFieldInput\n                  aria-label='print-title-input'\n                  maxLength={50}\n                  placeholder={t('PrintForm.titlePlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                aria-label='print-comment'\n                name=\"comment\"\n                label={t('PrintForm.comment')}\n              >\n                <CustomFieldInput\n                  aria-label='print-comment-input'\n                  maxLength={200}\n                  placeholder={t('PrintForm.commentPlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                aria-label='print-layout'\n                name=\"layout\"\n                label={t('PrintForm.layout')}\n                initialValue={printManager?.getLayouts()[0]?.name}\n              >\n                <LayoutSelect\n                  aria-label='print-layout-input'\n                  printManager={printManager}\n                />\n              </Form.Item>\n              <Form.Item\n                aria-label='print-scale'\n                name='scale'\n                label={t('PrintForm.scale')}\n                initialValue={printManager?.getClosestScaleToFitMap()}\n              >\n                <ScaleSelect\n                  aria-label='print-scale-input'\n                  printManager={printManager}\n                />\n              </Form.Item>\n              <Form.Item\n                aria-label='print-dpi'\n                name=\"dpi\"\n                label={t('PrintForm.dpi')}\n                initialValue={printManager.getDpis()[0]}\n              >\n                <ResolutionSelect\n                  aria-label='print-dpi-input'\n                  printManager={printManager}\n                  placeholder={t('PrintForm.resolutionPlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                aria-label='print-format'\n                name=\"format\"\n                label={t('PrintForm.format')}\n                initialValue=\"pdf\"\n              >\n                <OutputFormatSelect\n                  aria-label='print-format-input'\n                  printManager={printManager}\n                  outputFormats={outputFormats}\n                  placeholder={t('PrintForm.outputFormatPlaceholder')}\n                />\n              </Form.Item>\n            </Form>\n            <Button\n              aria-label='create-print'\n              className='print-button tool-menu-button'\n              disabled={!printManager?.isInitiated()}\n              icon={<FontAwesomeIcon icon={faDownload} />}\n              loading={loading}\n              onClick={onDownloadClick}\n            >\n              {t('PrintForm.downloadBtnText')}\n            </Button>\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default PrintForm;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import * as React from 'react';\n\nimport {\n  useEffect,\n  useState\n} from 'react';\n\nimport CardStyle, {\n  CardStyleProps\n} from 'geostyler/dist/Component/CardStyle/CardStyle';\n\nimport OlParser from 'geostyler-openlayers-parser';\n\nimport {\n  Style as GsStyle\n} from 'geostyler-style';\n\nimport OlFeature from 'ol/Feature';\n\nimport OlLayerVector from 'ol/layer/Vector';\n\nimport VectorSource from 'ol/source/Vector';\n\nimport {\n  StyleFunction,\n  StyleLike as OlStyleLike\n} from 'ol/style/Style';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport type StylingComponentProps = CardStyleProps & {};\n\nexport const StylingComponent: React.FC<StylingComponentProps> = ({\n  ...passThroughProps\n}): JSX.Element => {\n\n  const defaultStyle: GsStyle = {\n    name: 'Default Style',\n    rules: [{\n      name: 'Area',\n      symbolizers: [{\n        kind: 'Fill',\n        color: '#00b72b',\n        outlineOpacity: 0.8,\n        opacity: 0.5,\n        fillOpacity: 0.8,\n        outlineWidth: 2,\n        outlineColor: '#00b72b'\n      }]\n    }, {\n      name: 'Line',\n      symbolizers: [{\n        kind: 'Line',\n        color: '#00b72b',\n        width: 2,\n        opacity: 0.8\n      }]\n    }, {\n      name: 'Point',\n      symbolizers: [{\n        kind: 'Mark',\n        wellKnownName: 'circle',\n        color: '#00b72b',\n        strokeColor: '#00b72b',\n        strokeOpacity: 0.8,\n        opacity: 0.5,\n        radius: 7\n      }],\n      filter: [\n        '==',\n        'label',\n        'undefined'\n      ]\n    }, {\n      name: 'Text',\n      symbolizers: [{\n        kind: 'Text',\n        label: '{{label}}',\n        size: 12,\n        font: [\n          'sans-serif'\n        ],\n        opacity: 0.8,\n        color: '#00b72b',\n        offset: [\n          5,\n          5\n        ],\n        haloColor: '#00b72b',\n        haloWidth: 1\n      }],\n      filter: [\n        '!=',\n        'label',\n        'undefined'\n      ]\n    }]\n  };\n\n  const [style, setStyle] = useState<GsStyle>(defaultStyle);\n\n  const map = useMap();\n\n  useEffect(() => {\n    if (!style || !map) {\n      return;\n    }\n\n    const olParser = new OlParser();\n\n    let drawVectorLayer = MapUtil.getLayerByName(map, 'react-geo_digitize') as OlLayerVector<VectorSource>;\n\n    const parseStyles = async () => {\n      let olStylePolygon: OlStyleLike;\n      let olStyleLineString: OlStyleLike;\n      let olStylePoint: OlStyleLike;\n      let olStyleText: OlStyleLike;\n\n      for (const rule of style.rules) {\n        const newStyle: GsStyle = {\n          name: '',\n          rules: [rule]\n        };\n\n        const olStyle = await olParser.writeStyle(newStyle);\n\n        if (!olStyle.output) {\n          return;\n        }\n\n        if (rule.symbolizers[0].kind === 'Fill') {\n          olStylePolygon = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Text') {\n          olStyleText = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Line') {\n          olStyleLineString = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Mark') {\n          olStylePoint = olStyle.output;\n        }\n      }\n\n      const drawLayerStyleFunction = (feature: OlFeature, resolution: number) => {\n        const geometryType = feature.getGeometry()?.getType();\n\n        if (!geometryType) {\n          return;\n        }\n\n        if (['MultiPolygon', 'Polygon', 'Circle'].includes(geometryType)) {\n          return typeof olStylePolygon === 'function' ? olStylePolygon(feature, resolution) : olStylePolygon;\n        }\n\n        if (['MultiLineString', 'LineString'].includes(geometryType)) {\n          return typeof olStyleLineString === 'function' ? olStyleLineString(feature, resolution) : olStyleLineString;\n        }\n\n        if (['MultiPoint', 'Point'].includes(geometryType)) {\n          if (feature.get('label')) {\n            return typeof olStyleText === 'function' ? olStyleText(feature, resolution) : olStyleText;\n          }\n\n          return typeof olStylePoint === 'function' ? olStylePoint(feature, resolution) : olStylePoint;\n        }\n      };\n\n      drawVectorLayer.setStyle(drawLayerStyleFunction as StyleFunction);\n    };\n\n    parseStyles();\n  }, [style, map]);\n\n  return (\n    <CardStyle\n      style={style}\n      onStyleChange={setStyle}\n      {...passThroughProps}\n    />\n  );\n};\n\nexport default StylingComponent;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faPaintBrush\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Drawer,\n  DrawerProps\n} from 'antd';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport './index.less';\n\nimport StylingComponent from './StylingComponent';\n\nexport type StylingDrawerProps = DrawerProps & {};\n\nexport const StylingDrawer: React.FC<StylingDrawerProps> = ({\n  ...passThroughProps\n}): JSX.Element => {\n\n  const [open, setOpen] = useState(false);\n\n  const {\n    t\n  } = useTranslation();\n\n  const showDrawer = () => {\n    setOpen(true);\n  };\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button\n        type=\"link\"\n        onClick={showDrawer}\n        icon={<FontAwesomeIcon icon={faPaintBrush} />}\n      >\n        {t('StylingDrawer.pickColor')}\n      </Button>\n      <Drawer\n        title={t('StylingDrawer.title')}\n        placement=\"right\"\n        onClose={onClose}\n        open={open}\n        mask={false}\n        width={'45vw'}\n        className=\"color-pick-drawer\"\n        {...passThroughProps}\n      >\n        <StylingComponent />\n      </Drawer>\n    </>\n  );\n};\n\nexport default StylingDrawer;\n","import React, {\n  ChangeEvent\n} from 'react';\n\nimport {\n  faDrawPolygon,\n  faGripLines,\n  faCircle,\n  faFont,\n  faSquare,\n  faPenToSquare,\n  faUpload,\n  faTrash,\n  faDownload\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Feature\n} from 'ol';\nimport GeoJSON from 'ol/format/GeoJSON';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport DeleteButton from '@terrestris/react-geo/dist/Button/DeleteButton/DeleteButton';\nimport DrawButton from '@terrestris/react-geo/dist/Button/DrawButton/DrawButton';\nimport ModifyButton from '@terrestris/react-geo/dist/Button/ModifyButton/ModifyButton';\nimport SimpleButton from '@terrestris/react-geo/dist/Button/SimpleButton/SimpleButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\nimport UploadButton from '@terrestris/react-geo/dist/Button/UploadButton/UploadButton';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport './index.less';\n\nimport StylingDrawer from './StylingDrawer';\n\ninterface DefaultDrawProps {\n  showDrawPoint?: boolean;\n  showDrawLine?: boolean;\n  showDrawPolygon?: boolean;\n  showDrawCircle?: boolean;\n  showDrawRectangle?: boolean;\n  showDrawAnnotation?: boolean;\n  showModifyFeatures?: boolean;\n  showUploadFeatures?: boolean;\n  showDownloadFeatures?: boolean;\n  showDeleteFeatures?: boolean;\n}\n\nexport interface DrawProps extends Partial<DefaultDrawProps> { }\n\nexport const Draw: React.FC<DrawProps> = ({\n  showDrawPoint,\n  showDrawLine,\n  showDrawPolygon,\n  showDrawCircle,\n  showDrawRectangle,\n  showDrawAnnotation,\n  showModifyFeatures,\n  showUploadFeatures,\n  showDownloadFeatures,\n  showDeleteFeatures\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const onGeoJSONDownload = () => {\n    const clonedFeatures: Feature[] = [];\n    if (map) {\n      const mapProjection = map.getView().getProjection().getCode();\n      const digitizeLayer = DigitizeUtil.getDigitizeLayer(map);\n      const digitizedFeatures = digitizeLayer.getSource()?.getFeatures();\n      if (digitizedFeatures && digitizedFeatures.length > 0) {\n        digitizedFeatures.forEach(feat => {\n          const clonedFeature = feat.clone();\n          clonedFeature.getGeometry()?.transform(mapProjection, 'EPSG:4326');\n          clonedFeatures.push(clonedFeature);\n        });\n        const geoJSON = new GeoJSON().writeFeatures(clonedFeatures);\n\n        const fileToDownload = new Blob([geoJSON], {\n          type: 'application/geo+json'\n        });\n\n        // download the file\n        const url = window.URL.createObjectURL(fileToDownload);\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'exportedFeatures.geojson');\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n  };\n\n  const onUploadChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const uploadedFiles = e.target.files;\n    if (\n      (uploadedFiles && uploadedFiles.length === 1) &&\n      (\n        uploadedFiles[0].type === 'application/geo+json' ||\n        uploadedFiles[0].type === 'application/geojson' ||\n        uploadedFiles[0].name.includes('.geojson') ||\n        uploadedFiles[0].name.includes('.json')\n      )\n    ) {\n      onGeoJSONUpload(uploadedFiles[0]);\n    }\n  };\n\n  const onGeoJSONUpload = (geoJSONFile: File) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      const geoJSONFeatures = new GeoJSON().readFeatures(fileReader.result);\n\n      if (map) {\n        const mapProjection = map.getView().getProjection().getCode();\n        geoJSONFeatures.forEach(feat => {\n          feat.getGeometry()?.transform('EPSG:4326', mapProjection);\n        });\n        const digitizeLayer = DigitizeUtil.getDigitizeLayer(map);\n        const digitizeLayerSource = digitizeLayer.getSource();\n        digitizeLayerSource?.addFeatures(geoJSONFeatures);\n      }\n    };\n\n    fileReader.readAsText(geoJSONFile);\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <ToggleGroup>\n\n      {showDrawPoint ? (\n        <DrawButton\n          name=\"draw-point\"\n          drawType=\"Point\"\n          type=\"link\"\n          pressed={false}\n        >\n          <FontAwesomeIcon\n            icon={faCircle}\n          />\n          <span\n            className=\"draw-point\"\n          >\n            {t('Draw.point')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawLine ? (\n        <DrawButton\n          name=\"draw-line\"\n          drawType=\"LineString\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faGripLines}\n          />\n          <span\n            className=\"draw-line\"\n          >\n            {t('Draw.line')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawPolygon ? (\n        <DrawButton\n          name=\"draw-polygon\"\n          drawType=\"Polygon\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faDrawPolygon}\n          />\n          <span\n            className=\"draw-polygon\"\n          >\n            {t('Draw.polygon')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawCircle ? (\n        <DrawButton\n          name=\"draw-circle\"\n          drawType=\"Circle\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faCircle}\n          />\n          <span\n            className=\"draw-circle\"\n          >\n            {t('Draw.circle')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawRectangle ? (\n        <DrawButton\n          name=\"draw-rectangle\"\n          drawType=\"Rectangle\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faSquare}\n          />\n          <span\n            className=\"draw-rectangle\"\n          >\n            {t('Draw.rectangle')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawAnnotation ? (\n        <DrawButton\n          name=\"draw-text\"\n          drawType=\"Text\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faFont}\n          />\n          <span\n            className=\"draw-text\"\n          >\n            {t('Draw.text')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showModifyFeatures ? (\n        <ModifyButton\n          name=\"draw-modify\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faPenToSquare}\n          />\n          <span\n            className=\"draw-modify\"\n          >\n            {t('Draw.modify')}\n          </span>\n        </ModifyButton>\n      ) : <></>}\n\n      {showUploadFeatures ? (\n        <UploadButton\n          name=\"draw-upload\"\n          onChange={onUploadChange}\n          type=\"link\"\n          aria-label='draw-upload'\n        >\n          <SimpleButton\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faUpload}\n            />\n            <span\n              className=\"draw-upload\"\n            >\n              {t('Draw.upload')}\n            </span>\n          </SimpleButton>\n        </UploadButton>\n      ) : <></>}\n\n      {showDownloadFeatures ? (\n        <SimpleButton\n          name=\"draw-export\"\n          onClick={onGeoJSONDownload}\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faDownload}\n          />\n          <span\n            className=\"draw-export\"\n          >\n            {t('Draw.export')}\n          </span>\n        </SimpleButton>\n      ) : <></>}\n\n      {showDeleteFeatures ? (\n        <DeleteButton\n          name=\"draw-delete\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faTrash}\n          />\n          <span\n            className=\"draw-delete\"\n          >\n            {t('Draw.delete')}\n          </span>\n        </DeleteButton>\n      ) : <></>}\n      <StylingDrawer />\n    </ToggleGroup>\n  );\n};\n\nexport default Draw;\n","import {\n  useCallback,\n  useEffect\n} from 'react';\n\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\nimport OlStyleCircle from 'ol/style/Circle';\nimport OlStyleFill from 'ol/style/Fill';\nimport OlStyleStroke from 'ol/style/Stroke';\nimport OlStyle from 'ol/style/Style';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport type HighlightVectorLayerOpts = {\n  layerName: string;\n};\n\nexport const useHighlightVectorLayer = (opts: HighlightVectorLayerOpts) => {\n  const map = useMap();\n\n  const initVectorLayer = useCallback(async () => {\n    if (!map) {\n      return;\n    }\n\n    if (MapUtil.getLayerByName(map, opts.layerName)) {\n      return;\n    }\n\n    const source = new OlSourceVector();\n\n    const fill = new OlStyleFill({\n      color: 'rgba(255, 255, 255, 0.15)'\n    });\n    const stroke = new OlStyleStroke({\n      color: 'rgba(209, 70, 47, 1)',\n      width: 2\n    });\n    const featureStyle = new OlStyle({\n      fill,\n      stroke,\n      image: new OlStyleCircle({\n        radius: 5,\n        fill,\n        stroke\n      })\n    });\n\n    const layer = new OlLayerVector({\n      source: source,\n      style: featureStyle\n    });\n\n    layer.set('name', opts.layerName);\n\n    map.addLayer(layer);\n  }, [map, opts.layerName]);\n\n  const deinitVectorLayer = useCallback(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, opts.layerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    map.removeLayer(vectorLayer);\n  }, [map, opts.layerName]);\n\n  useEffect(() => {\n    initVectorLayer();\n\n    return () => deinitVectorLayer();\n  }, [deinitVectorLayer, initVectorLayer]);\n};\n\nexport default useHighlightVectorLayer;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport {\n  Form,\n  FormProps\n} from 'antd';\n\nimport {\n  useForm\n} from 'antd/lib/form/Form';\n\nimport OlFeature from 'ol/Feature';\n\nimport {\n  PropertyFormItemReadConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport DisplayField from '../../../DisplayField';\n\nimport './index.less';\n\nexport type FeatureInfoFormProps = FormProps & {\n  formConfig?: PropertyFormItemReadConfig[];\n  feature: OlFeature;\n};\n\nexport const FeatureInfoForm: React.FC<FeatureInfoFormProps> = ({\n  formConfig,\n  feature,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const [form] = useForm();\n\n  useEffect(() => {\n    form.setFieldsValue(feature.getProperties());\n  }, [feature, form]);\n\n  const createFormItem = (fieldCfg: PropertyFormItemReadConfig) => {\n    return (\n      <Form.Item\n        key={fieldCfg.propertyName}\n        name={fieldCfg.propertyName}\n        label={fieldCfg.displayName || fieldCfg.propertyName}\n        {...fieldCfg.fieldProps}\n      >\n        <DisplayField\n          label={fieldCfg.displayName || fieldCfg.propertyName}\n          {...fieldCfg.fieldProps}\n        />\n      </Form.Item>\n    );\n  };\n\n  return (\n    <Form\n      className=\"feature-info-form\"\n      form={form}\n      labelCol={{\n        span: 8\n      }}\n      labelAlign=\"left\"\n      labelWrap\n      {...passThroughProps}\n    >\n      {formConfig?.map(createFormItem)}\n    </Form>\n  );\n\n};\n\nexport default FeatureInfoForm;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faClipboardCheck,\n  faClipboardList\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Pagination,\n  PaginationProps,\n  Tooltip\n} from 'antd';\n\nimport copy from 'copy-to-clipboard';\n\nimport _isFinite from 'lodash/isFinite';\n\nimport OlFeature from 'ol/Feature';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlGeometry from 'ol/geom/Geometry';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport './index.less';\n\nexport type PaginationToolbarProps = {\n  features: OlFeature[];\n  selectedFeature: OlFeature;\n  exportFilter?: (propertyName: string, propertyValue: string) => boolean;\n} & PaginationProps;\n\nexport const PaginationToolbar: React.FC<PaginationToolbarProps> = ({\n  features,\n  selectedFeature,\n  exportFilter,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const {\n    t\n  } = useTranslation();\n\n  const onCopyAsGeoJSONClick = () => {\n    if (!selectedFeature) {\n      return;\n    }\n\n    const selectedFeatureClone = selectedFeature.clone();\n\n    if (exportFilter) {\n      const propertyEntries = Object.entries(selectedFeatureClone.getProperties());\n      const filteredPropertyEntries = propertyEntries.filter(([key, value]) => exportFilter(key, value));\n\n      for (const [key, value] of propertyEntries) {\n        if (value instanceof OlGeometry) {\n          continue;\n        }\n\n        selectedFeatureClone.unset(key);\n      }\n\n      selectedFeatureClone.setProperties(Object.fromEntries(filteredPropertyEntries));\n    }\n\n    copy(new OlFormatGeoJSON().writeFeature(selectedFeatureClone));\n  };\n\n  const onCopyAsObjectClick = () => {\n    if (!selectedFeature) {\n      return;\n    }\n\n    let props = Object.entries(structuredClone(selectedFeature.getProperties()))\n      .filter(([, value]) => !(value instanceof OlGeometry));\n\n    if (exportFilter) {\n      props = props.filter(([key, value]) => exportFilter(key, value));\n    }\n\n    copy(JSON.stringify(Object.fromEntries(props)));\n  };\n\n  return (\n    <div\n      className=\"pagination-toolbar\"\n    >\n      <Pagination\n        simple\n        total={features.length}\n        size=\"small\"\n        pageSize={1}\n        {...passThroughProps}\n      />\n      <div\n        className=\"copy-buttons\"\n      >\n        <Tooltip\n          title={t('PaginationToolbar.copyAsGeoJson')}\n        >\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            onClick={onCopyAsGeoJSONClick}\n            icon={<FontAwesomeIcon icon={faClipboardCheck} />}\n          />\n        </Tooltip>\n        <Tooltip\n          title={t('PaginationToolbar.copyAsObject')}\n        >\n          <Button\n            type=\"primary\"\n            size=\"small\"\n            onClick={onCopyAsObjectClick}\n            icon={<FontAwesomeIcon icon={faClipboardList} />}\n          />\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nexport default PaginationToolbar;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Tabs,\n  TabsProps\n} from 'antd';\n\nimport OlFeature from 'ol/Feature';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  Tab\n} from 'rc-tabs/lib/interface';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  PropertyFormItemReadConfig,\n  PropertyFormTabConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useHighlightVectorLayer from '../../../../hooks/useHighlightVectorLayer';\n\nimport FeatureInfoForm from '../FeatureInfoForm';\nimport PaginationToolbar from '../PaginationToolbar';\n\nimport './index.less';\n\nexport type FeatureInfoTabsProps = TabsProps & {\n  features: OlFeature[];\n  layerName: string;\n  tabConfig?: PropertyFormTabConfig<PropertyFormItemReadConfig>[];\n};\n\nexport const FeatureInfoTabs: React.FC<FeatureInfoTabsProps> = ({\n  features,\n  layerName,\n  tabConfig,\n  ...passThroughProps\n}) => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n\n  const map = useMap();\n\n  const vectorLayerName = `selection-layer-${layerName}`;\n\n  useHighlightVectorLayer({\n    layerName: vectorLayerName\n  });\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    setCurrentPage(1);\n\n    if (features.length > 0) {\n      setSelectedFeature(features[0]);\n    }\n  }, [features, map, vectorLayerName]);\n\n  useEffect(() => {\n    if (!selectedFeature || !map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    vectorLayer.getSource()?.addFeature(selectedFeature);\n  }, [selectedFeature, map, vectorLayerName]);\n\n  const onChange = (page: number) => {\n    if (page < 1) {\n      return;\n    }\n\n    setCurrentPage(page);\n    setSelectedFeature(features[page - 1]);\n  };\n\n  if (!tabConfig || !selectedFeature) {\n    return <></>;\n  }\n\n  const exportFilter = (propertyName: string) => {\n    let match = false;\n\n    for (const conf of tabConfig) {\n      if (!conf.children) {\n        continue;\n      }\n\n      for (const child of conf.children) {\n        if (child.propertyName === propertyName) {\n          match = true;\n          break;\n        }\n      }\n    }\n\n    return match;\n  };\n\n  const items = tabConfig\n    .filter(config => config !== undefined)\n    .map((config, idx) => {\n      return {\n        label: config.title,\n        key: `${idx}`,\n        forceRender: true,\n        children: (\n          <FeatureInfoForm\n            name={config.title}\n            feature={selectedFeature}\n            formConfig={config.children}\n          />\n        )\n      } as Tab;\n    });\n\n  return (\n    <div\n      className=\"feature-info-tabs\"\n    >\n      <PaginationToolbar\n        features={features}\n        selectedFeature={selectedFeature}\n        current={currentPage}\n        onChange={onChange}\n        exportFilter={exportFilter}\n      />\n      <Tabs\n        items={items}\n        {...passThroughProps}\n      />\n    </div>\n  );\n};\n\nexport default FeatureInfoTabs;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  TableProps\n} from 'antd';\n\nimport _isFinite from 'lodash/isFinite';\n\nimport OlFeature from 'ol/Feature';\nimport OlGeometry from 'ol/geom/Geometry';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport PropertyGrid from '@terrestris/react-geo/dist/Grid/PropertyGrid/PropertyGrid';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useHighlightVectorLayer from '../../../../hooks/useHighlightVectorLayer';\n\nimport PaginationToolbar from '../PaginationToolbar';\n\nimport './index.less';\n\nexport type FeatureInfoPropertyGridProps = {\n  features: OlFeature[];\n  layerName: string;\n} & TableProps<OlFeature>;\n\nexport const FeatureInfoPropertyGrid: React.FC<FeatureInfoPropertyGridProps> = ({\n  features,\n  layerName,\n  ...restProps\n}): JSX.Element => {\n  const [currentPage, setCurrentPage] = useState<number>();\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n  const [blacklistedAttributes, setBlacklistedAttributes] = useState<string[]>([]);\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  const vectorLayerName = `selection-layer-${layerName}`;\n\n  useHighlightVectorLayer({\n    layerName: vectorLayerName\n  });\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    setCurrentPage(1);\n\n    if (features.length > 0) {\n      setSelectedFeature(features[0]);\n    }\n  }, [features, map, vectorLayerName]);\n\n  useEffect(() => {\n    if (!selectedFeature || !map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    const geomAttributes = Object.entries(selectedFeature.getProperties())\n      .filter(([, value]) => value instanceof OlGeometry)\n      .map(([key]) => key);\n\n    setBlacklistedAttributes(geomAttributes);\n\n    vectorLayer.getSource()?.clear();\n    vectorLayer.getSource()?.addFeature(selectedFeature);\n  }, [selectedFeature, map, vectorLayerName]);\n\n  const onChange = (page: number) => {\n    setCurrentPage(page);\n    setSelectedFeature(features[page - 1]);\n  };\n\n  if (!selectedFeature) {\n    return <></>;\n  }\n\n  const attributeFilter = selectedFeature.getKeys()\n    .filter((prop: string | number | boolean) => {\n      return !blacklistedAttributes.includes((prop as string).toLocaleLowerCase());\n    });\n\n  return (\n    <PropertyGrid\n      className=\"property-grid\"\n      feature={selectedFeature}\n      attributeFilter={attributeFilter}\n      size=\"small\"\n      sticky={true}\n      title={() => (\n        <PaginationToolbar\n          features={features}\n          selectedFeature={selectedFeature}\n          current={currentPage}\n          onChange={onChange}\n        />\n      )}\n      columns={[{\n        title: t('FeaturePropertyGrid.key'),\n        dataIndex: 'attributeName',\n        key: 'attributeName',\n        width: '50%',\n        ellipsis: true,\n        defaultSortOrder: 'ascend',\n        sorter: (a, b) => a.key.localeCompare(b.key)\n      }, {\n        title: t('FeaturePropertyGrid.value'),\n        dataIndex: 'attributeValue',\n        key: 'attributeValue',\n        width: '50%',\n        ellipsis: true\n      }]}\n      scroll={{\n        scrollToFirstRowOnChange: true,\n        y: 'calc(100% - 90px)'\n      }}\n      {...restProps}\n    />\n  );\n};\n\nexport default FeatureInfoPropertyGrid;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Tabs,\n  FormProps,\n  Spin\n} from 'antd';\n\nimport {\n  getUid\n} from 'ol';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlLayerBase from 'ol/layer/Base';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  Tab\n} from 'rc-tabs/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport CoordinateInfo, {\n  CoordinateInfoState,\n  CoordinateInfoProps\n} from '@terrestris/react-geo/dist/CoordinateInfo/CoordinateInfo';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  isWmsLayer,\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport usePlugins from '../../../hooks/usePlugins';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport {\n  isFeatureInfoIntegration\n} from '../../../plugin';\n\nimport {\n  SelectedFeatures,\n  setSelectedFeatures\n} from '../../../store/selectedFeatures';\n\nimport FeatureInfoTabs from './FeatureInfoTabs';\nimport FeatureInfoPropertyGrid from './FeaturePropertyGrid';\n\nimport './index.less';\n\nexport type FeatureInfoProps = FormProps & {\n  enabled?: boolean;\n} & Partial<CoordinateInfoProps>;\n\nexport const FeatureInfo: React.FC<FeatureInfoProps> = ({\n  enabled,\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const plugins = usePlugins();\n  const dispatch = useAppDispatch();\n\n  const [queryLayers, setQueryLayers] = useState<WmsLayer[]>([]);\n\n  const layerFilter = (layer: OlLayerBase) => {\n    if (!layer.get('hoverable')) {\n      return false;\n    }\n    if (layer instanceof OlLayerImage && layer.getSource() instanceof OlSourceImageWMS) {\n      return true;\n    }\n    return layer instanceof OlLayerTile && layer.getSource() instanceof OlSourceTileWMS;\n  };\n\n  const updateQueryLayers = useCallback(() => {\n    if (!map) {\n      return;\n    }\n\n    const layerCandidates = MapUtil.getAllLayers(map, layerFilter) as WmsLayer[];\n    setQueryLayers(layerCandidates.filter(l => l.getVisible()));\n  }, [map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    updateQueryLayers();\n\n    const mapLayers = MapUtil.getAllLayers(map, layerFilter) as WmsLayer[];\n    mapLayers.forEach(l => l.on('change:visible', updateQueryLayers));\n\n    return () => {\n      mapLayers.forEach(l => l.un('change:visible', updateQueryLayers));\n    };\n\n  }, [map, updateQueryLayers]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  const resultRenderer = (coordinateInfoState: CoordinateInfoState) => {\n    const features = coordinateInfoState.features;\n    const loading = coordinateInfoState.loading;\n\n    if (Object.keys(features).length === 0) {\n      return (\n        <span className='usage-hint'>\n          {t('FeatureInfo.usageHint')}\n        </span>\n      );\n    }\n\n    const items: Tab[] = [];\n\n    Object.keys(features).forEach(layerName => {\n      let pluginRendererAvailable = false;\n\n      const mapLayer = map.getAllLayers().find(l => {\n        if (isWmsLayer(l)) {\n          const source = (l as WmsLayer).getSource();\n          const unqualifiedMapLayerName = getUnqualifiedLayerName(source?.getParams().LAYERS);\n          const unqualifiedLayerName = getUnqualifiedLayerName(layerName);\n\n          return unqualifiedLayerName === unqualifiedMapLayerName;\n        }\n        return false;\n      });\n\n      plugins.forEach(plugin => {\n        if (isFeatureInfoIntegration(plugin.integration) &&\n          ((Array.isArray(plugin.integration.layers) && plugin.integration.layers.includes(layerName)) ||\n            !plugin.integration.layers)) {\n          const {\n            key,\n            wrappedComponent: WrappedPluginComponent\n          } = plugin;\n\n          items.push({\n            label: layerName,\n            key: layerName,\n            children: (\n              <WrappedPluginComponent\n                key={key}\n              />\n            )\n          });\n\n          pluginRendererAvailable = true;\n        }\n      });\n\n      if (!pluginRendererAvailable) {\n        items.push({\n          label: mapLayer?.get('name') || layerName,\n          key: layerName,\n          children: (\n            <div\n              key={layerName}\n            >\n              {\n                mapLayer?.get('featureInfoFormConfig') ?\n                  <FeatureInfoTabs\n                    tabConfig={mapLayer?.get('featureInfoFormConfig')}\n                    features={features[layerName]}\n                    layerName={layerName}\n                  /> :\n                  <FeatureInfoPropertyGrid\n                    features={features[layerName]}\n                    layerName={layerName}\n                  />\n              }\n            </div>\n          )\n        });\n      }\n    });\n\n    return (\n      <Spin\n        spinning={loading}\n      >\n        <Tabs\n          destroyInactiveTabPane={true}\n          items={items}\n        />\n      </Spin>\n    );\n  };\n\n  const getUnqualifiedLayerName = (layerName: string) => {\n    return layerName.split(':').length > 1 ?\n      layerName.split(':')[1] :\n      layerName.split(':')[0];\n  };\n\n  if (!enabled) {\n    return <></>;\n  }\n\n  const getFetchOpts = () => {\n    const opts: {\n      [uid: string]: RequestInit;\n    } = {};\n\n    queryLayers.forEach(layer => {\n      const layerUid = getUid(layer);\n      opts[layerUid] = {\n        headers: {\n          ...layer.get('useBearerToken') ? {\n            ...getBearerTokenHeader(client?.getKeycloak())\n          } : undefined\n        }\n      };\n    });\n\n    return opts;\n  };\n\n  const onSuccess = (coordinateInfoState: CoordinateInfoState) => {\n    const features = coordinateInfoState.features;\n\n    const serializedFeatures: SelectedFeatures = {};\n    Object.entries(features).forEach(entry => {\n      const layerName = entry[0];\n      const selectedFeatures = entry[1];\n\n      serializedFeatures[layerName] = new OlFormatGeoJSON().writeFeatures(selectedFeatures);\n    });\n\n    dispatch(setSelectedFeatures(serializedFeatures));\n  };\n\n  return (\n    <div className='feature-info-panel'>\n      <CoordinateInfo\n        featureCount={10}\n        map={map}\n        queryLayers={queryLayers}\n        resultRenderer={resultRenderer}\n        fetchOpts={getFetchOpts()}\n        onSuccess={onSuccess}\n        {...restProps}\n      />\n    </div>\n  );\n};\n\nexport default FeatureInfo;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  faClock\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Divider\n} from 'antd';\n\nimport moment from 'moment';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport TimeSlider, {\n  TimeSliderProps\n} from '@terrestris/react-geo/dist/Slider/TimeSlider/TimeSlider';\n\nimport './index.less';\n\ninterface WmsTimeSliderProps extends Omit<TimeSliderProps, 'min' | 'max' | 'marks' | 'useRange' |\n  'onChange' | 'defaultValue' | 'value' | 'formatString'> {\n  layer: OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>;\n}\n\nexport const WmsTimeSlider: React.FC<WmsTimeSliderProps> = ({\n  layer,\n  ...passThroughProps\n}) => {\n  const [value, setValue] = useState<string | [string, string]>(layer.getSource()?.getParams().TIME);\n  const [min, setMin] = useState<string>();\n  const [max, setMax] = useState<string>();\n  const [marks, setMarks] = useState<Record<string | number, string> | undefined>();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    const dimension = layer.get('dimension');\n\n    if (!dimension) {\n      return;\n    }\n\n    let timeValues;\n    if (dimension.values) {\n      timeValues = dimension.values.split(',');\n    }\n\n    if (!timeValues || timeValues.length === 0) {\n      return;\n    }\n\n    setMin(timeValues[0]);\n    setMax(timeValues[timeValues.length - 1]);\n    setValue(timeValues[timeValues.length - 1]);\n\n    const m: Record<string | number, string> = {};\n    timeValues.forEach((val: string, idx: number) => {\n      m[val] = moment(val).format('YYYY-MM-DD');\n    });\n\n    setMarks(m);\n\n    if (timeValues.default === 'current') {\n      let nearest: [number, string] = [NaN, ''];\n      Object.values(m).forEach(d => {\n        let diff = moment().diff(moment(d));\n\n        if (diff < nearest[0]) {\n          nearest = [diff, d];\n        }\n      });\n\n      setValue(nearest[1]);\n    }\n  }, [layer]);\n\n  const onChange = (val: string | [string, string]) => {\n    setValue(val);\n\n    layer.getSource()?.updateParams({\n      TIME: val\n    });\n  };\n\n  return (\n    <div\n      className=\"wms-time-slider\"\n    >\n      <Divider>\n        <FontAwesomeIcon\n          icon={faClock}\n        />\n        {t('WmsTimeSlider.title')}\n      </Divider>\n      {\n        marks ?\n          <TimeSlider\n            min={min}\n            max={max}\n            marks={marks}\n            value={value}\n            onChange={onChange}\n            step={null}\n            {...passThroughProps}\n          /> :\n          <span>\n            {t('WmsTimeSlider.default')}\n          </span>\n      }\n    </div>\n  );\n};\n\nexport default WmsTimeSlider;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faEllipsisV\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Dropdown,\n  DropDownProps,\n  notification,\n  Spin\n} from 'antd';\nimport {\n  ItemType\n} from 'antd/lib/menu/hooks/useItems';\n\nimport {\n  getUid\n} from 'ol';\nimport OlLayerBase from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport {\n  transformExtent\n} from 'ol/proj';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  MenuInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport LayerUtil from '@terrestris/ol-util/dist/LayerUtil/LayerUtil';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  DownloadConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../../../hooks/useSHOGunAPIClient';\n\nimport {\n  setLayerId,\n  setFeature\n} from '../../../../store/editFeature';\nimport {\n  show as showEditFeatureDrawer\n} from '../../../../store/editFeatureDrawerOpen';\n\nimport {\n  setLayer as setLayerDetailsLayer,\n  show as showLayerDetailsModal\n} from '../../../../store/layerDetailsModal';\n\nexport type LayerTreeContextMenuProps = {\n  layer: OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>;\n  visibleLegendsIds: string[];\n  setVisibleLegendsIds: (ids: string[]) => void;\n} & Partial<DropDownProps>;\n\nexport const LayerTreeContextMenu: React.FC<LayerTreeContextMenuProps> = ({\n  layer,\n  visibleLegendsIds,\n  setVisibleLegendsIds,\n  ...restProps\n}): JSX.Element => {\n\n  const [settingsVisible, setSettingsVisible] = useState<boolean>(false);\n  const [extentLoading, setExtentLoading] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  const downloadConfig: DownloadConfig[] = layer.get('downloadConfig') ?? null;\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  const onContextMenuItemClick = (evt: MenuInfo): void => {\n    if (evt?.key.startsWith('downloadLayer')) {\n      const url = evt.key.split('|')[1];\n      downloadLayer(decodeURI(url));\n    }\n    switch (evt?.key) {\n      case 'zoomToExtent':\n        zoomToLayerExtent();\n        break;\n      case 'removeExternal':\n        removeExternalLayer();\n        break;\n      case 'toggleLegend':\n        const legendId: string = getUid(layer);\n        const newLegendIds = [...visibleLegendsIds];\n        if (newLegendIds.includes(legendId)) {\n          newLegendIds.splice(newLegendIds.indexOf(legendId), 1);\n        } else {\n          newLegendIds.push(legendId);\n        }\n        setVisibleLegendsIds(newLegendIds);\n        break;\n      case 'editLayer':\n        dispatch(setFeature(null));\n        dispatch(setLayerId(getUid(layer)));\n        dispatch(showEditFeatureDrawer());\n        break;\n      case 'layerDetails':\n        dispatch(setLayerDetailsLayer(getUid(layer)));\n        dispatch(showLayerDetailsModal());\n        break;\n      default:\n        break;\n    }\n    setSettingsVisible(false);\n  };\n\n  const zoomToLayerExtent = async (): Promise<void> => {\n    if (!map) {\n      return;\n    }\n\n    setExtentLoading(true);\n\n    try {\n      let extent = await LayerUtil.getExtentForLayer(layer, {\n        headers: layer.get('useBearerToken') ? {\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : {}\n      });\n      extent = transformExtent(extent, 'EPSG:4326', map.getView().getProjection());\n      map.getView().fit(extent);\n    } catch (error) {\n      Logger.error(error);\n      notification.error({\n        message: t('LayerTreeContextMenu.extentError')\n      });\n    } finally {\n      setExtentLoading(false);\n    }\n  };\n\n  const getParentLayerGroups = (l: OlLayerBase): OlLayerGroup[] => {\n    if (!map) {\n      return [];\n    }\n\n    const layerGroups = getAllLayerGroups(map.getLayerGroup())\n      .filter(layerGroup => layerGroup.getLayers().getArray().includes(l));\n\n    return layerGroups;\n  };\n\n  const getAllLayerGroups = (layerGroup: OlLayerGroup): OlLayerGroup[] => {\n    const layerGroups = [layerGroup];\n\n    for (const l of layerGroup.getLayers().getArray()) {\n      if (l instanceof OlLayerGroup) {\n        layerGroups.push(...getAllLayerGroups(l));\n      }\n    }\n\n    return layerGroups;\n  };\n\n  const removeLayer = (l: OlLayerBase) => {\n    const parentGroups = getParentLayerGroups(l);\n\n    parentGroups.forEach(parentGroup => parentGroup.getLayers().remove(l));\n  };\n\n  const removeExternalLayer = () => {\n    if (!map) {\n      return;\n    }\n\n    removeLayer(layer);\n\n    const externalLayerGroup = MapUtil.getLayerByName(map, t('AddLayerModal.externalWmsFolder')) as OlLayerGroup;\n    const uploadedLayerGroup = MapUtil.getLayerByName(map, t('UploadDataModal.uploadedDataFolder')) as OlLayerGroup;\n\n    if (externalLayerGroup && externalLayerGroup.getLayers().getLength() === 0) {\n      removeLayer(externalLayerGroup);\n    }\n\n    if (uploadedLayerGroup && uploadedLayerGroup.getLayers().getLength() === 0) {\n      removeLayer(uploadedLayerGroup);\n    }\n  };\n\n  const downloadLayer = async (url: string) => {\n    if (!layer) {\n      return;\n    }\n    const reqOpts = {\n      method: 'GET',\n      headers: {\n        ...layer.get('useBearerToken') ? {\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : undefined\n      }\n    };\n\n    const res = await fetch(url, reqOpts);\n    const blob = await res.blob();\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.setAttribute('download', layer.get('name'));\n    a.click();\n  };\n\n  let dropdownMenuItems: ItemType[] = [];\n\n  if (isWmsLayer(layer)) {\n    dropdownMenuItems.push({\n      label: (\n        <Spin\n          spinning={extentLoading}\n        >\n          {t('LayerTreeContextMenu.layerZoomToExtent')}\n        </Spin>\n      ),\n      key: 'zoomToExtent'\n    });\n  }\n\n  if (isWmsLayer(layer) && layer.getVisible()) {\n    const legendVisible = visibleLegendsIds.includes(getUid(layer));\n\n    dropdownMenuItems.push({\n      label: legendVisible ? t('LayerTreeContextMenu.hideLegend') : t('LayerTreeContextMenu.showLegend'),\n      key: 'toggleLegend'\n    });\n  }\n\n  if (layer.get('isExternalLayer') || layer.get('isUploadedLayer')) {\n    dropdownMenuItems.push({\n      label: t('LayerTreeContextMenu.removeLayer'),\n      key: 'removeExternal'\n    });\n  }\n\n  if (downloadConfig) {\n    const downloadItems = downloadConfig.map((dlConfig: DownloadConfig) => {\n      return {\n        label: t('LayerTreeContextMenu.downloadLayer', {\n          formatName: dlConfig.formatName ?? 'XML'\n        }),\n        key: `downloadLayer|${encodeURI(dlConfig.downloadUrl)}`\n      };\n    });\n    dropdownMenuItems.push(...downloadItems);\n  }\n\n  if (\n    layer.get('editable') &&\n    (allowedEditMode.includes('CREATE') ||\n      allowedEditMode.includes('UPDATE') ||\n      allowedEditMode.includes('DELETE'))\n  ) {\n    dropdownMenuItems.push({\n      label: t('LayerTreeContextMenu.editLayer'),\n      key: 'editLayer'\n    });\n  }\n\n  dropdownMenuItems.push({\n    label: t('LayerTreeContextMenu.layerDetails'),\n    key: 'layerDetails'\n  });\n\n  return (\n    <div\n      aria-label='layer-context'\n    >\n      <Dropdown\n        menu={{\n          items: dropdownMenuItems,\n          onClick: onContextMenuItemClick\n        }}\n        placement=\"bottomLeft\"\n        onOpenChange={setSettingsVisible}\n        open={settingsVisible}\n        trigger={['click']}\n        {...restProps}\n      >\n        <FontAwesomeIcon icon={faEllipsisV} />\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default LayerTreeContextMenu;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport { Progress } from 'antd';\n\nimport {\n  getUid, MapBrowserEvent\n} from 'ol';\nimport OlBaseLayer from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayer from 'ol/layer/Layer';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSource from 'ol/source/Source';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport RgLayerTree, {\n  LayerTreeProps as RgLayerTreeProps\n} from '@terrestris/react-geo/dist/LayerTree/LayerTree';\nimport Legend from '@terrestris/react-geo/dist/Legend/Legend';\nimport LayerTransparencySlider from '@terrestris/react-geo/dist/Slider/LayerTransparencySlider/LayerTransparencySlider';\n\nimport LayerType from '@terrestris/shogun-util/dist/model/enum/LayerType';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport WmsTimeSlider from '../../WmsTimeSlider';\n\nimport LayerTreeContextMenu from './LayerTreeContextMenu';\n\nimport './index.less';\n\nexport type LayerTreeProps = {} & Partial<RgLayerTreeProps>;\n\nexport type LayerTileLoadCounter = {\n  [key: string]: {\n    loading: number;\n    loaded: number;\n    percent: number;\n  };\n};\n\nexport const LayerTree: React.FC<LayerTreeProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const {\n    t\n  } = useTranslation();\n\n  const [visibleLegendsIds, setVisibleLegendsIds] = useState<string[]>([]);\n  const [layerTileLoadCounter, setLayerTileLoadCounter] = useState<LayerTileLoadCounter>({});\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const allLayers = MapUtil.getAllLayers(map);\n    allLayers.forEach(layer => {\n      if (layer instanceof OlLayer) {\n        const source = layer.getSource();\n        if (!source.hasListener('tileloadstart')) {\n          source.on('tileloadstart', tileLoadStartListener);\n        }\n        if (!source.hasListener('tileloadend') && !source.hasListener('tileloaderror')) {\n          source.on(['tileloadend', 'tileloaderror'], tileLoadEndListener);\n        }\n      }\n    });\n\n    return () => {\n      allLayers.forEach(layer => {\n        if (layer instanceof OlLayer) {\n          const source = layer.getSource();\n          if (source.hasListener('tileloadstart')) {\n            source.un('tileloadstart', tileLoadStartListener);\n          }\n          if (source.hasListener('tileloadend')) {\n            source.un('tileloadend', tileLoadEndListener);\n          }\n          if (source.hasListener('tileloaderror')) {\n            source.un('tileloaderror', tileLoadEndListener);\n          }\n        }\n      });\n    };\n  }, [map]);\n\n  const tileLoadStartListener = (evt: MapBrowserEvent<UIEvent>) => {\n    setLayerTileLoadCounter((counter: LayerTileLoadCounter) => {\n      const uid = parseInt(getUid(evt.target), 10);\n      const update = { ...counter };\n      // reset when load was finished\n      if (update[uid] && update[uid].loaded >= update[uid].loading) {\n        update[uid].loading = 1;\n        update[uid].loaded = 0;\n        update[uid].percent = 0;\n        return update;\n      }\n      if (!update[uid]) {\n        update[uid] = {\n          loading: 0,\n          loaded: 0,\n          percent: 0\n        };\n      }\n      update[uid].loading = Number.isInteger(update[uid].loading) ?\n        update[uid].loading + 1 : 1;\n      return update;\n    });\n  };\n\n  const tileLoadEndListener = (evt: MapBrowserEvent<UIEvent>) => {\n    setLayerTileLoadCounter((counter: LayerTileLoadCounter) => {\n      const uid = parseInt(getUid(evt.target), 10);\n      const update = { ...counter };\n      if (!update[uid]) {\n        update[uid] = {\n          loading: 0,\n          loaded: 0,\n          percent: 0\n        };\n      }\n      update[uid].loaded = Number.isInteger(update[uid].loaded) ?\n        update[uid].loaded + 1 : 1;\n      const percent = Math.round(update[uid].loaded / update[uid].loading * 100);\n      if (percent > update[uid].percent) {\n        update[uid].percent = percent;\n      }\n      return update;\n    });\n  };\n\n  const treeFilterFunction = (layer: OlLayer<OlSource> | OlLayerGroup) => {\n    if ((layer as OlLayerGroup).getLayers) {\n      return !layer.get('hideInLayerTree');\n    }\n\n    return !((layer as OlLayer).getSource && ((layer as OlLayer).getSource() as OlSourceVector)?.forEachFeature);\n  };\n\n  const treeNodeTitleRenderer = (layer: OlBaseLayer) => {\n    if (!map) {\n      return;\n    }\n\n    const mapView = map.getView();\n    const unit = mapView.getProjection().getUnits() || 'm';\n    const resolution = mapView.getResolution();\n    const scale = resolution ? MapUtil.getScaleForResolution(resolution, unit) : undefined;\n    const percent = layer instanceof OlLayer && getUid(layer.getSource()) ?\n      layerTileLoadCounter[getUid(layer.getSource())]?.percent : 100;\n\n    if (layer instanceof OlLayerGroup) {\n      return (\n        <div\n          aria-label='layer-group'\n        >\n          {layer.get('name')}\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div\n            className=\"tree-node-header\"\n            aria-label=\"tree-node-header\"\n          >\n            <Progress\n              aria-label='loading-indicator'\n              className='loading-indicator'\n              type=\"circle\"\n              percent={percent}\n              format={() => ''}\n              width={16}\n              strokeWidth={20}\n            />\n            <span\n              aria-label='layer-name'\n            >{layer.get('name')}\n            </span>\n            {\n              (layer instanceof OlLayerTile || layer instanceof OlLayerImage) && (\n                <div\n                  aria-label='layer-context-menu'\n                >\n                  <LayerTreeContextMenu\n                    layer={layer}\n                    visibleLegendsIds={visibleLegendsIds}\n                    setVisibleLegendsIds={setVisibleLegendsIds}\n                  />\n                </div>\n              )\n            }\n\n          </div>\n          {\n            layer.get('visible') &&\n            <div\n              className=\"layer-transparency\"\n              aria-label='transparency-slider'\n            >\n              <LayerTransparencySlider\n                tooltip={{\n                  formatter: val => `${t('LayerTree.transparency')}: ${val}%`\n                }}\n                layer={layer}\n              />\n            </div>\n          }\n          {\n            (layer.get('visible') && layer.get('type') as LayerType === 'WMSTIME') &&\n            <div className=\"layer-time-slider\">\n              <WmsTimeSlider\n                layer={layer as OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>}\n              />\n            </div>\n          }\n          {\n            (layer.get('visible') && visibleLegendsIds.includes(getUid(layer))) &&\n            <Legend\n              layer={layer as OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>}\n              errorMsg={t('LayerTree.noLegendAvailable')}\n              extraParams={{\n                scale,\n                LEGEND_OPTIONS: 'fontAntiAliasing:true;forceLabels:on',\n                TRANSPARENT: true\n              }}\n              headers={\n                layer.get('useBearerToken') ?\n                  {\n                    ...getBearerTokenHeader(client?.getKeycloak())\n                  } :\n                  {}\n              }\n            />\n          }\n        </>\n      );\n    }\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <RgLayerTree\n      aria-label=\"layertree\"\n      className=\"layertree\"\n      map={map}\n      nodeTitleRenderer={treeNodeTitleRenderer}\n      filterFunction={treeFilterFunction}\n      draggable\n      {...restProps}\n    />\n  );\n};\n\nexport default LayerTree;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faDrawPolygon,\n  faPenRuler\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MeasureButton from '@terrestris/react-geo/dist/Button/MeasureButton/MeasureButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\ninterface DefaultMeasureProps {\n  showMeasureDistance?: boolean;\n  showMeasureArea?: boolean;\n}\n\nexport interface MeasureProps extends Partial<DefaultMeasureProps> { }\n\nexport const Measure: React.FC<MeasureProps> = ({\n  showMeasureDistance,\n  showMeasureArea\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <ToggleGroup>\n      {showMeasureDistance ? (\n        <MeasureButton\n          geodesic\n          name=\"line\"\n          map={map}\n          measureType=\"line\"\n          type=\"link\"\n          continueLineMsg={t('Measure.clicktodrawline')}\n        >\n          <FontAwesomeIcon icon={faPenRuler} />\n          <span className=\"measure-text\">{t('Measure.line')}</span>\n        </MeasureButton>\n      ) : <></>}\n\n      {showMeasureArea ? (\n        <MeasureButton\n          geodesic\n          name=\"poly\"\n          map={map}\n          measureType=\"polygon\"\n          type=\"link\"\n          continuePolygonMsg={t('Measure.clicktodrawarea')}\n        >\n          <FontAwesomeIcon icon={faDrawPolygon} />\n          <span className=\"measure-text\">{t('Measure.area')}</span>\n        </MeasureButton>\n      ) : <></>}\n\n    </ToggleGroup>\n  );\n};\n\nexport default Measure;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport type {\n  IconDefinition\n} from '@fortawesome/fontawesome-common-types';\n\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faDrawPolygon,\n  faFileDownload,\n  faLanguage,\n  faMousePointer,\n  faPlus,\n  faRuler,\n  faShareNodes,\n  faStream,\n  faUpload\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Collapse,\n  CollapsePanelProps,\n  Tooltip\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _toArray from 'lodash/toArray';\n\nconst { Panel } = Collapse;\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport usePlugins from '../../hooks/usePlugins';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nimport {\n  isToolMenuIntegration\n} from '../../plugin';\n\nimport {\n  show as showAdd\n} from '../../store/addLayerModal';\nimport {\n  setActiveKeys\n} from '../../store/toolMenu';\nimport {\n  show as showUpload\n} from '../../store/uploadDataModal';\n\nimport LanguageSelect from '../LanguageSelector';\nimport Permalink from '../Permalink';\nimport PrintForm from '../PrintForm';\n\nimport Draw from './Draw';\nimport FeatureInfo from './FeatureInfo';\nimport LayerTree from './LayerTree';\nimport Measure from './Measure';\n\nimport './index.less';\n\nexport interface TitleEventEntity {\n  key: string;\n  domEvent: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>;\n}\n\nexport type ToolPanelConfig = {\n  icon: IconDefinition;\n  title: string;\n  wrappedComponent: JSX.Element;\n};\n\nexport type ToolMenuProps = {} & Partial<CollapsePanelProps>;\n\nexport const ToolMenu: React.FC<ToolMenuProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n  const map = useMap();\n\n  const plugins = usePlugins();\n\n  const dispatch = useAppDispatch();\n  const availableTools = useAppSelector(state => state.toolMenu.availableTools);\n  const activeKeys = useAppSelector(state => state.toolMenu.activeKeys);\n\n  const client = useSHOGunAPIClient();\n  const keycloak = client?.getKeycloak();\n\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const [menuTools, setMenuTools] = useState<string[]>([]);\n\n  useEffect(() => {\n    const mobileQuery = window.matchMedia('only screen and (max-width: 450px) and (orientation: portrait),' +\n      'only screen and (max-width: 750px) and (orientation: landscape), only screen and (max-width: 580px)');\n    const mobileNavigatorRegEx = new RegExp('/Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle' +\n      '|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/');\n    const isMobile = mobileQuery.matches || mobileNavigatorRegEx.test(window.navigator.userAgent);\n\n    if (isMobile) {\n      setCollapsed(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (menuTools.length < 1) {\n      if (availableTools.includes('default')) {\n        setMenuTools([\n          'measure_tools',\n          'draw_tools',\n          'feature_info',\n          'print',\n          'tree',\n          'permalink',\n          'language_selector'\n        ]);\n      } else {\n        setMenuTools(availableTools);\n      }\n    }\n  }, [menuTools, availableTools]);\n\n  useEffect(() => {\n    if (\n      activeKeys.includes('print') &&\n      activeKeys.includes('measure_tools')\n    ) {\n      if (activeKeys.indexOf('print') < activeKeys.indexOf('measure_tools')) {\n        dispatch(setActiveKeys(activeKeys.filter(keys => keys !== 'print')));\n      } else {\n        dispatch(\n          setActiveKeys(activeKeys.filter(keys => keys !== 'measure_tools'))\n        );\n      }\n    }\n  }, [activeKeys, dispatch]);\n\n  const getToolPanels = (): JSX.Element[] => {\n\n    const panels: JSX.Element[] = [];\n\n    menuTools.forEach((tool: string) => {\n      const toolPanelConfig: ToolPanelConfig | undefined = getToolPanelConfig(tool);\n\n      if (!toolPanelConfig) {\n        return;\n      }\n      const {\n        icon,\n        title,\n        wrappedComponent\n      } = toolPanelConfig;\n\n      const panel = (\n        <Panel\n          className={tool}\n          header={\n            <>\n              {icon ? <FontAwesomeIcon icon={icon} /> : undefined}\n              <span>{title}</span>\n            </>\n          }\n          key={tool}\n        >\n          {wrappedComponent}\n        </Panel>\n      );\n      panels.push(panel);\n    });\n\n    if (plugins) {\n      plugins.forEach(plugin => {\n        if (isToolMenuIntegration(plugin.integration)) {\n          const {\n            key,\n            wrappedComponent: WrappedPluginComponent,\n            integration: {\n              placement,\n              label = 'Plugin',\n              insertionIndex,\n              icon,\n              ...passThroughProps\n            }\n          } = plugin;\n\n          panels.splice(insertionIndex || 0, 0, (\n            <Panel\n              header={\n                <>\n                  {icon ? <FontAwesomeIcon icon={icon} /> : undefined}\n                  <span>{t(label)}</span>\n                </>\n              }\n              key={key}\n              {...passThroughProps}\n            >\n              <WrappedPluginComponent />\n            </Panel>\n          ));\n        }\n      });\n    }\n    return panels;\n  };\n\n  const getToolPanelConfig = (tool: string): ToolPanelConfig | undefined => {\n    switch (tool) {\n      case 'measure_tools':\n        return {\n          icon: faRuler,\n          title: t('ToolMenu.measure'),\n          wrappedComponent: (\n            <Measure\n              showMeasureDistance={\n                availableTools.includes('default') || availableTools.includes('measure_tools_distance')\n              }\n              showMeasureArea={availableTools.includes('default') || availableTools.includes('measure_tools_area')}\n            />\n          )\n        };\n      case 'draw_tools':\n        return {\n          icon: faDrawPolygon,\n          title: t('ToolMenu.draw'),\n          wrappedComponent: (\n            <Draw\n              showDrawPoint={availableTools.includes('default') || availableTools.includes('draw_tools_point')}\n              showDrawLine={availableTools.includes('default') || availableTools.includes('draw_tools_line')}\n              showDrawPolygon={availableTools.includes('default') || availableTools.includes('draw_tools_polygon')}\n              showDrawCircle={availableTools.includes('default') || availableTools.includes('draw_tools_circle')}\n              showDrawRectangle={availableTools.includes('default') || availableTools.includes('draw_tools_rectangle')}\n              showDrawAnnotation={\n                availableTools.includes('default') || availableTools.includes('draw_tools_annotation')\n              }\n              showModifyFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_modify')}\n              showUploadFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_upload')}\n              showDownloadFeatures={\n                availableTools.includes('default') || availableTools.includes('draw_tools_download')\n              }\n              showDeleteFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_delete')}\n            />\n          )\n        };\n      case 'feature_info':\n        return {\n          icon: faMousePointer,\n          title: t('ToolMenu.featureInfo'),\n          wrappedComponent: (\n            <FeatureInfo\n              enabled={activeKeys.includes('feature_info')}\n            />\n          )\n        };\n      case 'print':\n        return {\n          icon: faFileDownload,\n          title: t('ToolMenu.print'),\n          wrappedComponent: map ? (\n            <PrintForm\n              active={activeKeys.includes('print')}\n              layerBlackList={[\n                'react-geo_measure',\n                'hoverVectorLayer'\n              ]}\n            />\n          ) : <></>\n        };\n      case 'tree':\n        return {\n          icon: faStream,\n          title: t('ToolMenu.layertree'),\n          wrappedComponent: (\n            <div className='tree-wrapper'>\n              <LayerTree />\n              <Button\n                className='add-wms-button tool-menu-button'\n                icon={<FontAwesomeIcon icon={faPlus} />}\n                onClick={() => dispatch(showAdd())}\n              >\n                {t('ToolMenu.addWms')}\n              </Button>\n              {\n                keycloak && ClientConfiguration.geoserver?.upload?.authorizedRoles?.some(\n                  role => keycloak.hasResourceRole(role, keycloak.clientId)) && (\n                  <Button\n                    className='upload-data-button tool-menu-button'\n                    icon={<FontAwesomeIcon icon={faUpload} />}\n                    onClick={() => dispatch(showUpload())}\n                  >\n                    {t('ToolMenu.uploadData')}\n                  </Button>\n                )\n              }\n            </div>\n          )\n        };\n      case 'permalink':\n        return {\n          icon: faShareNodes,\n          title: t('Permalink.title'),\n          wrappedComponent: <Permalink />\n        };\n      case 'language_selector':\n        return {\n          icon: faLanguage,\n          title: t('ToolMenu.languageSelect'),\n          wrappedComponent: <LanguageSelect />\n        };\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div\n      aria-label=\"tool-menu\"\n      className={`tool-menu ${collapsed ? 'collapsed' : ''}`}\n    >\n      <Collapse\n        expandIconPosition='end'\n        activeKey={activeKeys}\n        destroyInactivePanel={true}\n        onChange={(keys: string[] | string) => {\n          setCollapsed(false);\n          dispatch(setActiveKeys(_toArray(keys)));\n        }}\n        {...restProps}\n      >\n        {getToolPanels()}\n      </Collapse>\n      <Tooltip\n        placement={'right'}\n        title={collapsed ? t('ToolMenu.expand') : t('ToolMenu.collapse')}\n      >\n        <Button\n          className=\"collapse-btn\"\n          aria-label=\"collapse-button\"\n          icon={\n            collapsed ?\n              <FontAwesomeIcon icon={faChevronRight} /> :\n              <FontAwesomeIcon icon={faChevronLeft} />\n          }\n          onClick={() => {\n            dispatch(setActiveKeys([]));\n            setCollapsed(!collapsed);\n          }}\n        />\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default ToolMenu;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faUpload\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Alert,\n  Modal,\n  ModalProps,\n  Spin,\n  Upload\n} from 'antd';\n\nconst { Dragger } = Upload;\n\nimport {\n  RcFile,\n  UploadChangeParam,\n  UploadFile\n} from 'antd/lib/upload/interface';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport TileLayer from 'ol/layer/Tile';\nimport TileWMSSource from 'ol/source/TileWMS';\n\nimport {\n  UploadRequestOption\n} from 'rc-upload/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Shapefile\n} from 'shapefile.js';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport {\n  hide\n} from '../../store/uploadDataModal';\n\nimport './index.less';\n\ntype FeatureTypeAttribute = {\n  name: string;\n  minOccurs: number;\n  maxOccurs: number;\n  nillable: boolean;\n  binding?: string | null;\n  length?: number;\n};\n\ntype FeatureTypeAttributes = {\n  attribute: FeatureTypeAttribute[];\n};\n\nexport type LayerUploadOptions = {\n  baseUrl: string;\n  workspace: string;\n  storeName: string;\n  layerName: string;\n  file: RcFile;\n};\n\nexport type LayerUploadResponse = {\n  layerName: string;\n  workspace: string;\n  baseUrl: string;\n};\n\nexport type UploadDataModalProps = {} & Partial<ModalProps>;\n\nexport const UploadDataModal: React.FC<UploadDataModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [uploadError, setUploadError] = useState('');\n  const [uploadSuccess, setUploadSuccess] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n\n  const isModalVisible = useAppSelector(state => state.uploadDataModal.visible);\n  const user = useAppSelector((state) => state.user);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const closeModal = () => {\n    setUploadError('');\n    setUploadSuccess('');\n    dispatch(hide());\n  };\n\n  const addLayer = (layer: TileLayer<TileWMSSource>) => {\n    if (!map) {\n      return;\n    }\n\n    const targetFolderName = t('UploadDataModal.uploadedDataFolder');\n    let targetGroup = MapUtil.getLayerByName(map, targetFolderName) as OlLayerGroup;\n\n    if (!targetGroup) {\n      targetGroup = new OlLayerGroup({\n        layers: [],\n        properties: {\n          name: targetFolderName\n        }\n      });\n      const existingGroups = map.getLayerGroup().getLayers();\n      existingGroups.insertAt(existingGroups?.getLength() || 0, targetGroup);\n    }\n\n    if (!targetGroup.getLayers().getArray().includes(layer)) {\n      targetGroup.getLayers().push(layer);\n    }\n  };\n\n  const onBeforeFileUpload = (file: RcFile) => {\n    const maxSize = ClientConfiguration.geoserver?.upload?.limit || 200000000;\n    const fileType = file.type;\n    const fileSize = file.size;\n\n    setUploadError('');\n    setUploadSuccess('');\n\n    if (fileSize > maxSize) {\n      setUploadError(t('UploadDataModal.error.maxSize', {\n        maxSize: maxSize / 1000000\n      }));\n\n      return false;\n    }\n\n    const supportedFormats = ['application/zip', 'image/tiff'];\n    if (!supportedFormats.includes(fileType)) {\n      setUploadError(t('UploadDataModal.error.supportedFormats', {\n        supportedFormats: supportedFormats.join(', ')\n      }));\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const uploadGeoTiff = async (options: LayerUploadOptions): Promise<void> => {\n    const {\n      baseUrl,\n      workspace,\n      storeName,\n      layerName,\n      file\n    } = options;\n\n    const coverageStoreUrl = `${baseUrl}/rest/workspaces/${workspace}/coveragestores/` +\n      `${storeName}/file.geotiff?configure=none`;\n\n    const coverageStoreResponse = await fetch(coverageStoreUrl, {\n      method: 'PUT',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'image/tiff'\n      },\n      body: file\n    });\n\n    if (!coverageStoreResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n\n    const coverageUrl = `${baseUrl}/rest/workspaces/${workspace}/coveragestores/${storeName}/coverages`;\n\n    const coverageResponse = await fetch(coverageUrl, {\n      method: 'POST',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        coverage: {\n          enabled: true,\n          name: layerName,\n          nativeName: layerName,\n          title: layerName,\n          keywords: {\n            // eslint-disable-next-line quote-props\n            'string': [\n              'User upload',\n              `Uploaded by ${user.providerDetails?.username}`\n            ]\n          }\n        }\n      })\n    });\n\n    if (!coverageResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n  };\n\n  const uploadShapeZip = async (options: LayerUploadOptions): Promise<void> => {\n    const {\n      baseUrl,\n      workspace,\n      storeName,\n      layerName,\n      file\n    } = options;\n\n    const shp = await Shapefile.load(file);\n\n    let featureTypeName = '';\n    let featureTypeAttributes: FeatureTypeAttributes = {\n      attribute: []\n    };\n\n    if (Object.entries(shp).length !== 1) {\n      throw new Error(t('UploadDataModal.error.zipContent'));\n    }\n\n    Object.entries(shp).forEach(([k, v]) => {\n      featureTypeName = k;\n\n      const dbfContent = v.parse('dbf', {\n        properties: false\n      });\n\n      featureTypeAttributes.attribute = dbfContent.fields.map(field => ({\n        name: field.name,\n        minOccurs: 0,\n        maxOccurs: 1,\n        nillable: true,\n        binding: getAttributeType(field.type),\n        length: field.length\n      }));\n\n      const shxContent = v.parse('shx');\n\n      featureTypeAttributes.attribute.push({\n        name: 'the_geom',\n        minOccurs: 0,\n        maxOccurs: 1,\n        nillable: true,\n        binding: getGeometryType(shxContent.header.type)\n      });\n    });\n\n    const url = `${baseUrl}/rest/workspaces/${workspace}/datastores/` +\n      `${storeName}/file.shp?configure=none`;\n\n    const response = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/zip'\n      },\n      body: file\n    });\n\n    if (!response.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n\n    const featureTypeUrl = `${baseUrl}/rest/workspaces/${workspace}/datastores/${storeName}/featuretypes`;\n\n    const featureTypeResponse = await fetch(featureTypeUrl, {\n      method: 'POST',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        featureType: {\n          enabled: true,\n          name: layerName,\n          nativeName: featureTypeName,\n          title: layerName,\n          attributes: featureTypeAttributes,\n          keywords: {\n            // eslint-disable-next-line quote-props\n            'string': [\n              'User upload',\n              `Uploaded by ${user.providerDetails?.username}`\n            ]\n          }\n        }\n      })\n    });\n\n    if (!featureTypeResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n  };\n\n  const onFileUploadAction = async (options: UploadRequestOption<LayerUploadResponse>) => {\n    const {\n      onError,\n      onSuccess,\n      file\n    } = options;\n\n    const splittedFileName = (file as RcFile).name.split('.');\n    const fileType = (file as RcFile).type;\n    const geoServerBaseUrl = ClientConfiguration.geoserver?.base || '/geoserver';\n    const workspace = ClientConfiguration.geoserver?.upload?.workspace || 'SHOGUN';\n    const layerName = `${splittedFileName[0]}_${Date.now()}`.toUpperCase();\n\n    const uploadData = {\n      file: file as RcFile,\n      baseUrl: geoServerBaseUrl,\n      workspace: workspace,\n      storeName: layerName,\n      layerName: layerName\n    };\n\n    try {\n      if (fileType === 'image/tiff') {\n        await uploadGeoTiff(uploadData);\n      }\n\n      if (fileType === 'application/zip') {\n        await uploadShapeZip(uploadData);\n      }\n\n      if (onSuccess) {\n        onSuccess({\n          baseUrl: geoServerBaseUrl,\n          workspace: workspace,\n          layerName: layerName\n        });\n      }\n    } catch (error) {\n      if (onError) {\n        onError({\n          name: 'UploadError',\n          message: (error instanceof Error) ? error.message : t('UploadDataModal.error.general', {\n            fileName: (file as RcFile).name\n          })\n        });\n      }\n    }\n  };\n\n  const onFileUploadChange = async (info: UploadChangeParam<UploadFile<LayerUploadResponse>>) => {\n    const file = info.file;\n\n    if (file.status === 'uploading') {\n      setIsUploading(true);\n    }\n\n    if (file.status === 'done') {\n      if (!client || !file.response) {\n        return;\n      }\n\n      const layerConfig: Layer = {\n        name: file.response.layerName,\n        type: 'TILEWMS',\n        clientConfig: {\n          hoverable: true\n        },\n        sourceConfig: {\n          url: `${file.response.baseUrl}/ows?`,\n          layerNames: `${file.response.workspace}:${file.response.layerName}`,\n          useBearerToken: true\n        }\n      };\n\n      const parser = new SHOGunApplicationUtil({\n        client\n      });\n\n      const olLayer = parser.parseTileLayer(layerConfig);\n      olLayer.set('layerConfig', layerConfig);\n      olLayer.set('isUploadedLayer', true);\n      olLayer.set('groupName', t('UploadDataModal.uploadedDataFolder'));\n      addLayer(olLayer);\n\n      setUploadSuccess(t('UploadDataModal.success', {\n        fileName: file.name,\n        layerName: file.response.layerName\n      }));\n\n      setIsUploading(false);\n    } else if (file.status === 'error') {\n      setIsUploading(false);\n\n      Logger.error(file.error);\n\n      if (file.error && file.error.message) {\n        setUploadError(file.error.message);\n      } else {\n        setUploadError(t('UploadDataModal.error.general', {\n          fileName: file.name\n        }));\n      }\n    }\n  };\n\n  const getGeometryType = (type: number) => {\n    const types: {\n      [key: number]: string | null;\n    } = {\n      0: null, // Null\n      1: 'org.locationtech.jts.geom.Point', // Point\n      3: 'org.locationtech.jts.geom.LineString', // Polyline\n      5: 'org.locationtech.jts.geom.Polygon', // Polygon\n      8: 'org.locationtech.jts.geom.MultiPoint', // MultiPoint\n      11: 'org.locationtech.jts.geom.Point', // PointZ\n      13: 'org.locationtech.jts.geom.LineString', // PolylineZ\n      15: 'org.locationtech.jts.geom.Polygon', // PolygonZ\n      18: 'org.locationtech.jts.geom.MultiPoint', // MultiPointZ\n      21: 'org.locationtech.jts.geom.Point', // PointM\n      23: 'org.locationtech.jts.geom.LineString', // PolylineM\n      25: 'org.locationtech.jts.geom.Polygon', // PolygonM\n      28: 'org.locationtech.jts.geom.MultiPoint', // MultiPointM\n      31: null // MultiPatch\n    };\n\n    return types[type];\n  };\n\n  const getAttributeType = (dbfFieldType: string) => {\n    switch (dbfFieldType) {\n      case 'C': // Character\n        return 'java.lang.String';\n      case 'D': // Date\n        return 'java.util.Date';\n      case 'N': // Numeric\n        return 'java.lang.Long';\n      case 'F': // Floating point\n        return 'java.lang.Double';\n      case 'L': // Logical\n        return 'java.lang.Boolean';\n      case 'M': // Memo\n        return null;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Modal\n      className=\"upload-data-modal\"\n      title={t('UploadDataModal.title')}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={600}\n      footer={false}\n      {...restProps}\n    >\n      {\n        uploadSuccess && (\n          <Alert\n            message={uploadSuccess}\n            closable={true}\n            type=\"success\"\n          />\n        )\n      }\n\n      {\n        uploadError && (\n          <Alert\n            message={uploadError}\n            closable={true}\n            type=\"error\"\n          />\n        )\n      }\n\n      <Spin\n        spinning={isUploading}\n      >\n        <Dragger\n          customRequest={onFileUploadAction}\n          accept='image/tiff,application/zip'\n          maxCount={1}\n          showUploadList={false}\n          beforeUpload={onBeforeFileUpload}\n          onChange={onFileUploadChange}\n        >\n          <p className=\"ant-upload-drag-icon\">\n            <FontAwesomeIcon\n              icon={faUpload}\n            />\n          </p>\n          <p className=\"ant-upload-text\">\n            {t('UploadDataModal.description')}\n          </p>\n          <p className=\"ant-upload-hint\">\n            {t('UploadDataModal.hint')}\n          </p>\n        </Dragger>\n      </Spin>\n    </Modal>\n  );\n};\n\nexport default UploadDataModal;\n","import _isEmpty from 'lodash/isEmpty';\n\nimport BaseLayer from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport PermalinkUtil from '@terrestris/ol-util/dist/PermalinkUtil/PermalinkUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\n\nimport useQueryParams from './useQueryParams';\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport const useRestoreTransientLayers = async () => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const queryParams = useQueryParams();\n  const {\n    t\n  } = useTranslation();\n\n  const layers = queryParams.get('layers');\n\n  if (!map) {\n    return;\n  }\n\n  const identifier = (l: BaseLayer) => l.get('name');\n  const filter = (l: BaseLayer) => (l instanceof OlLayerTile || l instanceof OlLayerImage);\n  const configString = PermalinkUtil.applyLink(map, ';', identifier, filter);\n\n  if (!configString) {\n    return;\n  }\n\n  const addLayerGroup = (name: string) => {\n    const layerGroup = new OlLayerGroup({\n      layers: []\n    });\n    layerGroup.set('name', name);\n    const existingGroups = map.getLayerGroup().getLayers();\n    existingGroups.insertAt(existingGroups?.getLength() || 0, layerGroup);\n\n    return layerGroup;\n  };\n\n  try {\n    const config = JSON.parse(configString);\n\n    if (!client) {\n      throw new Error('Client is not available');\n    }\n\n    const parser = new SHOGunApplicationUtil({\n      client\n    });\n\n    for (let i = 0; i < config.length; i++) {\n      const cfg = config[i];\n      if (!_isEmpty(cfg?.layerConfig)) {\n        const layerConfig: Layer = cfg.layerConfig;\n        const olLayer = await parser.parseLayer(layerConfig);\n\n        if (!olLayer) {\n          continue;\n        }\n\n        if (cfg.isExternalLayer) {\n          olLayer.set('isExternalLayer', cfg.isExternalLayer);\n        }\n\n        if (cfg.isUploadedLayer) {\n          olLayer.set('isUploadedLayer', cfg.isUploadedLayer);\n        }\n\n        olLayer.set('groupName', cfg.groupName);\n        olLayer.set('layerConfig', cfg.layerConfig);\n\n        olLayer.setVisible(!!layers?.split(';').some(l => l === layerConfig.name));\n\n        if (!(olLayer.get('isExternalLayer') || olLayer.get('isUploadedLayer'))) {\n          continue;\n        }\n\n        let targetGroup: OlLayerGroup;\n\n        if (olLayer.get('groupName')) {\n          // handle custom layer group\n          targetGroup = MapUtil.getLayerByName(map, olLayer.get('groupName')) as OlLayerGroup;\n\n          if (!targetGroup) {\n            targetGroup = addLayerGroup(olLayer.get('groupName'));\n          }\n        } else {\n          // handle default layer group for external layers (external and uploaded layers)\n          targetGroup = MapUtil.getLayersByProperty(map, 'isExternalLayerGroup', true)?.[0] as OlLayerGroup;\n          if (!targetGroup) {\n            targetGroup = addLayerGroup(t('AddLayerModal.externalWmsFolder'));\n            targetGroup.set('isExternalLayerGroup', true);\n          }\n        }\n\n        if (!MapUtil.getLayerByName(map, olLayer.get('name'))) {\n          targetGroup.getLayers().push(olLayer);\n        }\n      }\n    }\n  } catch (error) {\n    Logger.error(error);\n  }\n};\n\nexport default useRestoreTransientLayers;\n","import React from 'react';\n\nexport default function useQueryParams() {\n  const {\n    search\n  } = window.location;\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport AddLayerModal from './components/AddLayerModal/index';\nimport BasicMapComponent from './components/BasicMapComponent';\nimport EditFeatureDrawer from './components/EditFeatureDrawer';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport LayerDetailsModal from './components/LayerDetailsModal';\nimport ToolMenu from './components/ToolMenu';\nimport UploadDataModal from './components/UploadDataModal';\n\nimport useRestoreTransientLayers from './hooks/useRestoreTransientLayers';\n\nimport './App.less';\n\nexport interface AppProps extends React.ComponentProps<'div'> { };\n\nexport const App: React.FC<AppProps> = ({\n  ...restProps\n}): JSX.Element => {\n\n  useRestoreTransientLayers();\n\n  useEffect(() => {\n    const loadingMask = document.querySelectorAll('.loadmask')[0];\n\n    if (loadingMask) {\n      loadingMask.classList.add('loadmask-hidden');\n    }\n  }, []);\n\n  return (\n    <div\n      className=\"App\"\n      {...restProps}\n    >\n      <Header />\n      <BasicMapComponent />\n      <ToolMenu />\n      <Footer />\n      <AddLayerModal />\n      <UploadDataModal />\n      <EditFeatureDrawer />\n      <LayerDetailsModal />\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport {\n  AppInfo\n} from '@terrestris/shogun-util/dist/model/AppInfo';\n\nconst initialState: AppInfo = {\n  authorities: [],\n  buildTime: '',\n  commitHash: '',\n  userId: -1,\n  version: ''\n};\n\nexport const slice = createSlice({\n  name: 'appInfo',\n  initialState,\n  reducers: {\n    setAppInfo(state, action: PayloadAction<AppInfo>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setAppInfo\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = '';\n\nexport const slice = createSlice({\n  name: 'description',\n  initialState,\n  reducers: {\n    setDescription: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setDescription\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice, PayloadAction\n} from '@reduxjs/toolkit';\n\nexport type Legal = {\n  contact?: string;\n  imprint?: string;\n  privacy?: string;\n};\n\nconst initialState: Legal = {\n  contact: 'https://www.terrestris.de/de/kontakt/',\n  imprint: 'https://www.terrestris.de/de/impressum/',\n  privacy: 'https://www.terrestris.de/de/datenschutzerklaerung/'\n};\n\nexport const slice = createSlice({\n  name: 'legal',\n  initialState,\n  reducers: {\n    setLegal: (state, action: PayloadAction<Legal>) => {\n      return {\n        contact: action.payload.contact || initialState.contact,\n        imprint: action.payload.imprint || initialState.imprint,\n        privacy: action.payload.privacy || initialState.privacy\n      };\n    }\n  }\n});\n\nexport const { setLegal } = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = './shogun_logo.png';\n\nexport const slice = createSlice({\n  name: 'logoPath',\n  initialState,\n  reducers: {\n    setLogoPath: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setLogoPath\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string[] = ['nominatim'];\n\nexport const slice = createSlice({\n  name: 'searchEngines',\n  initialState,\n  reducers: {\n    setSearchEngines: (state, action: PayloadAction<string[]>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setSearchEngines\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = 'SHOGun Client';\n\nexport const slice = createSlice({\n  name: 'title',\n  initialState,\n  reducers: {\n    setTitle: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setTitle\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport User from '@terrestris/shogun-util/dist/model/User';\n\nconst initialState: User = { };\n\nexport const slice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser(state, action: PayloadAction<User>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setUser\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  combineReducers,\n  configureStore,\n  Reducer\n} from '@reduxjs/toolkit';\n\nimport addLayerModal from './addLayerModal';\nimport appInfo from './appInfo';\nimport description from './description';\nimport editFeature from './editFeature';\nimport editFeatureDrawerOpen from './editFeatureDrawerOpen';\nimport layerDetailsModal from './layerDetailsModal';\nimport legal from './legal';\nimport logoPath from './logoPath';\nimport print from './print';\nimport searchEngines from './searchEngines';\nimport selectedFeatures from './selectedFeatures';\nimport title from './title';\nimport toolMenu from './toolMenu';\nimport uploadDataModal from './uploadDataModal';\nimport user from './user';\n\ntype AsyncReducer = {\n  [key: string]: Reducer;\n};\n\nexport const createReducer = (asyncReducers?: AsyncReducer) => {\n  return combineReducers({\n    addLayerModal,\n    appInfo,\n    description,\n    editFeature,\n    editFeatureDrawerOpen,\n    layerDetailsModal,\n    legal,\n    logoPath,\n    print,\n    selectedFeatures,\n    title,\n    toolMenu,\n    uploadDataModal,\n    searchEngines,\n    user,\n    ...asyncReducers\n  });\n};\n\nexport const store = configureStore({\n  reducer: createReducer()\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  loader\n} from '@monaco-editor/react';\n\nimport {\n  Alert,\n  ConfigProvider,\n  notification\n} from 'antd';\n\nimport deDE from 'antd/lib/locale/de_DE';\nimport enGB from 'antd/lib/locale/en_GB';\n\nimport ClientConfiguration, {\n  FeatureEditConfiguration\n} from 'clientConfig';\n\nimport Color from 'color';\n\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport Keycloak from 'keycloak-js';\n\nimport {\n  defaults as OlControlDefaults\n} from 'ol/control';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlMap from 'ol/Map';\nimport {\n  fromLonLat\n} from 'ol/proj';\nimport OlSourceOsm from 'ol/source/OSM';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\nimport OlView from 'ol/View';\n\nimport {\n  render\n} from 'react-dom';\n\nimport {\n  Provider\n} from 'react-redux';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport MapContext from '@terrestris/react-geo/dist/Context/MapContext/MapContext';\n\nimport {\n  AppInfo\n} from '@terrestris/shogun-util/dist/model/AppInfo';\nimport Application, {\n  DefaultApplicationTheme,\n  DefaultApplicationToolConfig\n} from '@terrestris/shogun-util/dist/model/Application';\nimport User from '@terrestris/shogun-util/dist/model/User';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nconst App = React.lazy(() => import('./App'));\n\nimport {\n  PluginProvider\n} from './context/PluginContext';\nimport {\n  SHOGunAPIClientProvider\n} from './context/SHOGunAPIClientContext';\n\nimport i18n, {\n  initOpts\n} from './i18n';\n\nimport {\n  ClientPluginInternal\n} from './plugin';\n\nimport {\n  setAppInfo\n} from './store/appInfo';\nimport {\n  setDescription\n} from './store/description';\nimport {\n  setUserEditMode,\n  EditLevel\n} from './store/editFeature';\nimport {\n  setLegal\n} from './store/legal';\nimport {\n  setLogoPath\n} from './store/logoPath';\nimport {\n  setSearchEngines\n} from './store/searchEngines';\nimport {\n  createReducer,\n  store\n} from './store/store';\nimport {\n  setTitle\n} from './store/title';\nimport {\n  setAvailableTools\n} from './store/toolMenu';\nimport {\n  setUser\n} from './store/user';\n\nimport './index.less';\n\n// TODO: extend antd properties too\nexport interface ThemeProperties extends React.CSSProperties {\n  '--primaryColor'?: string;\n  '--secondaryColor'?: string;\n  '--complementaryColor'?: string;\n}\n\n// eslint-disable-next-line no-shadow\nenum LoadingErrorCode {\n  APP_ID_NOT_SET = 'APP_ID_NOT_SET',\n  APP_CONFIG_NOT_FOUND = 'APP_CONFIG_NOT_FOUND'\n};\n\nconst client = new SHOGunAPIClient({\n  url: ClientConfiguration.shogunBase || '/'\n});\n\nconst parser = new SHOGunApplicationUtil({\n  client\n});\n\nconst getConfigLang = (lang: string) => {\n  switch (lang) {\n    case 'en':\n      return enGB;\n    case 'de':\n      return deDE;\n    default:\n      return enGB;\n  }\n};\n\nconst getApplicationConfiguration = async (applicationId: number) => {\n  try {\n    Logger.info(`Loading application with ID ${applicationId}`);\n\n    const application = await client.application().findOne(applicationId);\n\n    Logger.info(`Successfully loaded application with ID ${applicationId}`);\n\n    return application;\n  } catch (error) {\n    Logger.error(`Error while loading application with ID ${applicationId}: ${error}`);\n  }\n};\n\nconst getApplicationInfo = async () => {\n  try {\n    Logger.info('Loading application info');\n\n    const appInfo = await client.info().getAppInfo();\n\n    Logger.info('Successfully loaded application info');\n\n    return appInfo;\n  } catch (error) {\n    Logger.error('Error while loading application info: ', error);\n  }\n};\n\nconst getUser = async (userId?: number) => {\n  if (!userId) {\n    Logger.info('No user ID given, can\\'t load it\\'s details.');\n    return;\n  }\n\n  try {\n    Logger.info(`Loading user with ID ${userId}`);\n\n    const user = await client.user().findOne(userId);\n\n    Logger.info(`Successfully loaded user with ID ${userId}`);\n\n    return user;\n  } catch (error) {\n    Logger.error(`Error while loading user with ID ${userId}: `, error);\n  }\n};\n\nconst setApplicationToStore = async (application?: Application) => {\n  if (!application) {\n    Logger.info('No application configuration provided, the default store will be loaded');\n\n    return;\n  }\n\n  if (application.name) {\n    store.dispatch(setTitle(application.name));\n  }\n\n  if (application.clientConfig?.description) {\n    store.dispatch(setDescription(application.clientConfig?.description));\n  }\n\n  if (application.clientConfig?.legal) {\n    store.dispatch(setLegal(application.clientConfig.legal));\n  }\n\n  if (application?.clientConfig?.theme?.logoPath) {\n    store.dispatch(setLogoPath(application.clientConfig.theme.logoPath));\n  }\n\n  // nominatim search is active by default\n  store.dispatch(setSearchEngines(['nominatim']));\n\n  if (application.toolConfig && application.toolConfig.length > 0) {\n    const availableTools: string[] = [];\n    application.toolConfig\n      .map((tool: DefaultApplicationToolConfig) => {\n        if (tool.config.visible && tool.name !== 'search') {\n          availableTools.push(tool.name);\n        }\n        if (tool.name === 'search' && tool.config.engines.length > 0) {\n          store.dispatch(setSearchEngines(tool.config.engines));\n        }\n      });\n    store.dispatch(setAvailableTools(availableTools));\n  }\n};\n\nconst setAppInfoToStore = async (appInfo?: AppInfo) => {\n  if (!appInfo) {\n    return;\n  }\n\n  store.dispatch(setAppInfo(appInfo));\n};\n\nconst setUserToStore = async (user?: User) => {\n  if (!user) {\n    return;\n  }\n\n  store.dispatch(setUser(user));\n};\n\nconst initKeycloak = async () => {\n  const keycloakEnabled = ClientConfiguration.keycloak?.enabled;\n  const keycloakOnLoad = ClientConfiguration.keycloak?.onLoadAction;\n  const keycloakHost = ClientConfiguration.keycloak?.host;\n  const keycloakRealm = ClientConfiguration.keycloak?.realm;\n  const keycloakClientId = ClientConfiguration.keycloak?.clientId;\n\n  if (!keycloakEnabled) {\n    return undefined;\n  }\n\n  if (!keycloakHost) {\n    throw new Error('Neither config key keycloak.host nor environment KEYCLOAK_HOST is set');\n  }\n\n  if (!keycloakRealm) {\n    throw new Error('Neither config key keycloak.realm nor environment KEYCLOAK_REALM is set');\n  }\n\n  if (!keycloakClientId) {\n    throw new Error('Neither config key keycloak.clientId nor environment KEYCLOAK_CLIENT_ID is set');\n  }\n\n  const keycloak = new Keycloak({\n    url: `${keycloakHost}`,\n    realm: keycloakRealm,\n    clientId: keycloakClientId\n  });\n\n  keycloak.onTokenExpired = async () => {\n    try {\n      await keycloak.updateToken(0);\n    } catch (error) {\n      Logger.error('Error while refreshing the access token: ', error);\n    }\n  };\n\n  await keycloak.init({\n    onLoad: keycloakOnLoad,\n    checkLoginIframe: false\n  });\n\n  return keycloak;\n};\n\nconst setApplicationTitle = () => {\n  store.subscribe(() => {\n    document.title = store.getState().title;\n  });\n};\n\nconst setupMap = async (application?: Application) => {\n  if (application) {\n    return await setupSHOGunMap(application);\n  }\n\n  Logger.info('No application configuration provided, the default map will be loaded');\n\n  return setupDefaultMap();\n};\n\nconst setupSHOGunMap = async (application: Application) => {\n  const view = await parser.parseMapView(application, {\n    constrainOnlyCenter: true\n  });\n\n  let extent;\n  const projection = application.clientConfig?.mapView.projection;\n  const mapView = application.clientConfig?.mapView;\n  if (projection && mapView?.extent && mapView.extent.length === 4) {\n    const ll = fromLonLat([mapView.extent[0], mapView.extent[1]], projection);\n    const ur = fromLonLat([mapView.extent[2], mapView.extent[3]], projection);\n    extent = [\n      ll[0],\n      ll[1],\n      ur[0],\n      ur[1]\n    ];\n  }\n  if (extent) {\n    view.set('extent', extent);\n  }\n\n  view.setConstrainResolution(true);\n\n  const layers = await parser.parseLayerTree(application, projection);\n\n  return new OlMap({\n    view,\n    layers,\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\n// TODO Make default/fallback app configurable?\nconst setupDefaultMap = () => {\n  const osmLayer = new OlLayerTile({\n    source: new OlSourceOsm()\n  });\n  osmLayer.set('name', 'OpenStreetMap');\n\n  const temperatureLayer = new OlLayerTile({\n    opacity: 0.5,\n    visible: true,\n    source: new OlSourceTileWMS({\n      url: 'https://gibs.earthdata.nasa.gov/wms/epsg3857/best/wms.cgi',\n      projection: 'EPSG:3857',\n      params: {\n        LAYERS: 'MERRA2_2m_Air_Temperature_Assimilated_Monthly'\n      }\n    })\n  });\n  temperatureLayer.setProperties({\n    name: '2-meter Air Temperature, Assimilated (Monthly, MERRA2)',\n    hoverable: true\n  });\n\n  const eoLayerGroup = new OlLayerGroup({\n    layers: [temperatureLayer]\n  });\n  eoLayerGroup.set('name', 'NASA Earth Observations');\n\n  const backgroundLayerGroup = new OlLayerGroup({\n    layers: [osmLayer]\n  });\n  backgroundLayerGroup.set('name', 'Background');\n\n  const center = fromLonLat([0, 40], 'EPSG:3857');\n\n  return new OlMap({\n    view: new OlView({\n      center: center,\n      zoom: 0\n    }),\n    layers: [backgroundLayerGroup, eoLayerGroup],\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\nconst parseTheme = (theme?: DefaultApplicationTheme): ThemeProperties => {\n  const style: ThemeProperties = {\n    '--primaryColor': '#59666C',\n    '--secondaryColor': '#70B3BE',\n    '--complementaryColor': '#FFFFFF'\n  };\n  if (!theme) {\n    return style;\n  }\n  if (theme.primaryColor) {\n    style['--primaryColor'] = theme.primaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--secondaryColor'] = theme.secondaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--complementaryColor'] = theme.complementaryColor;\n  }\n  return style;\n};\n\n// ExamplePlugin: 'ExamplePlugin@/client-plugin/remoteEntry.js'\nconst loadPluginModules = async (moduleName: string, moduleUrl: string, remoteNames: string[]) => {\n  await __webpack_init_sharing__('default');\n\n  await new Promise<void>((resolve, reject) => {\n    const element = document.createElement('script');\n\n    element.src = moduleUrl;\n    element.type = 'text/javascript';\n    element.async = true;\n\n    element.onload = () => {\n      element.parentElement?.removeChild(element);\n      resolve();\n    };\n\n    element.onerror = (err) => {\n      element.parentElement?.removeChild(element);\n      reject(err);\n    };\n\n    document.head.appendChild(element);\n  });\n\n  // @ts-ignore\n  const container = window[moduleName];\n\n  // eslint-disable-next-line camelcase\n  await container.init(__webpack_share_scopes__.default);\n\n  const modules = [];\n  for (const remoteName of remoteNames) {\n    const factory = await container.get(remoteName);\n    const module = factory();\n    modules.push(module);\n  }\n\n  return modules;\n};\n\nconst loadPlugins = async (map: OlMap) => {\n  if (!ClientConfiguration.plugins || ClientConfiguration.plugins.length === 0) {\n    Logger.info('No plugins found');\n    return [];\n  }\n\n  Logger.info('Loading plugins');\n\n  const clientPlugins: ClientPluginInternal[] = [];\n\n  for (const plugin of ClientConfiguration.plugins) {\n    const name = plugin.name;\n    const resourcePath = plugin.resourcePath;\n    const exposedPaths = plugin.exposedPaths;\n\n    if (!name) {\n      Logger.error('Required plugin configuration \\'name\\' is not set');\n      return clientPlugins;\n    }\n\n    if (!resourcePath) {\n      Logger.error('Required plugin configuration \\'resourcePath\\' is not set');\n      return clientPlugins;\n    }\n\n    if (!exposedPaths) {\n      Logger.error('Required plugin configuration \\'exposedPaths\\' is not set');\n      return clientPlugins;\n    }\n\n    Logger.info(`Loading plugin ${name} (with exposed paths ${exposedPaths.join(' and ')}) from ${resourcePath}`);\n\n    let clientPluginModules: any[];\n    try {\n      clientPluginModules = await loadPluginModules(name, resourcePath, exposedPaths);\n      Logger.info(`Successfully loaded plugin ${name}`);\n    } catch (error) {\n      Logger.error(`Could not load plugin ${name}:`, error);\n      return clientPlugins;\n    }\n\n    clientPluginModules.forEach(module => {\n      const clientPluginDefault: ClientPluginInternal = module.default;\n      const PluginComponent = clientPluginDefault.component;\n\n      const WrappedPluginComponent = () => (\n        <PluginComponent\n          map={map}\n          client={client}\n        />\n      );\n\n      clientPluginDefault.wrappedComponent = WrappedPluginComponent;\n\n      if (clientPluginDefault.i18n) {\n        Object.entries(clientPluginDefault.i18n).forEach(locale => {\n          const lng = locale[0];\n          const resources = locale[1].translation;\n          i18n.addResourceBundle(lng, 'translation', resources, true, true);\n        });\n      }\n\n      if (clientPluginDefault.reducers) {\n        const reducers = createReducer(clientPluginDefault.reducers);\n        store.replaceReducer(reducers);\n      }\n\n      clientPlugins.push(clientPluginDefault);\n    });\n  }\n\n  return clientPlugins;\n};\n\nconst checkRoles = (\n  list: string[],\n  featureEditRoles: FeatureEditConfiguration\n): EditLevel[] => {\n  const {\n    authorizedRolesForCreate,\n    authorizedRolesForUpdate,\n    authorizedRolesForDelete,\n    authorizedRolesForEditingGeometries\n  } = featureEditRoles;\n\n  const result: EditLevel[] = [];\n\n  for (const element of list) {\n    if (authorizedRolesForCreate?.some(role => matchRole(role, element))) {\n      result.push('CREATE');\n    }\n    if (authorizedRolesForUpdate?.some(role => matchRole(role, element))) {\n      result.push('UPDATE');\n    }\n    if (authorizedRolesForDelete?.some(role => matchRole(role, element))) {\n      result.push('DELETE');\n    }\n    if (authorizedRolesForEditingGeometries?.some(role => matchRole(role, element))) {\n      result.push('EDIT_GEOMETRY');\n    }\n  }\n  return result;\n};\n\nconst matchRole = (role: string | RegExp, element: string): boolean => {\n  if (typeof role === 'string') {\n    return element === role;\n  }\n  if (role instanceof RegExp) {\n    return role.test(element);\n  }\n  return false;\n};\n\nconst renderApp = async () => {\n  try {\n    loader.config({\n      paths: {\n        vs: './vs'\n      }\n    });\n\n    const keycloak = await initKeycloak();\n\n    if (keycloak) {\n      client.setKeycloak(keycloak);\n    }\n\n    const applicationId = parseInt(UrlUtil.getQueryParam(window.location.href, 'applicationId'), 10);\n\n    if (!applicationId) {\n      Logger.info('No application ID given, can\\'t load any configuration.');\n    }\n\n    if (!applicationId && !ClientConfiguration.enableFallbackConfig) {\n      throw new Error(LoadingErrorCode.APP_ID_NOT_SET);\n    }\n\n    let appConfig;\n    if (applicationId) {\n      appConfig = await getApplicationConfiguration(applicationId);\n    }\n\n    if (!appConfig && !ClientConfiguration.enableFallbackConfig) {\n      throw new Error(LoadingErrorCode.APP_CONFIG_NOT_FOUND);\n    }\n\n    const defaultLanguage = appConfig?.clientConfig?.defaultLanguage;\n\n    if (!defaultLanguage) {\n      i18n.use(LanguageDetector);\n    }\n\n    await i18n.init(initOpts);\n\n    if (defaultLanguage) {\n      i18n.changeLanguage(defaultLanguage);\n    }\n\n    const style = parseTheme(appConfig?.clientConfig?.theme);\n\n    ConfigProvider.config({\n      theme: {\n        primaryColor: Color(style['--primaryColor']).isLight() ?\n          Color(style['--primaryColor']).darken(0.5).hexa() :\n          style['--primaryColor']\n      }\n    });\n\n    Object.keys(style).forEach((key: any) => {\n      document.body.style.setProperty(key, style[key as keyof ThemeProperties] as string);\n    });\n\n    setApplicationTitle();\n\n    setApplicationToStore(appConfig);\n\n    const appInfo = await getApplicationInfo();\n\n    setAppInfoToStore(appInfo);\n\n    const user = await getUser(appInfo?.userId);\n\n    setUserToStore(user);\n\n    const userRoles: string[] | undefined =\n      client?.getKeycloak()?.tokenParsed?.realm_access?.roles;\n\n    let allowedEditMode: EditLevel[] = ['NONE'];\n\n    if (userRoles && ClientConfiguration.featureEditRoles) {\n      allowedEditMode = checkRoles(\n        userRoles,\n        ClientConfiguration.featureEditRoles\n      );\n    }\n\n    store.dispatch(setUserEditMode(allowedEditMode));\n\n    const map = await setupMap(appConfig);\n\n    const plugins = await loadPlugins(map);\n\n    if (!appConfig) {\n      notification.error({\n        message: i18n.t('Index.applicationLoadErrorMessage'),\n        description: i18n.t('Index.applicationLoadErrorDescription', {\n          applicationId: applicationId\n        }),\n        duration: 0\n      });\n    }\n\n    render(\n      <React.StrictMode>\n        <React.Suspense fallback={<span></span>}>\n          <SHOGunAPIClientProvider client={client}>\n            <PluginProvider plugins={plugins}>\n              <ConfigProvider locale={getConfigLang(i18n.language)}>\n                <Provider store={store}>\n                  <MapContext.Provider value={map}>\n                    <App />\n                  </MapContext.Provider>\n                </Provider>\n              </ConfigProvider>\n            </PluginProvider>\n          </SHOGunAPIClientProvider>\n        </React.Suspense>\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  } catch (error) {\n    const loadingMask = document.querySelectorAll('.loadmask')[0];\n\n    if (loadingMask) {\n      loadingMask.classList.add('loadmask-hidden');\n    }\n\n    if (!i18n.isInitialized) {\n      i18n.use(LanguageDetector);\n      await i18n.init(initOpts);\n    }\n\n    let errorDescription = i18n.t('Index.errorDescription');\n\n    if ((error as Error)?.message === LoadingErrorCode.APP_ID_NOT_SET) {\n      errorDescription = i18n.t('Index.errorDescriptionAppIdNotSet');\n    }\n\n    if ((error as Error)?.message === LoadingErrorCode.APP_CONFIG_NOT_FOUND) {\n      const appId = UrlUtil.getQueryParam(window.location.href, 'applicationId');\n\n      errorDescription = i18n.t('Index.errorDescriptionAppConfigNotFound', {\n        applicationId: appId\n      });\n    }\n\n    render(\n      <React.StrictMode>\n        <Alert\n          className=\"error-boundary\"\n          message={i18n.t('Index.errorMessage')}\n          description={errorDescription}\n          type=\"warning\"\n          showIcon\n        />\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  }\n};\n\nrenderApp();\n","import React from 'react';\n\nimport {\n  ClientPluginInternal\n} from '../plugin';\n\nexport type PluginProviderProps = {\n  plugins: ClientPluginInternal[];\n  children: JSX.Element;\n};\n\nexport const PluginContext = React.createContext<(ClientPluginInternal[])>([]);\n\nexport const PluginProvider: React.FC<PluginProviderProps> = ({\n  plugins,\n  children\n}): JSX.Element => {\n  return (\n    <PluginContext.Provider\n      value={plugins}\n    >\n      {children}\n    </PluginContext.Provider>\n  );\n};\n\nexport default PluginContext;\n","import React from 'react';\n\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nexport type SHOGunAPIClientProviderProps = {\n  client: SHOGunAPIClient;\n  children: JSX.Element;\n};\n\nexport const SHOGunAPIClientContext = React.createContext<(SHOGunAPIClient | null)>(null);\n\nexport const SHOGunAPIClientProvider: React.FC<SHOGunAPIClientProviderProps> = ({\n  client,\n  children\n}): JSX.Element => {\n  return (\n    <SHOGunAPIClientContext.Provider\n      value={client}\n    >\n      {children}\n    </SHOGunAPIClientContext.Provider>\n  );\n};\n\nexport default SHOGunAPIClientContext;\n","import i18n, {\n  InitOptions\n} from 'i18next';\nimport {\n  initReactI18next\n} from 'react-i18next';\n\nimport resources from './translations';\n\nexport const initOpts: InitOptions = {\n  resources,\n  fallbackLng: 'en',\n  debug: false,\n  interpolation: {\n    escapeValue: false\n  },\n  returnNull: false\n};\n\n// eslint-disable-next-line import/no-named-as-default-member\ni18n\n  .use(initReactI18next);\n\ni18n.options = initOpts;\n\nexport default i18n;\n","export default {\n  de: {\n    translation: {\n      ApplicationInfo: {\n        title: 'Über',\n        clientVersionTitle: 'Client Version',\n        backendVersionTitle: 'Backend Version'\n      },\n      AddLayerModal: {\n        addSelectedLayers: 'Auswahl hinzufügen',\n        addAllLayers: 'Alle hinzufügen',\n        inputPlaceholder: 'WMS GetCapabilities URL angeben…',\n        externalWmsFolder: 'Externe Themen',\n        title: 'WMS hinzufügen',\n        columnTitle: 'Name',\n        errorMessage: 'Fehler',\n        errorDescription: 'Das Capabilities Dokument konnte nicht geladen werden, bitte prüfen Sie die URL',\n        version: 'Version'\n      },\n      BasicMapComponent: {\n        processedLayersFolder: 'Prozessierte Layer'\n      },\n      Permalink: {\n        title: 'Teilen',\n        twitterTooltip: 'Link via Twitter teilen',\n        whatsAppTooltip: 'Link via WhatsApp teilen',\n        mailTooltip: 'Link via Mail teilen',\n        copyTooltip: 'Link in die Zwischenablage kopieren',\n        copiedToClipboard: 'Link wurde in Zwischenablage kopiert',\n        copyToClipboardFailed: 'Link konnte nicht kopiert werden'\n      },\n      Measure: {\n        title: 'Messen',\n        line: 'Entfernung',\n        area: 'Fläche',\n        clicktodrawline: 'Zum Zeichnen einer Linie klicken',\n        clicktodrawarea: 'Zum Zeichnen einer Fläche klicken'\n      },\n      Draw: {\n        point: 'Punkt',\n        line: 'Linie',\n        polygon: 'Polygon',\n        circle: 'Kreis',\n        rectangle: 'Rechteck',\n        text: 'Anmerkung',\n        modify: 'Bearbeitung',\n        upload: 'Hochladen',\n        delete: 'Löschen',\n        export: 'Exportieren'\n      },\n      StylingDrawer: {\n        pickColor: 'Farbschema bearbeiten',\n        title: 'Farbschema bearbeiten'\n      },\n      FeatureInfo: {\n        usageHint: 'Klicken Sie in die Karte, um Detailinformationen zu erhalten.'\n      },\n      FileUpload: {\n        upload: 'Dateien hochladen'\n      },\n      ImageUpload: {\n        upload: 'Bilder hochladen'\n      },\n      LayerTree: {\n        transparency: 'Transparenz',\n        noLegendAvailable: 'Keine Legende verfügbar'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Auf Layerausdehnung zoomen',\n        extentError: 'Konnte nicht auf die Layerausdehnung zoomen',\n        removeLayer: 'Layer entfernen',\n        showLegend: 'Legende anzeigen',\n        hideLegend: 'Legende ausblenden',\n        downloadLayer: 'Layer exportieren ({{formatName}})',\n        editLayer: 'Layer bearbeiten',\n        layerDetails: 'Eigenschaften'\n      },\n      LayerDetailsModal: {\n        title: 'Eigenschaften des Layers {{layerName}}',\n        internalConfigurationButtonTooltip: 'Interne Konfiguration anzeigen',\n        internalConfigurationButtonTooltipPressed: 'Interne Konfiguration verbergen'\n      },\n      LayerDetails: {\n        noDataPlaceholder: '-',\n        layerNameLabel: 'Name',\n        layerTitleLabel: 'Titel',\n        serviceAbstractLabel: 'Service Beschreibung',\n        abstractLabel: 'Beschreibung',\n        accessConstraintsLabel: 'Nutzungseinschränkungen',\n        capabilitiesUrlLabel: 'GetCapabilities URL',\n        contactLabel: 'Kontakt',\n        minScaleLabel: 'Min. Maßstab',\n        maxScaleLabel: 'Max. Maßstab',\n        bboxLabel: 'Bounding Box',\n        errorMessage: 'Fehler beim Laden der Layer Capabilities'\n      },\n      LayerConfiguration: {\n        errorMessage: 'Fehler beim Laden der internen Konfiguration'\n      },\n      ToolMenu: {\n        expand: 'Menu ausklappen',\n        collapse: 'Menu einklappen',\n        measure: 'Messen',\n        draw: 'Zeichnen',\n        featureInfo: 'Karteninhalte abfragen',\n        addWms: 'WMS hinzufügen',\n        uploadData: 'Daten hochladen',\n        print: 'Export',\n        layertree: 'Karten',\n        languageSelect: 'Sprachauswahl'\n      },\n      PrintForm: {\n        title: 'Kartentitel',\n        initialTitle: 'Druckausgabe',\n        titlePlaceholder: 'Bitte geben Sie einen Titel ein',\n        comment: 'Bemerkung',\n        commentPlaceholder: 'Bitte geben Sie einen Kommentar ein',\n        layout: 'Vorlage',\n        dpi: 'Auflösung',\n        format: 'Format',\n        scale: 'Maßstab',\n        downloadBtnText: 'Ausdruck erzeugen',\n        printJobErrorMsg: 'Der Kartenausdruck konnte nicht erzeugt werden',\n        initErrorMsg: 'Der Kartendruck Generator konnte nicht initialisiert werden.',\n        outputFormatPlaceholder: 'Bitte wählen Sie ein Ausgabeformat aus',\n        resolutionPlaceholder: 'Bitte wählen Sie eine Ausgabequalität aus',\n        managerErrorMessage: 'Fehler bei der Initialisierung der Export-Engine'\n      },\n      Footer: {\n        refSystem: 'Bezugssystem',\n        scale: 'Maßstab',\n        mousePosition: 'Mausposition',\n        imprint: 'Impressum',\n        contact: 'Kontakt',\n        privacypolicy: 'Datenschutz'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Fehler beim Laden der Applikation',\n        applicationLoadErrorDescription: 'Die Applikation mit der ID {{applicationId}} konnte nicht geladen werden. ' +\n          'Die Standardkonfiguration wird stattdessen geladen.',\n        errorMessage: 'Fehler beim Laden der Applikation',\n        errorDescription: 'Aufgrund eines unerwarteten Fehlers konnte die Applikation nicht geladen werden.',\n        errorDescriptionAppIdNotSet: 'Keine Applikations-ID angegeben. Bitte geben Sie die ID als Abfrageparameter an, z.B. ?applicationId=1909',\n        errorDescriptionAppConfigNotFound: 'Die Applikation mit der ID {{applicationId}} konnte nicht geladen werden.'\n      },\n      Nominatim: {\n        placeholder: 'Ortsname, Straßenname, Stadtteilname, POI usw.'\n      },\n      UserMenu: {\n        settingsMenuTitle: 'Profil bearbeiten',\n        infoMenuTitle: 'Über',\n        logoutMenuTitle: 'Ausloggen',\n        loginMenuTitle: 'Anmelden'\n      },\n      WmsTimeSlider: {\n        title: 'Zeitlicher Bezug',\n        default: 'Keine Daten gefunden'\n      },\n      UploadDataModal: {\n        title: 'Daten hochladen',\n        uploadedDataFolder: 'Hochgeladene Daten',\n        description: 'Klicken Sie oder ziehen Sie die Datei zum Hochladen in diesen Bereich',\n        hint: 'Unterstützte Dateiformate sind Shapefile (gebündelt als *.zip) und GeoTIFF',\n        success: 'Datei {{fileName}} wurde erfolgreich geladen und der Layer {{layerName}} erstellt',\n        error: {\n          general: 'Fehler beim Hochladen der Datei {{fileName}}',\n          maxSize: 'Der Upload überschreitet das Limit von {{maxSize}} MB',\n          supportedFormats: 'Der Dateityp ist nicht unterstützt ({{supportedFormats}})',\n          zipContent: 'Mehrere Geodatensätze innerhalb eines Archivs sind nicht unterstützt'\n        }\n      },\n      MultiSearch: {\n        searchInViewBox: 'Im aktuellen Kartenausschnitt suchen',\n        searchData: 'Layerdaten durchsuchen',\n        searchNominatim: 'Ortssuche (Nominatim)',\n        nominatimTitle: 'Ortssuche',\n        searchPlaceholder: 'Orts- und Datensuche…'\n      },\n      EditFeatureDrawer: {\n        featureEditor: 'Objekteditor',\n        noLayerFoundError: 'Kein passender Layer gefunden - das Editieren ist nicht möglich.',\n        isFeatureLockedErrorMsg: 'Das ausgewählte Objekt wird bereits in einer anderen Sitzung bearbeitet.',\n        closeDrawerWarnTitle: 'Wollen Sie wirklich fortfahren?',\n        closeDrawerWarnContent: 'Dadurch werden alle nicht gespeicherten Änderungen an dem Objekt verworfen.'\n      },\n      EditFeatureSwitch: {\n        usageHint: 'Objekt zum Editieren auf der Karte auswählen oder…',\n        limitedUsageHint: 'Zum Editieren bitte eine Objekt auf der Karte auswählen',\n        createFeature: 'Neues Objekt erstellen'\n      },\n      EditFeatureFullForm: {\n        saveErrorMsg: 'Das Objekt konnte nicht gespeichert werden',\n        deleteErrorMsg: 'Das Objekt konnte nicht gelöscht werden'\n      },\n      EditFeatureGeometryToolbar: {\n        draw: 'Neue Geometrie zeichnen',\n        edit: 'Geometrie editieren',\n        delete: 'Geometrie löschen',\n        undo: 'Rückgängig',\n        redo: 'Wiederherstellen'\n      },\n      ResetButton: {\n        title: 'Zurücksetzen'\n      },\n      SaveButton: {\n        title: 'Speichern'\n      },\n      DeleteButton: {\n        title: 'Objekt löschen',\n        confirm: 'Das Objekt wird vollständig gelöscht. Fortfahren?'\n      },\n      EditFeatureButton: {\n        title: 'Objekt bearbeiten'\n      },\n      FeaturePropertyGrid: {\n        key: 'Name',\n        value: 'Wert'\n      },\n      PaginationToolbar: {\n        copyAsGeoJson: 'Als GeoJSON kopieren (inkl. Geometrie)',\n        copyAsObject: 'Als Objekt kopieren (nur angezeigte Werte)'\n      },\n      JsonModal: {\n        buttonTitle: 'Öffne {{propertyName}}'\n      }\n    }\n  },\n  en: {\n    translation: {\n      ApplicationInfo: {\n        title: 'About',\n        clientVersionTitle: 'Client version',\n        backendVersionTitle: 'Backend version'\n      },\n      AddLayerModal: {\n        addSelectedLayers: 'Add selected',\n        addAllLayers: 'Add all',\n        inputPlaceholder: 'Enter a WMS GetCapabilities URL…',\n        externalWmsFolder: 'External layers',\n        title: 'Add WMS',\n        columnTitle: 'Name',\n        errorMessage: 'Error',\n        errorDescription: 'Could not load the provided Capabilities document, please check the validity of the URL',\n        version: 'Version'\n      },\n      BasicMapComponent: {\n        processedLayersFolder: 'Processed layers'\n      },\n      Permalink: {\n        title: 'Share',\n        twitterTooltip: 'Share link via Twitter',\n        whatsAppTooltip: 'Share link via WhatsApp',\n        mailTooltip: 'Share link via Mail',\n        copyTooltip: 'Copy link to Clipboard',\n        copiedToClipboard: 'Copied to clipboard',\n        copyToClipboardFailed: 'Could not copy link to clipboard'\n      },\n      Measure: {\n        title: 'Measure',\n        line: 'Distance',\n        area: 'Area',\n        clicktodrawline: 'Click to draw line',\n        clicktodrawarea: 'Click to draw area'\n      },\n      Draw: {\n        point: 'Point',\n        line: 'Line',\n        polygon: 'Polygon',\n        circle: 'Circle',\n        rectangle: 'Rectangle',\n        text: 'Annotation',\n        modify: 'Edit',\n        upload: 'Upload',\n        delete: 'Delete',\n        export: 'Export'\n      },\n      StylingDrawer: {\n        pickColor: 'Modify color scheme',\n        title: 'Modify color scheme'\n      },\n      FeatureInfo: {\n        usageHint: 'Click on the map to get details about the clicked coordinate.'\n      },\n      FileUpload: {\n        upload: 'Upload files'\n      },\n      ImageUpload: {\n        upload: 'Upload images'\n      },\n      LayerTree: {\n        transparency: 'Transparency',\n        noLegendAvailable: 'No legend available'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Zoom to layer extent',\n        extentError: 'Could not zoom to layer extent',\n        removeLayer: 'Remove layer',\n        showLegend: 'Show legend',\n        hideLegend: 'Hide legend',\n        downloadLayer: 'Export layer as {{formatName}}',\n        editLayer: 'Edit layer',\n        layerDetails: 'Properties'\n      },\n      LayerDetailsModal: {\n        title: 'Properties of layer {{layerName}}',\n        internalConfigurationButtonTooltip: 'Show internal configuration',\n        internalConfigurationButtonTooltipPressed: 'Hide internal configuration'\n      },\n      LayerDetails: {\n        noDataPlaceholder: '-',\n        layerNameLabel: 'Name',\n        layerTitleLabel: 'Title',\n        serviceAbstractLabel: 'Service abstract',\n        abstractLabel: 'Abstract',\n        accessConstraintsLabel: 'Access constraints',\n        capabilitiesUrlLabel: 'GetCapabilities URL',\n        contactLabel: 'Contact',\n        minScaleLabel: 'Min. scale',\n        maxScaleLabel: 'Max. scale',\n        bboxLabel: 'Bounding box',\n        errorMessage: 'Error while loading the layer capabilities'\n      },\n      LayerConfiguration: {\n        errorMessage: 'Error while loading the internal configuration'\n      },\n      ToolMenu: {\n        expand: 'Expand',\n        collapse: 'Collapse',\n        measure: 'Measure',\n        draw: 'Draw',\n        featureInfo: 'Query map features',\n        addWms: 'Add WMS',\n        uploadData: 'Upload data',\n        print: 'Export',\n        layertree: 'Maps',\n        languageSelect: 'Language selector'\n      },\n      PrintForm: {\n        title: 'Title',\n        initialTitle: 'Title',\n        titlePlaceholder: 'Please input a title…',\n        comment: 'Comment',\n        commentPlaceholder: 'Please enter a comment…',\n        layout: 'Layout',\n        dpi: 'Resolution',\n        format: 'Format',\n        scale: 'Scale',\n        downloadBtnText: 'Create print',\n        printJobErrorMsg: 'Could not generate PDF output',\n        initErrorMsg: 'PDF Generator could not be initialized',\n        outputFormatPlaceholder: 'Please select an output format',\n        resolutionPlaceholder: 'Please select an output quality',\n        managerErrorMessage: 'Error while initializing the export engine'\n      },\n      Footer: {\n        refSystem: 'Reference system',\n        scale: 'Scale',\n        mousePosition: 'Mouse position',\n        imprint: 'Imprint',\n        contact: 'Contact',\n        privacypolicy: 'Privacy'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Error while loading the application',\n        applicationLoadErrorDescription: 'The application with ID {{applicationId}} could not be loaded correctly. ' +\n          'You\\'re seeing the default application configuration.',\n        errorMessage: 'Error while loading the application',\n        errorDescription: 'An unexpected error occured while loading the application.',\n        errorDescriptionAppIdNotSet: 'No application ID given. Please provide the ID as query parameter, e.g. ?applicationId=1909',\n        errorDescriptionAppConfigNotFound: 'The application with ID {{applicationId}} could not be loaded correctly.'\n      },\n      Nominatim: {\n        placeholder: 'Place name, street name, district name, POI, etc.'\n      },\n      UserMenu: {\n        settingsMenuTitle: 'Edit profile',\n        infoMenuTitle: 'About',\n        logoutMenuTitle: 'Logout',\n        loginMenuTitle: 'Login'\n      },\n      WmsTimeSlider: {\n        title: 'Time reference',\n        default: 'No data found'\n      },\n      UploadDataModal: {\n        title: 'Upload data',\n        uploadedDataFolder: 'Uploaded data',\n        description: 'Click or drag file to this area to upload',\n        hint: 'Supported file formats are Shapefile (bundled as *.zip) and GeoTIFF',\n        success: 'Successfully uploaded file {{fileName}} and created layer {{layerName}}',\n        error: {\n          general: 'Error while uploading file {{fileName}}',\n          maxSize: 'The file exceeds the upload limit of {{maxSize}} MB',\n          supportedFormats: 'The given file type does not match the supported ones ({{supportedFormats}})',\n          zipContent: 'Multiple geodatasets within one archive are not supported'\n        }\n      },\n      MultiSearch: {\n        searchInViewBox: 'Search in current extent',\n        searchData: 'Search layer data',\n        searchNominatim: 'Search nominatim',\n        nominatimTitle: 'Nominatim',\n        searchPlaceholder: 'Address and data search…'\n      },\n      EditFeatureDrawer: {\n        featureEditor: 'Feature editor',\n        noLayerFoundError: 'No layer found - the editing is not possible.',\n        isFeatureLockedErrorMsg: 'The selected feature is already being edited in another session.',\n        closeDrawerWarnTitle: 'Do you really want to quit?',\n        closeDrawerWarnContent: 'This will discard any unsaved changes to the feature.'\n      },\n      EditFeatureSwitch: {\n        usageHint: 'Select an existing feature for editing on the map or…',\n        limitedUsageHint: 'To edit please select an object on the map',\n        createFeature: 'Create new feature'\n      },\n      EditFeatureFullForm: {\n        saveErrorMsg: 'Error while saving the feature',\n        deleteErrorMsg: 'Error while deleting the feature'\n      },\n      EditFeatureGeometryToolbar: {\n        draw: 'Draw new geometry',\n        edit: 'Edit geometry',\n        delete: 'Delete geometry',\n        undo: 'Undo',\n        redo: 'Redo'\n      },\n      ResetButton: {\n        title: 'Reset'\n      },\n      SaveButton: {\n        title: 'Save'\n      },\n      DeleteButton: {\n        title: 'Delete feature',\n        confirm: 'The feature will be completely deleted. Proceed?'\n      },\n      EditFeatureButton: {\n        title: 'Edit feature'\n      },\n      FeaturePropertyGrid: {\n        key: 'Name',\n        value: 'Value'\n      },\n      PaginationToolbar: {\n        copyAsGeoJson: 'Copy as GeoJSON (incl. geometry)',\n        copyAsObject: 'Copy as object (displayed values only)'\n      },\n      JsonModal: {\n        buttonTitle: 'Show {{propertyName}}'\n      }\n    }\n  }\n};\n","import('./bootstrap');\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface AddLayerModalState {\n  visible: boolean;\n}\n\nconst initialState: AddLayerModalState = {\n  visible: false\n};\n\nconst addLayerModalSlice = createSlice({\n  name: 'addLayerModal',\n  initialState,\n  reducers: {\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = addLayerModalSlice.actions;\n\nexport default addLayerModalSlice.reducer;\n","import {\n  PayloadAction,\n  createSlice\n} from '@reduxjs/toolkit';\n\nimport {\n  Feature\n} from 'geojson';\n\nexport type EditLevel =\n  | 'CREATE'\n  | 'UPDATE'\n  | 'DELETE'\n  | 'EDIT_GEOMETRY'\n  | 'NONE';\nexport interface EditFeatureState {\n  layerId: string | null;\n  feature: Feature | null;\n  userEditMode: EditLevel[];\n  formDirty: boolean;\n}\n\nconst initialState: EditFeatureState = {\n  layerId: null,\n  feature: null,\n  userEditMode: ['NONE'],\n  formDirty: false\n};\n\nconst editFeatureSlice = createSlice({\n  name: 'editFeature',\n  initialState,\n  reducers: {\n    setLayerId(state, action: PayloadAction<string | null>) {\n      state.layerId = action.payload;\n    },\n    setFeature(state, action: PayloadAction<Feature | null>) {\n      state.feature = action.payload;\n    },\n    reset(state) {\n      state.layerId = null;\n      state.feature = null;\n    },\n    setUserEditMode(state, action: PayloadAction<EditLevel[]>) {\n      state.userEditMode = action.payload;\n    },\n    setFormDirty(state, action: PayloadAction<boolean>) {\n      state.formDirty = action.payload;\n    }\n  }\n});\n\nexport const {\n  setLayerId,\n  setFeature,\n  reset,\n  setUserEditMode,\n  setFormDirty\n} = editFeatureSlice.actions;\n\nexport default editFeatureSlice.reducer;\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nconst initialState: boolean = false;\n\nconst editFeatureDrawerOpenSlice = createSlice({\n  name: 'editFeatureDrawerOpen',\n  initialState,\n  reducers: {\n    show() {\n      return true;\n    },\n    hide() {\n      return false;\n    },\n    toggle(state) {\n      return !state;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = editFeatureDrawerOpenSlice.actions;\n\nexport default editFeatureDrawerOpenSlice.reducer;\n","import {\n  PayloadAction,\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface LayerDetailsModalState {\n  visible: boolean;\n  layerId?: string;\n}\n\nconst initialState: LayerDetailsModalState = {\n  visible: false\n};\n\nconst layerDetailsModalSlice = createSlice({\n  name: 'layerDetailsModal',\n  initialState,\n  reducers: {\n    setLayer(state, action: PayloadAction<string | undefined>) {\n      state.layerId = action.payload;\n    },\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  setLayer,\n  show,\n  hide,\n  toggle\n} = layerDetailsModalSlice.actions;\n\nexport default layerDetailsModalSlice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport { V3CustomMapParams } from '@terrestris/mapfish-print-manager/dist/manager/MapFishPrintV3Manager';\n\nexport type PrintState = {\n  customMapParams?: V3CustomMapParams;\n  customParams?: any;\n};\n\nconst initialState: PrintState = {\n  customMapParams: {},\n  customParams: {\n    printLegend: false\n  }\n};\n\nexport const printSlice = createSlice({\n  name: 'print',\n  initialState,\n  reducers: {\n    setCustomMapParams: (state, action: PayloadAction<V3CustomMapParams>) => {\n      state.customMapParams = action.payload;\n    },\n    setCustomParams: (state, action: PayloadAction<any>) => {\n      state.customParams = action.payload;\n    },\n    addCustomMapParam: (state, action: PayloadAction<Partial<V3CustomMapParams>>) => {\n      state.customMapParams = {\n        ...state.customMapParams,\n        ...action.payload\n      };\n    },\n    addCustomParam: (state, action: PayloadAction<any>) => {\n      state.customParams = {\n        ...state.customParams,\n        ...action.payload\n      };\n    }\n  }\n});\n\nexport const {\n  setCustomMapParams,\n  setCustomParams,\n  addCustomMapParam,\n  addCustomParam\n} = printSlice.actions;\n\nexport default printSlice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nexport type SelectedFeatures = {\n  [layerName: string]: string;\n};\n\nconst initialState: SelectedFeatures = {};\n\nexport const slice = createSlice({\n  name: 'selectedFeatures',\n  initialState,\n  reducers: {\n    setSelectedFeatures(state, action: PayloadAction<SelectedFeatures>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setSelectedFeatures\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nexport interface ToolMenuState {\n  activeKeys: string[];\n  availableTools: string[];\n}\n\nconst initialState: ToolMenuState = {\n  // This is the default state. If no config is given, then load all tools\n  activeKeys: [],\n  availableTools: ['default']\n};\n\nexport const slice = createSlice({\n  name: 'toolMenu',\n  initialState,\n  reducers: {\n    setActiveKeys(state, action: PayloadAction<string[]>) {\n      state.activeKeys = [...action.payload];\n    },\n    setAvailableTools(state, action: PayloadAction<string[]>) {\n      state.availableTools = [...action.payload];\n    }\n  }\n});\n\nexport const {\n  setActiveKeys,\n  setAvailableTools\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface UploadDataModalState {\n  visible: boolean;\n}\n\nconst initialState: UploadDataModalState = {\n  visible: false\n};\n\nconst uploadDataModalSlice = createSlice({\n  name: 'uploadDataModal',\n  initialState,\n  reducers: {\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = uploadDataModalSlice.actions;\n\nexport default uploadDataModalSlice.reducer;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","AddLayerModal","restProps","loading","setLoading","useState","layers","setLayers","selectedRowKeys","setSelectedRowKeys","url","setUrl","sanitizedUrl","setSanitizedUrl","version","setVersion","isModalVisible","state","addLayerModal","visible","dispatch","map","useMap","t","useTranslation","useEffect","UrlUtil","closeModal","hide","addLayers","layersToAdd","targetFolderName","targetGroup","MapUtil","OlLayerGroup","set","existingGroups","getLayerGroup","getLayers","insertAt","getLength","forEach","layerToAdd","getArray","includes","layerUrl","ImageLayer","getSource","getUrl","TileLayer","urls","getUrls","length","undefined","layerConfig","name","get","type","opacity","getOpacity","sourceConfig","layerNames","getParams","LAYERS","useBearerToken","push","React","Modal","_extends","className","title","open","onCancel","width","footer","Button","key","disabled","onClick","onAddAll","onAddSelected","filter","layer","getUid","Input","Search","placeholder","value","onChange","event","target","onSearch","async","capabilities","CapabilitiesUtil","externalLayers","error","notification","message","description","enterButton","addonBefore","Select","defaultValue","label","Table","columns","render","text","record","rowKey","rowSelection","pagination","dataSource","usePlugins","useContext","PluginContext","BasicMapComponent","plugins","i18n","targetGroups","oldName","changeEvent","OlObjectEvent","dispatchEvent","language","pluginComponents","plugin","pluginIntegration","integration","placement","wrappedComponent","WrappedPluginComponent","MapComponent","useSHOGunAPIClient","SHOGunAPIClientContext","useExecuteWfsTransaction","client","useCallback","source","opts","OlSourceImageWMS","OlSourceTileWMS","endsWith","slice","defaultHeaders","response","fetch","method","headers","getBearerTokenHeader","getKeycloak","body","XMLSerializer","serializeToString","transaction","ok","Error","responseText","DOMParser","parseFromString","getElementsByTagName","JsonModal","passThroughProps","isOpen","setIsOpen","propertyName","onButtonClick","icon","FontAwesomeIcon","faBoxOpen","Editor","height","JSON","stringify","parse","automaticLayout","readOnly","lineNumbers","scrollBeyondLastLine","minimap","enabled","scrollbar","useShadows","showFoldingControls","selectionHighlight","renderLineHighlight","occurrencesHighlight","DisplayField","format","suffix","displayText","Number","isFinite","Intl","NumberFormat","isMoment","Array","isArray","join","val","v","e","isJson","Typography","Text","FileUpload","fieldConfig","Upload","multiple","action","withCredentials","getCsrfTokenHeader","onRemove","uuid","file","fileUuid","getBasePath","credentials","onPreview","fileName","fileUrl","_isNil","anchor","document","createElement","appendChild","result","blob","objectUrl","window","URL","createObjectURL","href","download","click","revokeObjectURL","fieldProps","useConvertImageUrl","Promise","reject","onSuccess","onError","reader","FileReader","onload","this","readAsDataURL","ImageUpload","mediaPreviewVisible","setMediaPreviewVisible","previewImage","setPreviewImage","imageUrlToBase64","accept","listType","previewImageUrl","img","faPlus","style","marginTop","alt","src","EditFeatureForm","formConfig","form","formDirty","editFeature","createReadOnlyComponent","createFieldComponent","fieldCfg","component","Checkbox","DatePicker","InputNumber","allowClear","Switch","TextArea","Logger","Form","labelCol","span","labelAlign","labelWrap","onValuesChange","_debounce","changedValues","setFormDirty","field","formItemProps","rules","required","valuePropName","getValueFromEvent","fileList","Item","displayName","isGeometryType","propertyType","useExecuteWfsDescribeFeatureType","params","SERVICE","REQUEST","VERSION","OUTPUTFORMAT","TYPENAMES","json","useWriteWfsTransaction","executeWfsDescribeFeatureType","cleanFormValues","formValues","getFieldsValue","Object","entries","getFieldInstance","toISOString","uid","_isObject","id","fileType","fileInfoList","lastModified","created","inserts","updates","deletes","describeFeatureType","geomProperty","featureTypes","properties","find","property","overallUpdateMode","upsertFeatures","feature","feat","OlFeature","geometry","getGeometry","clone","isEmpty","getExtent","setGeometryName","setProperties","updateMode","getId","setId","deleteFeatures","transactionOpts","featureNS","targetNamespace","featurePrefix","targetPrefix","featureType","srsName","getView","getProjection","getCode","nativeElements","OlFormatWFS","writeTransaction","ClientConfiguration","rootNode","getRootNode","lockId","createElementNS","lockIdValue","createTextNode","MapDrawer","children","querySelectorAll","classList","toggle","Drawer","mask","getComputedStyle","documentElement","getPropertyValue","afterOpenChange","onAfterDrawerOpenChange","updateSize","useExecuteGetFeature","featureRequest","writeGetFeature","outputFormat","EditFeatureGeometryToolbar","historyLength","editHistory","useRef","past","future","editLayer","setEditLayer","setRevision","gjFormat","useMemo","OlFormatGeoJson","allowedEditMode","userEditMode","DigitizeUtil","getDigitizeLayer","removeLayer","clear","olFeat","readFeature","addFeature","r","isEmptyOlExtent","fit","padding","undoEdit","editSource","features","getFeatures","writeFeaturesObject","previousSource","current","_isEmpty","addFeatures","readFeatures","redoEdit","nextSource","onDrawEnd","updateRevision","toLocaleLowerCase","startsWith","btnTooltipProps","tooltipPlacement","tooltipProps","mouseEnterDelay","Toolbar","alignment","ToggleGroup","DrawButton","faPencil","pressedIcon","digitizeLayer","tooltip","drawType","ModifyButton","faDrawPolygon","onModifyStart","onModifyEnd","onTranslateEnd","DeleteButton","faTrash","onFeatureRemove","SimpleButton","faUndo","flip","EditFeatureTabs","tabConfig","initialValues","items","config","idx","forceRender","Tabs","writeWfsTransaction","executeWfsTransaction","Popconfirm","onConfirm","isWmsLayer","olFeature","OlFormatGeoJSON","refresh","danger","ResetButton","resetFields","faRotateLeft","FeedbackIcon","loadComplete","SaveButton","saveCompleted","setSaveCompleted","validateFields","warn","setTimeout","faFloppyDisk","EditFeatureToolbar","onSaveSuccess","onSaveError","onDeleteSuccess","onDeleteError","EditFeatureFullForm","executeGetFeature","setTabConfig","setInitialValues","errorMsg","setErrorMsg","useForm","reloadFeature","updatedFeatures","equalTo","setFeature","update","editFormConfig","structuredClone","setPropertiesPromises","tabConfigs","tabCfg","formCfg","isDate","some","cfg","moment","isUpload","filePath","fileListWithBlob","all","setFieldsValue","Alert","showIcon","featureId","idString","item","getAttribute","split","useExecuteWfsLockFeature","lockFeatureDoc","featureProperties","parseInt","match","toString","idProperty","typeName","setAttribute","queryElement","filterElement","isEqualToElement","valueReferenceElement","valueReferenceValue","literalElement","literalValue","writeWfsLockFeature","useGetFeatureInfo","onFailure","onSingleClick","coords","evt","coordinate","viewResolution","getResolution","getFeatureInfoUrl","INFO_FORMAT","BUFFER","getTargetElement","cursor","featureCollection","onPointerMove","dragging","data","getData","pixel","Uint8ClampedArray","hit","on","un","EditFeatureSwitch","onLockSuccess","onLockError","onCreate","executeWfsLockFeature","geomType","getGeometryType","coordinates","EditFeatureDrawer","setLayer","isFeatureLocked","setIsFeatureLocked","drawerTitle","setDrawerTitle","isDrawerOpen","editFeatureDrawerOpen","layerId","olLayer","closeDrawer","releaseLock","hideEditFeatureDrawer","reset","onClose","onDrawerClose","confirm","maskClosable","content","okType","onOk","Footer","legalInformation","legal","insertPlugins","itemPosition","placementOrientation","splice","insertionIndex","getControls","control","OlControlScaleLine","addControl","OlControlMousePosition","coordinateFormat","createStringXY","projection","openContactModal","contact","openImprintModal","imprint","openPrivacyModal","privacy","getLeftItems","Divider","ScaleCombo","getRightItems","BasicNominatimSearch","viewBox","setViewBox","mapViewProjection","extent","transformedExtent","transformExtent","NominatimSearch","countryCodes","nominatimBaseUrl","generateFuzzySearchQuery","searchParts","part","trim","generateSolrQuery","searchValue","parts","replaceAll","s","subQueriesPerLayer","getAllLayers","searchConfig","fullLayerName","attributes","query","fieldList","isFulfilled","p","status","MultiSearch","useNominatim","useSolrHighlighting","delay","minChars","solrSearchBasePath","clickAwayRef","searchNominatim","setSearchNominatim","searchData","setSearchData","useViewBox","setUseViewBox","setSearchValue","resultsVisible","setResultsVisible","settingsVisible","setSettingsVisible","dataSearchResults","setDataSearchResults","highlightingResults","setHighlightingResults","nominatimResults","setNominatimResults","searchResults","setSearchResults","addEventListener","handleClickAway","removeEventListener","parents","unshift","parentNode","contains","settingsMenu","checked","performSearch","resetSearch","calculateExtent","searchUrl","location","origin","promises","q","solrQueryConfig","rows","defType","qf","bboxFilter","fq","hl","successfulResults","allSettled","pr","dataResults","flatMap","sR","docs","hlResults","assign","sr","highlighting","logger","nominatimUrl","searchParams","getFeatureTitle","dsResult","highlightResult","blacklistedAttributes","displayTemplate","template","replace","_","token","replaceTemplates","filteredHighlightKeys","keys","propKey","propValue","toLowerCase","indexOf","updatedResults","geoJsonFormat","nFeats","f","geojson","dataProjection","featureProjection","display_name","nResults","wktFormat","OlFormatWKT","categories","_groupBy","res","category","resultCategory","readGeometry","ftName","substring","lastIndexOf","timeout","clearTimeout","actionsCreator","layerStyle","OlStyle","stroke","OlStyleStroke","color","fill","OlStyleFill","image","OlStyleCircle","radius","ref","addonAfter","Dropdown","menu","trigger","onOpenChange","SettingOutlined","onFocus","prefix","SearchOutlined","LoadingOutlined","resultRenderer","numTotal","Empty","PRESENTED_IMAGE_SIMPLE","SearchResultsPanel","accordion","searchTerms","SearchField","searchEngines","useSolr","getGravatarUrl","email","size","rating","defaultImage","force","lowerCaseEmail","md5","ApplicationInfo","opener","appInfo","logoPath","appDescription","isVisible","setVisible","toggleVisibility","Opener","centered","Statistic","PROJECT_VERSION","buildTime","UserMenu","keycloak","user","onMenuClick","accountManagement","login","logout","UserChip","imageSrc","providerDetails","userName","faAngleDown","userMenu","getMenu","faSignIn","username","divider","settings","faUserCog","info","faInfo","faSignOut","accountRoles","tokenParsed","resource_access","account","roles","itemsForLoggedInUser","Header","getCenterItems","LayerConfiguration","errorMessage","setErrorMessage","layerConfiguration","setLayerConfiguration","getLayerConfiguration","conf","findOne","closable","Spin","spinning","LayerDetails","setCapabilities","getCapabilities","capa","getLayerName","getCapabilitiesUrl","getCapabilitiesLayer","Capability","Layer","layerName","lay","l","Name","getBBox","EX_GeographicBoundingBox","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","getMinScale","MinScaleDenominator","getMaxScale","MaxScaleDenominator","getAbstract","Abstract","getServiceAbstract","Service","getContact","ContactInformation","ContactElectronicMailAddress","getLayerTitle","Title","getAccessConstraints","AccessConstraints","layout","flex","LayerDetailsModal","configurationVisible","setConfigurationVisible","layerDetailsModal","OlLayer","Tooltip","FileTextOutlined","onShowConfigurationClick","hideLayerDetailsModal","setDetailsLayer","hidden","Option","LanguageSelect","supportedLanguages","services","resourceStore","lang","changeLanguage","supportedLanguage","toUpperCase","Permalink","layerAttributes","initialPermalink","PermalinkUtil","getVisible","permalink","setPermalink","mailBody","eventKeys","identifierFunction","filterFunction","updatePermalink","updateLayerConfig","externalLayer","clientConfig","registerLayerCallback","layerGroup","layersInGroup","i","layerInGroup","LayerGroup","eventKeyVisibility","eventKeyOpacity","listenerKeyCenter","listenerKeyResolution","mapLayerGroup","unByKey","TwitterOutlined","twitterUrl","WhatsAppOutlined","whatsAppUrl","MailOutlined","mailToUrl","CopyOutlined","copy","SHOGunMapFishPrintV3WMSSerializer","MapFishPrintV3WMSSerializer","serialize","serialized","super","baseURL","optsToApply","tileSize","validateSource","MapFishPrintV3TiledWMSSerializer","CustomFieldInput","maxLength","inputText","setInputText","addCustomParam","showCount","LayoutSelect","printManager","setLayout","getLayouts","OutputFormatSelect","outputFormats","setOutputFormat","toLocaleUpperCase","ResolutionSelect","resolution","setResolution","setDpi","getDpis","d","ScaleSelect","scale","setScale","updateScale","pmScale","getScale","transformInteraction","getInteractions","MapFishPrintV3Manager","TRANSFORM_INTERACTION_NAME","getScales","toLocaleString","Shared","customParams","FORMAT","LAYER","queryParams","encodeURIComponent","PrintForm","active","customPrintScales","layerBlackList","currentLanguageCode","customMapParams","print","setPrintManager","layerFilter","legendFilter","notBlacklisted","notHidden","printableLayer","SCALE","initializeMapProvider","pManagerOpts","getResolutions","units","getUnits","reverse","transformOpts","rotate","serializers","MapFishPrintV3GeoJsonSerializer","MapFishPrintV3OSMSerializer","MapFishPrintV3WMTSSerializer","SHOGunMapFishPrintV3TiledWMSSerializer","pManager","init","apps","getPrintApps","setPrintApp","getOutputFormats","shutdownManager","setCustomParams","setCustomMapParams","onAlertClose","isInitiated","initialValue","getClosestScaleToFitMap","faDownload","downloadUrl","StylingComponent","setStyle","symbolizers","kind","outlineOpacity","fillOpacity","outlineWidth","outlineColor","wellKnownName","strokeColor","strokeOpacity","font","offset","haloColor","haloWidth","olParser","OlParser","drawVectorLayer","olStylePolygon","olStyleLineString","olStylePoint","olStyleText","rule","newStyle","olStyle","writeStyle","output","drawLayerStyleFunction","geometryType","getType","parseStyles","CardStyle","onStyleChange","StylingDrawer","setOpen","showDrawer","faPaintBrush","Draw","showDrawPoint","showDrawLine","showDrawPolygon","showDrawCircle","showDrawRectangle","showDrawAnnotation","showModifyFeatures","showUploadFeatures","showDownloadFeatures","showDeleteFeatures","onGeoJSONUpload","geoJSONFile","fileReader","geoJSONFeatures","GeoJSON","mapProjection","transform","digitizeLayerSource","readAsText","pressed","faCircle","faGripLines","faSquare","faFont","faPenToSquare","UploadButton","uploadedFiles","files","faUpload","onGeoJSONDownload","clonedFeatures","digitizedFeatures","clonedFeature","geoJSON","writeFeatures","fileToDownload","Blob","link","removeChild","initVectorLayer","OlSourceVector","featureStyle","OlLayerVector","addLayer","deinitVectorLayer","vectorLayer","FeatureInfoForm","getProperties","PaginationToolbar","selectedFeature","exportFilter","Pagination","simple","total","pageSize","onCopyAsGeoJSONClick","selectedFeatureClone","propertyEntries","filteredPropertyEntries","OlGeometry","unset","fromEntries","writeFeature","faClipboardCheck","onCopyAsObjectClick","props","faClipboardList","FeatureInfoTabs","currentPage","setCurrentPage","setSelectedFeature","vectorLayerName","useHighlightVectorLayer","page","child","FeatureInfoPropertyGrid","setBlacklistedAttributes","geomAttributes","attributeFilter","getKeys","prop","PropertyGrid","sticky","dataIndex","ellipsis","defaultSortOrder","sorter","a","b","localeCompare","scroll","scrollToFirstRowOnChange","y","FeatureInfo","queryLayers","setQueryLayers","OlLayerImage","OlLayerTile","updateQueryLayers","layerCandidates","mapLayers","getUnqualifiedLayerName","CoordinateInfo","featureCount","coordinateInfoState","pluginRendererAvailable","mapLayer","unqualifiedMapLayerName","destroyInactiveTabPane","fetchOpts","getFetchOpts","layerUid","serializedFeatures","entry","selectedFeatures","setSelectedFeatures","WmsTimeSlider","setValue","TIME","min","setMin","max","setMax","marks","setMarks","dimension","timeValues","values","m","default","nearest","NaN","diff","faClock","TimeSlider","updateParams","step","LayerTreeContextMenu","visibleLegendsIds","setVisibleLegendsIds","extentLoading","setExtentLoading","downloadConfig","zoomToLayerExtent","LayerUtil","getAllLayerGroups","layerGroups","parentGroups","getParentLayerGroups","parentGroup","remove","removeExternalLayer","externalLayerGroup","uploadedLayerGroup","downloadLayer","reqOpts","dropdownMenuItems","legendVisible","downloadItems","dlConfig","formatName","encodeURI","decodeURI","legendId","newLegendIds","setLayerId","showEditFeatureDrawer","setLayerDetailsLayer","showLayerDetailsModal","faEllipsisV","LayerTree","layerTileLoadCounter","setLayerTileLoadCounter","allLayers","hasListener","tileLoadStartListener","tileLoadEndListener","counter","loaded","percent","isInteger","Math","round","RgLayerTree","nodeTitleRenderer","mapView","unit","Progress","strokeWidth","LayerTransparencySlider","formatter","Legend","extraParams","LEGEND_OPTIONS","TRANSPARENT","forEachFeature","draggable","Measure","showMeasureDistance","showMeasureArea","MeasureButton","geodesic","measureType","continueLineMsg","faPenRuler","continuePolygonMsg","Panel","Collapse","ToolMenu","availableTools","toolMenu","activeKeys","collapsed","setCollapsed","menuTools","setMenuTools","mobileQuery","matchMedia","mobileNavigatorRegEx","RegExp","matches","test","navigator","userAgent","setActiveKeys","getToolPanelConfig","tool","faRuler","faMousePointer","faFileDownload","faStream","showAdd","upload","authorizedRoles","role","hasResourceRole","clientId","showUpload","faShareNodes","faLanguage","expandIconPosition","activeKey","destroyInactivePanel","_toArray","getToolPanels","panels","toolPanelConfig","panel","header","faChevronRight","faChevronLeft","Dragger","UploadDataModal","uploadError","setUploadError","uploadSuccess","setUploadSuccess","isUploading","setIsUploading","uploadDataModal","getAttributeType","dbfFieldType","customRequest","splittedFileName","geoServerBaseUrl","base","workspace","Date","now","uploadData","baseUrl","storeName","coverageStoreUrl","coverageUrl","coverage","nativeName","keywords","uploadGeoTiff","shp","Shapefile","load","featureTypeName","featureTypeAttributes","attribute","k","dbfContent","fields","minOccurs","maxOccurs","nillable","binding","shxContent","featureTypeUrl","uploadShapeZip","maxCount","showUploadList","beforeUpload","maxSize","limit","fileSize","supportedFormats","hoverable","SHOGunApplicationUtil","parseTileLayer","search","URLSearchParams","useQueryParams","configString","addLayerGroup","parser","parseLayer","isExternalLayer","isUploadedLayer","groupName","App","useRestoreTransientLayers","loadingMask","add","createSlice","initialState","authorities","commitHash","userId","reducers","setAppInfo","payload","actions","setDescription","setLegal","setLogoPath","setSearchEngines","setTitle","setUser","createReducer","asyncReducers","combineReducers","store","configureStore","reducer","LoadingErrorCode","SHOGunAPIClient","getConfigLang","enGB","deDE","setupSHOGunMap","view","parseMapView","application","constrainOnlyCenter","ll","fromLonLat","ur","setConstrainResolution","parseLayerTree","OlMap","controls","OlControlDefaults","zoom","setupDefaultMap","osmLayer","OlSourceOsm","temperatureLayer","eoLayerGroup","backgroundLayerGroup","center","OlView","loadPluginModules","moduleName","moduleUrl","remoteNames","__webpack_init_sharing__","resolve","element","parentElement","onerror","err","head","container","__webpack_share_scopes__","modules","remoteName","module","matchRole","loader","paths","vs","keycloakEnabled","keycloakOnLoad","onLoadAction","keycloakHost","host","keycloakRealm","realm","keycloakClientId","Keycloak","onTokenExpired","updateToken","onLoad","checkLoginIframe","initKeycloak","setKeycloak","applicationId","APP_ID_NOT_SET","appConfig","getApplicationConfiguration","APP_CONFIG_NOT_FOUND","defaultLanguage","use","LanguageDetector","initOpts","theme","primaryColor","secondaryColor","complementaryColor","parseTheme","ConfigProvider","Color","isLight","darken","hexa","setProperty","subscribe","getState","toolConfig","engines","setAvailableTools","setApplicationToStore","getAppInfo","getApplicationInfo","setAppInfoToStore","setUserToStore","getUser","userRoles","realm_access","checkRoles","list","featureEditRoles","authorizedRolesForCreate","authorizedRolesForUpdate","authorizedRolesForDelete","authorizedRolesForEditingGeometries","setUserEditMode","setupMap","clientPlugins","resourcePath","exposedPaths","clientPluginModules","clientPluginDefault","PluginComponent","locale","lng","resources","translation","addResourceBundle","replaceReducer","loadPlugins","duration","fallback","SHOGunAPIClientProvider","PluginProvider","Provider","MapContext","getElementById","isInitialized","errorDescription","appId","renderApp","de","clientVersionTitle","backendVersionTitle","addSelectedLayers","addAllLayers","inputPlaceholder","externalWmsFolder","columnTitle","processedLayersFolder","twitterTooltip","whatsAppTooltip","mailTooltip","copyTooltip","copiedToClipboard","copyToClipboardFailed","line","area","clicktodrawline","clicktodrawarea","point","polygon","circle","rectangle","modify","delete","export","pickColor","usageHint","transparency","noLegendAvailable","layerZoomToExtent","extentError","showLegend","hideLegend","layerDetails","internalConfigurationButtonTooltip","internalConfigurationButtonTooltipPressed","noDataPlaceholder","layerNameLabel","layerTitleLabel","serviceAbstractLabel","abstractLabel","accessConstraintsLabel","capabilitiesUrlLabel","contactLabel","minScaleLabel","maxScaleLabel","bboxLabel","expand","collapse","measure","draw","featureInfo","addWms","layertree","languageSelect","initialTitle","titlePlaceholder","comment","commentPlaceholder","dpi","downloadBtnText","printJobErrorMsg","initErrorMsg","outputFormatPlaceholder","resolutionPlaceholder","managerErrorMessage","refSystem","mousePosition","privacypolicy","Index","applicationLoadErrorMessage","applicationLoadErrorDescription","errorDescriptionAppIdNotSet","errorDescriptionAppConfigNotFound","Nominatim","settingsMenuTitle","infoMenuTitle","logoutMenuTitle","loginMenuTitle","uploadedDataFolder","hint","success","general","zipContent","searchInViewBox","nominatimTitle","searchPlaceholder","featureEditor","noLayerFoundError","isFeatureLockedErrorMsg","closeDrawerWarnTitle","closeDrawerWarnContent","limitedUsageHint","createFeature","saveErrorMsg","deleteErrorMsg","edit","undo","redo","EditFeatureButton","FeaturePropertyGrid","copyAsGeoJson","copyAsObject","buttonTitle","en","fallbackLng","debug","interpolation","escapeValue","returnNull","initReactI18next","addLayerModalSlice","show","editFeatureSlice","editFeatureDrawerOpenSlice","layerDetailsModalSlice","printSlice","printLegend","addCustomMapParam","uploadDataModalSlice","___CSS_LOADER_EXPORT___"],"sourceRoot":""}