{"version":3,"file":"1054.e499984190733f57.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/format/XML.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/format/xlink.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/format/OWS.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/format/WMTSCapabilities.js"],"sourcesContent":["/**\n * @module ol/format/XML\n */\nimport {abstract} from '../util.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object|null} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object|null} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    abstract();\n  }\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|null} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/OWS\n */\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport XML from './XML.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   * @override\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {readHref} from './xlink.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   * @override\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      [],\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBoxWithCrs),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBoxWithCrs(node, objectStack) {\n  const crs = node.getAttribute('crs');\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return {extent: boundingExtent(coordinates), crs: crs};\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n"],"names":["i","Node","isNaN"],"mappings":"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"}