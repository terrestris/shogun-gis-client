"use strict";(self.webpackChunk_terrestris_shogun_gis_client=self.webpackChunk_terrestris_shogun_gis_client||[]).push([["4609"],{742:function(t,i,e){e.d(i,{Z:function(){return r}});function n(t,i,e){let n=t[i];t[i]=t[e],t[e]=n}function h(t,i){return t<i?-1:t>i?1:0}class r{constructor(t=9){this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()}all(){return this._all(this.data,[])}search(t){let i=this.data,e=[];if(!x(t,i))return e;let n=this.toBBox,h=[];for(;i;){for(let r=0;r<i.children.length;r++){let l=i.children[r],a=i.leaf?n(l):l;x(t,a)&&(i.leaf?e.push(l):f(t,a)?this._all(l,e):h.push(l))}i=h.pop()}return e}collides(t){let i=this.data;if(!x(t,i))return!1;let e=[];for(;i;){for(let n=0;n<i.children.length;n++){let h=i.children[n],r=i.leaf?this.toBBox(h):h;if(x(t,r)){if(i.leaf||f(t,r))return!0;e.push(h)}}i=e.pop()}return!1}load(t){if(!(t&&t.length))return this;if(t.length<this._minEntries){for(let i=0;i<t.length;i++)this.insert(t[i]);return this}let i=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length){if(this.data.height===i.height)this._splitRoot(this.data,i);else{if(this.data.height<i.height){let t=this.data;this.data=i,i=t}this._insert(i,this.data.height-i.height-1,!0)}}else this.data=i;return this}insert(t){return t&&this._insert(t,this.data.height-1),this}clear(){return this.data=d([]),this}remove(t,i){let e,n,h;if(!t)return this;let r=this.data,l=this.toBBox(t),a=[],s=[];for(;r||a.length;){if(!r&&(r=a.pop(),n=a[a.length-1],e=s.pop(),h=!0),r.leaf){let e=function(t,i,e){if(!e)return i.indexOf(t);for(let n=0;n<i.length;n++)if(e(t,i[n]))return n;return -1}(t,r.children,i);if(-1!==e){r.children.splice(e,1),a.push(r),this._condense(a);break}}!h&&!r.leaf&&f(r,l)?(a.push(r),s.push(e),e=0,n=r,r=r.children[0]):n?(e++,r=n.children[e],h=!1):r=null}return this}toBBox(t){return t}compareMinX(t,i){return t.minX-i.minX}compareMinY(t,i){return t.minY-i.minY}toJSON(){return this.data}fromJSON(t){return this.data=t,this}_all(t,i){let e=[];for(;t;)t.leaf?i.push(...t.children):e.push(...t.children),t=e.pop();return i}_build(t,i,e,n){let h;let r=e-i+1,a=this._maxEntries;if(r<=a)return l(h=d(t.slice(i,e+1)),this.toBBox),h;!n&&(n=Math.ceil(Math.log(r)/Math.log(a)),a=Math.ceil(r/Math.pow(a,n-1))),(h=d([])).leaf=!1,h.height=n;let s=Math.ceil(r/a),o=s*Math.ceil(Math.sqrt(a));p(t,i,e,o,this.compareMinX);for(let r=i;r<=e;r+=o){let i=Math.min(r+o-1,e);p(t,r,i,s,this.compareMinY);for(let e=r;e<=i;e+=s){let r=Math.min(e+s-1,i);h.children.push(this._build(t,e,r,n-1))}}return l(h,this.toBBox),h}_chooseSubtree(t,i,e,n){for(;;){let h;if(n.push(i),i.leaf||n.length-1===e)break;let r=1/0,l=1/0;for(let e=0;e<i.children.length;e++){let n=i.children[e],a=u(n),s=function(t,i){return(Math.max(i.maxX,t.maxX)-Math.min(i.minX,t.minX))*(Math.max(i.maxY,t.maxY)-Math.min(i.minY,t.minY))}(t,n)-a;s<l?(l=s,r=a<r?a:r,h=n):s===l&&a<r&&(r=a,h=n)}i=h||i.children[0]}return i}_insert(t,i,e){let n=e?t:this.toBBox(t),h=[],r=this._chooseSubtree(n,this.data,i,h);for(r.children.push(t),s(r,n);i>=0;)if(h[i].children.length>this._maxEntries)this._split(h,i),i--;else break;this._adjustParentBBoxes(n,h,i)}_split(t,i){let e=t[i],n=e.children.length,h=this._minEntries;this._chooseSplitAxis(e,h,n);let r=this._chooseSplitIndex(e,h,n),a=d(e.children.splice(r,e.children.length-r));a.height=e.height,a.leaf=e.leaf,l(e,this.toBBox),l(a,this.toBBox),i?t[i-1].children.push(a):this._splitRoot(e,a)}_splitRoot(t,i){this.data=d([t,i]),this.data.height=t.height+1,this.data.leaf=!1,l(this.data,this.toBBox)}_chooseSplitIndex(t,i,e){let n;let h=1/0,r=1/0;for(let l=i;l<=e-i;l++){let i=a(t,0,l,this.toBBox),s=a(t,l,e,this.toBBox),o=function(t,i){let e=Math.max(t.minX,i.minX),n=Math.max(t.minY,i.minY),h=Math.min(t.maxX,i.maxX);return Math.max(0,h-e)*Math.max(0,Math.min(t.maxY,i.maxY)-n)}(i,s),m=u(i)+u(s);o<h?(h=o,n=l,r=m<r?m:r):o===h&&m<r&&(r=m,n=l)}return n||e-i}_chooseSplitAxis(t,i,e){let n=t.leaf?this.compareMinX:o,h=t.leaf?this.compareMinY:m,r=this._allDistMargin(t,i,e,n);r<this._allDistMargin(t,i,e,h)&&t.children.sort(n)}_allDistMargin(t,i,e,n){t.children.sort(n);let h=this.toBBox,r=a(t,0,i,h),l=a(t,e-i,e,h),o=c(r)+c(l);for(let n=i;n<e-i;n++){let i=t.children[n];s(r,t.leaf?h(i):i),o+=c(r)}for(let n=e-i-1;n>=i;n--){let i=t.children[n];s(l,t.leaf?h(i):i),o+=c(l)}return o}_adjustParentBBoxes(t,i,e){for(let n=e;n>=0;n--)s(i[n],t)}_condense(t){for(let i=t.length-1,e;i>=0;i--)0===t[i].children.length?i>0?(e=t[i-1].children).splice(e.indexOf(t[i]),1):this.clear():l(t[i],this.toBBox)}}function l(t,i){a(t,0,t.children.length,i,t)}function a(t,i,e,n,h){!h&&(h=d(null)),h.minX=1/0,h.minY=1/0,h.maxX=-1/0,h.maxY=-1/0;for(let r=i;r<e;r++){let i=t.children[r];s(h,t.leaf?n(i):i)}return h}function s(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function o(t,i){return t.minX-i.minX}function m(t,i){return t.minY-i.minY}function u(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function c(t){return t.maxX-t.minX+(t.maxY-t.minY)}function f(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function x(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function d(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function p(t,i,e,r,l){let a=[i,e];for(;a.length;){if(e=a.pop(),e-(i=a.pop())<=r)continue;let s=i+Math.ceil((e-i)/r/2)*r;!function t(i,e,r=0,l=i.length-1,a=h){for(;l>r;){if(l-r>600){let n=l-r+1,h=e-r+1,s=Math.log(n),o=.5*Math.exp(2*s/3),m=.5*Math.sqrt(s*o*(n-o)/n)*(h-n/2<0?-1:1),u=Math.max(r,Math.floor(e-h*o/n+m)),c=Math.min(l,Math.floor(e+(n-h)*o/n+m));t(i,e,u,c,a)}let h=i[e],s=r,o=l;for(n(i,r,e),a(i[l],h)>0&&n(i,r,l);s<o;){for(n(i,s,o),s++,o--;0>a(i[s],h);)s++;for(;a(i[o],h)>0;)o--}0===a(i[r],h)?n(i,r,o):n(i,++o,l),o<=e&&(r=o+1),e<=o&&(l=o-1)}}(t,s,i,e,l),a.push(i,s,s,e)}}}}]);
//# sourceMappingURL=4609.bf84e3cdcd8d4223.js.map