{"version":3,"file":"3823.7e91ca18226f635b.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/Collection.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/CollectionEventType.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/Feature.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/MapBrowserEventType.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/events/condition.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/geom/flat/length.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/interaction/Interaction.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/interaction/Property.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/interaction/Select.js"],"sourcesContent":["/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent instanceof PointerEvent &&\n    originalEvent.button == 0 &&\n    !(WEBKIT && MAC && originalEvent.ctrlKey)\n  );\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    pointerEvent instanceof PointerEvent && pointerEvent.pointerType == 'mouse'\n  );\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    pointerEvt instanceof PointerEvent && pointerEvt.pointerType === 'touch'\n  );\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt instanceof PointerEvent && pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  return (\n    pointerEvent instanceof PointerEvent &&\n    pointerEvent.isPrimary &&\n    pointerEvent.button === 0\n  );\n};\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport Event from '../events/Event.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {getUid} from '../util.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes a {@link module:ol/Feature~Feature} and a\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent,\n        ),\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n"],"names":["i","Error","e","Array","arguments","a","t","ShadowRoot","PointerEvent","p","Math","c"],"mappings":"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"}