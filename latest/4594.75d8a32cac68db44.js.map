{"version":3,"file":"4594.75d8a32cac68db44.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/MapBrowserEventType.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/Object.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/ObjectEventType.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/Observable.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/events.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/interaction/DblClickDragZoom.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/interaction/Interaction.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/interaction/Property.js"],"sourcesContent":["/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/interaction/DblClickDragZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds. *\n * @property {number} [delta=1] The zoom delta applied on move of one pixel. *\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by double tap/click then drag up/down\n * with one finger/left mouse.\n * @api\n */\nclass DblClickDragZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleDeltaByPixel_ = options.delta ? options.delta : 0.01;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDownUpSequence_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDoubleDownSequence_ = false;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.doubleTapTimeoutId_ = undefined;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent  map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence_) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence_ = handledUp;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        if (this.handlingDoubleDownSequence_) {\n          this.handlingDoubleDownSequence_ = false;\n          const handled = this.handleDownEvent(mapBrowserEvent);\n          this.handlingDownUpSequence_ = handled;\n          stopEvent = this.stopDown(handled);\n        } else {\n          stopEvent = this.stopDown(false);\n          this.waitForDblTap_();\n        }\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.down_.originalEvent;\n    const distance = touch0.clientY - touch1.clientY;\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta =\n        1 - (this.lastDistance_ - distance) * this.scaleDeltaByPixel_;\n    }\n    this.lastDistance_ = distance;\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale, bypass the resolution constraint\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    map.render();\n    view.adjustResolutionInternal(scaleDelta);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 1) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      this.down_ = mapBrowserEvent;\n      if (!this.handlingDownUpSequence_) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events zooming out.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 0) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      this.handlingDownUpSequence_ = false;\n      this.handlingDoubleDownSequence_ = false;\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = Object.values(this.trackedPointers_);\n    }\n  }\n\n  /**\n   * Wait the second double finger tap.\n   * @private\n   */\n  waitForDblTap_() {\n    if (this.doubleTapTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.doubleTapTimeoutId_);\n      this.doubleTapTimeoutId_ = undefined;\n    } else {\n      this.handlingDoubleDownSequence_ = true;\n      this.doubleTapTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        250,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.handlingDoubleDownSequence_ = false;\n    this.doubleTapTimeoutId_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default DblClickDragZoom;\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n"],"names":["ObjectEvent","type","key","oldValue","BaseObject","values","undefined","value","Object","eventType","listener","silent","source","Observable","Array","len","keys","i","unByKey","ii","listen","target","thisArg","once","originalListener","event","eventsKey","listenOnce","unlistenByKey","DblClickDragZoom","opt_options","options","mapBrowserEvent","stopEvent","handledUp","handled","scaleDelta","touch0","touch1","distance","map","view","direction","isPointerDraggingEvent","id","clearTimeout","setTimeout","Interaction","active","pan","delta","duration","currentCenter","center","zoomByDelta","anchor","currentZoom","newZoom","newResolution"],"mappings":"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"}