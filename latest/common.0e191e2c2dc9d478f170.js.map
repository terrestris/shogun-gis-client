{"version":3,"file":"common.0e191e2c2dc9d478f170.js","mappings":"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","sources":["webpack://@terrestris/shogun-gis-client/./src/hooks/useAppDispatch.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useAppSelector.ts","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.less?3a66","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/usePlugins.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useSHOGunAPIClient.ts","webpack://@terrestris/shogun-gis-client/./src/components/BasicMapComponent/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useQueryParams.ts","webpack://@terrestris/shogun-gis-client/./src/plugin/index.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteWfsTransaction.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteWfsDescribeFeatureType.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useWriteWfsTransaction.ts","webpack://@terrestris/shogun-gis-client/./src/components/MapDrawer/index.less?074d","webpack://@terrestris/shogun-gis-client/./src/components/MapDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteGetFeature.ts","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureGeometryToolbar/index.less?cbd2","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureGeometryToolbar/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/DisplayField/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureForm/index.less?0b49","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureTabs/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/DeleteButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/ResetButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/SaveButton/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureToolbar/index.less?6e4b","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureToolbar/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureFullForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useExecuteWfsTransactionLock.ts","webpack://@terrestris/shogun-gis-client/./src/hooks/useGetFeatureInfo.ts","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureSwitch/index.less?2952","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureSwitch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/index.less?c362","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.less?bf45","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/BasicNominatimSearch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/MultiSearch/index.less?3fe9","webpack://@terrestris/shogun-gis-client/./src/utils/generateSolrQuery.ts","webpack://@terrestris/shogun-gis-client/./src/components/MultiSearch/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/SearchField/index.less?bf24","webpack://@terrestris/shogun-gis-client/./src/components/SearchField/index.tsx","webpack://@terrestris/shogun-gis-client/./src/utils/getGravatarUrl.ts","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.less?5255","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.tsx","webpack://@terrestris/shogun-gis-client/./src/hooks/useVersion.ts","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.less?f429","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.less?b06e","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerConfiguration/index.less?9f82","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerConfiguration/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerDetails/index.less?4108","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerDetails/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/index.less?b9d0","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.less?da3b","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.less?76ea","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Serializer/SHOGunMapFishPrintV3WMSSerializer.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Serializer/SHOGunMapFishPrintV3TiledWMSSerializer.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/CustomFieldInput/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/LayoutSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/OutputFormatSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/ResolutionSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/ScaleSelect/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/Shared/Shared.ts","webpack://@terrestris/shogun-gis-client/./src/components/PrintForm/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.less?6377","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/index.less?723a","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/StylingComponent/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?a4df","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.less?7905","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.less?47fb","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/LayerTreeContextMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.less?c926","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.less?beca","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.less?b016","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.tsx","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.less?e08e","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.tsx","webpack://@terrestris/shogun-gis-client/./src/App.less?984e","webpack://@terrestris/shogun-gis-client/./src/App.tsx","webpack://@terrestris/shogun-gis-client/./src/store/appInfo/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/description/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/legal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/logoPath/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/searchEngines/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/title/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/user/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/store.ts","webpack://@terrestris/shogun-gis-client/./src/index.less?df1e","webpack://@terrestris/shogun-gis-client/./src/bootstrap.tsx","webpack://@terrestris/shogun-gis-client/./src/context/PluginContext.tsx","webpack://@terrestris/shogun-gis-client/./src/context/SHOGunAPIClientContext.tsx","webpack://@terrestris/shogun-gis-client/./src/i18n/index.ts","webpack://@terrestris/shogun-gis-client/./src/i18n/translations.ts","webpack://@terrestris/shogun-gis-client/./src/index.tsx","webpack://@terrestris/shogun-gis-client/./src/store/addLayerModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/editFeature/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/editFeatureDrawerOpen/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/layerDetailsModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/print/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/selectedFeatures/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/toolMenu/index.ts","webpack://@terrestris/shogun-gis-client/./src/store/uploadDataModal/index.ts","webpack://@terrestris/shogun-gis-client/./src/App.less?ee38","webpack://@terrestris/shogun-gis-client/./src/components/AddLayerModal/index.less?6017","webpack://@terrestris/shogun-gis-client/./src/components/ApplicationInfo/index.less?f940","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureForm/index.less?a2dd","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureGeometryToolbar/index.less?141f","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureSwitch/index.less?c38e","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/EditFeatureToolbar/index.less?512e","webpack://@terrestris/shogun-gis-client/./src/components/EditFeatureDrawer/index.less?8ba3","webpack://@terrestris/shogun-gis-client/./src/components/Footer/index.less?a2b7","webpack://@terrestris/shogun-gis-client/./src/components/Header/index.less?b02d","webpack://@terrestris/shogun-gis-client/./src/components/LanguageSelector/index.less?bd2b","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerConfiguration/index.less?2da8","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/LayerDetails/index.less?acf5","webpack://@terrestris/shogun-gis-client/./src/components/LayerDetailsModal/index.less?a101","webpack://@terrestris/shogun-gis-client/./src/components/MapDrawer/index.less?bfb2","webpack://@terrestris/shogun-gis-client/./src/components/MultiSearch/index.less?ea03","webpack://@terrestris/shogun-gis-client/./src/components/Permalink/index.less?68c2","webpack://@terrestris/shogun-gis-client/./src/components/SearchField/index.less?8fd0","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/StylingDrawer/index.less?d252","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Draw/index.less?6534","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/FeaturePropertyGrid/index.less?27cc","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/FeatureInfo/index.less","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/LayerTree/index.less?d8e5","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/Measure/index.less?b29b","webpack://@terrestris/shogun-gis-client/./src/components/ToolMenu/index.less?949c","webpack://@terrestris/shogun-gis-client/./src/components/UploadDataModal/index.less?cb8c","webpack://@terrestris/shogun-gis-client/./src/components/UserMenu/index.less?a168","webpack://@terrestris/shogun-gis-client/./src/components/WmsTimeSlider/index.less?25f0","webpack://@terrestris/shogun-gis-client/./src/index.less?2fc8"],"sourcesContent":["import {\n  useDispatch\n} from 'react-redux';\n\nimport type {\n  AppDispatch\n} from '../store/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport default useAppDispatch;\n","import {\n  TypedUseSelectorHook,\n  useSelector\n} from 'react-redux';\n\nimport type {\n  RootState\n} from '../store/store';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport default useAppSelector;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport {\n  Button,\n  Input,\n  Modal,\n  ModalProps,\n  notification,\n  Select,\n  Table\n} from 'antd';\n\nimport {\n  getUid\n} from 'ol';\nimport OlLayerGroup from 'ol/layer/Group';\nimport ImageLayer from 'ol/layer/Image';\nimport TileLayer from 'ol/layer/Tile';\nimport ImageWMSSource from 'ol/source/ImageWMS';\nimport TileWMSSource from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\nimport CapabilitiesUtil from '@terrestris/ol-util/dist/CapabilitiesUtil/CapabilitiesUtil';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport {\n  hide\n} from '../../store/addLayerModal';\n\nimport './index.less';\n\nexport type AddLayerModalProps = {} & Partial<ModalProps>;\n\nexport const AddLayerModal: React.FC<AddLayerModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState(false);\n  const [layers, setLayers] = useState<(ImageLayer<ImageWMSSource> | TileLayer<TileWMSSource>)[]>([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState<React.Key[]>([]);\n  const [url, setUrl] = useState(\n    'https://sgx.geodatenzentrum.de/wms_topplus_open'\n  );\n  const [sanitizedUrl, setSanitizedUrl] = useState<string>();\n  const [version, setVersion] = useState<string>('1.3.0');\n\n  const isModalVisible = useAppSelector(state => state.addLayerModal.visible);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    if (!isModalVisible) {\n      return;\n    }\n    setSanitizedUrl(UrlUtil.createValidGetCapabilitiesRequest(url, 'WMS', version));\n  }, [version, isModalVisible, url]);\n\n  const getCapabilities = async () => {\n    if (!sanitizedUrl) {\n      return;\n    }\n    try {\n      setLoading(true);\n\n      const capabilities = await CapabilitiesUtil.getWmsCapabilities(sanitizedUrl);\n      const externalLayers = CapabilitiesUtil.getLayersFromWmsCapabilities(capabilities, 'Title');\n\n      setLayers(externalLayers);\n    } catch (error) {\n      notification.error({\n        message: t('AddLayerModal.errorMessage'),\n        description: t('AddLayerModal.errorDescription')\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const closeModal = () => {\n    setSelectedRowKeys([]);\n    setLayers([]);\n    dispatch(hide());\n  };\n\n  const onAddSelected = () => {\n    const layersToAdd = layers.filter(layer => selectedRowKeys.includes(getUid(layer)));\n    addLayers(layersToAdd);\n  };\n\n  const onAddAll = () => {\n    addLayers(layers);\n  };\n\n  const addLayers = (layersToAdd: (ImageLayer<ImageWMSSource> | TileLayer<TileWMSSource>)[]) => {\n    if (!map) {\n      return;\n    }\n\n    const targetFolderName = t('AddLayerModal.externalWmsFolder');\n    let targetGroup = MapUtil.getLayerByName(map, targetFolderName) as OlLayerGroup;\n\n    if (!targetGroup) {\n      targetGroup = new OlLayerGroup({\n        layers: []\n      });\n      targetGroup.set('name', targetFolderName);\n      const existingGroups = map.getLayerGroup().getLayers();\n      existingGroups.insertAt(existingGroups?.getLength() || 0, targetGroup);\n    }\n\n    layersToAdd.forEach(layerToAdd => {\n      if (!targetGroup.getLayers().getArray().includes(layerToAdd)) {\n        layerToAdd.set('isExternalLayer', true);\n\n        let layerUrl: string | undefined;\n        if (layerToAdd instanceof ImageLayer) {\n          layerUrl = layerToAdd.getSource()?.getUrl();\n        }\n\n        if (layerToAdd instanceof TileLayer) {\n          const urls = layerToAdd.getSource()?.getUrls();\n          layerUrl = urls?.length === 1 ? urls[0] : undefined;\n        }\n\n        const layerConfig = {\n          name: layerToAdd.get('name'),\n          type: layerToAdd instanceof TileLayer ? 'TILEWMS' : 'WMS',\n          opacity: layerToAdd.getOpacity(),\n          sourceConfig: {\n            layerNames: layerToAdd.getSource()?.getParams().LAYERS,\n            url: layerUrl,\n            useBearerToken: false\n          }\n        };\n        layerToAdd.set('layerConfig', layerConfig);\n        targetGroup.getLayers().push(layerToAdd);\n      }\n    });\n\n    closeModal();\n  };\n\n  return (\n    <Modal\n      className=\"add-layer-modal\"\n      title={t('AddLayerModal.title')}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={600}\n      footer={[\n        <Button\n          key=\"add-all\"\n          disabled={layers?.length < 1}\n          onClick={onAddAll}\n        >\n          {t('AddLayerModal.addAllLayers')}\n        </Button>,\n        <Button\n          key=\"add-selected\"\n          disabled={selectedRowKeys?.length < 1}\n          onClick={onAddSelected}\n        >\n          {t('AddLayerModal.addSelectedLayers')}\n        </Button>\n      ]}\n      {...restProps}\n    >\n      <Input.Search\n        placeholder={t('AddLayerModal.inputPlaceholder')}\n        value={url}\n        onChange={(event) => {\n          setUrl(event.target.value);\n        }}\n        onSearch={getCapabilities}\n        enterButton={true}\n        addonBefore={\n          <Select\n            defaultValue='1.3.0'\n            onChange={setVersion}\n            options={[\n              {\n                value: '1.3.0',\n                label: `${t('AddLayerModal.version')} 1.3.0`\n              },\n              {\n                value: '1.1.1',\n                label: `${t('AddLayerModal.version')} 1.1.1`\n              }\n            ]}\n          >\n          </Select>\n        }\n      />\n      <Table\n        loading={loading}\n        columns={[\n          {\n            title: t('AddLayerModal.columnTitle'),\n            render: (text: any, record: any) => {\n              return record.get('title');\n            }\n          }\n        ]}\n        rowKey={(record: any) => getUid(record)}\n        rowSelection={{\n          selectedRowKeys,\n          onChange: setSelectedRowKeys\n        }}\n        pagination={false}\n        dataSource={layers}\n      />\n    </Modal>\n  );\n};\n\nexport default AddLayerModal;\n","import { useContext } from 'react';\n\nimport PluginContext from '../context/PluginContext';\n\nimport { ClientPluginInternal } from '../plugin';\n\nexport const usePlugins = (): ClientPluginInternal[] => {\n  return useContext(PluginContext);\n};\n\nexport default usePlugins;\n","import { useContext } from 'react';\n\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nimport SHOGunAPIClientContext from '../context/SHOGunAPIClientContext';\n\nexport const useSHOGunAPIClient = (): SHOGunAPIClient | null => {\n  return useContext(SHOGunAPIClientContext);\n};\n\nexport default useSHOGunAPIClient;\n","import React, {\n  useEffect,\n  useCallback\n} from 'react';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport BaseLayer from 'ol/layer/Base';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport PermalinkUtil from '@terrestris/ol-util/dist/PermalinkUtil/PermalinkUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport MapComponent, {\n  MapComponentProps\n} from '@terrestris/react-geo/dist/Map/MapComponent/MapComponent';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\n\nimport usePlugins from '../../hooks/usePlugins';\nimport useQueryParams from '../../hooks/useQueryParams';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport {\n  isMapIntegration\n} from '../../plugin';\n\nexport const BasicMapComponent: React.FC<Partial<MapComponentProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const queryParams = useQueryParams();\n  const plugins = usePlugins();\n\n  const center = queryParams.get('center');\n  const zoom = queryParams.get('zoom');\n  const layers = queryParams.get('layers');\n  const customLayerAttributes = queryParams.get('customLayerAttributes');\n\n  const {\n    t\n  } = useTranslation();\n\n  const restoreTransientLayers = useCallback(async (configString: string, permaLinkLayers?: string | null) => {\n    if (!map) {\n      return;\n    }\n\n    const addLayerGroup = (name: string) => {\n      const layerGroup = new OlLayerGroup({\n        layers: []\n      });\n      layerGroup.set('name', name);\n      const existingGroups = map.getLayerGroup().getLayers();\n      existingGroups.insertAt(existingGroups?.getLength() || 0, layerGroup);\n\n      return layerGroup;\n    };\n\n    try {\n      const config = JSON.parse(configString);\n\n      if (!client) {\n        throw new Error('Client is not available');\n      }\n\n      const parser = new SHOGunApplicationUtil({\n        client\n      });\n\n      for (let i = 0; i < config.length; i++) {\n        const cfg = config[i];\n        if (!_isEmpty(cfg?.layerConfig)) {\n          const layerConfig: Layer = cfg.layerConfig;\n          const olLayer = await parser.parseLayer(layerConfig);\n\n          if (!olLayer) {\n            continue;\n          }\n\n          if (cfg.isExternalLayer) {\n            olLayer.set('isExternalLayer', cfg.isExternalLayer);\n          }\n\n          if (cfg.isUploadedLayer) {\n            olLayer.set('isUploadedLayer', cfg.isUploadedLayer);\n          }\n\n          olLayer.set('groupName', cfg.groupName);\n          olLayer.set('layerConfig', cfg.layerConfig);\n\n          olLayer.setVisible(!!permaLinkLayers?.split(';').some(l => l === layerConfig.name));\n\n          if (!(olLayer.get('isExternalLayer') || olLayer.get('isUploadedLayer'))) {\n            continue;\n          }\n\n          let targetGroup: OlLayerGroup;\n\n          if (olLayer.get('groupName')) {\n            targetGroup = MapUtil.getLayerByName(map, olLayer.get('groupName')) as OlLayerGroup;\n\n            if (!targetGroup) {\n              targetGroup = addLayerGroup(olLayer.get('groupName'));\n            }\n          } else {\n            targetGroup = MapUtil.getLayerByName(map,\n              t('AddLayerModal.externalWmsFolder')) as OlLayerGroup;\n\n            if (!targetGroup) {\n              targetGroup = addLayerGroup(t('AddLayerModal.externalWmsFolder'));\n            }\n          }\n\n          targetGroup.getLayers().push(olLayer);\n        }\n      }\n    } catch (error) {\n      Logger.error(error);\n    }\n  }, [client, map, t]);\n\n  useEffect(() => {\n    if (map) {\n      const identifier = (l: BaseLayer) => l.get('name');\n      const filter = (l: BaseLayer) => (l instanceof OlLayerTile || l instanceof OlLayerImage);\n      const configString = PermalinkUtil.applyLink(map, ';', identifier, filter);\n\n      if (!configString) {\n        return;\n      }\n\n      restoreTransientLayers(configString, layers);\n    }\n  }, [\n    map,\n    restoreTransientLayers,\n    center,\n    zoom,\n    layers,\n    customLayerAttributes\n  ]);\n\n  const pluginComponents: JSX.Element[] = [];\n\n  if (plugins) {\n    plugins.forEach(plugin => {\n      if (isMapIntegration(plugin.integration)) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        pluginComponents.push(\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  }\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <MapComponent\n      map={map}\n      {...restProps}\n    >\n      {\n        pluginComponents\n      }\n    </MapComponent>\n  );\n};\n\nexport default BasicMapComponent;\n","import React from 'react';\n\nexport default function useQueryParams() {\n  const {\n    search\n  } = window.location;\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import type {\n  IconDefinition\n} from '@fortawesome/fontawesome-common-types';\n\nimport type {\n  Reducer\n} from '@reduxjs/toolkit';\n\nimport { CollapsePanelProps } from 'antd';\nimport type OlMap from 'ol/Map';\n\nimport type SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nexport type ClientPluginLocale = {\n  [locale: string]: {\n    translation: {\n      [key: string]: any;\n    };\n  };\n};\n\nexport type ClientPluginComponentProps = {\n  map?: OlMap;\n  client?: SHOGunAPIClient;\n};\n\nexport type ClientPluginIntegration = {\n  /**\n   * The main identifier of the integration point of the plugin.\n   */\n  placement: string;\n};\n\nexport type ClientPluginIntegrationToolMenu = ClientPluginIntegration &\n  Omit<CollapsePanelProps, 'key' | 'header'> & {\n  placement: 'tool-menu';\n  /**\n   * The label for the plugin in the tool menu.\n   */\n  label?: string;\n  /**\n   * The insertion index for the plugin in the tool menu, starting from 0 which is on top.\n   */\n  insertionIndex?: number;\n  /**\n   * The icon for the plugin in the tool menu.\n   */\n  icon?: IconDefinition;\n};\n\nexport type HeaderPlacementOrientation = 'left' | 'center' | 'right';\n\nexport type ClientPluginIntegrationHeader = ClientPluginIntegration & {\n  placement: 'header';\n  /**\n   * The placement orientation for the plugin in the header.\n   */\n  placementOrientation: HeaderPlacementOrientation;\n  /**\n   * The insertion index for the plugin in the header, starting from 0 which is on the left.\n   */\n  insertionIndex?: number;\n};\n\nexport type ClientPluginIntegrationFeatureInfo = ClientPluginIntegration & {\n  placement: 'feature-info';\n  /**\n   * The list of layer names the plugin component should be rendered for. If not\n   * specified, the component will be rendered for all layers.\n   */\n  layers?: string[];\n};\n\nexport type ClientPluginIntegrationMap = ClientPluginIntegration & {\n  placement: 'map';\n};\n\nexport type FooterPlacementOrientation = 'left' | 'right';\n\nexport type ClientPluginIntegrationFooter = ClientPluginIntegration & {\n  placement: 'footer';\n  /**\n  * The placement orientation for the plugin in the footer.\n  */\n  placementOrientation: FooterPlacementOrientation;\n  /**\n  * The insertion index for the plugin in the footer, starting from 0 which is on the left.\n  */\n  insertionIndex?: number;\n};\n\nexport type ClientPluginIntegrations = ClientPluginIntegrationToolMenu | ClientPluginIntegrationHeader |\n  ClientPluginIntegrationFeatureInfo | ClientPluginIntegrationMap | ClientPluginIntegrationFooter;\n\nexport type ClientPlugin = {\n  /**\n   * The key of the plugin, usually used for internal references (e.g. element class names) only.\n   */\n  key: string;\n  /**\n   * The definition of the integration point.\n   */\n  integration: ClientPluginIntegrations;\n  /**\n   * The actual component of the plugin.\n   */\n  component: React.FunctionComponent<ClientPluginComponentProps>;\n  /**\n   * The i18n definition to be used in the plugin.\n   */\n  i18n?: ClientPluginLocale;\n  /**\n   * A set of redux reducers to be used in the plugin.\n   */\n  reducers?: {\n    [key: string]: Reducer;\n  };\n};\n\nexport type ClientPluginInternal = ClientPlugin & {\n  wrappedComponent: React.FunctionComponent<ClientPluginComponentProps>;\n};\n\nexport function isToolMenuIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationToolMenu {\n  return pluginIntegration && pluginIntegration.placement === 'tool-menu';\n}\n\nexport function isHeaderIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationHeader {\n  return pluginIntegration && pluginIntegration.placement === 'header';\n}\n\nexport function isFeatureInfoIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationFeatureInfo {\n  return pluginIntegration && pluginIntegration.placement === 'feature-info';\n}\n\nexport function isMapIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationMap {\n  return pluginIntegration && pluginIntegration.placement === 'map';\n}\n\nexport function isFooterIntegration(pluginIntegration: ClientPluginIntegrations): pluginIntegration is ClientPluginIntegrationFooter {\n  return pluginIntegration && pluginIntegration.placement === 'footer';\n}\n","import {\n  useCallback\n} from 'react';\n\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type ExecuteWfsTransactionOpts = {\n  layer: WmsLayer;\n  transaction: Node;\n};\n\nexport const useExecuteWfsTransaction = () => {\n  const client = useSHOGunAPIClient();\n\n  const executeWfsTransaction = useCallback(async (opts: ExecuteWfsTransactionOpts) => {\n    let url;\n\n    const source = opts.layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = (source as OlSourceImageWMS).getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = (source as OlSourceTileWMS).getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const defaultHeaders = {\n      'Content-Type': 'application/xml'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: opts.layer?.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders,\n      body: new XMLSerializer().serializeToString(opts.transaction)\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response while executing a WFS-Transaction');\n    }\n\n    const responseText = await response.text();\n\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'text/xml');\n\n    // TODO Make detection more robust\n    const transactionStatusFailed = xmlDoc.getElementsByTagName('wfs:FAILED');\n\n    if (transactionStatusFailed.length > 0) {\n      throw new Error(`Something failed: ${responseText}`);\n    }\n\n    return responseText;\n  }, [client]);\n\n  return executeWfsTransaction;\n};\n\nexport default useExecuteWfsTransaction;\n","import {\n  useCallback\n} from 'react';\n\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type LocalGeometryType = 'MultiPoint' | 'Point' | 'MultiLineString' | 'LineString' | 'MultiPolygon' | 'Polygon';\nexport type GeometryType = 'gml:MultiPoint' | 'gml:Point' | 'gml:MultiLineString' | 'gml:LineString' | 'gml:MultiPolygon' | 'gml:Polygon';\n\nexport type Property = {\n  localType: 'int' | 'number' | 'string' | 'boolean' | 'date' | LocalGeometryType;\n  maxOccurs: 0 | 1;\n  minOccurs: 0 | 1;\n  name: string;\n  nillable: boolean;\n  type: 'xsd:int' | 'xsd:number' | 'xsd:string' | 'xsd:boolean' | 'xsd:date' | GeometryType;\n};\n\nexport type FeatureType = {\n  typeName: string;\n  properties: Property[];\n};\n\nexport type DescribeFeatureType = {\n  elementFormDefault: string;\n  featureTypes: FeatureType[];\n  targetNamespace: string;\n  targetPrefix: string;\n};\n\nexport const isGeometryType = (propertyType: string): propertyType is GeometryType => {\n  const geometryTypes = [\n    'gml:MultiPoint',\n    'gml:Point',\n    'gml:MultiLineString',\n    'gml:LineString',\n    'gml:MultiPolygon',\n    'gml:Polygon'\n  ];\n\n  return geometryTypes.includes(propertyType);\n};\n\nexport const useExecuteWfsDescribeFeatureType = () => {\n  const client = useSHOGunAPIClient();\n\n  const executeWfsDescribeFeatureType = useCallback(async (layer: WmsLayer) => {\n    let url;\n\n    const source = layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = (source as OlSourceImageWMS).getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = (source as OlSourceTileWMS).getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const params = {\n      SERVICE: 'WFS',\n      REQUEST: 'DescribeFeatureType',\n      VERSION: '2.0.0',\n      OUTPUTFORMAT: 'application/json',\n      TYPENAMES: layer.getSource()?.getParams().LAYERS\n    };\n\n    const defaultHeaders = {\n      'Content-Type': 'application/json'\n    };\n\n    const response = await fetch(`${url}?${UrlUtil.objectToRequestString(params)}`, {\n      method: 'GET',\n      headers: layer.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response while executing a WFS-Transaction');\n    }\n\n    return await response.json() as DescribeFeatureType;\n  }, [client]);\n\n  return executeWfsDescribeFeatureType;\n};\n\nexport default useExecuteWfsDescribeFeatureType;\n","import {\n  useCallback\n} from 'react';\n\nimport {\n  FormInstance\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport {\n  isMoment\n} from 'moment';\n\nimport {\n  isEmpty\n} from 'ol/extent';\nimport OlFeature from 'ol/Feature';\nimport OlFormatWFS, {\n  WriteTransactionOptions as OlWriteTransactionOptions\n} from 'ol/format/WFS';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useExecuteWfsDescribeFeatureType, {\n  isGeometryType\n} from './useExecuteWfsDescribeFeatureType';\n\nexport type WriteWfsTransactionOpts = {\n  layer: WmsLayer;\n  upsertFeatures?: OlFeature[];\n  deleteFeatures?: OlFeature[];\n  form?: FormInstance;\n};\n\nexport const useWriteWfsTransaction = () => {\n  const map = useMap();\n  const executeWfsDescribeFeatureType = useExecuteWfsDescribeFeatureType();\n\n  const cleanFormValues = (form: FormInstance) => {\n    const formValues = {...form.getFieldsValue()};\n\n    for (const [key, value] of Object.entries(formValues)) {\n      // Transform undefined to null values.\n      if (value === undefined) {\n        formValues[key] = null;\n      }\n\n      // Filter out read-only fields (which don't have any field instance associated).\n      if (!form.getFieldInstance(key)) {\n        delete formValues[key];\n      }\n\n      // Transform moments back to iso string.\n      if (isMoment(value)) {\n        formValues[key] = value.toISOString();\n      }\n    }\n\n    return formValues;\n  };\n\n  const writeWfsTransaction = useCallback(async (opts: WriteWfsTransactionOpts) => {\n    if (!map) {\n      return;\n    }\n\n    const inserts: OlFeature[] = [];\n    const updates: OlFeature[] = [];\n    const deletes: OlFeature[] = [];\n\n    const describeFeatureType = await executeWfsDescribeFeatureType(opts.layer);\n\n    if (!describeFeatureType) {\n      return;\n    }\n\n    const geomProperty = describeFeatureType.featureTypes[0]?.properties\n      ?.find(property => isGeometryType(property.type));\n\n    let overallUpdateMode = false;\n\n    if (opts.upsertFeatures) {\n      for (const feature of opts.upsertFeatures) {\n        const feat = new OlFeature();\n\n        const geometry = feature.getGeometry()?.clone();\n\n        if (geometry && !isEmpty(geometry.getExtent())) {\n          feat.set(geomProperty?.name || 'geom', geometry);\n          feat.setGeometryName(geomProperty?.name || 'geom');\n        }\n\n        if (opts.form) {\n          feat.setProperties(cleanFormValues(opts.form));\n        }\n\n        const updateMode = !!feature.getId();\n\n        if (updateMode && !overallUpdateMode) {\n          overallUpdateMode = true;\n        }\n\n        if (updateMode) {\n          feat.setId(feature.getId());\n        }\n\n        if (updateMode) {\n          updates.push(feat);\n        } else {\n          inserts.push(feat);\n        }\n      };\n    }\n\n    if (opts.deleteFeatures) {\n      deletes.push(...opts.deleteFeatures);\n    }\n\n    const transactionOpts: OlWriteTransactionOptions = {\n      featureNS: describeFeatureType.targetNamespace,\n      featurePrefix: describeFeatureType.targetPrefix,\n      featureType: opts.layer.getSource()?.getParams().LAYERS,\n      srsName: map.getView().getProjection().getCode(),\n      version: '1.1.0',\n      nativeElements: []\n    };\n\n    const format = new OlFormatWFS();\n\n    const transaction = format.writeTransaction(inserts, updates, deletes, transactionOpts);\n\n    if (overallUpdateMode && ClientConfiguration.wfsLockFeatureEnabled) {\n      const rootNode = transaction.getRootNode() as Element;\n      const lockId = document.createElementNS('http://www.opengis.net/wfs', 'LockId');\n      const lockIdValue = document.createTextNode('GeoServer');\n      lockId.appendChild(lockIdValue);\n      rootNode.appendChild(lockId);\n    }\n\n    return transaction;\n  }, [executeWfsDescribeFeatureType, map]);\n\n  return writeWfsTransaction;\n};\n\nexport default useWriteWfsTransaction;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport {\n  Drawer\n} from 'antd';\n\nimport type {\n  DrawerProps\n} from 'antd/es/drawer';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\nexport type MapDrawerProps = DrawerProps & {};\n\nexport const MapDrawer: React.FC<MapDrawerProps> = ({\n  open,\n  children,\n  ...passThroughProps\n}) => {\n\n  const map = useMap();\n\n  useEffect(() => {\n    document.querySelectorAll('#map')[0]?.classList.toggle('bisected', !!open);\n  }, [open]);\n\n  const onAfterDrawerOpenChange = () => {\n    map?.updateSize();\n  };\n\n  return (\n    <Drawer\n      className=\"map-drawer\"\n      mask={false}\n      open={open}\n      placement=\"right\"\n      width=\"25vw\"\n      afterOpenChange={onAfterDrawerOpenChange}\n      {...passThroughProps}\n    >\n      {children}\n    </Drawer>\n  );\n};\n\nexport default MapDrawer;\n","import {\n  useCallback\n} from 'react';\n\nimport {\n  FeatureCollection\n} from 'geojson';\n\nimport OlFormatFilter from 'ol/format/filter/Filter';\nimport OlFormatWFS from 'ol/format/WFS';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useExecuteWfsDescribeFeatureType from './useExecuteWfsDescribeFeatureType';\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type GetFeatureOpts = {\n  layer: WmsLayer;\n  filter?: OlFormatFilter;\n};\n\nexport const useExecuteGetFeature = () => {\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const executeWfsDescribeFeatureType = useExecuteWfsDescribeFeatureType();\n\n  const executeGetFeature = useCallback(async (opts: GetFeatureOpts) => {\n    if (!map) {\n      return;\n    }\n\n    const describeFeatureType = await executeWfsDescribeFeatureType(opts.layer);\n\n    if (!describeFeatureType) {\n      return;\n    }\n\n    let url;\n\n    const source = opts.layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = (source as OlSourceImageWMS).getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = (source as OlSourceTileWMS).getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const featureRequest = new OlFormatWFS().writeGetFeature({\n      srsName: map.getView().getProjection().getCode(),\n      featureNS: describeFeatureType.targetNamespace,\n      featurePrefix: describeFeatureType.targetPrefix,\n      featureTypes: [source?.getParams().LAYERS],\n      outputFormat: 'application/json',\n      filter: opts.filter\n    });\n\n    const defaultHeaders = {\n      'Content-Type': 'application/json'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: opts.layer?.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders,\n      body: new XMLSerializer().serializeToString(featureRequest)\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response');\n    }\n\n    return await response.json() as FeatureCollection;\n  }, [client, executeWfsDescribeFeatureType, map]);\n\n  return executeGetFeature;\n};\n\nexport default useExecuteGetFeature;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\n\nimport {\n  faPencil,\n  faTrash,\n  faDrawPolygon,\n  faUndo\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport { TooltipPlacement } from 'antd/es/tooltip';\nimport {\n  FeatureCollection,\n  Feature\n} from 'geojson';\nimport { t } from 'i18next';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport { isEmpty as isEmptyOlExtent } from 'ol/extent';\nimport OlFormatGeoJson from 'ol/format/GeoJSON';\nimport OlGeometry from 'ol/geom/Geometry';\nimport { DrawEvent as OlDrawEvent } from 'ol/interaction/Draw';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport DeleteButton from '@terrestris/react-geo/dist/Button/DeleteButton/DeleteButton';\nimport DrawButton from '@terrestris/react-geo/dist/Button/DrawButton/DrawButton';\nimport ModifyButton from '@terrestris/react-geo/dist/Button/ModifyButton/ModifyButton';\nimport SimpleButton from '@terrestris/react-geo/dist/Button/SimpleButton/SimpleButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport Toolbar, { ToolbarProps } from '@terrestris/react-geo/dist/Toolbar/Toolbar';\n\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport './index.less';\nimport useAppSelector from '../../../hooks/useAppSelector';\n\nexport type EditFeatureGeometryToolbarProps = ToolbarProps & {\n  feature: Feature;\n  historyLength?: number;\n};\n\ntype DrawType = 'Point' | 'LineString' | 'Polygon';\n\ntype EditHistory = {\n  past: FeatureCollection[];\n  future: FeatureCollection[];\n};\nexport const EditFeatureGeometryToolbar: React.FC<EditFeatureGeometryToolbarProps> = ({\n  feature,\n  historyLength = 10\n}) => {\n\n  const editHistory = useRef<EditHistory>({\n    past: [],\n    future: []\n  });\n\n  const map = useMap();\n\n  const [editLayer, setEditLayer] = useState<OlLayerVector<OlSourceVector<OlGeometry>>>();\n  const [, setRevision] = useState<number>(0);\n\n  const gjFormat = useMemo(() => new OlFormatGeoJson(), []);\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    if (!editLayer) {\n      setEditLayer(DigitizeUtil.getDigitizeLayer(map));\n    }\n\n    return () => {\n      if (editLayer) {\n        map?.removeLayer(editLayer);\n      }\n    };\n  }, [editLayer, map]);\n\n  useEffect(() => {\n\n    if (editLayer && feature?.id) {\n      editLayer.getSource()?.clear();\n      const olFeat = gjFormat.readFeature(feature);\n      const source = editLayer.getSource() as OlSourceVector;\n      source.addFeature(olFeat);\n      setRevision(r => r + 1);\n\n      if (!isEmptyOlExtent(source.getExtent())) {\n        map?.getView().fit(source.getExtent(), {\n          padding: [50, 50, 50, 50]\n        });\n      }\n    }\n  }, [feature, editLayer, gjFormat, map]);\n\n  const undoEdit = () => {\n\n    const editSource = editLayer?.getSource();\n    const features = editSource?.getFeatures();\n\n    if (!features) {\n      return;\n    }\n\n    const clone: FeatureCollection = gjFormat.writeFeaturesObject(features);\n    const previousSource = editHistory.current.past[editHistory.current.past.length - 1];\n    if (!_isEmpty(previousSource)) {\n      editSource?.clear();\n      editSource?.addFeatures(gjFormat.readFeatures(previousSource));\n      editHistory.current = {\n        past: editHistory.current.past.slice(0, -1),\n        future: [...editHistory.current.future, clone].slice(-historyLength)\n      };\n      setRevision(r => r + 1);\n    }\n  };\n\n  const redoEdit = () => {\n\n    const editSource = editLayer?.getSource();\n    const features = editSource?.getFeatures();\n\n    if (!features) {\n      return;\n    }\n\n    const clone = gjFormat.writeFeaturesObject(features);\n    const nextSource = editHistory.current.future[editHistory.current.future.length - 1];\n    if (!_isEmpty(nextSource)) {\n      editSource?.clear();\n      editSource?.addFeatures(gjFormat.readFeatures(nextSource));\n\n      editHistory.current = {\n        future: editHistory.current.future.slice(0, -1),\n        past: [...editHistory.current.past, clone].slice(-historyLength)\n      };\n      setRevision(r => r + 1);\n    }\n  };\n\n  const onDrawEnd = (e: OlDrawEvent) => {\n    updateRevision();\n    if (!feature.geometry.type.toLocaleLowerCase().startsWith('multi')) {\n      // replace the existing geometry by the new one\n      editLayer?.getSource()?.clear();\n    }\n  };\n\n  const updateRevision = () => {\n\n    const features = editLayer?.getSource()?.getFeatures();\n\n    if (!features) {\n      return;\n    }\n\n    const clone: FeatureCollection = gjFormat.writeFeaturesObject(features);\n    editHistory.current = {\n      ...editHistory.current,\n      past: [...editHistory.current.past, clone].slice(-10)\n    };\n    setRevision(r => r + 1);\n  };\n\n  const btnTooltipProps = {\n    tooltipPlacement: 'left' as TooltipPlacement,\n    tooltipProps: {\n      mouseEnterDelay: 0.5\n    }\n  };\n\n  if (!editLayer) {\n    return <></>;\n  }\n\n  return (\n    <Toolbar\n      className=\"geometry-edit-tb\"\n      alignment=\"vertical\"\n    >\n      <ToggleGroup>\n        {\n          allowedEditMode.includes('CREATE') ?\n            <DrawButton\n              icon={\n                <FontAwesomeIcon icon={faPencil} />\n              }\n              pressedIcon={\n                <FontAwesomeIcon icon={faPencil} />\n              }\n              name=\"draw\"\n              digitizeLayer={editLayer}\n              tooltip={t('EditFeatureGeometryToolbar.draw')}\n              drawType={feature.geometry.type as DrawType}\n              onDrawEnd={onDrawEnd}\n              {...btnTooltipProps}\n            />\n            : <></>\n        }\n        {\n          allowedEditMode.includes('UPDATE') ?\n            <ModifyButton\n              icon={\n                <FontAwesomeIcon icon={faDrawPolygon} />\n              }\n              pressedIcon={\n                <FontAwesomeIcon icon={faDrawPolygon} />\n              }\n              name=\"edit\"\n              digitizeLayer={editLayer}\n              tooltip={t('EditFeatureGeometryToolbar.edit')}\n              onModifyStart={updateRevision}\n              onModifyEnd={updateRevision}\n              onTranslateEnd={updateRevision}\n              {...btnTooltipProps}\n            />\n            : <></>\n        }\n        {\n          allowedEditMode.includes('DELETE') ?\n            <DeleteButton\n              icon={\n                <FontAwesomeIcon icon={faTrash} />\n              }\n              pressedIcon={\n                <FontAwesomeIcon icon={faTrash} />\n              }\n              name=\"delete\"\n              digitizeLayer={editLayer}\n              tooltip={t('EditFeatureGeometryToolbar.delete')}\n              onFeatureRemove={updateRevision}\n              {...btnTooltipProps}\n            />\n            : <></>\n        }\n      </ToggleGroup>\n      <SimpleButton\n        icon={\n          <FontAwesomeIcon icon={faUndo} />\n        }\n        tooltip={t('EditFeatureGeometryToolbar.undo')}\n        onClick={undoEdit}\n        disabled={editHistory.current.past?.length === 0}\n        {...btnTooltipProps}\n      />\n      <SimpleButton\n        icon={\n          <FontAwesomeIcon\n            icon={faUndo}\n            flip=\"horizontal\"\n          />\n        }\n        tooltip={t('EditFeatureGeometryToolbar.redo')}\n        onClick={redoEdit}\n        disabled={editHistory.current.future?.length === 0}\n        {...btnTooltipProps}\n      />\n    </Toolbar>\n\n  );\n};\n\nexport default EditFeatureGeometryToolbar;\n","import React from 'react';\n\nimport {\n  Typography\n} from 'antd';\n\nimport {\n  isMoment\n} from 'moment';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nexport type ValueType = string | number | boolean | moment.Moment;\n\nexport type DisplayFieldProps = {\n  format?: string;\n  suffix?: string;\n  value?: ValueType | ValueType[];\n};\n\nexport const DisplayField: React.FC<DisplayFieldProps> = ({\n  format = 'DD.MM.YYYY',\n  suffix,\n  value,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const {\n    t\n  } = useTranslation();\n\n  let displayText: string = '';\n\n  if (typeof value === 'string') {\n    displayText = value;\n  }\n\n  if (typeof value === 'boolean') {\n    displayText = value ? t('DisplayField.yesText') : t('DisplayField.noText');\n  }\n\n  if (Number.isFinite(value)) {\n    displayText = new Intl.NumberFormat().format(Number(value));\n  }\n\n  if (isMoment(value)) {\n    displayText = value.format(format);\n  }\n\n  if (Array.isArray(value)) {\n    displayText = value.join(', ');\n  }\n\n  return (\n    <Typography.Text\n      className=\"displayfield\"\n      {...passThroughProps}\n    >\n      {displayText}{displayText && suffix ? ` ${suffix}` : ''}\n    </Typography.Text>\n  );\n};\n\nexport default DisplayField;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  Input,\n  InputNumber,\n  DatePicker,\n  Select,\n  Switch,\n  Checkbox,\n  Form,\n  FormItemProps,\n  Upload,\n  Button\n} from 'antd';\n\nimport {\n  FormInstance,\n  FormProps\n} from 'antd/lib/form/Form';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport {\n  PropertyFormItemEditConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport DisplayField from '../DisplayField';\n\nimport './index.less';\n\nexport type EditFeatureFormProps = FormProps & {\n  formConfig?: PropertyFormItemEditConfig[];\n  form: FormInstance;\n};\n\nexport const EditFeatureForm: React.FC<EditFeatureFormProps> = ({\n  formConfig,\n  form,\n  ...passThroughProps\n}): JSX.Element => {\n\n  const {\n    t\n  } = useTranslation();\n\n  const createFormItem = (fieldCfg: PropertyFormItemEditConfig): React.ReactNode => {\n    let field: React.ReactNode;\n    if (fieldCfg.readOnly) {\n      field = createReadOnlyComponent(fieldCfg);\n    } else if (fieldCfg.component) {\n      field = createFieldComponent(fieldCfg);\n    } else {\n      Logger.warn('FieldConfig is missing `readOnly`, `component` or `dataType` property.');\n      field = (\n        <Input\n          key={fieldCfg.propertyName}\n          placeholder=\"\"\n        />\n      );\n    }\n\n    const formItemProps: FormItemProps = {\n      rules: []\n    };\n\n    formItemProps.rules = [{\n      required: fieldCfg.required\n    }];\n\n    if ((fieldCfg.component === 'SWITCH' || fieldCfg.component === 'CHECKBOX') && !fieldCfg.readOnly) {\n      formItemProps.valuePropName = 'checked';\n    }\n\n    if (fieldCfg.component === 'UPLOAD' && !fieldCfg.readOnly) {\n      formItemProps.valuePropName = 'fileList';\n    }\n\n    return (\n      <Form.Item\n        key={fieldCfg.propertyName}\n        name={fieldCfg.propertyName}\n        label={fieldCfg.displayName || fieldCfg.propertyName}\n        {...formItemProps}\n        {...fieldCfg.fieldProps}\n      >\n        {field}\n      </Form.Item>\n    );\n  };\n\n  const createReadOnlyComponent = (fieldConfig: PropertyFormItemEditConfig): React.ReactNode => {\n    return (\n      <DisplayField\n        {...fieldConfig.fieldProps}\n      />\n    );\n  };\n\n  const createFieldComponent = (fieldCfg: PropertyFormItemEditConfig): React.ReactNode => {\n    switch (fieldCfg.component) {\n      case 'CHECKBOX':\n        return (\n          <Checkbox\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'DATE':\n        return (\n          <DatePicker\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'DISPLAY':\n        return (\n          <span {...fieldCfg?.fieldProps} />\n        );\n      case 'INPUT':\n        return (\n          <Input\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'NUMBER':\n        return (\n          <InputNumber\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'SELECT':\n        return (\n          <Select\n            allowClear={true}\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'SWITCH':\n        return (\n          <Switch\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      case 'TEXTAREA':\n        return (\n          <Input.TextArea\n            {...fieldCfg?.fieldProps}\n          />\n        );\n      // TODO Before we allow uploading we should check all side effects.\n      // case 'UPLOAD':\n      //   return (\n      //     <Upload\n      //       {...fieldCfg?.fieldProps}\n      //     >\n      //       <Button>Upload</Button>\n      //     </Upload>\n      //   );\n      default:\n        Logger.error(`Component type \"${fieldCfg?.component}\" is not supported`);\n        return <></>;\n    }\n  };\n\n  return (\n    <Form\n      className=\"edit-feature-form\"\n      form={form}\n      labelCol={{\n        span: 6\n      }}\n      labelAlign=\"left\"\n      labelWrap\n      {...passThroughProps}\n    >\n      { formConfig?.map(createFormItem) }\n    </Form>\n  );\n};\n\nexport default EditFeatureForm;\n","import React from 'react';\n\nimport {\n  Tabs,\n  TabsProps\n} from 'antd';\n\nimport {\n  FormInstance\n} from 'antd/lib/form/Form';\n\nimport {\n  Tab\n} from 'rc-tabs/lib/interface';\n\nimport {\n  PropertyFormItemEditConfig,\n  PropertyFormTabConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport EditFeatureForm from '../EditFeatureForm';\n\nexport type EditFeatureTabsProps = TabsProps & {\n  tabConfig?: PropertyFormTabConfig<PropertyFormItemEditConfig>[];\n  form: FormInstance;\n  initialValues?: Record<string, any>;\n};\n\nexport const EditFeatureTabs: React.FC<EditFeatureTabsProps> = ({\n  tabConfig,\n  form,\n  initialValues,\n  ...passThroughProps\n}) => {\n\n  const items = tabConfig?.map((config, idx) => {\n    return {\n      label: config.title,\n      key: `${idx}`,\n      forceRender: true,\n      children: (\n        <EditFeatureForm\n          name={config.title}\n          form={form}\n          initialValues={initialValues}\n          formConfig={config.children}\n        />\n      )\n    } as Tab;\n  });\n\n  return (\n    <Tabs\n      items={items}\n      {...passThroughProps}\n    />\n  );\n};\n\nexport default EditFeatureTabs;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faTrash\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  ButtonProps,\n  Popconfirm\n} from 'antd';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useExecuteWfsTransaction from '../../../hooks/useExecuteWfsTransaction';\nimport useWriteWfsTransaction from '../../../hooks/useWriteWfsTransaction';\n\nexport type DeleteButtonProps = ButtonProps & {\n  feature: Feature;\n  layer: WmsLayer;\n  onError?: (error: unknown) => void;\n  onSuccess?: () => void;\n};\n\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n  feature,\n  layer,\n  onError = () => {},\n  onSuccess = () => {},\n  ...passThroughProps\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const writeWfsTransaction = useWriteWfsTransaction();\n  const executeWfsTransaction = useExecuteWfsTransaction();\n\n  const onConfirmDelete = async () => {\n    if (!map) {\n      return;\n    }\n\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const olFeature = new OlFormatGeoJSON().readFeature(feature);\n\n      const transaction = await writeWfsTransaction({\n        deleteFeatures: [olFeature],\n        layer: layer\n      });\n\n      if (!transaction) {\n        return;\n      }\n\n      await executeWfsTransaction({\n        layer: layer,\n        transaction: transaction\n      });\n\n      layer.getSource()?.refresh();\n\n      onSuccess();\n    } catch (error) {\n      Logger.error(error);\n\n      onError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Popconfirm\n      title={t('DeleteButton.confirm')}\n      onConfirm={onConfirmDelete}\n      placement='bottomRight'\n    >\n      <Button\n        type='primary'\n        loading={loading}\n        disabled={!feature.id}\n        danger\n        icon={(\n          <FontAwesomeIcon\n            icon={faTrash}\n          />\n        )}\n        {...passThroughProps}\n      >\n        {\n          t('DeleteButton.title')\n        }\n      </Button>\n    </Popconfirm>\n  );\n};\n\nexport default DeleteButton;\n","import React from 'react';\n\nimport {\n  faRotateLeft\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  ButtonProps\n} from 'antd';\n\nimport {\n  FormInstance\n} from 'antd/lib/form/Form';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport OlFormatGeoJson from 'ol/format/GeoJSON';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport { DigitizeUtil } from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nexport type ResetButtonProps = Omit<ButtonProps, 'form'> & {\n  feature: Feature;\n  form: FormInstance;\n};\n\nexport const ResetButton: React.FC<ResetButtonProps> = ({\n  feature,\n  form,\n  ...passThroughProps\n}) => {\n\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const onClick = () => {\n    form.resetFields();\n\n    if (map) {\n      const editLayer = DigitizeUtil.getDigitizeLayer(map);\n      if (editLayer) {\n        editLayer.getSource()?.clear();\n        const format = new OlFormatGeoJson();\n        const olFeat = format.readFeature(feature);\n        editLayer.getSource()?.addFeature(olFeat);\n      }\n    }\n  };\n\n  return (\n    <Button\n      type='primary'\n      onClick={onClick}\n      icon={(\n        <FontAwesomeIcon\n          icon={faRotateLeft}\n        />\n      )}\n      {...passThroughProps}\n    >\n      {\n        t('ResetButton.title')\n      }\n    </Button>\n  );\n};\n\nexport default ResetButton;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faFloppyDisk\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  ButtonProps\n} from 'antd';\n\nimport {\n  FormInstance\n} from 'antd/lib/form/Form';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useExecuteWfsTransaction from '../../../hooks/useExecuteWfsTransaction';\nimport useWriteWfsTransaction from '../../../hooks/useWriteWfsTransaction';\n\nexport type SaveButtonProps = Omit<ButtonProps, 'form'> & {\n  form: FormInstance;\n  layer: WmsLayer;\n  onError?: (error: unknown) => void;\n  onSuccess?: (response?: string) => void;\n};\n\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n  form,\n  layer,\n  onError = () => {},\n  onSuccess = () => {},\n  ...passThroughProps\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const map = useMap();\n\n  const writeWfsTransaction = useWriteWfsTransaction();\n  const executeWfsTransaction = useExecuteWfsTransaction();\n\n  const {\n    t\n  } = useTranslation();\n\n  const onClick = async () => {\n    if (!map) {\n      return;\n    }\n\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    const editLayer = DigitizeUtil.getDigitizeLayer(map);\n\n    if (!editLayer) {\n      Logger.error('Cannot find the digitize layer');\n      return;\n    }\n\n    const features = editLayer.getSource()?.getFeatures();\n\n    if (!features || features.length === 0) {\n      Logger.error('Cannot save feature without geometry');\n      return;\n    };\n\n    try {\n      await form.validateFields();\n    } catch (error) {\n      Logger.warn('Validation has failed: ', error);\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const transaction = await writeWfsTransaction({\n        upsertFeatures: features,\n        form: form,\n        layer: layer\n      });\n\n      if (!transaction) {\n        return;\n      }\n\n      const result = await executeWfsTransaction({\n        layer: layer,\n        transaction: transaction\n      });\n\n      layer.getSource()?.refresh();\n\n      onSuccess(result);\n    } catch (error) {\n      Logger.error(error);\n\n      onError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Button\n      type='primary'\n      onClick={onClick}\n      loading={loading}\n      icon={(\n        <FontAwesomeIcon\n          icon={faFloppyDisk}\n        />\n      )}\n      {...passThroughProps}\n    >\n      {\n        t('SaveButton.title')\n      }\n    </Button>\n  );\n};\n\nexport default SaveButton;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  FormInstance\n} from 'antd';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppSelector from '../../../hooks/useAppSelector';\n\nimport DeleteButton from '../DeleteButton';\nimport ResetButton from '../ResetButton';\nimport SaveButton from '../SaveButton';\n\nimport './index.less';\n\nexport type EditFeatureToolbarProps = {\n  feature: Feature;\n  layer: WmsLayer;\n  form: FormInstance;\n  onSaveSuccess?: (responseText?: string) => void;\n  onSaveError?: (error: unknown) => void;\n  onDeleteSuccess?: () => void;\n  onDeleteError?: (error: unknown) => void;\n};\n\nexport const EditFeatureToolbar: React.FC<EditFeatureToolbarProps> = ({\n  feature,\n  layer,\n  form,\n  onSaveSuccess = () => {},\n  onSaveError = () => {},\n  onDeleteSuccess = () => {},\n  onDeleteError = () => {}\n}) => {\n  const allowedEditMode = useAppSelector(state => state.editFeature.userEditMode);\n\n  return (\n    <div\n      className='edit-feature-toolbar'\n    >\n      {\n        allowedEditMode.includes('CREATE') ||\n        allowedEditMode.includes('UPDATE') ?\n          <>\n            <ResetButton\n              feature={feature}\n              form={form}\n            />\n            <SaveButton\n              form={form}\n              layer={layer}\n              onSuccess={onSaveSuccess}\n              onError={onSaveError}\n            />\n          </>: <></>\n      }\n      {\n        allowedEditMode.includes('DELETE') &&\n        <DeleteButton\n          feature={feature}\n          layer={layer}\n          onSuccess={onDeleteSuccess}\n          onError={onDeleteError}\n        />\n      }\n    </div>\n  );\n};\n\nexport default EditFeatureToolbar;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Alert\n} from 'antd';\nimport {\n  useForm\n} from 'antd/lib/form/Form';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport moment from 'moment';\n\nimport {\n  equalTo\n} from 'ol/format/filter';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  PropertyFormItemEditConfig,\n  PropertyFormTabConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useExecuteGetFeature from '../../../hooks/useExecuteGetFeature';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport {\n  setFeature\n} from '../../../store/editFeature';\n\nimport EditFeatureGeometryToolbar from '../EditFeatureGeometryToolbar';\nimport EditFeatureTabs from '../EditFeatureTabs';\nimport EditFeatureToolbar from '../EditFeatureToolbar';\n\nexport type EditFeatureFullFormProps = {\n  feature: Feature;\n  layer: WmsLayer;\n};\n\nexport const EditFeatureFullForm: React.FC<EditFeatureFullFormProps> = ({\n  feature,\n  layer\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const executeGetFeature = useExecuteGetFeature();\n\n  const [tabConfig, setTabConfig] = useState<PropertyFormTabConfig<PropertyFormItemEditConfig>[]>();\n  const [initialValues, setInitialValues] = useState<Record<string, any>>();\n  const [errorMsg, setErrorMsg] = useState<string>();\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  const [form] = useForm();\n  const map = useMap();\n  const dispatch = useAppDispatch();\n  const client = useSHOGunAPIClient();\n\n  const reloadFeature = useCallback(async (id: string) => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    const updatedFeatures = await executeGetFeature({\n      layer: layer,\n      filter: equalTo('id', id)\n    });\n\n    if (\n      updatedFeatures?.features[0]\n    ) {\n      dispatch(setFeature(updatedFeatures?.features[0]));\n    }\n  }, [dispatch, executeGetFeature, layer]);\n\n  const update = useCallback(async () => {\n    if (!map || !client) {\n      return;\n    }\n\n    let editFormConfig = layer.get('editFormConfig') as PropertyFormTabConfig<PropertyFormItemEditConfig>[];\n\n    if (editFormConfig?.length === 0) {\n      Logger.warn(`Layer ${layer.get('name')} has no 'editFormConfig' set`);\n      return;\n    }\n\n    const properties = cloneDeep(feature?.properties) || {};\n\n    Object.entries(properties).forEach(([key, value]) => {\n      const tabConfigs = editFormConfig?.filter(tabCfg => {\n        return tabCfg.children?.find(formCfg => formCfg.propertyName === key);\n      });\n\n      if (tabConfigs.length > 1) {\n        Logger.warn(`Property ${key} is configured in multiple tabs. Is this intended?`);\n      }\n\n      if (tabConfigs && tabConfigs[0]) {\n        const isDate = tabConfigs[0].children?.find(cfg => {\n          return cfg.propertyName === key && cfg.component === 'DATE';\n        });\n\n        if (isDate) {\n          properties[key] = moment(value);\n        }\n\n        const isUpload = tabConfigs[0].children?.find(cfg => {\n          return cfg.propertyName === key && cfg.component === 'UPLOAD';\n        });\n\n        if (isUpload) {\n          properties[key] = [{\n            name: value,\n            status: 'done'\n          }];\n        }\n      }\n    });\n\n    form.resetFields();\n    form.setFieldsValue(properties);\n\n    setTabConfig(editFormConfig);\n    setInitialValues(properties);\n  }, [map, client, layer, feature?.properties, form]);\n\n  useEffect(() => {\n    update();\n  }, [update]);\n\n  const onSaveSuccess = (responseText?: string) => {\n    if (!responseText) {\n      return;\n    }\n    setErrorMsg(undefined);\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'text/xml');\n\n    // get feature id from response\n    const featureId = xmlDoc.getElementsByTagName('ogc:FeatureId');\n    const idString = featureId.item(0)?.getAttribute('fid');\n    const id = idString?.split('.')[1];\n    if (id) {\n      reloadFeature(id);\n    }\n  };\n\n  const onSaveError = () => {\n    setErrorMsg(t('EditFeatureFullForm.saveErrorMsg'));\n  };\n\n  const onDeleteSuccess = () => {\n    setErrorMsg(undefined);\n    dispatch(setFeature(null));\n  };\n\n  const onDeleteError = () => {\n    setErrorMsg(t('EditFeatureFullForm.deleteErrorMsg'));\n  };\n\n  return (\n    <>\n      <EditFeatureGeometryToolbar\n        feature={feature}\n      />\n      {\n        errorMsg && (\n          <Alert\n            className=\"error-alert\"\n            message={errorMsg}\n            type=\"error\"\n            showIcon\n          />\n        )\n      }\n      <EditFeatureToolbar\n        feature={feature}\n        layer={layer}\n        form={form}\n        onSaveSuccess={onSaveSuccess}\n        onSaveError={onSaveError}\n        onDeleteSuccess={onDeleteSuccess}\n        onDeleteError={onDeleteError}\n      />\n      <EditFeatureTabs\n        tabConfig={tabConfig}\n        initialValues={initialValues}\n        form={form}\n      />\n    </>\n  );\n};\n\nexport default EditFeatureFullForm;\n","import {\n  useCallback\n} from 'react';\n\nimport {\n  Feature\n} from 'geojson';\n\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport type ExecuteWfsLockOpts = {\n  layer: WmsLayer;\n  feature: Feature;\n};\n\nexport const useExecuteWfsLockFeature = () => {\n  const client = useSHOGunAPIClient();\n\n  const writeWfsLockFeature = (opts: ExecuteWfsLockOpts) => {\n    const featureId = opts.feature.id;\n    const featureProperties = opts.feature.properties;\n\n    if (!featureId || !featureProperties) {\n      Logger.warn('Either the id of the feature or its properties (or even both) aren\\'t available');\n      return;\n    }\n\n    let id: number;\n    if (typeof featureId === 'number') {\n      id = featureId;\n    } else {\n      id = parseInt(featureId.split('.')[1], 10);\n    }\n\n    const match = Object.entries(featureProperties).find(([, value]) => (value === id || value === id.toString()));\n\n    if (!match) {\n      Logger.warn('Count not detect the id property');\n      return;\n    }\n\n    const idProperty = match[0];\n\n    const typeName = opts.layer.getSource()?.getParams().LAYERS;\n\n    const lockFeatureDoc = document.createElementNS('http://www.opengis.net/wfs/2.0', 'LockFeature');\n\n    lockFeatureDoc.setAttribute('service', 'WFS');\n    lockFeatureDoc.setAttribute('version', '2.0.0');\n    // Expiry in seconds.\n    lockFeatureDoc.setAttribute('expiry', '300');\n    lockFeatureDoc.setAttribute('lockAction', 'SOME');\n\n    const queryElement = document.createElementNS('http://www.opengis.net/wfs/2.0', 'Query');\n    queryElement.setAttribute('typeNames', typeName);\n\n    const filterElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'Filter');\n    const isEqualToElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'PropertyIsEqualTo');\n\n    const valueReferenceElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'ValueReference');\n    const valueReferenceValue = document.createTextNode(idProperty);\n    valueReferenceElement.appendChild(valueReferenceValue);\n\n    const literalElement = document.createElementNS('http://www.opengis.net/fes/2.0', 'Literal');\n    const literalValue = document.createTextNode(id.toString());\n    literalElement.appendChild(literalValue);\n\n    isEqualToElement.appendChild(valueReferenceElement);\n    isEqualToElement.appendChild(literalElement);\n\n    filterElement.appendChild(isEqualToElement);\n\n    queryElement.appendChild(filterElement);\n\n    lockFeatureDoc.appendChild(queryElement);\n\n    return lockFeatureDoc;\n  };\n\n  const executeWfsLockFeature = useCallback(async (opts: ExecuteWfsLockOpts) => {\n    let url;\n\n    const source = opts.layer.getSource();\n    if (source instanceof OlSourceImageWMS) {\n      url = (source as OlSourceImageWMS).getUrl();\n    }\n    if (source instanceof OlSourceTileWMS) {\n      const urls = (source as OlSourceTileWMS).getUrls();\n      url = urls ? urls[0] : undefined;\n    }\n\n    if (!url) {\n      return;\n    }\n\n    if (url.endsWith('?')) {\n      url = url.slice(0, -1);\n    }\n\n    const lockFeatureDoc = writeWfsLockFeature({\n      layer: opts.layer,\n      feature: opts.feature\n    });\n\n    if (!lockFeatureDoc) {\n      return;\n    }\n\n    const defaultHeaders = {\n      'Content-Type': 'application/xml'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: opts.layer?.get('useBearerToken') ? {\n        ...defaultHeaders,\n        ...getBearerTokenHeader(client?.getKeycloak())\n      } : defaultHeaders,\n      body: new XMLSerializer().serializeToString(lockFeatureDoc)\n    });\n\n    if (!response.ok) {\n      throw new Error('No successful response while executing a WFS-LockFeature');\n    }\n\n    const responseText = await response.text();\n\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(responseText, 'text/xml');\n\n    // TODO Make detection more robust\n    const transactionLockFailed = xmlDoc.getElementsByTagName('wfs:FeaturesNotLocked');\n\n    if (transactionLockFailed.length > 0) {\n      throw new Error(`Error while locking a feature: ${responseText}`);\n    }\n\n    return responseText;\n  }, [client]);\n\n  return executeWfsLockFeature;\n};\n\nexport default useExecuteWfsLockFeature;\n","import {\n  useCallback,\n  useEffect\n} from 'react';\n\nimport {\n  FeatureCollection\n} from 'geojson';\n\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from './useSHOGunAPIClient';\n\nexport const useGetFeatureInfo = (layer?: WmsLayer, onSuccess?: (featureCollection: FeatureCollection) => void, onFailure?: () => void) => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n\n  const onSingleClick = useCallback(async (evt: MapBrowserEvent<MouseEvent>) => {\n    if (!map || !layer) {\n      return;\n    }\n\n    const coords = evt.coordinate;\n\n    const viewResolution = map.getView().getResolution();\n\n    if (!viewResolution) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const url = source?.getFeatureInfoUrl(\n      coords,\n      viewResolution,\n      map.getView().getProjection(),\n      {\n        INFO_FORMAT: 'application/json',\n        BUFFER: 10\n      }\n    );\n\n    const defaultHeaders = {\n      'Content-Type': 'application/json'\n    };\n\n    if (!url) {\n      return;\n    }\n\n    try {\n      map.getTargetElement().style.cursor = 'wait';\n\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: layer.get('useBearerToken') ? {\n          ...defaultHeaders,\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : defaultHeaders\n      });\n\n      if (!response.ok) {\n        throw new Error('No successful response');\n      }\n\n      const featureCollection: FeatureCollection = await response.json();\n\n      if (onSuccess) {\n        onSuccess(featureCollection);\n      }\n    } catch (error) {\n      Logger.error('Error: ', error);\n\n      if (onFailure) {\n        onFailure();\n      }\n    } finally {\n      map.getTargetElement().style.cursor = '';\n    }\n  }, [client, layer, map, onSuccess, onFailure]);\n\n  const onPointerMove = useCallback((evt: MapBrowserEvent<MouseEvent>) => {\n    if (!map || !layer) {\n      return;\n    }\n\n    if (evt.dragging) {\n      return;\n    }\n\n    const data = layer.getData(evt.pixel);\n\n    if (!(data instanceof Uint8ClampedArray)) {\n      return;\n    }\n\n    const hit = data && data[3] > 0;\n\n    map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n  }, [layer, map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    map.on('pointermove', onPointerMove);\n    map.on('singleclick', onSingleClick);\n\n    return () => {\n      map.un('pointermove', onPointerMove);\n      map.un('singleclick', onSingleClick);\n    };\n  }, [map, onPointerMove, onSingleClick]);\n};\n\nexport default useGetFeatureInfo;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  Button\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport useExecuteWfsDescribeFeatureType, {\n  isGeometryType\n} from '../../../hooks/useExecuteWfsDescribeFeatureType';\nimport useExecuteWfsLockFeature from '../../../hooks/useExecuteWfsTransactionLock';\nimport useGetFeatureInfo from '../../../hooks/useGetFeatureInfo';\n\nimport {\n  setFeature\n} from '../../../store/editFeature';\n\nimport './index.less';\n\nexport type EditFeatureSwitchProps = {\n  layer: WmsLayer;\n  onLockSuccess?: (responseText: string) => void;\n  onLockError?: (error: unknown) => void;\n  onCreate?: () => void;\n};\n\nexport const EditFeatureSwitch: React.FC<EditFeatureSwitchProps> = ({\n  layer,\n  onLockSuccess = () => {},\n  onLockError = () => {},\n  onCreate = () => {}\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const executeWfsDescribeFeatureType = useExecuteWfsDescribeFeatureType();\n  const executeWfsLockFeature = useExecuteWfsLockFeature();\n  const dispatch = useAppDispatch();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  useGetFeatureInfo(layer, async (featureCollection) => {\n    if (\n      featureCollection.features.length &&\n      (allowedEditMode.includes('UPDATE') || allowedEditMode.includes('DELETE'))\n    ) {\n\n      const feature = featureCollection.features[0];\n\n      if (!layer || !feature) {\n        return;\n      }\n\n      if (ClientConfiguration.wfsLockFeatureEnabled) {\n        try {\n          const response = await executeWfsLockFeature({\n            layer: layer,\n            feature: feature\n          });\n\n          if (!response) {\n            return;\n          }\n\n          dispatch(setFeature(feature));\n\n          onLockSuccess(response);\n        } catch (error) {\n          onLockError(error);\n        }\n      } else {\n        dispatch(setFeature(feature));\n      }\n    }\n  });\n\n  const getGeometryType = async () => {\n    if (!map || !layer) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const describeFeatureType = await executeWfsDescribeFeatureType(layer);\n\n      if (!describeFeatureType) {\n        return;\n      }\n\n      // We expect a single featureType here.\n      const geomProperty = describeFeatureType.featureTypes[0]?.properties\n        ?.find(property => isGeometryType(property.type));\n\n      switch (geomProperty?.type) {\n        case 'gml:MultiPoint':\n          return 'MultiPoint';\n        case 'gml:Point':\n          return 'Point';\n        case 'gml:MultiLineString':\n          return 'MultiLineString';\n        case 'gml:LineString':\n          return 'LineString';\n        case 'gml:MultiPolygon':\n          return 'MultiPolygon';\n        case 'gml:Polygon':\n          return 'Polygon';\n        default:\n          break;\n      }\n    } catch (error) {\n      Logger.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onCreateClick = async () => {\n    const geomType = await getGeometryType();\n\n    if (!geomType) {\n      return;\n    }\n\n    dispatch(setFeature({\n      type: 'Feature',\n      properties: {},\n      geometry: {\n        type: geomType,\n        coordinates: []\n      }\n    }));\n\n    onCreate();\n  };\n\n  return (\n    <div className=\"edit-feature-switch\">\n      {allowedEditMode.includes('CREATE') && (\n        <>\n          {\n            allowedEditMode.includes('UPDATE') &&\n            <div>{t('EditFeatureSwitch.usageHint')}</div>\n          }\n          <Button\n            loading={loading}\n            onClick={onCreateClick}\n          >\n            {t('EditFeatureSwitch.createFeature')}\n          </Button>\n        </>\n      )}\n      {!allowedEditMode.includes('CREATE') &&\n        (allowedEditMode.includes('UPDATE') ||\n        allowedEditMode.includes('DELETE')) && (\n        <div>{t('EditFeatureSwitch.limitedUsageHint')}</div>\n      )}\n    </div>\n  );\n};\n\nexport default EditFeatureSwitch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Alert, Modal\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport OlFeature from 'ol/Feature';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Logger\n} from '@terrestris/base-util';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport {\n  WmsLayer,\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useExecuteWfsTransaction from '../../hooks/useExecuteWfsTransaction';\nimport useWriteWfsTransaction from '../../hooks/useWriteWfsTransaction';\n\nimport {\n  reset\n} from '../../store/editFeature';\nimport {\n  hide as hideEditFeatureDrawer\n} from '../../store/editFeatureDrawerOpen';\n\nimport MapDrawer, {\n  MapDrawerProps\n} from '../MapDrawer';\n\nimport EditFeatureFullForm from './EditFeatureFullForm';\nimport EditFeatureSwitch from './EditFeatureSwitch';\n\nimport './index.less';\n\nexport type EditFeatureDrawerProps = MapDrawerProps & {};\n\nexport const EditFeatureDrawer: React.FC<EditFeatureDrawerProps> = ({\n  ...passThroughProps\n}) => {\n  const {\n    t\n  } = useTranslation();\n\n  const [layer, setLayer] = useState<WmsLayer>();\n  const [isFeatureLocked, setIsFeatureLocked] = useState<boolean>(false);\n  const [drawerTitle, setDrawerTitle] = useState<string>(t('EditFeatureDrawer.featureEditor'));\n\n  const isDrawerOpen = useAppSelector(state => state.editFeatureDrawerOpen);\n  const layerId = useAppSelector(state => state.editFeature.layerId);\n  const feature = useAppSelector(state => state.editFeature.feature);\n\n  const map = useMap();\n  const dispatch = useAppDispatch();\n  const writeWfsTransaction = useWriteWfsTransaction();\n  const executeWfsTransaction = useExecuteWfsTransaction();\n\n  useEffect(() => {\n    if (!map || !layerId) {\n      return;\n    }\n\n    const olLayer = MapUtil.getLayerByOlUid(map, layerId);\n\n    if (!olLayer || !isWmsLayer(olLayer)) {\n      Logger.warn(`Could not find layer with id ${layerId}`);\n      return;\n    }\n\n    setDrawerTitle(`${t('EditFeatureDrawer.featureEditor')} - ${olLayer.get('name')}`);\n    setLayer(olLayer);\n  }, [map, layerId, t]);\n\n  const releaseLock = async () => {\n    if (!layer || !feature || !feature.id || !ClientConfiguration.wfsLockFeatureEnabled) {\n      return;\n    }\n\n    try {\n      const feat = new OlFeature();\n      feat.setId(feature.id);\n\n      const transaction = await writeWfsTransaction({\n        layer: layer,\n        deleteFeatures: [],\n        upsertFeatures: [feat]\n      });\n\n      if (!transaction) {\n        return;\n      }\n\n      await executeWfsTransaction({\n        layer: layer,\n        transaction: transaction\n      });\n    } catch (error) {\n      Logger.error('Error while releasing the lock on the feature');\n    }\n  };\n\n  const closeDrawer = async () => {\n    await releaseLock();\n\n    dispatch(hideEditFeatureDrawer());\n    dispatch(reset());\n    setIsFeatureLocked(false);\n  };\n\n  const onDrawerClose = () => {\n    if (layer && feature) {\n      Modal.confirm({\n        maskClosable: false,\n        title: t('EditFeatureDrawer.closeDrawerWarnTitle'),\n        content: t('EditFeatureDrawer.closeDrawerWarnContent'),\n        okType: 'danger',\n        onOk: closeDrawer\n      });\n    } else {\n      closeDrawer();\n    }\n  };\n\n  const onLockSuccess = () => {\n    setIsFeatureLocked(false);\n  };\n\n  const onLockError = () => {\n    setIsFeatureLocked(true);\n  };\n\n  const onCreate = () => {\n    setIsFeatureLocked(false);\n  };\n\n  return (\n    <MapDrawer\n      className=\"map-drawer edit-feature-drawer\"\n      onClose={onDrawerClose}\n      open={isDrawerOpen}\n      title={drawerTitle}\n      {...passThroughProps}\n    >\n      {\n        !layer && (\n          <Alert\n            message={t('EditFeatureDrawer.noLayerFoundError')}\n            type=\"error\"\n            showIcon\n          />\n        )\n      }\n      {\n        isFeatureLocked && (\n          <Alert\n            message={t('EditFeatureDrawer.isFeatureLockedErrorMsg')}\n            type=\"error\"\n            showIcon\n          />\n        )\n      }\n      {\n        layer && layerId && !feature &&\n        <EditFeatureSwitch\n          layer={layer}\n          onLockSuccess={onLockSuccess}\n          onLockError={onLockError}\n          onCreate={onCreate}\n        />\n      }\n      {\n        layer && feature &&\n        <EditFeatureFullForm\n          feature={feature}\n          layer={layer}\n        />\n      }\n    </MapDrawer>\n  );\n};\n\nexport default EditFeatureDrawer;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect } from 'react';\n\nimport {\n  Button, Divider\n} from 'antd';\n\nimport OlControlMousePosition from 'ol/control/MousePosition';\nimport OlControlScaleLine from 'ol/control/ScaleLine';\nimport { createStringXY } from 'ol/coordinate';\n\nimport { useTranslation } from 'react-i18next';\n\nimport ScaleCombo from '@terrestris/react-geo/dist/Field/ScaleCombo/ScaleCombo';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport { usePlugins } from '../../hooks/usePlugins';\n\nimport {\n  FooterPlacementOrientation,\n  isFooterIntegration\n} from '../../plugin';\nimport { Legal } from '../../store/legal';\n\nexport interface FooterProps extends React.ComponentProps<'div'> { }\n\nexport const Footer: React.FC<FooterProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const plugins = usePlugins();\n  const { t } = useTranslation();\n\n  const legalInformation: Legal = useAppSelector(state => state.legal);\n  const map = useMap();\n\n  const insertPlugins = (itemPosition: FooterPlacementOrientation, items: JSX.Element[]) => {\n    plugins.forEach(plugin => {\n      if (isFooterIntegration(plugin.integration) && plugin.integration?.placementOrientation === itemPosition) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        items.splice(plugin.integration?.insertionIndex || 0, 0,\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map\n      .getControls()\n      .getArray()\n      .find(control => control instanceof OlControlScaleLine);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlScaleLine({\n        target: 'scale-line-container'\n      })\n    );\n  }, [map]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const existingControl = map\n      .getControls()\n      .getArray()\n      .find(control => control instanceof OlControlMousePosition);\n\n    if (existingControl) {\n      return;\n    }\n\n    map.addControl(\n      new OlControlMousePosition({\n        coordinateFormat: createStringXY(2),\n        projection: map.getView().getProjection(),\n        target: 'mouse-position'\n      })\n    );\n  }, [map]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  const getLeftItems = () => {\n    const items = [(\n      <>\n        <div\n          id=\"scale-line-container\"\n        />\n        <Divider\n          type=\"vertical\"\n        />\n        <div className=\"scale-combo\">\n          {t('Footer.scale')}:&nbsp;\n          <ScaleCombo map={map} />\n          <Divider type=\"vertical\" />\n        </div>\n        <div className=\"reference-system\">\n          {t('Footer.refSystem')}: {map.getView().getProjection().getCode()}\n          <Divider type=\"vertical\" />\n        </div>\n        <div className=\"mouse-position-wrapper\">\n          {t('Footer.mousePosition')}:&nbsp;\n          <div\n            id=\"mouse-position\"\n            className=\"mouse-position\"\n          />\n        </div>\n      </>\n    )];\n\n    insertPlugins('left', items);\n\n    return items;\n  };\n\n  const getRightItems = () => {\n    const items = [\n      <div\n        key=\"item-container right-items\"\n      >\n        <Button\n          onClick={openContactModal}\n          type=\"link\"\n        >\n          {t('Footer.contact')}\n        </Button>\n        <Button\n          onClick={openImprintModal}\n          type=\"link\"\n        >\n          {t('Footer.imprint')}\n        </Button>\n        <Button\n          onClick={openPrivacyModal}\n          type=\"link\"\n        >\n          {t('Footer.privacypolicy')}\n        </Button>\n      </div>\n    ];\n\n    if (plugins.length > 0) {\n      insertPlugins('right', items);\n    }\n\n    return items;\n  };\n\n  const openContactModal = (): void => {\n    window.open(legalInformation.contact, '_blank');\n  };\n\n  const openImprintModal = (): void => {\n    window.open(legalInformation.imprint, '_blank');\n  };\n\n  const openPrivacyModal = (): void => {\n    window.open(legalInformation.privacy, '_blank');\n  };\n\n  return (\n    <div\n      className=\"footer\"\n      {...restProps}\n    >\n      <div className=\"item-container left-items\">\n        {\n          getLeftItems()\n        }\n      </div>\n      <div className=\"item-container right-items\">\n        {\n          getRightItems()\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, {\n  useEffect, useState\n} from 'react';\n\nimport {\n  Extent as OlExtent\n} from 'ol/extent';\nimport {\n  transformExtent\n} from 'ol/proj';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport NominatimSearch, {\n  NominatimSearchProps\n} from '@terrestris/react-geo/dist/Field/NominatimSearch/NominatimSearch';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport const BasicNominatimSearch: React.FC<Partial<NominatimSearchProps>> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n  const [viewBox, setViewBox] = useState<string>();\n\n  useEffect(() => {\n    const mapViewProjection = map?.getView().getProjection();\n    const extent: OlExtent = map?.getView()?.get('extent');\n    if (extent) {\n      const transformedExtent = transformExtent(extent, mapViewProjection, 'EPSG:4326');\n      setViewBox(transformedExtent.toString());\n    }\n  }, [map]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <NominatimSearch\n      map={map}\n      countryCodes={''}\n      allowClear={true}\n      nominatimBaseUrl={'https://nominatim.terrestris.de/search.php?'}\n      placeholder={t('Nominatim.placeholder')}\n      viewBox={viewBox ? viewBox : ''}\n      {...restProps}\n    />\n  );\n};\n\nexport default BasicNominatimSearch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import Map from 'ol/Map';\n\nimport { isWmsLayer } from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  SearchConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\n\nexport interface SolrQueryProps {\n  searchValue: string;\n  map: Map;\n}\n\n/**\n * Generates a solr search query based on the `searchConfiguration` and `searchable` properties of each layer. This\n * currently considers all layers which are part of the layer tree / map.\n */\nexport const generateSolrQuery = ({\n  searchValue,\n  map\n}: SolrQueryProps): string => {\n  // parse searchValue into an array of search terms,\n  // removing special characters and white spaces\n  let parts = searchValue.trim()\n    .replaceAll(/[()\\\\\\-_./\\/]/g, ' ')\n    .split(' ')\n    .map(s => s.trim())\n    .filter(s => s !== '');\n\n  const subQueriesPerLayer: string[] = [];\n  const layers = map.getAllLayers();\n  layers.forEach(layer => {\n    if (layer.get('searchable') && isWmsLayer(layer)) {\n      const searchConfig = layer.get('searchConfig') as SearchConfig;\n      const fullLayerName = layer.getSource()?.getParams().LAYERS;\n      if (searchConfig?.attributes) {\n        // search only configured attributes\n        subQueriesPerLayer.push(`(featureType:\"${fullLayerName}\" AND (${generateFuzzySearchQuery(parts, searchConfig.attributes)}))`);\n      } else {\n        // search all attributes of this layer\n        subQueriesPerLayer.push(`(featureType:\"${fullLayerName}\" AND (${generateFuzzySearchQuery(parts, ['search'])}))`);\n      }\n    }\n  });\n  return subQueriesPerLayer.join(' OR ');\n};\n\n/**\n * Generates a solr (sub)query for multiple search terms which searches over a list of specified search attributes.\n * @param searchParts The search input which may consist of multiple search terms, e.g. [\"foo\", \"bar\"]\n * @param searchAttributes The search attributes, e.g. [\"name\", \"street\"]\n */\nconst generateFuzzySearchQuery = (\n  searchParts: string[],\n  searchAttributes: string[]\n): string => {\n\n  let exactPart = searchAttributes\n    .map(a => `${a}:\\\"${searchParts.join(' ')}\\\"`)\n    .join(' OR ');\n\n  const allPartsQuery = searchAttributes.map(a => {\n    const innerPartsQuery = searchParts.map(\n      (part: string) => `${a}:${part.trim()}*^3 OR ${a}:*${part.trim()}*^2 OR ${a}:${part.trim()}~1`\n    );\n    return `(${innerPartsQuery.join(' OR ')})`;\n  });\n\n  const fuzzyPart = allPartsQuery.join(' AND ');\n\n  return `(${exactPart}) OR (${fuzzyPart})`;\n\n};\n\nexport default generateSolrQuery;\n","import React, {\n  useCallback,\n  useEffect, useMemo, useRef, useState\n} from 'react';\n\nimport {\n  EditOutlined,\n  SearchOutlined,\n  SettingOutlined,\n  LoadingOutlined\n} from '@ant-design/icons';\nimport {\n  Button,\n  Checkbox,\n  Dropdown,\n  Empty,\n  Input,\n  InputProps,\n  Tag,\n  Tooltip\n} from 'antd';\n\nimport _debounce from 'lodash/debounce';\nimport _groupBy from 'lodash/groupBy';\nimport _isArray from 'lodash/isArray';\n\nimport { getUid } from 'ol';\nimport {\n  Extent as OlExtent\n} from 'ol/extent';\nimport OlFeature from 'ol/Feature';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlFormatWKT from 'ol/format/WKT';\nimport OlGeometry from 'ol/geom/Geometry';\nimport { transformExtent } from 'ol/proj';\nimport OlStyleCircle from 'ol/style/Circle';\nimport OlStyleFill from 'ol/style/Fill';\nimport OlStyleStroke from 'ol/style/Stroke';\nimport OlStyle from 'ol/style/Style';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport { NominatimPlace } from '@terrestris/react-geo/dist/Field/NominatimSearch/NominatimSearch';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\nimport SearchResultsPanel, {\n  Category as ResultCategory\n} from '@terrestris/react-geo/dist/Panel/SearchResultsPanel/SearchResultsPanel';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport './index.less';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nimport {\n  setLayerId\n} from '../../store/editFeature';\n\nimport {\n  show as showEditFeatureDrawer\n} from '../../store/editFeatureDrawerOpen';\n\nimport generateSolrQuery from '../../utils/generateSolrQuery';\n\ninterface MultiSearchProps extends InputProps {\n  useNominatim: boolean;\n  delay?: number;\n  minChars?: number;\n  solrSearchBasePath?: string;\n};\n\nexport type DataSearchResult = {\n  [key: string]: string | string[] | number[];\n};\n\nexport const MultiSearch: React.FC<MultiSearchProps> = ({\n  useNominatim,\n  delay = 1000,\n  minChars = 3,\n  solrSearchBasePath = '/search/query'\n}): JSX.Element => {\n\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useAppDispatch();\n\n  const clickAwayRef = useRef<HTMLDivElement>(null);\n\n  const [searchNominatim, setSearchNominatim] = useState<boolean>(useNominatim);\n  const [searchData, setSearchData] = useState<boolean>(true);\n  const [useViewBox, setUseViewBox] = useState<boolean>(true);\n  const [searchValue, setSearchValue] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n  const [resultsVisible, setResultsVisible] = useState<boolean>(false);\n  const [settingsVisible, setSettingsVisible] = useState<boolean>(false);\n  const [dataSearchResults, setDataSearchResults] = useState<DataSearchResult[]>([]);\n  const [nominatimResults, setNominatimResults] = useState<NominatimPlace[]>([]);\n  const [searchResults, setSearchResults] = useState<ResultCategory[]>([]);\n\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  useEffect(() => {\n    window.addEventListener('mousedown', handleClickAway);\n\n    return () => {\n      window.removeEventListener('mousedown', handleClickAway);\n    };\n  }, []);\n\n  const handleClickAway = (e: Event) => {\n    const parents = [];\n    let target = e.target;\n    while (target) {\n      parents.unshift(target);\n      target = (target as Node).parentNode;\n    }\n\n    if ((clickAwayRef.current && ((clickAwayRef.current as Element).contains(e.target as Node)))) {\n      return;\n    }\n\n    setResultsVisible(false);\n  };\n\n  const settingsMenu = useMemo(() => {\n    return {\n      items: [{\n        label: (\n          <Checkbox\n            checked={useViewBox}\n            onChange={e => setUseViewBox(e.target.checked)}\n          >\n            {t('MultiSearch.searchInViewBox')}\n          </Checkbox>\n        ),\n        key: 'viewbox'\n      }, {\n        label: (\n          <Checkbox\n            checked={searchData}\n            onChange={e => setSearchData(e.target.checked)}\n          >\n            {t('MultiSearch.searchData')}\n          </Checkbox>\n        ),\n        key: 'data'\n      }, {\n        label: (\n          <Checkbox\n            checked={searchNominatim}\n            onChange={e => setSearchNominatim(e.target.checked)}\n          >\n            {t('MultiSearch.searchNominatim')}\n          </Checkbox>\n        ),\n        key: 'nominatim'\n      }]\n    };\n  }, [searchData, searchNominatim, useViewBox, t]);\n\n  const performSearch = useCallback(async () => {\n\n    if (searchValue.length < minChars) {\n      resetSearch();\n      return;\n    }\n\n    if (!searchData && !searchNominatim) {\n      return;\n    }\n\n    setLoading(true);\n    setNominatimResults([]);\n    setDataSearchResults([]);\n\n    let response;\n    let viewBox: OlExtent | null = null;\n\n    if (useViewBox) {\n      const mapViewProjection = map?.getView().getProjection();\n      const extent = map?.getView()?.calculateExtent();\n      if (extent) {\n        viewBox = transformExtent(extent, mapViewProjection, 'EPSG:4326');\n      }\n    }\n\n    if (searchData && map) {\n      try {\n        const query = generateSolrQuery({\n          searchValue,\n          map\n        });\n        const searchUrl = new URL(`${window.location.origin}${solrSearchBasePath}`);\n\n        const data: {\n          query: string;\n          filterQuery?: string;\n        } = {\n          query\n        };\n\n        if (useViewBox && viewBox) {\n          const bboxFilter = `geometry:[${viewBox[1]},${viewBox[0]} TO ${viewBox[3]},${viewBox[2]}]`;\n          data.filterQuery = bboxFilter;\n        }\n\n        const defaultHeaders = {\n          'Content-Type': 'application/json'\n        };\n\n        response = await fetch(searchUrl.href, {\n          method: 'POST',\n          headers: {\n            ...defaultHeaders,\n            ...getBearerTokenHeader(client?.getKeycloak())\n          },\n          body: JSON.stringify(data)\n        });\n\n        const dataJson = await response.json();\n        setDataSearchResults(dataJson?.response?.docs);\n      } catch (error) {\n        setDataSearchResults([]);\n        logger.error('Error while fetching the layer search results: ', error);\n      } finally {\n        if (!searchNominatim) {\n          setLoading(false);\n        }\n      }\n    }\n\n    if (searchNominatim) {\n      try {\n        const nominatimUrl = new URL('https://nominatim.terrestris.de/search');\n        nominatimUrl.searchParams.set('q', searchValue);\n        nominatimUrl.searchParams.set('format', 'json');\n        nominatimUrl.searchParams.set('polygon_geojson', '1');\n\n        if (useViewBox && viewBox) {\n          nominatimUrl.searchParams.set('viewbox', viewBox.toString());\n          nominatimUrl.searchParams.set('bounded', '1');\n        }\n        response = await fetch(nominatimUrl.href);\n        setNominatimResults(await response.json());\n      }\n      catch (error) {\n        setNominatimResults([]);\n        logger.error('Error while fetching the nominatim results: ', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  }, [searchValue, minChars, searchData, searchNominatim, useViewBox, map, solrSearchBasePath, client]);\n\n  const getFeatureTitle = useCallback((dsResult: DataSearchResult): string => {\n\n    const blacklistedAttributes = [\n      'category',\n      'id',\n      'featureType',\n      'geometry',\n      'search'\n    ];\n\n    let title: string = '';\n\n    // for now, we will use the first attribute that matches the search term.\n    // perspectively we will switch to the search configuration config which will\n    // provide a display template for the feature title among other things\n    Object.keys(dsResult)\n      .filter(key => !blacklistedAttributes.includes(key))\n      .forEach(propKey => {\n        let propValue = dsResult[propKey]?.toString();\n        if (!title && propValue.toLowerCase().indexOf(searchValue?.toLowerCase()) > -1) {\n          // show matched value followed by the attribute name in square brackets (e.g. '53111 Bonn [city]')\n          title = `${propValue} [${propKey}]`;\n        }\n      });\n\n    if (!title) {\n      // fallback -> should never happen after adding of the valid layer search config\n      title = dsResult.id as string;\n    }\n\n    return title;\n\n  }, [searchValue]);\n\n  useEffect(() => {\n\n    if (!map) {\n      return;\n    }\n\n    let updatedResults: ResultCategory[] = [];\n\n    if (nominatimResults.length > 0) {\n\n      const geoJsonFormat = new OlFormatGeoJSON();\n      const nFeats = nominatimResults.map(f => {\n        const olFeat = geoJsonFormat.readFeature(f.geojson, {\n          dataProjection: 'EPSG:4326',\n          featureProjection: map.getView().getProjection()\n        });\n        olFeat.set('title', f.display_name);\n        return olFeat;\n      });\n\n      const nResults: ResultCategory = {\n        title: t('MultiSearch.nominatimTitle'),\n        features: nFeats\n      };\n      updatedResults.push(nResults);\n    }\n\n    if (dataSearchResults?.length > 0) {\n\n      const wktFormat = new OlFormatWKT();\n      // 1. group by category\n      const categories = _groupBy(dataSearchResults, res => res.category[0]);\n      // 2. build features\n      Object.keys(categories).forEach(category => {\n        const features = categories[category].map(dsResult => {\n          if (!dsResult.geometry?.[0]) {\n            return;\n          }\n          const id = dsResult.id as string;\n          const geometry = wktFormat.readGeometry(dsResult.geometry[0], {\n            dataProjection: 'EPSG:4326',\n            featureProjection: map.getView().getProjection()\n          });\n          const olFeat = new OlFeature({\n            geometry\n          });\n          olFeat.set('title', getFeatureTitle(dsResult));\n          let ftName;\n          if (dsResult.featureType?.[0]) {\n            const layer = MapUtil.getLayerByNameParam(map, dsResult.featureType[0] as string);\n            if (layer) {\n              olFeat.set('layer', layer);\n              ftName = layer.get('name');\n            }\n          } else {\n            ftName = id.substring(0, id.lastIndexOf('_'));\n          }\n          olFeat.set('ftName', ftName);\n          return olFeat;\n        }).filter(f => f) as OlFeature<OlGeometry>[];\n        const resultCategory: ResultCategory = {\n          title: category,\n          features\n        };\n        updatedResults.push(resultCategory);\n      });\n\n    }\n\n    setResultsVisible(true);\n    setSearchResults(updatedResults);\n\n  }, [dataSearchResults, getFeatureTitle, map, nominatimResults, t]);\n\n  useEffect(() => {\n\n    const timeout = setTimeout(() => {\n      performSearch();\n    }, delay);\n\n    return () => clearTimeout(timeout);\n\n  }, [performSearch, delay]);\n\n  const resetSearch = () => {\n    setDataSearchResults([]);\n    setNominatimResults([]);\n  };\n\n  const listPrefixRenderer = (item: any) => {\n    const {\n      feature\n    } = item;\n\n    const ftName = feature.get('ftName');\n\n    if (!ftName) {\n      return <></>;\n    }\n\n    return <Tag>{ftName}</Tag>;\n  };\n\n  const actionsCreator = (item: any) => {\n    const feat = item.feature;\n    const layer = feat.get('layer');\n\n    if (!layer?.get('editable')) {\n      return;\n    }\n\n    const onEditFeatureBtnClick = () => {\n      dispatch(setLayerId(getUid(layer)));\n      dispatch(showEditFeatureDrawer());\n      setResultsVisible(false);\n    };\n\n    if (\n      allowedEditMode.includes('CREATE') ||\n      allowedEditMode.includes('DELETE') ||\n      allowedEditMode.includes('UPDATE')\n    ) {\n      return [\n        <Tooltip\n          key=\"edit\"\n          title={t('EditFeatureButton.title')}\n          placement=\"bottom\"\n        >\n          <Button\n            onClick={onEditFeatureBtnClick}\n            icon={<EditOutlined />}\n          />\n        </Tooltip>\n      ];\n    } else {\n      return [<></>];\n    }\n\n  };\n\n  const resultRenderer = () => {\n\n    if (searchValue.length < 2 || !resultsVisible || loading || !dataSearchResults) {\n      return null;\n    }\n\n    const numTotal = nominatimResults.length + dataSearchResults.length;\n\n    if (numTotal === 0) {\n      return (\n        <div\n          className='no-search-result-div'\n        >\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <SearchResultsPanel\n        searchResults={searchResults}\n        numTotal={numTotal}\n        accordion\n        searchTerms={searchValue.split(' ')}\n        listPrefixRenderer={listPrefixRenderer}\n        actionsCreator={actionsCreator}\n        layerStyle={\n          new OlStyle({\n            stroke: new OlStyleStroke({\n              color: 'rgb(255,0,0)',\n              width: 2\n            }),\n            fill: new OlStyleFill({\n              color: 'rgba(255,255,255, 0.5)'\n            }),\n            image: new OlStyleCircle({\n              radius: 10,\n              fill: new OlStyleFill({\n                color: 'rgba(255,255,255, 0.5)'\n              }),\n              stroke: new OlStyleStroke({\n                color: 'rgb(255,0,0)',\n                width: 3\n              })\n            })\n          })\n        }\n      />\n    );\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <div ref={clickAwayRef}>\n      <Input\n        value={searchValue}\n        disabled={!searchData && !searchNominatim}\n        onChange={event => {\n          setLoading(event.target.value !== '');\n          setSearchValue(event.target.value);\n        }}\n        allowClear\n        addonAfter={\n          <Dropdown\n            placement=\"bottomRight\"\n            menu={settingsMenu}\n            trigger={['click']}\n            onOpenChange={setSettingsVisible}\n            open={settingsVisible}\n          >\n            <SettingOutlined />\n          </Dropdown >\n        }\n        onFocus={() => setResultsVisible(true)}\n        placeholder={t('MultiSearch.searchPlaceholder')}\n        prefix={<SearchOutlined />}\n        suffix={loading ? <LoadingOutlined /> : null}\n      />\n      {resultRenderer()}\n    </div>\n  );\n};\n\nexport default MultiSearch;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  InputProps\n} from 'antd/lib/input';\n\nimport logger from '@terrestris/base-util/dist/Logger';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport BasicNominatimSearch from '../BasicNominatimSearch';\nimport MultiSearch from '../MultiSearch';\n\nimport './index.less';\n\ninterface SearchFieldProps extends InputProps { };\n\nexport const SearchField: React.FC<SearchFieldProps> = (): JSX.Element => {\n\n  const useNominatim = useAppSelector((state) => state.searchEngines.includes('nominatim'));\n  const useSolr = useAppSelector((state) => state.searchEngines.includes('solr'));\n\n  if (!useNominatim && !useSolr) {\n    logger.warn('Neither nominatim nor solr search is configured.');\n    return <></>;\n  }\n\n  return (\n    <div className=\"search\">\n      {\n        useSolr ?\n          <MultiSearch\n            useNominatim={useNominatim}\n          /> :\n          <BasicNominatimSearch />\n      }\n    </div>\n  );\n};\n\nexport default SearchField;\n","import md5 from 'js-md5';\n\nexport interface GravatarProps {\n  email: string;\n  size?: number;\n  rating?: 'g' | 'pg' | 'r' | 'x';\n  defaultImage?: '404' | 'mp' | 'identicon' | 'monsterid' | 'wavatar' | 'retro' | 'robohash' | 'blank';\n  force?: boolean;\n}\n\nconst GRAVATAR_BASE_URL = 'https://www.gravatar.com/avatar/';\n\n/**\n * https://de.gravatar.com/site/implement/images/\n */\nexport const getGravatarUrl = ({\n  email = '',\n  size = 80,\n  rating = 'g',\n  defaultImage = 'identicon',\n  force = false\n}: GravatarProps): string => {\n  const lowerCaseEmail = email.toLowerCase();\n  const hash = md5(lowerCaseEmail);\n\n  let url = `${GRAVATAR_BASE_URL}${hash}?s=${size}&r=${rating}&d=${defaultImage}`;\n\n  if (force) {\n    url = `${url}&f=y`;\n  }\n\n  return url;\n};\n\nexport default getGravatarUrl;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  Modal,\n  Statistic\n} from 'antd';\n\nimport {\n  ModalProps\n} from 'antd/lib/modal';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport useAppSelector from '../../hooks/useAppSelector';\n\nimport {\n  useClientVersion\n} from '../../hooks/useVersion';\n\nimport './index.less';\n\ninterface ApplicationInfoProps extends ModalProps {\n  opener?: JSX.Element;\n}\n\nexport const ApplicationInfo: React.FC<ApplicationInfoProps> = ({\n  opener,\n  ...restProps\n}) => {\n  const {\n    t\n  } = useTranslation();\n\n  const appInfo = useAppSelector(state => state.appInfo);\n  const logoPath = useAppSelector(state => state.logoPath);\n  const appDescription = useAppSelector(state => state.description);\n\n  const [isVisible, setVisible] = useState<boolean>(false);\n\n  const toggleVisibility = () => {\n    setVisible(!isVisible);\n  };\n\n  let Opener;\n  if (opener) {\n    Opener = React.cloneElement(\n      opener,\n      {\n        onClick: toggleVisibility\n      }\n    );\n  } else {\n    Opener = <button onClick={toggleVisibility}>Open</button>;\n  }\n\n  return (\n    <>\n      {\n        Opener\n      }\n      <Modal\n        className='application-info'\n        title={t('ApplicationInfo.title')}\n        centered={true}\n        open={isVisible}\n        onOk={toggleVisibility}\n        onCancel={toggleVisibility}\n        footer={null}\n        {...restProps}\n      >\n        <img\n          className=\"logo\"\n          src={logoPath}\n        />\n        <div\n          className=\"description\"\n        >\n          {appDescription}\n        </div>\n        <Statistic\n          title={t('ApplicationInfo.clientVersionTitle')}\n          value={useClientVersion()}\n        />\n        {\n          (appInfo.version && appInfo.buildTime) &&\n          <Statistic\n            title={t('ApplicationInfo.backendVersionTitle')}\n            value={`${appInfo.version} (${appInfo.buildTime})`}\n          />\n        }\n      </Modal>\n    </>\n  );\n};\n\nexport default ApplicationInfo;\n","export const useClientVersion = () => {\n  return PROJECT_VERSION;\n};\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faInfo,\n  faUserCog,\n  faSignOut,\n  faSignIn,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  ItemType\n} from 'antd/lib/menu/hooks/useItems';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _isEmpty from 'lodash/isEmpty';\n\nimport {\n  MenuInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport UserChip from '@terrestris/react-geo/dist/UserChip/UserChip';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport {\n  getGravatarUrl\n} from '../../utils/getGravatarUrl';\n\nimport ApplicationInfo from '../ApplicationInfo';\n\nimport './index.less';\n\ninterface OwnProps { }\n\ntype UserProps = OwnProps;\n\nexport const UserMenu: React.FC<UserProps> = (): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const client = useSHOGunAPIClient();\n  const keycloak = client?.getKeycloak();\n\n  const user = useAppSelector((state) => state.user);\n\n  const onMenuClick = (evt: MenuInfo) => {\n    switch (evt.key) {\n      case 'settings':\n        if (keycloak) {\n          keycloak.accountManagement();\n        }\n        break;\n      case 'info':\n        // Don't do anything, visible state will be handled by the menu itself.\n        break;\n      case 'login':\n        if (keycloak) {\n          keycloak.login();\n        }\n        break;\n      case 'logout':\n        if (keycloak) {\n          keycloak.logout();\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  const getMenu = () => {\n    const login: ItemType = {\n      key: 'login',\n      icon: (\n        <FontAwesomeIcon\n          icon={faSignIn}\n        />\n      ),\n      label: t('UserMenu.loginMenuTitle')\n    };\n\n    const username: ItemType = {\n      key: 'username',\n      label: (\n        <div\n          className=\"user-name\"\n        >\n          <span>\n            {\n              user.providerDetails?.email\n            }\n          </span>\n        </div>\n      )\n    };\n\n    const divider: ItemType = {\n      type: 'divider'\n    };\n\n    const settings: ItemType = {\n      key: 'settings',\n      icon: (\n        <FontAwesomeIcon\n          icon={faUserCog}\n        />\n      ),\n      label: t('UserMenu.settingsMenuTitle')\n    };\n\n    const info: ItemType = {\n      key: 'info',\n      icon: (\n        <FontAwesomeIcon\n          icon={faInfo}\n        />\n      ),\n      label: (\n        <ApplicationInfo\n          opener={\n            <span\n              className=\"info-opener\"\n            >\n              {t('UserMenu.infoMenuTitle')}\n            </span>\n          }\n        />\n      )\n    };\n\n    const logout: ItemType = {\n      key: 'logout',\n      icon: (\n        <FontAwesomeIcon\n          icon={faSignOut}\n        />\n      ),\n      label: t('UserMenu.logoutMenuTitle')\n    };\n\n    const items: ItemType[] = [];\n\n    if (_isEmpty(user)) {\n      if (ClientConfiguration.keycloak?.enabled) {\n        items.push(login);\n      }\n      items.push(info);\n    } else {\n      const accountRoles = keycloak?.tokenParsed?.resource_access?.account?.roles;\n      const hasUserManagementAccess = Array.isArray(accountRoles) && accountRoles.indexOf('manage-account') > -1;\n      const itemsForLoggedInUser = hasUserManagementAccess ? [\n        username,\n        divider,\n        settings,\n        info,\n        divider,\n        logout\n      ] : [\n        username,\n        divider,\n        info,\n        divider,\n        logout\n      ];\n\n      items.push(...itemsForLoggedInUser);\n    }\n\n    return {\n      items,\n      onClick: onMenuClick\n    };\n  };\n\n  return (\n    <UserChip\n      size={'small'}\n      imageSrc={getGravatarUrl({\n        email: user.providerDetails?.email || '',\n        size: 28\n      })}\n      userName={\n        <FontAwesomeIcon\n          icon={faAngleDown}\n        />\n      }\n      userMenu={getMenu()}\n    />\n  );\n};\n\nexport default UserMenu;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  useAppSelector\n} from '../../hooks/useAppSelector';\nimport {\n  usePlugins\n} from '../../hooks/usePlugins';\n\nimport {\n  HeaderPlacementOrientation,\n  isHeaderIntegration\n} from '../../plugin';\nimport SearchField from '../SearchField';\n\nimport UserMenu from '../UserMenu';\n\nimport './index.less';\n\nexport interface HeaderProps extends React.ComponentProps<'div'> { };\n\nexport const Header: React.FC<HeaderProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const title = useAppSelector((state) => state.title);\n  const logoPath = useAppSelector((state) => state.logoPath);\n  const plugins = usePlugins();\n\n  const insertPlugins = (itemPosition: HeaderPlacementOrientation, items: JSX.Element[]) => {\n    plugins.forEach(plugin => {\n      if (isHeaderIntegration(plugin.integration) && plugin.integration?.placementOrientation === itemPosition) {\n        const {\n          key,\n          wrappedComponent: WrappedPluginComponent\n        } = plugin;\n\n        items.splice(plugin.integration?.insertionIndex || 0, 0,\n          <WrappedPluginComponent\n            key={key}\n          />\n        );\n      }\n    });\n  };\n\n  const getLeftItems = () => {\n    const items = [(\n      <img\n        key=\"logo\"\n        className=\"logo\"\n        src={logoPath}\n      />\n    ), (\n      <div\n        key=\"title\"\n        className=\"title\"\n      >\n        {title}\n      </div>\n    )];\n\n    insertPlugins('left', items);\n\n    return items;\n  };\n\n  const getCenterItems = () => {\n    const items = [\n      <SearchField\n        key=\"search\"\n      />\n    ];\n\n    insertPlugins('center', items);\n\n    return items;\n  };\n\n  const getRightItems = () => {\n    const items = [\n      <UserMenu\n        key=\"user-menu\"\n      />\n    ];\n\n    insertPlugins('right', items);\n\n    return items;\n  };\n\n  return (\n    <div\n      className=\"header\"\n      {...restProps}\n    >\n      <div\n        className=\"item-container left-items\"\n      >\n        {\n          getLeftItems()\n        }\n      </div>\n      <div\n        className=\"item-container center-items\"\n      >\n        {\n          getCenterItems()\n        }\n      </div>\n      <div\n        className=\"item-container right-items\"\n      >\n        {\n          getRightItems()\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\n\nimport {\n  Alert,\n  Spin\n} from 'antd';\n\nimport OlLayer from 'ol/layer/Layer';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\n\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport './index.less';\n\nexport type LayerConfigurationProps = React.ComponentProps<'pre'> & {\n  layer?: OlLayer;\n};\n\nexport const LayerConfiguration: React.FC<LayerConfigurationProps> = ({\n  layer,\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const [layerConfiguration, setLayerConfiguration] = useState<Layer>();\n\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const getLayerConfiguration = useCallback(async () => {\n    try {\n      setLoading(true);\n      setErrorMessage('');\n\n      if (!layer || !layer.get('shogunId')) {\n        throw new Error('No layer provided or the layer has no shogunId set');\n      }\n\n      const conf = await client?.layer().findOne(layer.get('shogunId'));\n\n      setLayerConfiguration(conf);\n    } catch (error) {\n      Logger.error(error);\n      setErrorMessage(t('LayerConfiguration.errorMessage'));\n    } finally {\n      setLoading(false);\n    }\n  }, [t, client, layer]);\n\n  useEffect(() => {\n    getLayerConfiguration();\n  }, [getLayerConfiguration]);\n\n  if (errorMessage) {\n    return (\n      <Alert\n        type=\"error\"\n        closable={true}\n        message={errorMessage}\n      />\n    );\n  }\n\n  return (\n    <Spin\n      spinning={loading}\n    >\n      <pre\n        className=\"layer-configuration\"\n        {...restProps}\n      >\n        <code>\n          {\n            JSON.stringify(layerConfiguration, null, '  ')\n          }\n        </code>\n      </pre>\n    </Spin>\n  );\n};\n\nexport default LayerConfiguration;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\n\nimport {\n  Alert,\n  Form,\n  FormProps,\n  Spin\n} from 'antd';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayer from 'ol/layer/Layer';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport CapabilitiesUtil from '@terrestris/ol-util/dist/CapabilitiesUtil/CapabilitiesUtil';\n\nimport {\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport './index.less';\n\nexport type LayerDetailsProps = Partial<FormProps> & {\n  layer?: OlLayer;\n};\n\nexport const LayerDetails: React.FC<LayerDetailsProps> = ({\n  layer,\n  ...restProps\n}): JSX.Element => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [capabilities, setCapabilities] = useState<any>();\n  const [errorMessage, setErrorMessage] = useState<string>();\n\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const getCapabilities = useCallback(async () => {\n    if (!layer || !isWmsLayer(layer)) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setErrorMessage('');\n\n      const capa = await CapabilitiesUtil.getWmsCapabilitiesByLayer(\n        (layer as OlLayerImage<OlSourceImageWMS> | OlLayerTile<OlSourceTileWMS>), {\n          headers: {\n            ...layer.get('useBearerToken') ? {\n              ...getBearerTokenHeader(client?.getKeycloak())\n            } : undefined\n          }\n        });\n\n      setCapabilities(capa);\n    } catch (error) {\n      Logger.error(error);\n      setErrorMessage(t('LayerDetails.errorMessage'));\n    } finally {\n      setLoading(false);\n    }\n  }, [t, client, layer]);\n\n  useEffect(() => {\n    getCapabilities();\n  }, [getCapabilities]);\n\n  const getLayerName = () => {\n    if (!layer) {\n      return;\n    }\n\n    if (isWmsLayer(layer)) {\n      return layer.getSource()?.getParams().LAYERS;\n    }\n  };\n\n  const getCapabilitiesUrl = () => {\n    if (!layer) {\n      return;\n    }\n\n    if (isWmsLayer(layer)) {\n      let layerUrl;\n      if (layer.getSource() instanceof OlSourceImageWMS) {\n        layerUrl = (layer.getSource() as OlSourceImageWMS).getUrl();\n      }\n      if (layer.getSource() instanceof OlSourceTileWMS) {\n        const urls = (layer.getSource() as OlSourceTileWMS).getUrls();\n        layerUrl = urls ? urls[0] : undefined;\n      }\n\n      if (layerUrl) {\n        return UrlUtil.createValidGetCapabilitiesRequest(layerUrl, 'WMS', '1.3.0');\n      }\n    }\n  };\n\n  const getCapabilitiesLayer = () => {\n    const layers: any[] = capabilities?.Capability?.Layer?.Layer;\n    const layerName = getLayerName();\n\n    const lay = layers?.find(l => l.Name === layerName);\n\n    return lay;\n  };\n\n  const getBBox = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.EX_GeographicBoundingBox?.join(', ');\n  };\n\n  const getMinScale = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.MinScaleDenominator;\n  };\n\n  const getMaxScale = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.MaxScaleDenominator;\n  };\n\n  const getAbstract = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.Abstract;\n  };\n\n  const getServiceAbstract = () => {\n    return capabilities?.Service?.Abstract;\n  };\n\n  const getContact = () => {\n    return capabilities?.Service?.ContactInformation?.ContactElectronicMailAddress;\n  };\n\n  const getLayerTitle = () => {\n    const lay = getCapabilitiesLayer();\n\n    if (!lay) {\n      return;\n    }\n\n    return lay.Title;\n  };\n\n  const getAccessConstraints = () => {\n    return capabilities?.Service?.AccessConstraints;\n  };\n\n  if (errorMessage) {\n    return (\n      <Alert\n        type=\"error\"\n        closable={true}\n        message={errorMessage}\n      />\n    );\n  }\n\n  return (\n    <Spin\n      spinning={loading}\n    >\n      <Form\n        className=\"layer-details\"\n        layout=\"horizontal\"\n        size=\"small\"\n        labelAlign=\"left\"\n        labelWrap={true}\n        labelCol={{\n          flex: '150px'\n        }}\n        {...restProps}\n      >\n        <Form.Item\n          name=\"layerName\"\n          label={t('LayerDetails.layerNameLabel')}\n        >\n          <span>{getLayerName() ? getLayerName() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"layerTitle\"\n          label={t('LayerDetails.layerTitleLabel')}\n        >\n          <span>{getLayerTitle() ? getLayerTitle() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"service-abstract\"\n          label={t('LayerDetails.serviceAbstractLabel')}\n        >\n          <span>{getServiceAbstract() ? getServiceAbstract() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"abstract\"\n          label={t('LayerDetails.abstractLabel')}\n        >\n          <span>{getAbstract() ? getAbstract() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"accessConstraints\"\n          label={t('LayerDetails.accessConstraintsLabel')}\n        >\n          <span>{getAccessConstraints() ? getAccessConstraints() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"CapabilitiesUrl\"\n          label={t('LayerDetails.capabilitiesUrlLabel')}\n        >\n          <a href={getCapabilitiesUrl()}>{getCapabilitiesUrl()}</a>\n        </Form.Item>\n        <Form.Item\n          name=\"contact\"\n          label={t('LayerDetails.contactLabel')}\n        >\n          {getContact() ? <a href={`mailto:${getContact()}`}>{getContact()}</a> : <span>{t('LayerDetails.noDataPlaceholder')}</span>}\n        </Form.Item>\n        <Form.Item\n          name=\"minScale\"\n          label={t('LayerDetails.minScaleLabel')}\n        >\n          <span>{getMinScale() ? getMinScale() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"maxScale\"\n          label={t('LayerDetails.maxScaleLabel')}\n        >\n          <span>{getMaxScale() ? getMaxScale() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n        <Form.Item\n          name=\"bbox\"\n          label={t('LayerDetails.bboxLabel')}\n        >\n          <span>{getBBox() ? getBBox() : t('LayerDetails.noDataPlaceholder')}</span>\n        </Form.Item>\n      </Form>\n    </Spin>\n  );\n};\n\nexport default LayerDetails;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport {\n  FileTextOutlined\n} from '@ant-design/icons';\n\nimport {\n  Button,\n  Modal,\n  ModalProps,\n  Tooltip\n} from 'antd';\n\nimport OlLayer from 'ol/layer/Layer';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\n\nimport {\n  hide as hideLayerDetailsModal,\n  setLayer as setDetailsLayer\n} from '../../store/layerDetailsModal';\n\nimport LayerConfiguration from './LayerConfiguration';\nimport LayerDetails from './LayerDetails';\n\nimport './index.less';\n\nexport type LayerDetailsModalProps = {} & Partial<ModalProps>;\n\nexport const LayerDetailsModal: React.FC<LayerDetailsModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [layer, setLayer] = useState<OlLayer>();\n  const [configurationVisible, setConfigurationVisible] = useState<boolean>(false);\n\n  const isModalVisible = useAppSelector(state => state.layerDetailsModal.visible);\n  const layerId = useAppSelector(state => state.layerDetailsModal.layerId);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    if (!layerId) {\n      setLayer(undefined);\n      return;\n    }\n\n    const l = MapUtil.getLayerByOlUid(map, layerId);\n\n    if (!(l instanceof OlLayer)) {\n      return;\n    }\n\n    setLayer(l);\n  }, [map, layerId]);\n\n  const closeModal = () => {\n    dispatch(hideLayerDetailsModal());\n    dispatch(setDetailsLayer(undefined));\n  };\n\n  const onShowConfigurationClick = () => {\n    setConfigurationVisible(!configurationVisible);\n  };\n\n  return (\n    <Modal\n      className=\"layer-details-modal\"\n      title={(\n        <div\n          className=\"title-group\"\n        >\n          <span>{t('LayerDetailsModal.title', {\n            layerName: layer?.get('name')\n          })}\n          </span>\n          {\n            layer?.get('shogunId') && (\n              <Tooltip\n                title={configurationVisible ?\n                  t('LayerDetailsModal.internalConfigurationButtonTooltip') :\n                  t('LayerDetailsModal.internalConfigurationButtonTooltipPressed')\n                }\n              >\n                <Button\n                  type=\"link\"\n                  className={configurationVisible ? 'pressed' : ''}\n                  icon={<FileTextOutlined />}\n                  onClick={onShowConfigurationClick}\n                />\n              </Tooltip>\n            )\n          }\n        </div>\n      )}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={800}\n      footer={false}\n      {...restProps}\n    >\n      <LayerDetails\n        layer={layer}\n        hidden={configurationVisible}\n      />\n      {\n        layer?.get('shogunId') && (\n          <LayerConfiguration\n            layer={layer}\n            hidden={!configurationVisible}\n          />\n        )\n      }\n    </Modal>\n  );\n};\n\nexport default LayerDetailsModal;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport './index.less';\n\nimport {\n  Select\n} from 'antd';\n\nconst {\n  Option\n} = Select;\n\nimport i18n from '../../i18n';\n\nexport const LanguageSelect = () => {\n  const supportedLanguages = Object.keys(i18n.services.resourceStore.data);\n\n  const onLanguageChange = (lang: string) => {\n    i18n.changeLanguage(lang);\n  };\n\n  return (\n    <div className=\"language-select\">\n      <Select\n        defaultValue={i18n.language || 'en'}\n        onChange={onLanguageChange}\n      >\n        {\n          supportedLanguages.map(supportedLanguage => {\n            return (\n              <Option\n                key={supportedLanguage}\n                value={supportedLanguage}\n              >\n                {supportedLanguage.toUpperCase()}\n              </Option>\n            );\n          })\n        }\n      </Select>\n    </div>\n  );\n};\n\nexport default LanguageSelect;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect, useState, useMemo\n} from 'react';\n\nimport {\n  CopyOutlined,\n  MailOutlined,\n  TwitterOutlined,\n  WhatsAppOutlined\n} from '@ant-design/icons';\nimport {\n  Input, Tooltip, message\n} from 'antd';\nimport copy from 'copy-to-clipboard';\nimport {\n  EventsKey\n} from 'ol/events';\nimport BaseLayer from 'ol/layer/Base';\nimport LayerGroup from 'ol/layer/Group';\nimport ImageLayer from 'ol/layer/Image';\nimport TileLayer from 'ol/layer/Tile';\nimport {\n  unByKey\n} from 'ol/Observable';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport PermalinkUtil from '@terrestris/ol-util/dist/PermalinkUtil/PermalinkUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\n\nimport './index.less';\n\ninterface DefaultPermalinkProps { }\n\nexport interface PermalinkProps extends Partial<DefaultPermalinkProps> { }\n\nexport const Permalink: React.FC<PermalinkProps> = () => {\n  const map = useMap();\n  const layerAttributes = useMemo(() => [\n    'layerConfig',\n    'isExternalLayer',\n    'isUploadedLayer',\n    'groupName'\n  ], []);\n  const {\n    t\n  } = useTranslation();\n\n  const initialPermalink = map ? PermalinkUtil.getLink(\n    map,\n    ';',\n    l => l.get('name'),\n    l => (l instanceof TileLayer || l instanceof ImageLayer) && l.getVisible(),\n    layerAttributes\n  ) : '';\n\n  const [permalink, setPermalink] = useState(initialPermalink);\n\n  const mailSubject = 'SHOGun Web-GIS';\n  const mailBody = `Hey,\\r\\ncheck out the layer-composition I created:\\r\\n\\r\\n${permalink}`;\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n    let eventKeys: EventsKey[] = [];\n\n    const identifierFunction = (l: BaseLayer) => l.get('name');\n    const filterFunction = (l: BaseLayer) => (l instanceof TileLayer || l instanceof ImageLayer) && l.getVisible();\n    const updatePermalink = () => {\n      setPermalink(PermalinkUtil.getLink(\n        map,\n        ';',\n        identifierFunction,\n        filterFunction,\n        layerAttributes\n      ));\n    };\n\n    const updateLayerConfig = () => {\n      const externalLayers = map.getAllLayers().filter(l => l.get('isExternalLayer') || l.get('isUploadedLayer'));\n      externalLayers.forEach(externalLayer => {\n        const layerConfig = externalLayer.get('layerConfig') as Layer;\n        if (layerConfig) {\n          if (layerConfig.clientConfig) {\n            layerConfig.clientConfig.opacity = externalLayer.getOpacity();\n          } else {\n            layerConfig.clientConfig = {\n              opacity: externalLayer.getOpacity()\n            };\n          }\n          externalLayer.set('layerConfig', layerConfig);\n        }\n      });\n      updatePermalink();\n    };\n\n    const registerLayerCallback = (layerGroup: LayerGroup) => {\n      const layersInGroup = layerGroup.getLayers().getArray();\n      for (let i = 0; i < layersInGroup.length; i++) {\n        const layerInGroup = layersInGroup[i];\n\n        if (layerInGroup instanceof LayerGroup) {\n          registerLayerCallback(layerInGroup);\n        } else {\n          let eventKeyVisibility = layerInGroup.on('change:visible', updatePermalink);\n          let eventKeyOpacity = layerInGroup.on('change:opacity', updateLayerConfig);\n          eventKeys.push(eventKeyVisibility, eventKeyOpacity);\n        }\n      }\n    };\n\n    const listenerKeyCenter = map.getView().on('change:center', updatePermalink);\n    const listenerKeyResolution = map.getView().on('change:resolution', updatePermalink);\n\n    let mapLayerGroup = map.getLayerGroup();\n    registerLayerCallback(mapLayerGroup);\n    updateLayerConfig();\n\n    return () => {\n      unByKey(listenerKeyCenter);\n      unByKey(listenerKeyResolution);\n      unByKey(eventKeys);\n    };\n  }, [layerAttributes, map, t]);\n\n  function onTwitterClick() {\n    const twitterUrl = new URL('https://twitter.com/intent/tweet');\n    twitterUrl.searchParams.set('url', mailBody);\n    window.open(twitterUrl);\n  }\n\n  function onWhatsAppClick() {\n    const whatsAppUrl = new URL('https://wa.me');\n    whatsAppUrl.searchParams.set('text', mailBody);\n    window.open(whatsAppUrl);\n  }\n\n  function onMailClick() {\n    const mailToUrl = new URL('mailto:');\n    mailToUrl.searchParams.set('subject', mailSubject);\n    mailToUrl.searchParams.set('body', mailBody);\n    window.open(mailToUrl.toString().replace(/\\+/g, '%20'), '_self');\n  }\n\n  function onCopyClick() {\n    const success = copy(permalink);\n    if (success) {\n      message.info(t('Permalink.copiedToClipboard'));\n    } else {\n      message.info(t('Permalink.copyToClipboardFailed'));\n    }\n  }\n\n  return (\n    <div className=\"permalink-wrapper\">\n      <div className=\"icons\">\n        <Tooltip title={t('Permalink.twitterTooltip')}>\n          <TwitterOutlined onClick={onTwitterClick} />\n        </Tooltip>\n        <Tooltip title={t('Permalink.whatsAppTooltip')}>\n          <WhatsAppOutlined onClick={onWhatsAppClick} />\n        </Tooltip>\n        <Tooltip title={t('Permalink.mailTooltip')}>\n          <MailOutlined onClick={onMailClick} />\n        </Tooltip>\n      </div>\n      <div className=\"link\">\n        <Input value={permalink}\n          readOnly\n        />\n        <Tooltip title={t('Permalink.copyTooltip')}>\n          <CopyOutlined onClick={onCopyClick} />\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nexport default Permalink;\n","import OlLayer from 'ol/layer/Layer';\n\nimport MapFishPrintV3WMSSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3WMSSerializer';\n\nexport class SHOGunMapFishPrintV3WMSSerializer extends MapFishPrintV3WMSSerializer {\n\n  serialize(layer: OlLayer, opts?: any) {\n    const serialized: any = super.serialize(layer, opts);\n\n    if (serialized.baseURL.startsWith('/geoserver/ows')) {\n      serialized.baseURL = `http://shogun-geoserver:8080${serialized.baseURL}`;\n    }\n\n    if (serialized.baseURL.startsWith('/geoserver/SHOGUN')) {\n      serialized.baseURL = `http://shogun-geoserver:8080${serialized.baseURL}`;\n    }\n\n    return serialized;\n  }\n}\n\nexport default SHOGunMapFishPrintV3WMSSerializer;\n","import defaultsDeep from 'lodash/defaultsDeep';\n\nimport OlLayer from 'ol/layer/Layer';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport MapFishPrintV3TiledWMSSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3TiledWMSSerializer';\n\nimport SHOGunMapFishPrintV3WMSSerializer from './SHOGunMapFishPrintV3WMSSerializer';\n\nexport class SHOGunMapFishPrintV3TiledWMSSerializer extends SHOGunMapFishPrintV3WMSSerializer {\n\n  serialize(layer: OlLayer<OlSourceTileWMS>, opts: any) {\n    const optsToApply = {\n      tileSize: [512, 512],\n      ...opts\n    };\n\n    const source = layer.getSource();\n\n    if (!source || !this.validateSource(source)) {\n      return;\n    }\n\n    const serialized = {\n      ...super.serialize(layer, optsToApply),\n      ...{\n        type: MapFishPrintV3TiledWMSSerializer.TYPE_WMS\n      },\n      ...opts\n    };\n\n    return serialized;\n  }\n}\n\nexport default SHOGunMapFishPrintV3TiledWMSSerializer;\n","import React, {\n  useEffect, useState\n} from 'react';\n\nimport { Input } from 'antd';\nimport { InputProps } from 'antd/lib/input';\n\nimport _isNil from 'lodash/isNil';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport { addCustomParam } from '../../../store/print';\n\ninterface CustomFieldInputProps extends InputProps {}\n\nexport const CustomFieldInput: React.FC<CustomFieldInputProps> = ({\n  value,\n  id,\n  placeholder,\n  maxLength,\n  ...restProps\n}): JSX.Element => {\n\n  const [inputText, setInputText] = useState<any>(value);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (!_isNil(id)) {\n      dispatch(addCustomParam({\n        [id]: inputText\n      }));\n    }\n  }, [inputText, id, dispatch]);\n\n  useEffect(() => {\n    setInputText(value);\n  }, [value]);\n\n  return (\n    <Input\n      id={id}\n      value={inputText}\n      onChange={(event) => setInputText(event.target.value)}\n      placeholder={placeholder}\n      maxLength={maxLength}\n      showCount={!!(maxLength && maxLength > 1)}\n      {...restProps}\n    />\n  );\n};\n\nexport default CustomFieldInput;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport {\n  Layout\n} from '../';\n\nexport interface LayoutSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const LayoutSelect: React.FC<LayoutSelectProps> = ({\n  printManager,\n  placeholder = 'Bitte wählen Sie eine Vorlage aus',\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [layout, setLayout] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setLayout(layout);\n    }\n  }, [printManager, layout]);\n\n  useEffect(() => {\n    setLayout(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={layout}\n      onChange={setLayout}\n      {...restProps}\n    >\n      {\n        printManager?.getLayouts().map((l: Layout) => (\n          <Select.Option\n            key={l.name}\n            value={l.name}\n          >\n            {l.name}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default LayoutSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface OutputFormatSelectProps extends SelectProps<string> {\n  printManager: MapFishPrintV3Manager;\n  outputFormats: string[];\n}\n\nexport const OutputFormatSelect: React.FC<OutputFormatSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  outputFormats,\n  ...restProps\n}): JSX.Element => {\n\n  const [outputFormat, setOutputFormat] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setOutputFormat(outputFormat);\n    }\n  }, [printManager, outputFormat]);\n\n  useEffect(() => {\n    setOutputFormat(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={outputFormat}\n      onChange={setOutputFormat}\n      {...restProps}\n    >\n      {\n        outputFormats.map((f: string) => (\n          <Select.Option\n            key={f}\n            value={f}\n          >\n            {f.toLocaleUpperCase()}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default OutputFormatSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nexport interface ResolutionSelectProps extends SelectProps<number> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const ResolutionSelect: React.FC<ResolutionSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const [resolution, setResolution] = useState<any>(value);\n\n  useEffect(() => {\n    if (printManager) {\n      printManager.setDpi(resolution);\n    }\n  }, [printManager, resolution]);\n\n  useEffect(() => {\n    setResolution(value);\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={resolution}\n      onChange={setResolution}\n      {...restProps}\n    >\n      {\n        printManager?.getDpis().map((d: number) => (\n          <Select.Option\n            key={d}\n            value={d}\n          >\n            {`${d} DPI`}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default ResolutionSelect;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport {\n  SelectProps\n} from 'antd/lib/select';\n\nimport {\n  MapFishPrintV3Manager\n} from '@terrestris/mapfish-print-manager';\n\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport interface ScaleSelectProps extends SelectProps<number> {\n  printManager: MapFishPrintV3Manager;\n}\n\nexport const ScaleSelect: React.FC<ScaleSelectProps> = ({\n  printManager,\n  placeholder,\n  value,\n  ...restProps\n}): JSX.Element => {\n\n  const map = useMap();\n\n  const [scale, setScale] = useState<number>(0);\n\n  useEffect(() => {\n    if (printManager && scale) {\n      printManager.setScale(scale);\n    }\n  }, [printManager, scale]);\n\n  useEffect(() => {\n    const updateScale = () => {\n      const pmScale = printManager.getScale();\n      if (pmScale) {\n        setScale(pmScale);\n      }\n    };\n    const transformInteraction = map?.getInteractions().getArray().find(i => {\n      return i.get('name') === MapFishPrintV3Manager.TRANSFORM_INTERACTION_NAME;\n    });\n\n    if (printManager && transformInteraction) {\n      if (transformInteraction) {\n        // @ts-ignore\n        transformInteraction.on('scaling', updateScale);\n\n        return () => {\n          // @ts-ignore\n          transformInteraction.un('scaling', updateScale);\n        };\n      }\n    }\n  }, [printManager, map]);\n\n  useEffect(() => {\n    if (value) {\n      setScale(value);\n    }\n  }, [value]);\n\n  return (\n    <Select\n      placeholder={placeholder}\n      value={scale}\n      onChange={setScale}\n      {...restProps}\n    >\n      {\n        printManager?.getScales().map((s: number) => (\n          <Select.Option\n            key={s}\n            value={s}\n          >\n            {`1 : ${s.toLocaleString()}`}\n          </Select.Option>\n        ))\n      }\n    </Select>\n  );\n};\n\nexport default ScaleSelect;\n","import OlLayer from 'ol/layer/Layer';\nimport OlRendererLayer from 'ol/renderer/Layer';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSource from 'ol/source/Source';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport Shared from '@terrestris/mapfish-print-manager/dist/util/Shared';\n\nShared.getLegendGraphicUrl = (layer: OlLayer<OlSource, OlRendererLayer<any>>): string => {\n  if (layer.get('legendUrl')) {\n    return layer.get('legendUrl');\n  }\n\n  if (layer.getSource() instanceof OlSourceTileWMS ||\n    layer.getSource() instanceof OlSourceImageWMS) {\n\n    const customParams: any = layer.get('customPrintLegendParams');\n    const source: any = layer.getSource();\n\n    const {\n      LAYERS,\n      VERSION,\n      FORMAT\n    } = source.getParams();\n\n    let url: string = source instanceof OlSourceImageWMS ?\n      source.getUrl() :\n      source.getUrls()[0];\n\n    if (url.startsWith('/geoserver/ows')) {\n      url = `http://shogun-geoserver:8080${url}`;\n    }\n\n    const params: any = {\n      LAYER: LAYERS.split(',')[0],\n      VERSION: VERSION || '1.3.0',\n      SERVICE: 'WMS',\n      REQUEST: 'GetLegendGraphic',\n      FORMAT: FORMAT || 'image/png',\n      ...customParams\n    };\n\n    const queryParams = Object.keys(params).map(key => {\n      return `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`;\n    }).join('&');\n\n    if (url.startsWith('/geoserver/SHOGUN')) {\n      url = `http://shogun-geoserver:8080${url}/service?`;\n      return `${url}${queryParams}`;\n    }\n\n    if (url.endsWith('?')) {\n      return `${url}${queryParams}`;\n    } else {\n      return `${url}?${queryParams}`;\n    }\n  }\n\n  return '';\n};\n","import React, {\n  useCallback, useEffect, useState\n} from 'react';\n\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n  Alert, Button, Form\n} from 'antd';\nimport { FormProps } from 'antd/lib/form/Form';\nimport ClientConfiguration from 'clientConfig';\nimport _isNil from 'lodash/isNil';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayer from 'ol/layer/Layer';\nimport OlSource from 'ol/source/Source';\n\nimport { useTranslation } from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport { MapFishPrintV3Manager } from '@terrestris/mapfish-print-manager';\nimport { MapFishPrintV3ManagerOpts } from '@terrestris/mapfish-print-manager/dist/manager/MapFishPrintV3Manager';\nimport MapFishPrintV3GeoJsonSerializer\n  from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3GeoJsonSerializer';\nimport MapFishPrintV3OSMSerializer from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3OSMSerializer';\nimport MapFishPrintV3WMTSSerializer\n  from '@terrestris/mapfish-print-manager/dist/serializer/MapFishPrintV3WMTSSerializer';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\nimport { useMap } from '@terrestris/react-geo/dist/Hook/useMap';\nimport { getBearerTokenHeader } from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport SHOGunMapFishPrintV3TiledWMSSerializer from '../PrintForm/Serializer/SHOGunMapFishPrintV3TiledWMSSerializer';\nimport SHOGunMapFishPrintV3WMSSerializer from '../PrintForm/Serializer/SHOGunMapFishPrintV3WMSSerializer';\n\nimport CustomFieldInput from './CustomFieldInput';\nimport LayoutSelect from './LayoutSelect';\nimport OutputFormatSelect from './OutputFormatSelect';\nimport ResolutionSelect from './ResolutionSelect';\nimport ScaleSelect from './ScaleSelect';\n\nimport '../PrintForm/Shared/Shared';\n\nexport interface Layout {\n  name: string;\n  attributes: any[];\n}\n\nexport interface PrintFormProps extends Omit<FormProps, 'form'> {\n  active: boolean;\n  customPrintScales?: number[];\n  layerBlackList?: string[];\n  layouts?: Layout[];\n  outputFormats?: string[];\n}\n\nexport const PrintForm: React.FC<PrintFormProps> = ({\n  active,\n  customPrintScales = [],\n  layerBlackList = [],\n  outputFormats=['pdf', 'png'],\n  ...restProps\n}): JSX.Element => {\n\n  const [form] = Form.useForm();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  const map = useMap();\n\n  const currentLanguageCode = i18n.language;\n\n  const client = useSHOGunAPIClient();\n\n  const customMapParams = useAppSelector(state => state.print.customMapParams);\n  const customParams = useAppSelector(state => state.print.customParams);\n\n  const [printManager, setPrintManager] = useState<MapFishPrintV3Manager | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [errorMsg, setErrorMsg] = useState<string | null>(null);\n\n  const layerFilter = useCallback((l: OlLayer<OlSource>) => {\n    if (!map) {\n      return;\n    }\n\n    const layerName = l.get('name');\n\n    return layerName && !layerBlackList.includes(layerName) &&\n      l.getVisible() && !(l instanceof OlLayerGroup) &&\n      MapUtil.layerInResolutionRange(l, map);\n  }, [map, layerBlackList]);\n\n  const legendFilter = useCallback((l: OlLayer<OlSource>) => {\n    if (_isNil(map)) {\n      return false;\n    }\n    const layerName = l.get('name');\n    const notBlacklisted = !layerBlackList.includes(layerName);\n    const notHidden = !l.get('hideLegendInPrint');\n    const visible = l.getVisible() && MapUtil.layerInResolutionRange(l, map);\n    const printableLayer = !(l instanceof OlLayerGroup);\n\n    if (notBlacklisted && notHidden && visible && printableLayer) {\n      const res = map?.getView().getResolution();\n      if (res) {\n        l.set('customPrintLegendParams', {\n          SCALE: MapUtil.getScaleForResolution(res, 'm')\n        });\n      }\n      return true;\n    }\n    return false;\n  }, [map, layerBlackList]);\n\n  const initializeMapProvider = useCallback(async () => {\n    if (_isNil(map)) {\n      return;\n    }\n    let pManagerOpts: MapFishPrintV3ManagerOpts = {\n      url: ClientConfiguration.print?.url || '/print',\n      map,\n      customPrintScales: map\n        ?.getView()\n        ?.getResolutions()\n        ?.map((d: number | undefined) => {\n          const units = map?.getView()?.getProjection()?.getUnits();\n          if (typeof d !== 'undefined') {\n            const scale = MapUtil.getScaleForResolution(d, units);\n            if (typeof scale !== 'undefined') {\n              return MapUtil.roundScale(scale);\n            }\n          }\n          return undefined;\n        })\n        .filter((scale: number | undefined) => typeof scale !== 'undefined')\n        ?.reverse() as number[] | undefined,\n      timeout: 60000,\n      layerFilter,\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak())\n      },\n      transformOpts: {\n        rotate: false\n      },\n      serializers: [\n        new MapFishPrintV3GeoJsonSerializer(),\n        new MapFishPrintV3OSMSerializer(),\n        new MapFishPrintV3WMTSSerializer(),\n        new SHOGunMapFishPrintV3WMSSerializer(),\n        new SHOGunMapFishPrintV3TiledWMSSerializer()\n      ],\n      legendFilter\n    };\n\n    if (customPrintScales.length > 0) {\n      pManagerOpts = {\n        ...pManagerOpts,\n        ...{\n          customPrintScales: customPrintScales.reverse()\n        }\n      };\n    }\n\n    const pManager: MapFishPrintV3Manager = new MapFishPrintV3Manager(pManagerOpts);\n\n    try {\n      await pManager.init();\n\n      // Use locale print app if available.\n      // Implies that a print app with the language code exists.\n      const apps = pManager.getPrintApps();\n\n      if (apps && currentLanguageCode && apps.includes(currentLanguageCode)) {\n        await pManager.setPrintApp(currentLanguageCode);\n      }\n\n      pManager.setOutputFormat(pManager.getOutputFormats()[0]);\n      pManager.setDpi(pManager.getDpis()[0]);\n      pManager.setLayout(pManager.getLayouts()[0]?.name);\n\n      setPrintManager(pManager);\n    } catch (error) {\n      setErrorMsg(() => t('PrintForm.managerErrorMessage'));\n      Logger.error('Could not initialize print manager: ', error);\n    }\n  }, [client, layerFilter, legendFilter, map, t, customPrintScales, currentLanguageCode]);\n\n  useEffect(() => {\n    if (active) {\n      if (!printManager) {\n        initializeMapProvider();\n      }\n    } else {\n      printManager?.shutdownManager();\n      setPrintManager(null);\n    }\n  }, [printManager, active, initializeMapProvider]);\n\n  useEffect(() => {\n    if (printManager) {\n      if (customParams) {\n        printManager.setCustomParams(customParams);\n      }\n      if (customMapParams) {\n        printManager.setCustomMapParams(customMapParams);\n      }\n    }\n  }, [printManager, customParams, customMapParams]);\n\n  const onDownloadClick = async () => {\n    try {\n      setErrorMsg(null);\n      setLoading(true);\n\n      if (!printManager) {\n        return;\n      }\n\n      const downloadUrl = await printManager.print(false);\n\n      if (!downloadUrl) {\n        throw new Error('No download URL available, the job has failed.');\n      }\n\n      window.open(downloadUrl);\n    } catch (error: any) {\n      setErrorMsg(t('PrintForm.printJobErrorMsg') || null);\n      Logger.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onAlertClose = () => {\n    setErrorMsg(null);\n  };\n\n  return (\n    <div className=\"print\">\n      {\n        errorMsg &&\n        <Alert\n          className=\"print-alert\"\n          message={errorMsg}\n          type=\"error\"\n          closable\n          showIcon\n          onClose={onAlertClose}\n        />\n      }\n      {\n        printManager?.isInitiated() && (\n          <>\n            <Form\n              form={form}\n              className=\"print-form\"\n              labelAlign=\"left\"\n              labelCol={{\n                flex: '90px'\n              }}\n              {...restProps}\n            >\n              <Form.Item\n                name=\"title\"\n                label={t('PrintForm.title')}\n                initialValue={t('PrintForm.initialTitle')}\n              >\n                <CustomFieldInput\n                  maxLength={50}\n                  placeholder={t('PrintForm.titlePlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"comment\"\n                label={t('PrintForm.comment')}\n              >\n                <CustomFieldInput\n                  maxLength={200}\n                  placeholder={t('PrintForm.commentPlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"layout\"\n                label={t('PrintForm.layout')}\n                initialValue={printManager?.getLayouts()[0]?.name}\n              >\n                <LayoutSelect\n                  printManager={printManager}\n                />\n              </Form.Item>\n              <Form.Item\n                name='scale'\n                label={t('PrintForm.scale')}\n                initialValue={printManager?.getClosestScaleToFitMap()}\n              >\n                <ScaleSelect\n                  printManager={printManager}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"dpi\"\n                label={t('PrintForm.dpi')}\n                initialValue={printManager.getDpis()[0]}\n              >\n                <ResolutionSelect\n                  printManager={printManager}\n                  placeholder={t('PrintForm.resolutionPlaceholder')}\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"format\"\n                label={t('PrintForm.format')}\n                initialValue=\"pdf\"\n              >\n                <OutputFormatSelect\n                  printManager={printManager}\n                  outputFormats={outputFormats}\n                  placeholder={t('PrintForm.outputFormatPlaceholder')}\n                />\n              </Form.Item>\n            </Form>\n            <Button\n              className='print-button tool-menu-button'\n              disabled={!printManager?.isInitiated()}\n              icon={<FontAwesomeIcon icon={faDownload} />}\n              loading={loading}\n              onClick={onDownloadClick}\n            >\n              {t('PrintForm.downloadBtnText')}\n            </Button>\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default PrintForm;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import * as React from 'react';\n\nimport {\n  useEffect,\n  useState\n} from 'react';\n\nimport CardStyle, {\n  CardStyleProps\n} from 'geostyler/dist/Component/CardStyle/CardStyle';\n\nimport OlParser from 'geostyler-openlayers-parser';\n\nimport {\n  Style as GsStyle\n} from 'geostyler-style';\n\nimport OlFeature from 'ol/Feature';\n\nimport OlLayerVector from 'ol/layer/Vector';\n\nimport VectorSource from 'ol/source/Vector';\n\nimport {\n  StyleFunction,\n  StyleLike as OlStyleLike\n} from 'ol/style/Style';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nexport type StylingComponentProps = CardStyleProps & {};\n\nexport const StylingComponent: React.FC<StylingComponentProps> = ({\n  ...passThroughProps\n}): JSX.Element => {\n\n  const defaultStyle: GsStyle = {\n    name: 'Default Style',\n    rules: [{\n      name: 'Area',\n      symbolizers: [{\n        kind: 'Fill',\n        color: '#00b72b',\n        outlineOpacity: 0.8,\n        opacity: 0.5,\n        fillOpacity: 0.8,\n        outlineWidth: 2,\n        outlineColor: '#00b72b'\n      }]\n    }, {\n      name: 'Line',\n      symbolizers: [{\n        kind: 'Line',\n        color: '#00b72b',\n        width: 2,\n        opacity: 0.8\n      }]\n    }, {\n      name: 'Point',\n      symbolizers: [{\n        kind: 'Mark',\n        wellKnownName: 'circle',\n        color: '#00b72b',\n        strokeColor: '#00b72b',\n        strokeOpacity: 0.8,\n        opacity: 0.5,\n        radius: 7\n      }],\n      filter: [\n        '==',\n        'label',\n        'undefined'\n      ]\n    }, {\n      name: 'Text',\n      symbolizers: [{\n        kind: 'Text',\n        label: '{{label}}',\n        size: 12,\n        font: [\n          'sans-serif'\n        ],\n        opacity: 0.8,\n        color: '#00b72b',\n        offset: [\n          5,\n          5\n        ],\n        haloColor: '#00b72b',\n        haloWidth: 1\n      }],\n      filter: [\n        '!=',\n        'label',\n        'undefined'\n      ]\n    }]\n  };\n\n  const [style, setStyle] = useState<GsStyle>(defaultStyle);\n\n  const map = useMap();\n\n  useEffect(() => {\n    if (!style || !map) {\n      return;\n    }\n\n    const olParser = new OlParser();\n\n    let drawVectorLayer = MapUtil.getLayerByName(map, 'react-geo_digitize') as OlLayerVector<VectorSource>;\n\n    const parseStyles = async () => {\n      let olStylePolygon: OlStyleLike;\n      let olStyleLineString: OlStyleLike;\n      let olStylePoint: OlStyleLike;\n      let olStyleText: OlStyleLike;\n\n      for (const rule of style.rules) {\n        const newStyle: GsStyle = {\n          name: '',\n          rules: [rule]\n        };\n\n        const olStyle = await olParser.writeStyle(newStyle);\n\n        if (!olStyle.output) {\n          return;\n        }\n\n        if (rule.symbolizers[0].kind === 'Fill') {\n          olStylePolygon = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Text') {\n          olStyleText = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Line') {\n          olStyleLineString = olStyle.output;\n        }\n\n        if (rule.symbolizers[0].kind === 'Mark') {\n          olStylePoint = olStyle.output;\n        }\n      }\n\n      const drawLayerStyleFunction = (feature: OlFeature, resolution: number) => {\n        const geometryType = feature.getGeometry()?.getType();\n\n        if (!geometryType) {\n          return;\n        }\n\n        if (['MultiPolygon', 'Polygon', 'Circle'].includes(geometryType)) {\n          return typeof olStylePolygon === 'function' ? olStylePolygon(feature, resolution) : olStylePolygon;\n        }\n\n        if (['MultiLineString', 'LineString'].includes(geometryType)) {\n          return typeof olStyleLineString === 'function' ? olStyleLineString(feature, resolution) : olStyleLineString;\n        }\n\n        if (['MultiPoint', 'Point'].includes(geometryType)) {\n          if (feature.get('label')) {\n            return typeof olStyleText === 'function' ? olStyleText(feature, resolution) : olStyleText;\n          }\n\n          return typeof olStylePoint === 'function' ? olStylePoint(feature, resolution) : olStylePoint;\n        }\n      };\n\n      drawVectorLayer.setStyle(drawLayerStyleFunction as StyleFunction);\n    };\n\n    parseStyles();\n  }, [style, map]);\n\n  return (\n    <CardStyle\n      style={style}\n      onStyleChange={setStyle}\n      {...passThroughProps}\n    />\n  );\n};\n\nexport default StylingComponent;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faPaintBrush\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Drawer,\n  DrawerProps\n} from 'antd';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport './index.less';\n\nimport StylingComponent from './StylingComponent';\n\nexport type StylingDrawerProps = DrawerProps & {};\n\nexport const StylingDrawer: React.FC<StylingDrawerProps> = ({\n  ...passThroughProps\n}): JSX.Element => {\n\n  const [open, setOpen] = useState(false);\n\n  const {\n    t\n  } = useTranslation();\n\n  const showDrawer = () => {\n    setOpen(true);\n  };\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Button\n        type=\"link\"\n        onClick={showDrawer}\n        icon={<FontAwesomeIcon icon={faPaintBrush} />}\n      >\n        {t('StylingDrawer.pickColor')}\n      </Button>\n      <Drawer\n        title={t('StylingDrawer.title')}\n        placement=\"right\"\n        onClose={onClose}\n        open={open}\n        mask={false}\n        width={'45vw'}\n        className=\"color-pick-drawer\"\n        {...passThroughProps}\n      >\n        <StylingComponent />\n      </Drawer>\n    </>\n  );\n};\n\nexport default StylingDrawer;\n","import React, {\n  ChangeEvent\n} from 'react';\n\nimport {\n  faDrawPolygon,\n  faGripLines,\n  faCircle,\n  faFont,\n  faSquare,\n  faPenToSquare,\n  faUpload,\n  faTrash,\n  faDownload\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Feature\n} from 'ol';\nimport GeoJSON from 'ol/format/GeoJSON';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport DeleteButton from '@terrestris/react-geo/dist/Button/DeleteButton/DeleteButton';\nimport DrawButton from '@terrestris/react-geo/dist/Button/DrawButton/DrawButton';\nimport ModifyButton from '@terrestris/react-geo/dist/Button/ModifyButton/ModifyButton';\nimport SimpleButton from '@terrestris/react-geo/dist/Button/SimpleButton/SimpleButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\nimport UploadButton from '@terrestris/react-geo/dist/Button/UploadButton/UploadButton';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  DigitizeUtil\n} from '@terrestris/react-geo/dist/Util/DigitizeUtil';\n\nimport './index.less';\n\nimport StylingDrawer from './StylingDrawer';\n\ninterface DefaultDrawProps {\n  showDrawPoint?: boolean;\n  showDrawLine?: boolean;\n  showDrawPolygon?: boolean;\n  showDrawCircle?: boolean;\n  showDrawRectangle?: boolean;\n  showDrawAnnotation?: boolean;\n  showModifyFeatures?: boolean;\n  showUploadFeatures?: boolean;\n  showDownloadFeatures?: boolean;\n  showDeleteFeatures?: boolean;\n}\n\nexport interface DrawProps extends Partial<DefaultDrawProps> { }\n\nexport const Draw: React.FC<DrawProps> = ({\n  showDrawPoint,\n  showDrawLine,\n  showDrawPolygon,\n  showDrawCircle,\n  showDrawRectangle,\n  showDrawAnnotation,\n  showModifyFeatures,\n  showUploadFeatures,\n  showDownloadFeatures,\n  showDeleteFeatures\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  const onGeoJSONDownload = () => {\n    const clonedFeatures: Feature[] = [];\n    if (map) {\n      const mapProjection = map.getView().getProjection().getCode();\n      const digitizeLayer = DigitizeUtil.getDigitizeLayer(map);\n      const digitizedFeatures = digitizeLayer.getSource()?.getFeatures();\n      if (digitizedFeatures && digitizedFeatures.length > 0) {\n        digitizedFeatures.forEach(feat => {\n          const clonedFeature = feat.clone();\n          clonedFeature.getGeometry()?.transform(mapProjection, 'EPSG:4326');\n          clonedFeatures.push(clonedFeature);\n        });\n        const geoJSON = new GeoJSON().writeFeatures(clonedFeatures);\n\n        const fileToDownload = new Blob([geoJSON], {\n          type: 'application/geo+json'\n        });\n\n        // download the file\n        const url = window.URL.createObjectURL(fileToDownload);\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'exportedFeatures.geojson');\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }\n    }\n  };\n\n  const onUploadChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const uploadedFiles = e.target.files;\n    if (\n      (uploadedFiles && uploadedFiles.length === 1) &&\n      (\n        uploadedFiles[0].type === 'application/geo+json' ||\n        uploadedFiles[0].type === 'application/geojson'\n      )\n    ) {\n      onGeoJSONUpload(uploadedFiles[0]);\n    }\n  };\n\n  const onGeoJSONUpload = (geoJSONFile: File) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      const geoJSONFeatures = new GeoJSON().readFeatures(fileReader.result);\n\n      if (map) {\n        const mapProjection = map.getView().getProjection().getCode();\n        geoJSONFeatures.forEach(feat => {\n          feat.getGeometry()?.transform('EPSG:4326', mapProjection);\n        });\n        const digitizeLayer = DigitizeUtil.getDigitizeLayer(map);\n        const digitizeLayerSource = digitizeLayer.getSource();\n        digitizeLayerSource?.addFeatures(geoJSONFeatures);\n      }\n    };\n\n    fileReader.readAsText(geoJSONFile);\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <ToggleGroup>\n\n      {showDrawPoint ? (\n        <DrawButton\n          name=\"draw-point\"\n          drawType=\"Point\"\n          type=\"link\"\n          pressed={false}\n        >\n          <FontAwesomeIcon\n            icon={faCircle}\n          />\n          <span\n            className=\"draw-point\"\n          >\n            {t('Draw.point')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawLine ? (\n        <DrawButton\n          name=\"draw-line\"\n          drawType=\"LineString\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faGripLines}\n          />\n          <span\n            className=\"draw-line\"\n          >\n            {t('Draw.line')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawPolygon ? (\n        <DrawButton\n          name=\"draw-polygon\"\n          drawType=\"Polygon\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faDrawPolygon}\n          />\n          <span\n            className=\"draw-polygon\"\n          >\n            {t('Draw.polygon')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawCircle ? (\n        <DrawButton\n          name=\"draw-circle\"\n          drawType=\"Circle\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faCircle}\n          />\n          <span\n            className=\"draw-circle\"\n          >\n            {t('Draw.circle')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawRectangle ? (\n        <DrawButton\n          name=\"draw-rectangle\"\n          drawType=\"Rectangle\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faSquare}\n          />\n          <span\n            className=\"draw-rectangle\"\n          >\n            {t('Draw.rectangle')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showDrawAnnotation ? (\n        <DrawButton\n          name=\"draw-text\"\n          drawType=\"Text\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faFont}\n          />\n          <span\n            className=\"draw-text\"\n          >\n            {t('Draw.text')}\n          </span>\n        </DrawButton>\n      ) : <></>}\n\n      {showModifyFeatures ? (\n        <ModifyButton\n          name=\"draw-modify\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faPenToSquare}\n          />\n          <span\n            className=\"draw-modify\"\n          >\n            {t('Draw.modify')}\n          </span>\n        </ModifyButton>\n      ) : <></>}\n\n      {showUploadFeatures ? (\n        <UploadButton\n          name=\"draw-upload\"\n          onChange={onUploadChange}\n          type=\"link\"\n        >\n          <SimpleButton\n            type=\"link\"\n          >\n            <FontAwesomeIcon\n              icon={faUpload}\n            />\n            <span\n              className=\"draw-upload\"\n            >\n              {t('Draw.upload')}\n            </span>\n          </SimpleButton>\n        </UploadButton>\n      ) : <></>}\n\n      {showDownloadFeatures ? (\n        <SimpleButton\n          name=\"draw-export\"\n          onClick={onGeoJSONDownload}\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faDownload}\n          />\n          <span\n            className=\"draw-export\"\n          >\n            {t('Draw.export')}\n          </span>\n        </SimpleButton>\n      ) : <></>}\n\n      {showDeleteFeatures ? (\n        <DeleteButton\n          name=\"draw-delete\"\n          type=\"link\"\n        >\n          <FontAwesomeIcon\n            icon={faTrash}\n          />\n          <span\n            className=\"draw-delete\"\n          >\n            {t('Draw.delete')}\n          </span>\n        </DeleteButton>\n      ) : <></>}\n      <StylingDrawer />\n    </ToggleGroup>\n  );\n};\n\nexport default Draw;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  faClipboardCheck,\n  faClipboardList\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\nimport {\n  Button,\n  Pagination,\n  TableProps,\n  Tooltip\n} from 'antd';\n\nimport copy from 'copy-to-clipboard';\n\nimport _isFinite from 'lodash/isFinite';\n\nimport OlFeature from 'ol/Feature';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\nimport OlStyleCircle from 'ol/style/Circle';\nimport OlStyleFill from 'ol/style/Fill';\nimport OlStyleStroke from 'ol/style/Stroke';\nimport OlStyle from 'ol/style/Style';\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport PropertyGrid from '@terrestris/react-geo/dist/Grid/PropertyGrid/PropertyGrid';\nimport useMap from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\nexport type FeatureInfoPropertyGridProps = {\n  features: OlFeature[];\n  layerName: string;\n} & TableProps<OlFeature>;\n\nexport const FeatureInfoPropertyGrid: React.FC<FeatureInfoPropertyGridProps> = ({\n  features,\n  layerName,\n  ...restProps\n}): JSX.Element => {\n  const [currentPage, setCurrenPage] = useState<number>();\n  const [selectedFeature, setSelectedFeature] = useState<OlFeature>();\n\n  const map = useMap();\n\n  const { t } = useTranslation();\n\n  const vectorLayerName = `selection-layer-${layerName}`;\n\n  const onChange = (page: number) => {\n    setCurrenPage(page);\n    setSelectedFeature(features[page - 1]);\n  };\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const initVectorLayer = () => {\n      if (MapUtil.getLayerByName(map, vectorLayerName)) {\n        return;\n      }\n\n      const source = new OlSourceVector({\n        features: features\n      });\n\n      const fill = new OlStyleFill({\n        color: 'rgba(255, 255, 255, 0.15)'\n      });\n      const stroke = new OlStyleStroke({\n        color: 'rgba(209, 70, 47, 1)',\n        width: 2\n      });\n      const featureStyle = new OlStyle({\n        fill,\n        stroke,\n        image: new OlStyleCircle({\n          radius: 5,\n          fill,\n          stroke\n        })\n      });\n\n      const layer = new OlLayerVector({\n        source: source,\n        style: featureStyle\n      });\n\n      layer.set('name', vectorLayerName);\n\n      map.addLayer(layer);\n    };\n\n    const deinitVectorLayer = () => {\n      const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n      if (!vectorLayer) {\n        return;\n      }\n\n      map.removeLayer(vectorLayer);\n    };\n\n    initVectorLayer();\n\n    return () => deinitVectorLayer();\n  }, [features, map, vectorLayerName]);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n    setCurrenPage(1);\n\n    if (features.length > 0) {\n      setSelectedFeature(features[0]);\n    }\n  }, [features, map, vectorLayerName]);\n\n  useEffect(() => {\n    if (!selectedFeature || !map) {\n      return;\n    }\n\n    const vectorLayer = MapUtil.getLayerByName(map, vectorLayerName) as OlLayerVector<OlSourceVector>;\n\n    if (!vectorLayer) {\n      return;\n    }\n\n    vectorLayer.getSource()?.clear();\n\n    vectorLayer.getSource()?.addFeature(selectedFeature);\n  }, [selectedFeature, map, vectorLayerName]);\n\n  if (!selectedFeature) {\n    return <></>;\n  }\n\n  const blacklistedAttributes = [\n    'geom',\n    'the_geom',\n    'geometry'\n  ];\n\n  const attributeFilter = selectedFeature.getKeys()\n    .filter((prop: string | number | boolean) => {\n      return !blacklistedAttributes.includes((prop as string).toLocaleLowerCase());\n    });\n\n  return (\n    <PropertyGrid\n      className=\"property-grid\"\n      feature={selectedFeature}\n      attributeFilter={attributeFilter}\n      size=\"small\"\n      sticky={true}\n      title={() => {\n        return (\n          <>\n            <Pagination\n              simple\n              total={features.length}\n              size=\"small\"\n              pageSize={1}\n              current={currentPage}\n              onChange={onChange}\n            />\n            <div className='copy'>\n              <Tooltip\n                title={t('FeaturePropertyGrid.copyAsGeoJson')}\n              >\n                <Button\n                  type=\"primary\"\n                  size='small'\n                  onClick={() => {\n                    copy(new OlFormatGeoJSON().writeFeature(selectedFeature));\n                  }}\n                  icon={<FontAwesomeIcon icon={faClipboardCheck} />}\n                />\n              </Tooltip>\n              <Tooltip\n                title={t('FeaturePropertyGrid.copyAsObject')}\n              >\n                <Button\n                  type=\"primary\"\n                  size='small'\n                  onClick={() => {\n                    const props = selectedFeature.getProperties();\n                    blacklistedAttributes.forEach(attr => delete props[attr]);\n                    copy(JSON.stringify(props));\n                  }}\n                  icon={<FontAwesomeIcon icon={faClipboardList} />}\n                />\n              </Tooltip>\n            </div>\n          </>\n        );\n      }}\n      columns={[{\n        title: t('FeaturePropertyGrid.key'),\n        dataIndex: 'attributeName',\n        key: 'attributeName',\n        width: '50%',\n        ellipsis: true,\n        defaultSortOrder: 'ascend',\n        sorter: (a, b) => a.key.localeCompare(b.key)\n      }, {\n        title: t('FeaturePropertyGrid.value'),\n        dataIndex: 'attributeValue',\n        key: 'attributeValue',\n        width: '50%',\n        ellipsis: true\n      }]}\n      scroll={{\n        scrollToFirstRowOnChange: true,\n        y: 'calc(100% - 90px)'\n      }}\n      {...restProps}\n    />\n  );\n};\n\nexport default FeatureInfoPropertyGrid;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  Tabs\n} from 'antd';\n\nimport {\n  getUid\n} from 'ol';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlLayerBase from 'ol/layer/Base';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  Tab\n} from 'rc-tabs/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport CoordinateInfo, {\n  CoordinateInfoState,\n  CoordinateInfoProps\n} from '@terrestris/react-geo/dist/CoordinateInfo/CoordinateInfo';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  isWmsLayer,\n  WmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../../hooks/useAppDispatch';\nimport usePlugins from '../../../hooks/usePlugins';\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport {\n  isFeatureInfoIntegration\n} from '../../../plugin';\n\nimport {\n  SelectedFeatures,\n  setSelectedFeatures\n} from '../../../store/selectedFeatures';\n\nimport FeatureInfoPropertyGrid from './FeaturePropertyGrid';\n\nimport './index.less';\n\nexport type FeatureInfoProps = {\n  enabled?: boolean;\n} & Partial<CoordinateInfoProps>;\n\nexport const FeatureInfo: React.FC<FeatureInfoProps> = ({\n  enabled,\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const plugins = usePlugins();\n  const dispatch = useAppDispatch();\n\n  const [queryLayers, setQueryLayers] = useState<WmsLayer[]>([]);\n\n  const layerFilter = (layer: OlLayerBase) => {\n    if (!layer.get('hoverable')) {\n      return false;\n    }\n    if (layer instanceof OlLayerImage && layer.getSource() instanceof OlSourceImageWMS) {\n      return true;\n    }\n    return layer instanceof OlLayerTile && layer.getSource() instanceof OlSourceTileWMS;\n  };\n\n  const updateQueryLayers = useCallback(() => {\n\n    if (!map) {\n      return;\n    }\n\n    const layerCandidates = MapUtil.getAllLayers(map, layerFilter) as WmsLayer[];\n    setQueryLayers(layerCandidates.filter(l => l.getVisible()));\n  }, [map]);\n\n  useEffect(() => {\n\n    if (!map) {\n      return;\n    }\n\n    updateQueryLayers();\n\n    const mapLayers = MapUtil.getAllLayers(map, layerFilter) as WmsLayer[];\n    mapLayers.forEach(l => l.on('change:visible', updateQueryLayers));\n\n    return () => {\n      mapLayers.forEach(l => l.un('change:visible', updateQueryLayers));\n    };\n\n  }, [map, updateQueryLayers]);\n\n  if (!map) {\n    return <></>;\n  }\n\n  const resultRenderer = (coordinateInfoState: CoordinateInfoState) => {\n    const features = coordinateInfoState.features;\n    const loading = coordinateInfoState.loading;\n\n    if (Object.keys(features).length === 0) {\n      return (\n        <span className='usage-hint'>\n          {t('FeatureInfo.usageHint')}\n        </span>\n      );\n    }\n\n    const items: Tab[] = [];\n\n    Object.keys(features).forEach(layerName => {\n      let pluginRendererAvailable = false;\n\n      const mapLayer = map.getAllLayers().find(l => {\n        if (isWmsLayer(l)) {\n          const source = (l as WmsLayer).getSource();\n          const unqualifiedMapLayerName = getUnqualifiedLayerName(source?.getParams().LAYERS);\n          const unqualifiedLayerName = getUnqualifiedLayerName(layerName);\n\n          return unqualifiedLayerName === unqualifiedMapLayerName;\n        }\n        return false;\n      });\n\n      plugins.forEach(plugin => {\n        if (isFeatureInfoIntegration(plugin.integration) &&\n          ((Array.isArray(plugin.integration.layers) && plugin.integration.layers.includes(layerName)) ||\n            !plugin.integration.layers)) {\n          const {\n            key,\n            wrappedComponent: WrappedPluginComponent\n          } = plugin;\n\n          items.push({\n            label: layerName,\n            key: layerName,\n            children: (\n              <WrappedPluginComponent\n                key={key}\n              />\n            )\n          });\n\n          pluginRendererAvailable = true;\n        }\n      });\n\n      if (!pluginRendererAvailable) {\n        items.push({\n          label: mapLayer?.get('name') || layerName,\n          key: layerName,\n          children: (\n            <div\n              key={layerName}\n            >\n              <FeatureInfoPropertyGrid\n                features={features[layerName]}\n                layerName={layerName}\n                loading={loading}\n              />\n            </div>\n          )\n        });\n      }\n    });\n\n    return (\n      <Tabs\n        items={items}\n      />\n    );\n  };\n\n  const getUnqualifiedLayerName = (layerName: string) => {\n    return layerName.split(':').length > 1 ?\n      layerName.split(':')[1] :\n      layerName.split(':')[0];\n  };\n\n  if (!enabled) {\n    return <></>;\n  }\n\n  const getFetchOpts = () => {\n    const opts: {\n      [uid: string]: RequestInit;\n    } = {};\n\n    queryLayers.forEach(layer => {\n      const layerUid = getUid(layer);\n      opts[layerUid] = {\n        headers: {\n          ...layer.get('useBearerToken') ? {\n            ...getBearerTokenHeader(client?.getKeycloak())\n          } : undefined\n        }\n      };\n    });\n\n    return opts;\n  };\n\n  const onSuccess = (coordinateInfoState: CoordinateInfoState) => {\n    const features = coordinateInfoState.features;\n\n    const serializedFeatures: SelectedFeatures = {};\n    Object.entries(features).forEach(entry => {\n      const layerName = entry[0];\n      const selectedFeatures = entry[1];\n\n      serializedFeatures[layerName] = new OlFormatGeoJSON().writeFeatures(selectedFeatures);\n    });\n\n    dispatch(setSelectedFeatures(serializedFeatures));\n  };\n\n  return (\n    <div className='feature-info-panel'>\n      <CoordinateInfo\n        featureCount={10}\n        map={map}\n        queryLayers={queryLayers}\n        resultRenderer={resultRenderer}\n        fetchOpts={getFetchOpts()}\n        onSuccess={onSuccess}\n        {...restProps}\n      />\n    </div>\n  );\n};\n\nexport default FeatureInfo;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  ReactNode,\n  useEffect,\n  useState\n} from 'react';\n\nimport {\n  faClock\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Divider\n} from 'antd';\n\nimport moment from 'moment';\n\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport type {\n  MarkObj\n} from 'rc-slider/es/Marks';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport TimeSlider, {\n  TimeSliderProps\n} from '@terrestris/react-geo/dist/Slider/TimeSlider/TimeSlider';\n\nimport './index.less';\n\ninterface WmsTimeSliderProps extends Omit<TimeSliderProps, 'min' | 'max' | 'marks' | 'useRange' |\n  'onChange' | 'defaultValue' | 'value' | 'formatString'> {\n  layer: OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>;\n}\n\nexport const WmsTimeSlider: React.FC<WmsTimeSliderProps> = ({\n  layer,\n  ...passThroughProps\n}) => {\n  const [value, setValue] = useState<string | [string, string]>(layer.getSource()?.getParams().TIME);\n  const [min, setMin] = useState<string>();\n  const [max, setMax] = useState<string>();\n  const [marks, setMarks] = useState<Record<string | number, string> | undefined>();\n\n  const {\n    t\n  } = useTranslation();\n\n  useEffect(() => {\n    const timeValues = layer.get('dimension')?.values?.split(',');\n\n    if (!timeValues || timeValues.length === 0) {\n      return;\n    }\n\n    setMin(timeValues[0]);\n    setMax(timeValues[timeValues.length - 1]);\n    setValue(timeValues[timeValues.length - 1]);\n\n    const m: Record<string | number, string> = {};\n    timeValues.forEach((val: string, idx: number) => {\n      m[val] = moment(val).format('YYYY-MM-DD');\n    });\n\n    setMarks(m);\n\n    if (timeValues.default === 'current') {\n      let nearest: [number, string] = [NaN, ''];\n      Object.values(m).forEach(d => {\n        let diff = moment().diff(moment(d));\n\n        if (diff < nearest[0]) {\n          nearest = [diff, d];\n        }\n      });\n\n      setValue(nearest[1]);\n    }\n  }, [layer]);\n\n  const onChange = (val: string | [string, string]) => {\n    setValue(val);\n\n    layer.getSource()?.updateParams({\n      TIME: val\n    });\n  };\n\n  return (\n    <div\n      className=\"wms-time-slider\"\n    >\n      <Divider>\n        <FontAwesomeIcon\n          icon={faClock}\n        />\n        {t('WmsTimeSlider.title')}\n      </Divider>\n      {\n        marks ?\n          <TimeSlider\n            min={min}\n            max={max}\n            marks={marks}\n            value={value}\n            onChange={onChange}\n            step={null}\n            {...passThroughProps}\n          /> :\n          <span>\n            {t('WmsTimeSlider.warning')}\n          </span>\n      }\n    </div>\n  );\n};\n\nexport default WmsTimeSlider;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faEllipsisV\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Dropdown,\n  DropDownProps,\n  notification,\n  Spin\n} from 'antd';\nimport {\n  ItemType\n} from 'antd/lib/menu/hooks/useItems';\n\nimport {\n  getUid\n} from 'ol';\nimport OlLayerBase from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayerTile from 'ol/layer/Tile';\nimport {\n  transformExtent\n} from 'ol/proj';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\n\nimport {\n  MenuInfo\n} from 'rc-menu/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport LayerUtil from '@terrestris/ol-util/dist/LayerUtil/LayerUtil';\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport {\n  isWmsLayer\n} from '@terrestris/react-geo/dist/Util/typeUtils';\n\nimport {\n  DownloadConfig\n} from '@terrestris/shogun-util/dist/model/Layer';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../../../hooks/useAppDispatch';\nimport useAppSelector from '../../../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../../../hooks/useSHOGunAPIClient';\n\nimport {\n  setLayerId,\n  setFeature\n} from '../../../../store/editFeature';\nimport {\n  show as showEditFeatureDrawer\n} from '../../../../store/editFeatureDrawerOpen';\n\nimport {\n  setLayer as setLayerDetailsLayer,\n  show as showLayerDetailsModal\n} from '../../../../store/layerDetailsModal';\n\nexport type LayerTreeContextMenuProps = {\n  layer: OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>;\n  visibleLegendsIds: string[];\n  setVisibleLegendsIds: (ids: string[]) => void;\n} & Partial<DropDownProps>;\n\nexport const LayerTreeContextMenu: React.FC<LayerTreeContextMenuProps> = ({\n  layer,\n  visibleLegendsIds,\n  setVisibleLegendsIds,\n  ...restProps\n}): JSX.Element => {\n\n  const [settingsVisible, setSettingsVisible] = useState<boolean>(false);\n  const [extentLoading, setExtentLoading] = useState<boolean>(false);\n\n  const dispatch = useAppDispatch();\n  const client = useSHOGunAPIClient();\n  const map = useMap();\n  const {\n    t\n  } = useTranslation();\n\n  const downloadConfig: DownloadConfig[] = layer.get('downloadConfig') ?? null;\n  const allowedEditMode = useAppSelector(\n    state => state.editFeature.userEditMode\n  );\n\n  const onContextMenuItemClick = (evt: MenuInfo): void => {\n    if (evt?.key.startsWith('downloadLayer')) {\n      const url = evt.key.split('|')[1];\n      downloadLayer(decodeURI(url));\n    }\n    switch (evt?.key) {\n      case 'zoomToExtent':\n        zoomToLayerExtent();\n        break;\n      case 'removeExternal':\n        removeExternalLayer();\n        break;\n      case 'toggleLegend':\n        const legendId: string = getUid(layer);\n        const newLegendIds = [...visibleLegendsIds];\n        if (newLegendIds.includes(legendId)) {\n          newLegendIds.splice(newLegendIds.indexOf(legendId), 1);\n        } else {\n          newLegendIds.push(legendId);\n        }\n        setVisibleLegendsIds(newLegendIds);\n        break;\n      case 'editLayer':\n        dispatch(setFeature(null));\n        dispatch(setLayerId(getUid(layer)));\n        dispatch(showEditFeatureDrawer());\n        break;\n      case 'layerDetails':\n        dispatch(setLayerDetailsLayer(getUid(layer)));\n        dispatch(showLayerDetailsModal());\n        break;\n      default:\n        break;\n    }\n    setSettingsVisible(false);\n  };\n\n  const zoomToLayerExtent = async (): Promise<void> => {\n    if (!map) {\n      return;\n    }\n\n    setExtentLoading(true);\n\n    try {\n      let extent = await LayerUtil.getExtentForLayer(layer, {\n        headers: layer.get('useBearerToken') ? {\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : {}\n      });\n      extent = transformExtent(extent, 'EPSG:4326', map.getView().getProjection());\n      map.getView().fit(extent);\n    } catch (error) {\n      Logger.error(error);\n      notification.error({\n        message: t('LayerTreeContextMenu.extentError')\n      });\n    } finally {\n      setExtentLoading(false);\n    }\n  };\n\n  const getParentLayerGroups = (l: OlLayerBase): OlLayerGroup[] => {\n    if (!map) {\n      return [];\n    }\n\n    const layerGroups = getAllLayerGroups(map.getLayerGroup())\n      .filter(layerGroup => layerGroup.getLayers().getArray().includes(l));\n\n    return layerGroups;\n  };\n\n  const getAllLayerGroups = (layerGroup: OlLayerGroup): OlLayerGroup[] => {\n    const layerGroups = [layerGroup];\n\n    for (const l of layerGroup.getLayers().getArray()) {\n      if (l instanceof OlLayerGroup) {\n        layerGroups.push(...getAllLayerGroups(l));\n      }\n    }\n\n    return layerGroups;\n  };\n\n  const removeLayer = (l: OlLayerBase) => {\n    const parentGroups = getParentLayerGroups(l);\n\n    parentGroups.forEach(parentGroup => parentGroup.getLayers().remove(l));\n  };\n\n  const removeExternalLayer = () => {\n    if (!map) {\n      return;\n    }\n\n    removeLayer(layer);\n\n    const externalLayerGroup = MapUtil.getLayerByName(map, t('AddLayerModal.externalWmsFolder')) as OlLayerGroup;\n    const uploadedLayerGroup = MapUtil.getLayerByName(map, t('UploadDataModal.uploadedDataFolder')) as OlLayerGroup;\n\n    if (externalLayerGroup && externalLayerGroup.getLayers().getLength() === 0) {\n      removeLayer(externalLayerGroup);\n    }\n\n    if (uploadedLayerGroup && uploadedLayerGroup.getLayers().getLength() === 0) {\n      removeLayer(uploadedLayerGroup);\n    }\n  };\n\n  const downloadLayer = async (url: string) => {\n    if (!layer) {\n      return;\n    }\n    const reqOpts = {\n      method: 'GET',\n      headers: {\n        ...layer.get('useBearerToken') ? {\n          ...getBearerTokenHeader(client?.getKeycloak())\n        } : undefined\n      }\n    };\n\n    const res = await fetch(url, reqOpts);\n    const blob = await res.blob();\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.setAttribute('download', layer.get('name'));\n    a.click();\n  };\n\n  let dropdownMenuItems: ItemType[] = [];\n\n  if (isWmsLayer(layer)) {\n    dropdownMenuItems.push({\n      label: (\n        <Spin\n          spinning={extentLoading}\n        >\n          {t('LayerTreeContextMenu.layerZoomToExtent')}\n        </Spin>\n      ),\n      key: 'zoomToExtent'\n    });\n  }\n\n  if (isWmsLayer(layer) && layer.getVisible()) {\n    const legendVisible = visibleLegendsIds.includes(getUid(layer));\n\n    dropdownMenuItems.push({\n      label: legendVisible ? t('LayerTreeContextMenu.hideLegend') : t('LayerTreeContextMenu.showLegend'),\n      key: 'toggleLegend'\n    });\n  }\n\n  if (layer.get('isExternalLayer') || layer.get('isUploadedLayer')) {\n    dropdownMenuItems.push({\n      label: t('LayerTreeContextMenu.removeLayer'),\n      key: 'removeExternal'\n    });\n  }\n\n  if (downloadConfig) {\n    const downloadItems = downloadConfig.map((dlConfig: DownloadConfig) => {\n      return {\n        label: t('LayerTreeContextMenu.downloadLayer', {\n          formatName: dlConfig.formatName ?? 'XML'\n        }),\n        key: `downloadLayer|${encodeURI(dlConfig.downloadUrl)}`\n      };\n    });\n    dropdownMenuItems.push(...downloadItems);\n  }\n\n  if (\n    layer.get('editable') &&\n    (allowedEditMode.includes('CREATE') ||\n      allowedEditMode.includes('UPDATE') ||\n      allowedEditMode.includes('DELETE'))\n  ) {\n    dropdownMenuItems.push({\n      label: t('LayerTreeContextMenu.editLayer'),\n      key: 'editLayer'\n    });\n  }\n\n  dropdownMenuItems.push({\n    label: t('LayerTreeContextMenu.layerDetails'),\n    key: 'layerDetails'\n  });\n\n  return (\n    <Dropdown\n      menu={{\n        items: dropdownMenuItems,\n        onClick: onContextMenuItemClick\n      }}\n      placement=\"bottomLeft\"\n      onOpenChange={setSettingsVisible}\n      open={settingsVisible}\n      trigger={['click']}\n      {...restProps}\n    >\n      <FontAwesomeIcon icon={faEllipsisV} />\n    </Dropdown>\n  );\n};\n\nexport default LayerTreeContextMenu;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState,\n  useEffect\n} from 'react';\n\nimport { Progress } from 'antd';\n\nimport {\n  getUid, MapBrowserEvent\n} from 'ol';\nimport OlBaseLayer from 'ol/layer/Base';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerImage from 'ol/layer/Image';\nimport OlLayer from 'ol/layer/Layer';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceImageWMS from 'ol/source/ImageWMS';\nimport OlSource from 'ol/source/Source';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\nimport OlSourceVector from 'ol/source/Vector';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\nimport RgLayerTree, {\n  LayerTreeProps as RgLayerTreeProps\n} from '@terrestris/react-geo/dist/LayerTree/LayerTree';\nimport Legend from '@terrestris/react-geo/dist/Legend/Legend';\nimport LayerTransparencySlider from '@terrestris/react-geo/dist/Slider/LayerTransparencySlider/LayerTransparencySlider';\n\nimport LayerType from '@terrestris/shogun-util/dist/model/enum/LayerType';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useSHOGunAPIClient from '../../../hooks/useSHOGunAPIClient';\n\nimport WmsTimeSlider from '../../WmsTimeSlider';\n\nimport LayerTreeContextMenu from './LayerTreeContextMenu';\n\nimport './index.less';\n\nexport type LayerTreeProps = {} & Partial<RgLayerTreeProps>;\n\nexport type LayerTileLoadCounter = {\n  [key: string]: {\n    loading: number;\n    loaded: number;\n    percent: number;\n  };\n};\n\nexport const LayerTree: React.FC<LayerTreeProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n  const {\n    t\n  } = useTranslation();\n\n  const [visibleLegendsIds, setVisibleLegendsIds] = useState<string[]>([]);\n  const [layerTileLoadCounter, setLayerTileLoadCounter] = useState<LayerTileLoadCounter>({});\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const allLayers = MapUtil.getAllLayers(map);\n    allLayers.forEach(layer => {\n      if (layer instanceof OlLayer) {\n        const source = layer.getSource();\n        if (!source.hasListener('tileloadstart')) {\n          source.on('tileloadstart', tileLoadStartListener);\n        }\n        if (!source.hasListener('tileloadend') && !source.hasListener('tileloaderror')) {\n          source.on(['tileloadend', 'tileloaderror'], tileLoadEndListener);\n        }\n      }\n    });\n\n    return () => {\n      allLayers.forEach(layer => {\n        if (layer instanceof OlLayer) {\n          const source = layer.getSource();\n          if (source.hasListener('tileloadstart')) {\n            source.un('tileloadstart', tileLoadStartListener);\n          }\n          if (source.hasListener('tileloadend')) {\n            source.un('tileloadend', tileLoadEndListener);\n          }\n          if (source.hasListener('tileloaderror')) {\n            source.un('tileloaderror', tileLoadEndListener);\n          }\n        }\n      });\n    };\n  }, [map]);\n\n  const tileLoadStartListener = (evt: MapBrowserEvent<UIEvent>) => {\n    setLayerTileLoadCounter((counter: LayerTileLoadCounter) => {\n      const uid = parseInt(getUid(evt.target), 10);\n      const update = {...counter};\n      // reset when load was finished\n      if (update[uid] && update[uid].loaded >= update[uid].loading) {\n        update[uid].loading = 1;\n        update[uid].loaded = 0;\n        update[uid].percent = 0;\n        return update;\n      }\n      if (!update[uid]) {\n        update[uid] = {\n          loading: 0,\n          loaded: 0,\n          percent: 0\n        };\n      }\n      update[uid].loading = Number.isInteger(update[uid].loading) ?\n        update[uid].loading + 1 : 1;\n      return update;\n    });\n  };\n\n  const tileLoadEndListener = (evt: MapBrowserEvent<UIEvent>) => {\n    setLayerTileLoadCounter((counter: LayerTileLoadCounter) => {\n      const uid = parseInt(getUid(evt.target), 10);\n      const update = {...counter};\n      if (!update[uid]) {\n        update[uid] = {\n          loading: 0,\n          loaded: 0,\n          percent: 0\n        };\n      }\n      update[uid].loaded = Number.isInteger(update[uid].loaded) ?\n        update[uid].loaded + 1 : 1;\n      const percent = Math.round(update[uid].loaded / update[uid].loading * 100);\n      if (percent > update[uid].percent) {\n        update[uid].percent = percent;\n      }\n      return update;\n    });\n  };\n\n  const treeFilterFunction = (layer: OlLayer<OlSource> | OlLayerGroup) => {\n    if ((layer as OlLayerGroup).getLayers) {\n      return !layer.get('hideInLayerTree');\n    }\n\n    return !((layer as OlLayer).getSource && ((layer as OlLayer).getSource() as OlSourceVector)?.forEachFeature);\n  };\n\n  const treeNodeTitleRenderer = (layer: OlBaseLayer) => {\n    if (!map) {\n      return;\n    }\n\n    const mapView = map.getView();\n    const unit = mapView.getProjection().getUnits() || 'm';\n    const resolution = mapView.getResolution();\n    const scale = resolution ? MapUtil.getScaleForResolution(resolution, unit) : undefined;\n    const percent = layer instanceof OlLayer && getUid(layer.getSource()) ?\n      layerTileLoadCounter[getUid(layer.getSource())]?.percent : 100;\n\n    if (layer instanceof OlLayerGroup) {\n      return (\n        <div>\n          {layer.get('name')}\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"tree-node-header\">\n            <Progress\n              className='loading-indicator'\n              type=\"circle\"\n              percent={percent}\n              format={() => ''}\n              width={16}\n              strokeWidth={20}\n            />\n            <span>{layer.get('name')}</span>\n            {\n              (layer instanceof OlLayerTile || layer instanceof OlLayerImage) && (\n                <LayerTreeContextMenu\n                  layer={layer}\n                  visibleLegendsIds={visibleLegendsIds}\n                  setVisibleLegendsIds={setVisibleLegendsIds}\n                />\n              )\n            }\n\n          </div>\n          {\n            layer.get('visible') &&\n            <div className=\"layer-transparency\">\n              <LayerTransparencySlider\n                tooltip={{\n                  formatter: val => `${t('LayerTree.transparency')}: ${val}%`\n                }}\n                layer={layer}\n              />\n            </div>\n          }\n          {\n            (layer.get('visible') && layer.get('type') as LayerType === 'WMSTime') &&\n            <div className=\"layer-time-slider\">\n              <WmsTimeSlider\n                layer={layer as OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>}\n              />\n            </div>\n          }\n          {\n            (layer.get('visible') && visibleLegendsIds.includes(getUid(layer))) &&\n            <Legend\n              layer={layer as OlLayerTile<OlSourceTileWMS> | OlLayerImage<OlSourceImageWMS>}\n              errorMsg={t('LayerTree.noLegendAvailable')}\n              extraParams={{\n                scale,\n                LEGEND_OPTIONS: 'fontAntiAliasing:true;forceLabels:on',\n                TRANSPARENT: true\n              }}\n              headers={\n                layer.get('useBearerToken') ?\n                  {\n                    ...getBearerTokenHeader(client?.getKeycloak())\n                  } :\n                  {}\n              }\n            />\n          }\n        </>\n      );\n    }\n  };\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <RgLayerTree\n      className=\"layertree\"\n      map={map}\n      nodeTitleRenderer={treeNodeTitleRenderer}\n      filterFunction={treeFilterFunction}\n      draggable\n      {...restProps}\n    />\n  );\n};\n\nexport default LayerTree;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  faDrawPolygon,\n  faPenRuler\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport MeasureButton from '@terrestris/react-geo/dist/Button/MeasureButton/MeasureButton';\nimport ToggleGroup from '@terrestris/react-geo/dist/Button/ToggleGroup/ToggleGroup';\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport './index.less';\n\ninterface DefaultMeasureProps {\n  showMeasureDistance?: boolean;\n  showMeasureArea?: boolean;\n}\n\nexport interface MeasureProps extends Partial<DefaultMeasureProps> { }\n\nexport const Measure: React.FC<MeasureProps> = ({\n  showMeasureDistance,\n  showMeasureArea\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n\n  const map = useMap();\n\n  if (!map) {\n    return <></>;\n  }\n\n  return (\n    <ToggleGroup>\n      {showMeasureDistance ? (\n        <MeasureButton\n          geodesic\n          name=\"line\"\n          map={map}\n          measureType=\"line\"\n          type=\"link\"\n          continueLineMsg={t('Measure.clicktodrawline')}\n        >\n          <FontAwesomeIcon icon={faPenRuler} />\n          <span className=\"measure-text\">{t('Measure.line')}</span>\n        </MeasureButton>\n      ) : <></>}\n\n      {showMeasureArea ? (\n        <MeasureButton\n          geodesic\n          name=\"poly\"\n          map={map}\n          measureType=\"polygon\"\n          type=\"link\"\n          continuePolygonMsg={t('Measure.clicktodrawarea')}\n        >\n          <FontAwesomeIcon icon={faDrawPolygon} />\n          <span className=\"measure-text\">{t('Measure.area')}</span>\n        </MeasureButton>\n      ) : <></>}\n\n    </ToggleGroup>\n  );\n};\n\nexport default Measure;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect,\n  useState\n} from 'react';\n\nimport type {\n  IconDefinition\n} from '@fortawesome/fontawesome-common-types';\n\nimport {\n  faChevronLeft,\n  faChevronRight,\n  faDrawPolygon,\n  faFileDownload,\n  faLanguage,\n  faMousePointer,\n  faPlus,\n  faRuler,\n  faShareNodes,\n  faStream,\n  faUpload\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Button,\n  Collapse,\n  CollapsePanelProps,\n  Tooltip\n} from 'antd';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport _toArray from 'lodash/toArray';\n\nconst { Panel } = Collapse;\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport usePlugins from '../../hooks/usePlugins';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\n\nimport {\n  isToolMenuIntegration\n} from '../../plugin';\n\nimport {\n  show as showAdd\n} from '../../store/addLayerModal';\nimport {\n  setActiveKeys\n} from '../../store/toolMenu';\nimport {\n  show as showUpload\n} from '../../store/uploadDataModal';\n\nimport LanguageSelect from '../LanguageSelector';\nimport Permalink from '../Permalink';\nimport PrintForm from '../PrintForm';\n\nimport Draw from './Draw';\nimport FeatureInfo from './FeatureInfo';\nimport LayerTree from './LayerTree';\nimport Measure from './Measure';\n\nimport './index.less';\n\nexport interface TitleEventEntity {\n  key: string;\n  domEvent: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>;\n}\n\nexport type ToolPanelConfig = {\n  icon: IconDefinition;\n  title: string;\n  wrappedComponent: JSX.Element;\n};\n\nexport type ToolMenuProps = {} & Partial<CollapsePanelProps>;\n\nexport const ToolMenu: React.FC<ToolMenuProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const {\n    t\n  } = useTranslation();\n  const map = useMap();\n\n  const plugins = usePlugins();\n\n  const dispatch = useAppDispatch();\n  const availableTools = useAppSelector(state => state.toolMenu.availableTools);\n  const activeKeys = useAppSelector(state => state.toolMenu.activeKeys);\n\n  const client = useSHOGunAPIClient();\n  const keycloak = client?.getKeycloak();\n\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const [menuTools, setMenuTools] = useState<string[]>([]);\n\n  useEffect(() => {\n    const mobileQuery = window.matchMedia('only screen and (max-width: 450px) and (orientation: portrait),' +\n      'only screen and (max-width: 750px) and (orientation: landscape), only screen and (max-width: 580px)');\n    const mobileNavigatorRegEx = new RegExp('/Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile|Kindle' +\n      '|NetFront|Silk-Accelerated|(hpw|web)OS|Fennec|Minimo|Opera M(obi|ini)|Blazer|Dolfin|Dolphin|Skyfire|Zune/');\n    const isMobile = mobileQuery.matches || mobileNavigatorRegEx.test(window.navigator.userAgent);\n\n    if (isMobile) {\n      setCollapsed(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (menuTools.length < 1) {\n      if (availableTools.includes('default')) {\n        setMenuTools([\n          'measure_tools',\n          'draw_tools',\n          'feature_info',\n          'print',\n          'tree',\n          'permalink',\n          'language_selector'\n        ]);\n      } else {\n        setMenuTools(availableTools);\n      }\n    }\n  }, [menuTools, availableTools]);\n\n  useEffect(() => {\n    if (\n      activeKeys.includes('print') &&\n      activeKeys.includes('measure_tools')\n    ) {\n      if (activeKeys.indexOf('print') < activeKeys.indexOf('measure_tools')) {\n        dispatch(setActiveKeys(activeKeys.filter(keys => keys !== 'print')));\n      } else {\n        dispatch(\n          setActiveKeys(activeKeys.filter(keys => keys !== 'measure_tools'))\n        );\n      }\n    }\n  }, [activeKeys, dispatch]);\n\n  const getToolPanels = (): JSX.Element[] => {\n\n    const panels: JSX.Element[] = [];\n\n    menuTools.forEach((tool: string) => {\n      const toolPanelConfig: ToolPanelConfig | undefined = getToolPanelConfig(tool);\n\n      if (!toolPanelConfig) {\n        return;\n      }\n      const {\n        icon,\n        title,\n        wrappedComponent\n      } = toolPanelConfig;\n\n      const panel = (\n        <Panel\n          className={tool}\n          header={\n            <>\n              {icon ? <FontAwesomeIcon icon={icon} /> : undefined}\n              <span>{title}</span>\n            </>\n          }\n          key={tool}\n        >\n          {wrappedComponent}\n        </Panel>\n      );\n      panels.push(panel);\n    });\n\n    if (plugins) {\n      plugins.forEach(plugin => {\n        if (isToolMenuIntegration(plugin.integration)) {\n          const {\n            key,\n            wrappedComponent: WrappedPluginComponent,\n            integration: {\n              placement,\n              label = 'Plugin',\n              insertionIndex,\n              icon,\n              ...passThroughProps\n            }\n          } = plugin;\n\n          panels.splice(insertionIndex || 0, 0, (\n            <Panel\n              header={\n                <>\n                  {icon ? <FontAwesomeIcon icon={icon} /> : undefined}\n                  <span>{t(label)}</span>\n                </>\n              }\n              key={key}\n              {...passThroughProps}\n            >\n              <WrappedPluginComponent />\n            </Panel>\n          ));\n        }\n      });\n    }\n    return panels;\n  };\n\n  const getToolPanelConfig = (tool: string): ToolPanelConfig | undefined => {\n    switch (tool) {\n      case 'measure_tools':\n        return {\n          icon: faRuler,\n          title: t('ToolMenu.measure'),\n          wrappedComponent: (\n            <Measure\n              showMeasureDistance={\n                availableTools.includes('default') || availableTools.includes('measure_tools_distance')\n              }\n              showMeasureArea={availableTools.includes('default') || availableTools.includes('measure_tools_area')}\n            />\n          )\n        };\n      case 'draw_tools':\n        return {\n          icon: faDrawPolygon,\n          title: t('ToolMenu.draw'),\n          wrappedComponent: (\n            <Draw\n              showDrawPoint={availableTools.includes('default') || availableTools.includes('draw_tools_point')}\n              showDrawLine={availableTools.includes('default') || availableTools.includes('draw_tools_line')}\n              showDrawPolygon={availableTools.includes('default') || availableTools.includes('draw_tools_polygon')}\n              showDrawCircle={availableTools.includes('default') || availableTools.includes('draw_tools_circle')}\n              showDrawRectangle={availableTools.includes('default') || availableTools.includes('draw_tools_rectangle')}\n              showDrawAnnotation={\n                availableTools.includes('default') || availableTools.includes('draw_tools_annotation')\n              }\n              showModifyFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_modify')}\n              showUploadFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_upload')}\n              showDownloadFeatures={\n                availableTools.includes('default') || availableTools.includes('draw_tools_download')\n              }\n              showDeleteFeatures={availableTools.includes('default') || availableTools.includes('draw_tools_delete')}\n            />\n          )\n        };\n      case 'feature_info':\n        return {\n          icon: faMousePointer,\n          title: t('ToolMenu.featureInfo'),\n          wrappedComponent: (\n            <FeatureInfo\n              enabled={activeKeys.includes('feature_info')}\n            />\n          )\n        };\n      case 'print':\n        return {\n          icon: faFileDownload,\n          title: t('ToolMenu.print'),\n          wrappedComponent: map ? (\n            <PrintForm\n              active={activeKeys.includes('print')}\n              layerBlackList={[\n                'react-geo_measure',\n                'hoverVectorLayer'\n              ]}\n            />\n          ) : <></>\n        };\n      case 'tree':\n        return {\n          icon: faStream,\n          title: t('ToolMenu.layertree'),\n          wrappedComponent: (\n            <div className='tree-wrapper'>\n              <LayerTree />\n              <Button\n                className='add-wms-button tool-menu-button'\n                icon={<FontAwesomeIcon icon={faPlus} />}\n                onClick={() => dispatch(showAdd())}\n              >\n                {t('ToolMenu.addWms')}\n              </Button>\n              {\n                keycloak && ClientConfiguration.geoserver?.upload?.authorizedRoles?.some(\n                  role => keycloak.hasResourceRole(role, keycloak.clientId)) && (\n                  <Button\n                    className='upload-data-button tool-menu-button'\n                    icon={<FontAwesomeIcon icon={faUpload} />}\n                    onClick={() => dispatch(showUpload())}\n                  >\n                    {t('ToolMenu.uploadData')}\n                  </Button>\n                )\n              }\n            </div>\n          )\n        };\n      case 'permalink':\n        return {\n          icon: faShareNodes,\n          title: t('Permalink.title'),\n          wrappedComponent: <Permalink />\n        };\n      case 'language_selector':\n        return {\n          icon: faLanguage,\n          title: t('ToolMenu.languageSelect'),\n          wrappedComponent: <LanguageSelect />\n        };\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className={`tool-menu ${collapsed ? 'collapsed' : ''}`}>\n      <Collapse\n        expandIconPosition='end'\n        activeKey={activeKeys}\n        destroyInactivePanel={true}\n        onChange={(keys: string[] | string) => {\n          setCollapsed(false);\n          dispatch(setActiveKeys(_toArray(keys)));\n        }}\n        {...restProps}\n      >\n        {getToolPanels()}\n      </Collapse>\n      <Tooltip\n        placement={'right'}\n        title={collapsed ? t('ToolMenu.expand') : t('ToolMenu.collapse')}\n      >\n        <Button\n          className=\"collapse-btn\"\n          icon={\n            collapsed ?\n              <FontAwesomeIcon icon={faChevronRight} /> :\n              <FontAwesomeIcon icon={faChevronLeft} />\n          }\n          onClick={() => {\n            dispatch(setActiveKeys([]));\n            setCollapsed(!collapsed);\n          }}\n        />\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default ToolMenu;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState\n} from 'react';\n\nimport {\n  faUpload\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  FontAwesomeIcon\n} from '@fortawesome/react-fontawesome';\n\nimport {\n  Alert,\n  Modal,\n  ModalProps,\n  Spin,\n  Upload\n} from 'antd';\n\nconst { Dragger } = Upload;\n\nimport {\n  RcFile,\n  UploadChangeParam,\n  UploadFile\n} from 'antd/lib/upload/interface';\n\nimport ClientConfiguration from 'clientConfig';\n\nimport OlLayerGroup from 'ol/layer/Group';\nimport TileLayer from 'ol/layer/Tile';\nimport TileWMSSource from 'ol/source/TileWMS';\n\nimport {\n  UploadRequestOption\n} from 'rc-upload/lib/interface';\n\nimport {\n  useTranslation\n} from 'react-i18next';\n\nimport {\n  Shapefile\n} from 'shapefile.js';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\n\nimport MapUtil from '@terrestris/ol-util/dist/MapUtil/MapUtil';\n\nimport {\n  useMap\n} from '@terrestris/react-geo/dist/Hook/useMap';\n\nimport Layer from '@terrestris/shogun-util/dist/model/Layer';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\nimport {\n  getBearerTokenHeader\n} from '@terrestris/shogun-util/dist/security/getBearerTokenHeader';\n\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport useSHOGunAPIClient from '../../hooks/useSHOGunAPIClient';\nimport {\n  hide\n} from '../../store/uploadDataModal';\n\nimport './index.less';\n\ntype FeatureTypeAttribute = {\n  name: string;\n  minOccurs: number;\n  maxOccurs: number;\n  nillable: boolean;\n  binding?: string | null;\n  length?: number;\n};\n\ntype FeatureTypeAttributes = {\n  attribute: FeatureTypeAttribute[];\n};\n\nexport type LayerUploadOptions = {\n  baseUrl: string;\n  workspace: string;\n  storeName: string;\n  layerName: string;\n  file: RcFile;\n};\n\nexport type LayerUploadResponse = {\n  layerName: string;\n  workspace: string;\n  baseUrl: string;\n};\n\nexport type UploadDataModalProps = {} & Partial<ModalProps>;\n\nexport const UploadDataModal: React.FC<UploadDataModalProps> = ({\n  ...restProps\n}): JSX.Element => {\n  const [uploadError, setUploadError] = useState('');\n  const [uploadSuccess, setUploadSuccess] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n\n  const isModalVisible = useAppSelector(state => state.uploadDataModal.visible);\n  const user = useAppSelector((state) => state.user);\n\n  const dispatch = useAppDispatch();\n\n  const map = useMap();\n  const client = useSHOGunAPIClient();\n\n  const {\n    t\n  } = useTranslation();\n\n  const closeModal = () => {\n    setUploadError('');\n    setUploadSuccess('');\n    dispatch(hide());\n  };\n\n  const addLayer = (layer: TileLayer<TileWMSSource>) => {\n    if (!map) {\n      return;\n    }\n\n    const targetFolderName = t('UploadDataModal.uploadedDataFolder');\n    let targetGroup = MapUtil.getLayerByName(map, targetFolderName) as OlLayerGroup;\n\n    if (!targetGroup) {\n      targetGroup = new OlLayerGroup({\n        layers: [],\n        properties: {\n          name: targetFolderName\n        }\n      });\n      const existingGroups = map.getLayerGroup().getLayers();\n      existingGroups.insertAt(existingGroups?.getLength() || 0, targetGroup);\n    }\n\n    if (!targetGroup.getLayers().getArray().includes(layer)) {\n      targetGroup.getLayers().push(layer);\n    }\n  };\n\n  const onBeforeFileUpload = (file: RcFile) => {\n    const maxSize = ClientConfiguration.geoserver?.upload?.limit || 200000000;\n    const fileType = file.type;\n    const fileSize = file.size;\n\n    setUploadError('');\n    setUploadSuccess('');\n\n    if (fileSize > maxSize) {\n      setUploadError(t('UploadDataModal.error.maxSize', {\n        maxSize: maxSize / 1000000\n      }));\n\n      return false;\n    }\n\n    const supportedFormats = ['application/zip', 'image/tiff'];\n    if (!supportedFormats.includes(fileType)) {\n      setUploadError(t('UploadDataModal.error.supportedFormats', {\n        supportedFormats: supportedFormats.join(', ')\n      }));\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const uploadGeoTiff = async (options: LayerUploadOptions): Promise<void> => {\n    const {\n      baseUrl,\n      workspace,\n      storeName,\n      layerName,\n      file\n    } = options;\n\n    const coverageStoreUrl = `${baseUrl}/rest/workspaces/${workspace}/coveragestores/` +\n      `${storeName}/file.geotiff?configure=none`;\n\n    const coverageStoreResponse = await fetch(coverageStoreUrl, {\n      method: 'PUT',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'image/tiff'\n      },\n      body: file\n    });\n\n    if (!coverageStoreResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n\n    const coverageUrl = `${baseUrl}/rest/workspaces/${workspace}/coveragestores/${storeName}/coverages`;\n\n    const coverageResponse = await fetch(coverageUrl, {\n      method: 'POST',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        coverage: {\n          enabled: true,\n          name: layerName,\n          nativeName: layerName,\n          title: layerName,\n          keywords: {\n            // eslint-disable-next-line quote-props\n            'string': [\n              'User upload',\n              `Uploaded by ${user.providerDetails?.username}`\n            ]\n          }\n        }\n      })\n    });\n\n    if (!coverageResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n  };\n\n  const uploadShapeZip = async (options: LayerUploadOptions): Promise<void> => {\n    const {\n      baseUrl,\n      workspace,\n      storeName,\n      layerName,\n      file\n    } = options;\n\n    const shp = await Shapefile.load(file);\n\n    let featureTypeName = '';\n    let featureTypeAttributes: FeatureTypeAttributes = {\n      attribute: []\n    };\n\n    if (Object.entries(shp).length !== 1) {\n      throw new Error(t('UploadDataModal.error.zipContent'));\n    }\n\n    Object.entries(shp).forEach(([k, v]) => {\n      featureTypeName = k;\n\n      const dbfContent = v.parse('dbf', {\n        properties: false\n      });\n\n      featureTypeAttributes.attribute = dbfContent.fields.map(field => ({\n        name: field.name,\n        minOccurs: 0,\n        maxOccurs: 1,\n        nillable: true,\n        binding: getAttributeType(field.type),\n        length: field.length\n      }));\n\n      const shxContent = v.parse('shx');\n\n      featureTypeAttributes.attribute.push({\n        name: 'the_geom',\n        minOccurs: 0,\n        maxOccurs: 1,\n        nillable: true,\n        binding: getGeometryType(shxContent.header.type)\n      });\n    });\n\n    const url = `${baseUrl}/rest/workspaces/${workspace}/datastores/` +\n      `${storeName}/file.shp?configure=none`;\n\n    const response = await fetch(url, {\n      method: 'PUT',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/zip'\n      },\n      body: file\n    });\n\n    if (!response.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n\n    const featureTypeUrl = `${baseUrl}/rest/workspaces/${workspace}/datastores/${storeName}/featuretypes`;\n\n    const featureTypeResponse = await fetch(featureTypeUrl, {\n      method: 'POST',\n      headers: {\n        ...getBearerTokenHeader(client?.getKeycloak()),\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        featureType: {\n          enabled: true,\n          name: layerName,\n          nativeName: featureTypeName,\n          title: layerName,\n          attributes: featureTypeAttributes,\n          keywords: {\n            // eslint-disable-next-line quote-props\n            'string': [\n              'User upload',\n              `Uploaded by ${user.providerDetails?.username}`\n            ]\n          }\n        }\n      })\n    });\n\n    if (!featureTypeResponse.ok) {\n      throw new Error(t('UploadDataModal.error.general', {\n        fileName: file.name\n      }));\n    }\n  };\n\n  const onFileUploadAction = async (options: UploadRequestOption<LayerUploadResponse>) => {\n    const {\n      onError,\n      onSuccess,\n      file\n    } = options;\n\n    const splittedFileName = (file as RcFile).name.split('.');\n    const fileType = (file as RcFile).type;\n    const geoServerBaseUrl = ClientConfiguration.geoserver?.base || '/geoserver';\n    const workspace = ClientConfiguration.geoserver?.upload?.workspace || 'SHOGUN';\n    const layerName = `${splittedFileName[0]}_${Date.now()}`.toUpperCase();\n\n    const uploadData = {\n      file: file as RcFile,\n      baseUrl: geoServerBaseUrl,\n      workspace: workspace,\n      storeName: layerName,\n      layerName: layerName\n    };\n\n    try {\n      if (fileType === 'image/tiff') {\n        await uploadGeoTiff(uploadData);\n      }\n\n      if (fileType === 'application/zip') {\n        await uploadShapeZip(uploadData);\n      }\n\n      if (onSuccess) {\n        onSuccess({\n          baseUrl: geoServerBaseUrl,\n          workspace: workspace,\n          layerName: layerName\n        });\n      }\n    } catch (error) {\n      if (onError) {\n        onError({\n          name: 'UploadError',\n          message: (error instanceof Error) ? error.message : t('UploadDataModal.error.general', {\n            fileName: (file as RcFile).name\n          })\n        });\n      }\n    }\n  };\n\n  const onFileUploadChange = async (info: UploadChangeParam<UploadFile<LayerUploadResponse>>) => {\n    const file = info.file;\n\n    if (file.status === 'uploading') {\n      setIsUploading(true);\n    }\n\n    if (file.status === 'done') {\n      if (!client || !file.response) {\n        return;\n      }\n\n      const layerConfig: Layer = {\n        name: file.response.layerName,\n        type: 'TILEWMS',\n        clientConfig: {\n          hoverable: true\n        },\n        sourceConfig: {\n          url: `${file.response.baseUrl}/ows?`,\n          layerNames: `${file.response.workspace}:${file.response.layerName}`,\n          useBearerToken: true\n        }\n      };\n\n      const parser = new SHOGunApplicationUtil({\n        client\n      });\n\n      const olLayer = parser.parseTileLayer(layerConfig);\n      olLayer.set('layerConfig', layerConfig);\n      olLayer.set('isUploadedLayer', true);\n      olLayer.set('groupName', t('UploadDataModal.uploadedDataFolder'));\n      addLayer(olLayer);\n\n      setUploadSuccess(t('UploadDataModal.success', {\n        fileName: file.name,\n        layerName: file.response.layerName\n      }));\n\n      setIsUploading(false);\n    } else if (file.status === 'error') {\n      setIsUploading(false);\n\n      Logger.error(file.error);\n\n      if (file.error && file.error.message) {\n        setUploadError(file.error.message);\n      } else {\n        setUploadError(t('UploadDataModal.error.general', {\n          fileName: file.name\n        }));\n      }\n    }\n  };\n\n  const getGeometryType = (type: number) => {\n    const types: {\n      [key: number]: string | null;\n    } = {\n      0: null, // Null\n      1: 'org.locationtech.jts.geom.Point', // Point\n      3: 'org.locationtech.jts.geom.LineString', // Polyline\n      5: 'org.locationtech.jts.geom.Polygon', // Polygon\n      8: 'org.locationtech.jts.geom.MultiPoint', // MultiPoint\n      11: 'org.locationtech.jts.geom.Point', // PointZ\n      13: 'org.locationtech.jts.geom.LineString', // PolylineZ\n      15: 'org.locationtech.jts.geom.Polygon', // PolygonZ\n      18: 'org.locationtech.jts.geom.MultiPoint', // MultiPointZ\n      21: 'org.locationtech.jts.geom.Point', // PointM\n      23: 'org.locationtech.jts.geom.LineString', // PolylineM\n      25: 'org.locationtech.jts.geom.Polygon', // PolygonM\n      28: 'org.locationtech.jts.geom.MultiPoint', // MultiPointM\n      31: null // MultiPatch\n    };\n\n    return types[type];\n  };\n\n  const getAttributeType = (dbfFieldType: string) => {\n    switch (dbfFieldType) {\n      case 'C': // Character\n        return 'java.lang.String';\n      case 'D': // Date\n        return 'java.util.Date';\n      case 'N': // Numeric\n        return 'java.lang.Long';\n      case 'F': // Floating point\n        return 'java.lang.Double';\n      case 'L': // Logical\n        return 'java.lang.Boolean';\n      case 'M': // Memo\n        return null;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Modal\n      className=\"upload-data-modal\"\n      title={t('UploadDataModal.title')}\n      open={isModalVisible}\n      onCancel={closeModal}\n      width={600}\n      footer={false}\n      {...restProps}\n    >\n      {\n        uploadSuccess && (\n          <Alert\n            message={uploadSuccess}\n            closable={true}\n            type=\"success\"\n          />\n        )\n      }\n\n      {\n        uploadError && (\n          <Alert\n            message={uploadError}\n            closable={true}\n            type=\"error\"\n          />\n        )\n      }\n\n      <Spin\n        spinning={isUploading}\n      >\n        <Dragger\n          customRequest={onFileUploadAction}\n          accept='image/tiff,application/zip'\n          maxCount={1}\n          showUploadList={false}\n          beforeUpload={onBeforeFileUpload}\n          onChange={onFileUploadChange}\n        >\n          <p className=\"ant-upload-drag-icon\">\n            <FontAwesomeIcon\n              icon={faUpload}\n            />\n          </p>\n          <p className=\"ant-upload-text\">\n            {t('UploadDataModal.description')}\n          </p>\n          <p className=\"ant-upload-hint\">\n            {t('UploadDataModal.hint')}\n          </p>\n        </Dragger>\n      </Spin>\n    </Modal>\n  );\n};\n\nexport default UploadDataModal;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./App.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useEffect\n} from 'react';\n\nimport AddLayerModal from './components/AddLayerModal/index';\nimport BasicMapComponent from './components/BasicMapComponent';\nimport EditFeatureDrawer from './components/EditFeatureDrawer';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport LayerDetailsModal from './components/LayerDetailsModal';\nimport ToolMenu from './components/ToolMenu';\nimport UploadDataModal from './components/UploadDataModal';\n\nimport './App.less';\n\nexport interface AppProps extends React.ComponentProps<'div'> { };\n\nexport const App: React.FC<AppProps> = ({\n  ...restProps\n}): JSX.Element => {\n\n  useEffect(() => {\n    const loadingMask = document.querySelectorAll('.loadmask')[0];\n\n    if (loadingMask) {\n      loadingMask.classList.add('loadmask-hidden');\n    }\n  }, []);\n\n  return (\n    <div\n      className=\"App\"\n      {...restProps}\n    >\n      <Header />\n      <BasicMapComponent />\n      <ToolMenu />\n      <Footer />\n      <AddLayerModal />\n      <UploadDataModal />\n      <EditFeatureDrawer />\n      <LayerDetailsModal />\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport {\n  AppInfo\n} from '@terrestris/shogun-util/dist/model/AppInfo';\n\nconst initialState: AppInfo = {\n  authorities: [],\n  buildTime: '',\n  commitHash: '',\n  userId: -1,\n  version: ''\n};\n\nexport const slice = createSlice({\n  name: 'appInfo',\n  initialState,\n  reducers: {\n    setAppInfo(state, action: PayloadAction<AppInfo>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setAppInfo\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = '';\n\nexport const slice = createSlice({\n  name: 'description',\n  initialState,\n  reducers: {\n    setDescription: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setDescription\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice, PayloadAction\n} from '@reduxjs/toolkit';\n\nexport type Legal = {\n  contact?: string;\n  imprint?: string;\n  privacy?: string;\n};\n\nconst initialState: Legal = {\n  contact: 'https://www.terrestris.de/de/kontakt/',\n  imprint: 'https://www.terrestris.de/de/impressum/',\n  privacy: 'https://www.terrestris.de/de/datenschutzerklaerung/'\n};\n\nexport const slice = createSlice({\n  name: 'legal',\n  initialState,\n  reducers: {\n    setLegal: (state, action: PayloadAction<Legal>) => {\n      return {\n        contact: action.payload.contact || initialState.contact,\n        imprint: action.payload.imprint || initialState.imprint,\n        privacy: action.payload.privacy || initialState.privacy\n      };\n    }\n  }\n});\n\nexport const { setLegal } = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = './shogun_logo.png';\n\nexport const slice = createSlice({\n  name: 'logoPath',\n  initialState,\n  reducers: {\n    setLogoPath: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setLogoPath\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string[] = ['nominatim'];\n\nexport const slice = createSlice({\n  name: 'searchEngines',\n  initialState,\n  reducers: {\n    setSearchEngines: (state, action: PayloadAction<string[]>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setSearchEngines\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nconst initialState: string = 'SHOGun Client';\n\nexport const slice = createSlice({\n  name: 'title',\n  initialState,\n  reducers: {\n    setTitle: (state, action: PayloadAction<string>) => {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setTitle\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport User from '@terrestris/shogun-util/dist/model/User';\n\nconst initialState: User = { };\n\nexport const slice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser(state, action: PayloadAction<User>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setUser\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  combineReducers,\n  configureStore,\n  Reducer\n} from '@reduxjs/toolkit';\n\nimport addLayerModal from './addLayerModal';\nimport appInfo from './appInfo';\nimport description from './description';\nimport editFeature from './editFeature';\nimport editFeatureDrawerOpen from './editFeatureDrawerOpen';\nimport layerDetailsModal from './layerDetailsModal';\nimport legal from './legal';\nimport logoPath from './logoPath';\nimport print from './print';\nimport searchEngines from './searchEngines';\nimport selectedFeatures from './selectedFeatures';\nimport title from './title';\nimport toolMenu from './toolMenu';\nimport uploadDataModal from './uploadDataModal';\nimport user from './user';\n\ntype AsyncReducer = {\n  [key: string]: Reducer;\n};\n\nexport const createReducer = (asyncReducers?: AsyncReducer) => {\n  return combineReducers({\n    addLayerModal,\n    appInfo,\n    description,\n    editFeature,\n    editFeatureDrawerOpen,\n    layerDetailsModal,\n    legal,\n    logoPath,\n    print,\n    selectedFeatures,\n    title,\n    toolMenu,\n    uploadDataModal,\n    searchEngines,\n    user,\n    ...asyncReducers\n  });\n};\n\nexport const store = configureStore({\n  reducer: createReducer()\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!../node_modules/mini-css-extract-plugin/dist/loader.js!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[4].use[2]!./index.less\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\n\nimport {\n  Alert,\n  ConfigProvider,\n  notification\n} from 'antd';\n\nimport deDE from 'antd/lib/locale/de_DE';\nimport enGB from 'antd/lib/locale/en_GB';\n\nimport ClientConfiguration, {\n  FeatureEditConfiguration\n} from 'clientConfig';\n\nimport Color from 'color';\n\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nimport Keycloak from 'keycloak-js';\n\nimport {\n  defaults as OlControlDefaults\n} from 'ol/control';\nimport OlLayerGroup from 'ol/layer/Group';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlMap from 'ol/Map';\nimport {\n  fromLonLat\n} from 'ol/proj';\nimport OlSourceOsm from 'ol/source/OSM';\nimport OlSourceTileWMS from 'ol/source/TileWMS';\nimport OlView from 'ol/View';\n\nimport {\n  render\n} from 'react-dom';\n\nimport {\n  Provider\n} from 'react-redux';\n\nimport Logger from '@terrestris/base-util/dist/Logger';\nimport UrlUtil from '@terrestris/base-util/dist/UrlUtil/UrlUtil';\n\nimport MapContext from '@terrestris/react-geo/dist/Context/MapContext/MapContext';\n\nimport {\n  AppInfo\n} from '@terrestris/shogun-util/dist/model/AppInfo';\nimport Application, {\n  DefaultApplicationTheme,\n  DefaultApplicationToolConfig\n} from '@terrestris/shogun-util/dist/model/Application';\nimport User from '@terrestris/shogun-util/dist/model/User';\nimport SHOGunApplicationUtil from '@terrestris/shogun-util/dist/parser/SHOGunApplicationUtil';\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nconst App = React.lazy(() => import('./App'));\n\nimport {\n  PluginProvider\n} from './context/PluginContext';\nimport {\n  SHOGunAPIClientProvider\n} from './context/SHOGunAPIClientContext';\n\nimport i18n, {\n  initOpts\n} from './i18n';\n\nimport {\n  ClientPluginInternal\n} from './plugin';\n\nimport {\n  setAppInfo\n} from './store/appInfo';\nimport {\n  setDescription\n} from './store/description';\nimport {\n  setUserEditMode,\n  EditLevel\n} from './store/editFeature';\nimport {\n  setLegal\n} from './store/legal';\nimport {\n  setLogoPath\n} from './store/logoPath';\nimport {\n  setSearchEngines\n} from './store/searchEngines';\nimport {\n  createReducer,\n  store\n} from './store/store';\nimport {\n  setTitle\n} from './store/title';\nimport {\n  setAvailableTools\n} from './store/toolMenu';\nimport {\n  setUser\n} from './store/user';\n\nimport './index.less';\n\n// TODO: extend antd properties too\nexport interface ThemeProperties extends React.CSSProperties {\n  '--primaryColor'?: string;\n  '--secondaryColor'?: string;\n  '--complementaryColor'?: string;\n}\n\nconst client = new SHOGunAPIClient({\n  url: ClientConfiguration.shogunBase || '/'\n});\n\nconst parser = new SHOGunApplicationUtil({\n  client\n});\n\nconst getConfigLang = (lang: string) => {\n  switch (lang) {\n    case 'en':\n      return enGB;\n    case 'de':\n      return deDE;\n    default:\n      return enGB;\n  }\n};\n\nconst getApplicationConfiguration = async () => {\n  const applicationId = UrlUtil.getQueryParam(window.location.href, 'applicationId');\n\n  if (!applicationId) {\n    Logger.info('No application ID given, can\\'t load any configuration.');\n    return;\n  }\n\n  try {\n    Logger.info(`Loading application with ID ${applicationId}`);\n\n    const application = await client.application().findOne(applicationId);\n\n    Logger.info(`Successfully loaded application with ID ${applicationId}`);\n\n    return application;\n  } catch (error) {\n    Logger.error(`Error while loading application with ID ${applicationId}: ${error}`);\n\n    notification.error({\n      message: i18n.t('Index.applicationLoadErrorMessage'),\n      description: i18n.t('Index.applicationLoadErrorDescription', {\n        applicationId: applicationId\n      }),\n      duration: 0\n    });\n  }\n};\n\nconst getApplicationInfo = async () => {\n  try {\n    Logger.info('Loading application info');\n\n    const appInfo = await client.info().getAppInfo();\n\n    Logger.info('Successfully loaded application info');\n\n    return appInfo;\n  } catch (error) {\n    Logger.error('Error while loading application info: ', error);\n  }\n};\n\nconst getUser = async (userId?: number) => {\n  if (!userId) {\n    Logger.info('No user ID given, can\\'t load it\\'s details.');\n    return;\n  }\n\n  try {\n    Logger.info(`Loading user with ID ${userId}`);\n\n    const user = await client.user().findOne(userId);\n\n    Logger.info(`Successfully loaded user with ID ${userId}`);\n\n    return user;\n  } catch (error) {\n    Logger.error(`Error while loading user with ID ${userId}: `, error);\n  }\n};\n\nconst setApplicationToStore = async (application?: Application) => {\n  if (!application) {\n    Logger.info('No application configuration provided, the default store will be loaded');\n\n    return;\n  }\n\n  if (application.name) {\n    store.dispatch(setTitle(application.name));\n  }\n\n  if (application.clientConfig?.description) {\n    store.dispatch(setDescription(application.clientConfig?.description));\n  }\n\n  if (application.clientConfig?.legal) {\n    store.dispatch(setLegal(application.clientConfig.legal));\n  }\n\n  if (application?.clientConfig?.theme?.logoPath) {\n    store.dispatch(setLogoPath(application.clientConfig.theme.logoPath));\n  }\n\n  // nominatim search is active by default\n  store.dispatch(setSearchEngines(['nominatim']));\n\n  if (application.toolConfig && application.toolConfig.length > 0) {\n    const availableTools: string[] = [];\n    application.toolConfig\n      .map((tool: DefaultApplicationToolConfig) => {\n        if (tool.config.visible && tool.name !== 'search') {\n          availableTools.push(tool.name);\n        }\n        if (tool.name === 'search' && tool.config.engines.length > 0) {\n          store.dispatch(setSearchEngines(tool.config.engines));\n        }\n      });\n    store.dispatch(setAvailableTools(availableTools));\n  }\n};\n\nconst setAppInfoToStore = async (appInfo?: AppInfo) => {\n  if (!appInfo) {\n    return;\n  }\n\n  store.dispatch(setAppInfo(appInfo));\n};\n\nconst setUserToStore = async (user?: User) => {\n  if (!user) {\n    return;\n  }\n\n  store.dispatch(setUser(user));\n};\n\nconst initKeycloak = async () => {\n  const keycloakEnabled = ClientConfiguration.keycloak?.enabled;\n  const keycloakOnLoad = ClientConfiguration.keycloak?.onLoadAction;\n  const keycloakHost = ClientConfiguration.keycloak?.host;\n  const keycloakRealm = ClientConfiguration.keycloak?.realm;\n  const keycloakClientId = ClientConfiguration.keycloak?.clientId;\n\n  if (!keycloakEnabled) {\n    return undefined;\n  }\n\n  if (!keycloakHost) {\n    throw new Error('Neither config key keycloak.host nor environment KEYCLOAK_HOST is set');\n  }\n\n  if (!keycloakRealm) {\n    throw new Error('Neither config key keycloak.realm nor environment KEYCLOAK_REALM is set');\n  }\n\n  if (!keycloakClientId) {\n    throw new Error('Neither config key keycloak.clientId nor environment KEYCLOAK_CLIENT_ID is set');\n  }\n\n  const keycloak = new Keycloak({\n    url: `${keycloakHost}`,\n    realm: keycloakRealm,\n    clientId: keycloakClientId\n  });\n\n  keycloak.onTokenExpired = async () => {\n    try {\n      await keycloak.updateToken(0);\n    } catch (error) {\n      Logger.error('Error while refreshing the access token: ', error);\n    }\n  };\n\n  await keycloak.init({\n    onLoad: keycloakOnLoad,\n    checkLoginIframe: false\n  });\n\n  return keycloak;\n};\n\nconst setApplicationTitle = () => {\n  store.subscribe(() => {\n    document.title = store.getState().title;\n  });\n};\n\nconst setupMap = async (application?: Application) => {\n  if (application) {\n    return await setupSHOGunMap(application);\n  }\n\n  Logger.info('No application configuration provided, the default map will be loaded');\n\n  return setupDefaultMap();\n};\n\nconst setupSHOGunMap = async (application: Application) => {\n  const view = await parser.parseMapView(application, {\n    constrainOnlyCenter: true\n  });\n\n  let extent;\n  const projection = application.clientConfig?.mapView.projection;\n  const mapView = application.clientConfig?.mapView;\n  if (projection && mapView?.extent && mapView.extent.length === 4) {\n    const ll = fromLonLat([mapView.extent[0], mapView.extent[1]], projection);\n    const ur = fromLonLat([mapView.extent[2], mapView.extent[3]], projection);\n    extent = [\n      ll[0],\n      ll[1],\n      ur[0],\n      ur[1]\n    ];\n  }\n  if (extent) {\n    view.set('extent', extent);\n  }\n\n  view.setConstrainResolution(true);\n\n  const layers = await parser.parseLayerTree(application, projection);\n\n  return new OlMap({\n    view,\n    layers,\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\nconst setupDefaultMap = () => {\n  const osmLayer = new OlLayerTile({\n    source: new OlSourceOsm()\n  });\n  osmLayer.set('name', 'OpenStreetMap');\n\n  const temperatureLayer = new OlLayerTile({\n    opacity: 0.5,\n    visible: true,\n    source: new OlSourceTileWMS({\n      url: 'https://gibs.earthdata.nasa.gov/wms/epsg3857/best/wms.cgi',\n      projection: 'EPSG:3857',\n      params: {\n        LAYERS: 'MERRA2_2m_Air_Temperature_Assimilated_Monthly'\n      }\n    })\n  });\n  temperatureLayer.setProperties({\n    name: '2-meter Air Temperature, Assimilated (Monthly, MERRA2)',\n    hoverable: true\n  });\n\n  const eoLayerGroup = new OlLayerGroup({\n    layers: [temperatureLayer]\n  });\n  eoLayerGroup.set('name', 'NASA Earth Observations');\n\n  const backgroundLayerGroup = new OlLayerGroup({\n    layers: [osmLayer]\n  });\n  backgroundLayerGroup.set('name', 'Background');\n\n  const center = fromLonLat([0, 40], 'EPSG:3857');\n\n  return new OlMap({\n    view: new OlView({\n      center: center,\n      zoom: 0\n    }),\n    layers: [backgroundLayerGroup, eoLayerGroup],\n    controls: OlControlDefaults({\n      zoom: false\n    })\n  });\n};\n\nconst parseTheme = (theme?: DefaultApplicationTheme): ThemeProperties => {\n  const style: ThemeProperties = {\n    '--primaryColor': '#59666C',\n    '--secondaryColor': '#70B3BE',\n    '--complementaryColor': '#FFFFFF'\n  };\n  if (!theme) {\n    return style;\n  }\n  if (theme.primaryColor) {\n    style['--primaryColor'] = theme.primaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--secondaryColor'] = theme.secondaryColor;\n  }\n  if (theme.secondaryColor) {\n    style['--complementaryColor'] = theme.complementaryColor;\n  }\n  return style;\n};\n\n// ExamplePlugin: 'ExamplePlugin@/client-plugin/remoteEntry.js'\nconst loadPluginModules = async (moduleName: string, moduleUrl: string, remoteNames: string[]) => {\n  await __webpack_init_sharing__('default');\n\n  await new Promise<void>((resolve, reject) => {\n    const element = document.createElement('script');\n\n    element.src = moduleUrl;\n    element.type = 'text/javascript';\n    element.async = true;\n\n    element.onload = () => {\n      element.parentElement?.removeChild(element);\n      resolve();\n    };\n\n    element.onerror = (err) => {\n      element.parentElement?.removeChild(element);\n      reject(err);\n    };\n\n    document.head.appendChild(element);\n  });\n\n  // @ts-ignore\n  const container = window[moduleName];\n\n  // eslint-disable-next-line camelcase\n  await container.init(__webpack_share_scopes__.default);\n\n  const modules = [];\n  for (const remoteName of remoteNames) {\n    const factory = await container.get(remoteName);\n    const module = factory();\n    modules.push(module);\n  }\n\n  return modules;\n};\n\nconst loadPlugins = async (map: OlMap) => {\n  if (!ClientConfiguration.plugins || ClientConfiguration.plugins.length === 0) {\n    Logger.info('No plugins found');\n    return [];\n  }\n\n  Logger.info('Loading plugins');\n\n  const clientPlugins: ClientPluginInternal[] = [];\n\n  for (const plugin of ClientConfiguration.plugins) {\n    const name = plugin.name;\n    const resourcePath = plugin.resourcePath;\n    const exposedPaths = plugin.exposedPaths;\n\n    if (!name) {\n      Logger.error('Required plugin configuration \\'name\\' is not set');\n      return clientPlugins;\n    }\n\n    if (!resourcePath) {\n      Logger.error('Required plugin configuration \\'resourcePath\\' is not set');\n      return clientPlugins;\n    }\n\n    if (!exposedPaths) {\n      Logger.error('Required plugin configuration \\'exposedPaths\\' is not set');\n      return clientPlugins;\n    }\n\n    Logger.info(`Loading plugin ${name} (with exposed paths ${exposedPaths.join(' and ')}) from ${resourcePath}`);\n\n    let clientPluginModules: any[];\n    try {\n      clientPluginModules = await loadPluginModules(name, resourcePath, exposedPaths);\n      Logger.info(`Successfully loaded plugin ${name}`);\n    } catch (error) {\n      Logger.error(`Could not load plugin ${name}:`, error);\n      return clientPlugins;\n    }\n\n    clientPluginModules.forEach(module => {\n      const clientPluginDefault: ClientPluginInternal = module.default;\n      const PluginComponent = clientPluginDefault.component;\n\n      const WrappedPluginComponent = () => (\n        <PluginComponent\n          map={map}\n          client={client}\n        />\n      );\n\n      clientPluginDefault.wrappedComponent = WrappedPluginComponent;\n\n      if (clientPluginDefault.i18n) {\n        Object.entries(clientPluginDefault.i18n).forEach(locale => {\n          const lng = locale[0];\n          const resources = locale[1].translation;\n          i18n.addResourceBundle(lng, 'translation', resources, true, true);\n        });\n      }\n\n      if (clientPluginDefault.reducers) {\n        const reducers = createReducer(clientPluginDefault.reducers);\n        store.replaceReducer(reducers);\n      }\n\n      clientPlugins.push(clientPluginDefault);\n    });\n  }\n\n  return clientPlugins;\n};\n\nconst checkRoles = (\n  list: string[],\n  featureEditRoles: FeatureEditConfiguration\n): EditLevel[] => {\n  const {\n    authorizedRolesForCreate,\n    authorizedRolesForUpdate,\n    authorizedRolesForDelete\n  } = featureEditRoles;\n\n  const result: EditLevel[] = [];\n\n  for (const element of list) {\n    if (authorizedRolesForCreate?.some(role => matchRole(role, element))) {\n      result.push('CREATE');\n    }\n    if (authorizedRolesForUpdate?.some(role => matchRole(role, element))) {\n      result.push('UPDATE');\n    }\n    if (authorizedRolesForDelete?.some(role => matchRole(role, element))) {\n      result.push('DELETE');\n    }\n  }\n  return result;\n};\n\nconst matchRole = (role: string | RegExp, element: string): boolean => {\n  if (typeof role === 'string') {\n    return element === role;\n  }\n  if (role instanceof RegExp) {\n    return role.test(element);\n  }\n  return false;\n};\n\nconst renderApp = async () => {\n  try {\n    const keycloak = await initKeycloak();\n\n    if (keycloak) {\n      client.setKeycloak(keycloak);\n    }\n\n    const appConfig = await getApplicationConfiguration();\n\n    const defaultLanguage = appConfig?.clientConfig?.defaultLanguage;\n\n    if (!defaultLanguage) {\n      i18n.use(LanguageDetector);\n    }\n\n    await i18n.init(initOpts);\n\n    if (defaultLanguage) {\n      i18n.changeLanguage(defaultLanguage);\n    }\n\n    const style = parseTheme(appConfig?.clientConfig?.theme);\n\n    ConfigProvider.config({\n      theme: {\n        primaryColor: Color(style['--primaryColor']).isLight() ?\n          Color(style['--primaryColor']).darken(0.5).hexa() :\n          style['--primaryColor']\n      }\n    });\n\n    Object.keys(style).forEach((key: any) => {\n      document.body.style.setProperty(key, style[key as keyof ThemeProperties] as string);\n    });\n\n    setApplicationTitle();\n\n    setApplicationToStore(appConfig);\n\n    const appInfo = await getApplicationInfo();\n\n    setAppInfoToStore(appInfo);\n\n    const user = await getUser(appInfo?.userId);\n\n    setUserToStore(user);\n\n    const userRoles: string[] | undefined =\n      client?.getKeycloak()?.tokenParsed?.realm_access?.roles;\n\n    let allowedEditMode: EditLevel[] = ['NONE'];\n\n    if (userRoles && ClientConfiguration.featureEditRoles) {\n      allowedEditMode = checkRoles(\n        userRoles,\n        ClientConfiguration.featureEditRoles\n      );\n    }\n\n    store.dispatch(setUserEditMode(allowedEditMode));\n\n    const map = await setupMap(appConfig);\n\n    const plugins = await loadPlugins(map);\n\n    render(\n      <React.StrictMode>\n        <React.Suspense fallback={<span></span>}>\n          <SHOGunAPIClientProvider client={client}>\n            <PluginProvider plugins={plugins}>\n              <ConfigProvider locale={getConfigLang(i18n.language)}>\n                <Provider store={store}>\n                  <MapContext.Provider value={map}>\n                    <App />\n                  </MapContext.Provider>\n                </Provider>\n              </ConfigProvider>\n            </PluginProvider>\n          </SHOGunAPIClientProvider>\n        </React.Suspense>\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  } catch (error) {\n    const loadingMask = document.querySelectorAll('.loadmask')[0];\n\n    if (loadingMask) {\n      loadingMask.classList.add('loadmask-hidden');\n    }\n\n    Logger.error(error);\n\n    render(\n      <React.StrictMode>\n        <Alert\n          className=\"error-boundary\"\n          message={i18n.t('Index.errorMessage')}\n          description={i18n.t('Index.errorDescription')}\n          type=\"error\"\n          showIcon\n        />\n      </React.StrictMode>,\n      document.getElementById('app')\n    );\n  }\n};\n\nrenderApp();\n","import React from 'react';\n\nimport {\n  ClientPluginInternal\n} from '../plugin';\n\nexport type PluginProviderProps = {\n  plugins: ClientPluginInternal[];\n  children: JSX.Element;\n};\n\nexport const PluginContext = React.createContext<(ClientPluginInternal[])>([]);\n\nexport const PluginProvider: React.FC<PluginProviderProps> = ({\n  plugins,\n  children\n}): JSX.Element => {\n  return (\n    <PluginContext.Provider\n      value={plugins}\n    >\n      {children}\n    </PluginContext.Provider>\n  );\n};\n\nexport default PluginContext;\n","import React from 'react';\n\nimport SHOGunAPIClient from '@terrestris/shogun-util/dist/service/SHOGunAPIClient';\n\nexport type SHOGunAPIClientProviderProps = {\n  client: SHOGunAPIClient;\n  children: JSX.Element;\n};\n\nexport const SHOGunAPIClientContext = React.createContext<(SHOGunAPIClient | null)>(null);\n\nexport const SHOGunAPIClientProvider: React.FC<SHOGunAPIClientProviderProps> = ({\n  client,\n  children\n}): JSX.Element => {\n  return (\n    <SHOGunAPIClientContext.Provider\n      value={client}\n    >\n      {children}\n    </SHOGunAPIClientContext.Provider>\n  );\n};\n\nexport default SHOGunAPIClientContext;\n","import i18n, {\n  InitOptions\n} from 'i18next';\nimport {\n  initReactI18next\n} from 'react-i18next';\n\nimport resources from './translations';\n\nexport const initOpts: InitOptions = {\n  resources,\n  fallbackLng: 'en',\n  debug: false,\n  interpolation: {\n    escapeValue: false\n  },\n  returnNull: false\n};\n\n// eslint-disable-next-line import/no-named-as-default-member\ni18n\n  .use(initReactI18next);\n\ni18n.options = initOpts;\n\nexport default i18n;\n","export default {\n  de: {\n    translation: {\n      ApplicationInfo: {\n        title: 'Über',\n        clientVersionTitle: 'Client Version',\n        backendVersionTitle: 'Backend Version'\n      },\n      AddLayerModal: {\n        addSelectedLayers: 'Auswahl hinzufügen',\n        addAllLayers: 'Alle hinzufügen',\n        inputPlaceholder: 'WMS GetCapabilities URL angeben…',\n        externalWmsFolder: 'Externe Themen',\n        title: 'WMS hinzufügen',\n        columnTitle: 'Name',\n        errorMessage: 'Fehler',\n        errorDescription: 'Das Capabilities Dokument konnte nicht geladen werden, bitte prüfen Sie die URL',\n        version: 'Version'\n      },\n      BasicMapComponent: {\n        processedLayersFolder: 'Prozessierte Layer'\n      },\n      Permalink: {\n        title: 'Teilen',\n        twitterTooltip: 'Link via Twitter teilen',\n        whatsAppTooltip: 'Link via WhatsApp teilen',\n        mailTooltip: 'Link via Mail teilen',\n        copyTooltip: 'Link in die Zwischenablage kopieren',\n        copiedToClipboard: 'Link wurde in Zwischenablage kopiert',\n        copyToClipboardFailed: 'Link konnte nicht kopiert werden'\n      },\n      Measure: {\n        title: 'Messen',\n        line: 'Entfernung',\n        area: 'Fläche',\n        clicktodrawline: 'Zum Zeichnen einer Linie klicken',\n        clicktodrawarea: 'Zum Zeichnen einer Fläche klicken'\n      },\n      Draw: {\n        point: 'Punkt',\n        line: 'Linie',\n        polygon: 'Polygon',\n        circle: 'Kreis',\n        rectangle: 'Rechteck',\n        text: 'Anmerkung',\n        modify: 'Bearbeitung',\n        upload: 'Hochladen',\n        delete: 'Löschen',\n        export: 'Exportieren'\n      },\n      StylingDrawer: {\n        pickColor: 'Farbschema bearbeiten',\n        title: 'Farbschema bearbeiten'\n      },\n      FeatureInfo: {\n        usageHint: 'Klicken Sie in die Karte, um Detailinformationen zu erhalten.'\n      },\n      LayerTree: {\n        transparency: 'Transparenz',\n        noLegendAvailable: 'Keine Legende verfügbar'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Auf Layerausdehnung zoomen',\n        extentError: 'Konnte nicht auf die Layerausdehnung zoomen',\n        removeLayer: 'Layer entfernen',\n        showLegend: 'Legende anzeigen',\n        hideLegend: 'Legende ausblenden',\n        downloadLayer: 'Layer exportieren ({{formatName}})',\n        editLayer: 'Layer bearbeiten',\n        layerDetails: 'Eigenschaften'\n      },\n      LayerDetailsModal: {\n        title: 'Eigenschaften des Layers {{layerName}}',\n        internalConfigurationButtonTooltip: 'Interne Konfiguration anzeigen',\n        internalConfigurationButtonTooltipPressed: 'Interne Konfiguration verbergen'\n      },\n      LayerDetails: {\n        noDataPlaceholder: '-',\n        layerNameLabel: 'Name',\n        layerTitleLabel: 'Titel',\n        serviceAbstractLabel: 'Service Beschreibung',\n        abstractLabel: 'Beschreibung',\n        accessConstraintsLabel: 'Nutzungseinschränkungen',\n        capabilitiesUrlLabel: 'GetCapabilities URL',\n        contactLabel: 'Kontakt',\n        minScaleLabel: 'Min. Maßstab',\n        maxScaleLabel: 'Max. Maßstab',\n        bboxLabel: 'Bounding Box',\n        errorMessage: 'Fehler beim Laden der Layer Capabilities'\n      },\n      LayerConfiguration: {\n        errorMessage: 'Fehler beim Laden der internen Konfiguration'\n      },\n      ToolMenu: {\n        expand: 'Menu ausklappen',\n        collapse: 'Menu einklappen',\n        measure: 'Messen',\n        draw: 'Zeichnen',\n        featureInfo: 'Karteninhalte abfragen',\n        addWms: 'WMS hinzufügen',\n        uploadData: 'Daten hochladen',\n        print: 'Export',\n        layertree: 'Karten',\n        languageSelect: 'Sprachauswahl'\n      },\n      PrintForm: {\n        title: 'Kartentitel',\n        initialTitle: 'Druckausgabe',\n        titlePlaceholder: 'Bitte geben Sie einen Titel ein',\n        comment: 'Bemerkung',\n        commentPlaceholder: 'Bitte geben Sie einen Kommentar ein',\n        layout: 'Vorlage',\n        dpi: 'Auflösung',\n        format: 'Format',\n        scale: 'Maßstab',\n        downloadBtnText: 'Ausdruck erzeugen',\n        printJobErrorMsg: 'Der Kartenausdruck konnte nicht erzeugt werden',\n        initErrorMsg: 'Der Kartendruck Generator konnte nicht initialisiert werden.',\n        outputFormatPlaceholder: 'Bitte wählen Sie ein Ausgabeformat aus',\n        resolutionPlaceholder: 'Bitte wählen Sie eine Ausgabequalität aus',\n        managerErrorMessage: 'Fehler bei der Initialisierung der Export-Engine'\n      },\n      Footer: {\n        refSystem: 'Bezugssystem',\n        scale: 'Maßstab',\n        mousePosition: 'Mausposition',\n        imprint: 'Impressum',\n        contact: 'Kontakt',\n        privacypolicy: 'Datenschutz'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Fehler beim Laden der Applikation',\n        applicationLoadErrorDescription: 'Die Applikation mit der ID {{applicationId}} konnte nicht geladen werden. ' +\n          'Die Standardkonfiguration wird stattdessen geladen.',\n        errorMessage: 'Fehler beim Laden der Applikation',\n        errorDescription: 'Aufgrund eines unerwarteten Fehlers konnte die Applikation nicht geladen werden. ' +\n          'Bitte laden Sie die Seite erneut.'\n      },\n      Nominatim: {\n        placeholder: 'Ortsname, Straßenname, Stadtteilname, POI usw.'\n      },\n      UserMenu: {\n        settingsMenuTitle: 'Profil bearbeiten',\n        infoMenuTitle: 'Über',\n        logoutMenuTitle: 'Ausloggen',\n        loginMenuTitle: 'Anmelden'\n      },\n      WmsTimeSlider: {\n        title: 'Zeitlicher Bezug',\n        default: 'Keine Daten gefunden'\n      },\n      UploadDataModal: {\n        title: 'Daten hochladen',\n        uploadedDataFolder: 'Hochgeladene Daten',\n        description: 'Klicken Sie oder ziehen Sie die Datei zum Hochladen in diesen Bereich',\n        hint: 'Unterstützte Dateiformate sind Shapefile (gebündelt als *.zip) und GeoTIFF',\n        success: 'Datei {{fileName}} wurde erfolgreich geladen und der Layer {{layerName}} erstellt',\n        error: {\n          general: 'Fehler beim Hochladen der Datei {{fileName}}',\n          maxSize: 'Der Upload überschreitet das Limit von {{maxSize}} MB',\n          supportedFormats: 'Der Dateityp ist nicht unterstützt ({{supportedFormats}})',\n          zipContent: 'Mehrere Geodatensätze innerhalb eines Archivs sind nicht unterstützt'\n        }\n      },\n      MultiSearch: {\n        searchInViewBox: 'Im aktuellen Kartenausschnitt suchen',\n        searchData: 'Layerdaten durchsuchen',\n        searchNominatim: 'Ortssuche (Nominatim)',\n        nominatimTitle: 'Ortssuche',\n        searchPlaceholder: 'Orts- und Datensuche…'\n      },\n      EditFeatureDrawer: {\n        featureEditor: 'Objekteditor',\n        noLayerFoundError: 'Kein passender Layer gefunden - das Editieren ist nicht möglich.',\n        isFeatureLockedErrorMsg: 'Das ausgewählte Objekt wird bereits in einer anderen Sitzung bearbeitet.',\n        closeDrawerWarnTitle: 'Wollen Sie wirklich fortfahren?',\n        closeDrawerWarnContent: 'Dadurch werden alle nicht gespeicherten Änderungen an dem Objekt verworfen.'\n      },\n      EditFeatureSwitch: {\n        usageHint: 'Objekt zum Editieren auf der Karte auswählen oder…',\n        limitedUsageHint: 'Zum Editieren bitte eine Objekt auf der Karte auswählen',\n        createFeature: 'Neues Objekt erstellen'\n      },\n      EditFeatureFullForm: {\n        saveErrorMsg: 'Das Objekt konnte nicht gespeichert werden',\n        deleteErrorMsg: 'Das Objekt konnte nicht gelöscht werden'\n      },\n      EditFeatureGeometryToolbar: {\n        draw: 'Neue Geometrie zeichnen',\n        edit: 'Geometrie editieren',\n        delete: 'Geometrie löschen',\n        undo: 'Rückgängig',\n        redo: 'Wiederherstellen'\n      },\n      ResetButton: {\n        title: 'Zurücksetzen'\n      },\n      SaveButton: {\n        title: 'Speichern'\n      },\n      DeleteButton: {\n        title: 'Objekt löschen',\n        confirm: 'Das Objekt wird vollständig gelöscht. Fortfahren?'\n      },\n      EditFeatureButton: {\n        title: 'Objekt bearbeiten'\n      },\n      FeaturePropertyGrid: {\n        copyAsGeoJson: 'Als GeoJSON kopieren (inkl. Geometrie)',\n        copyAsObject: 'Als Objekt kopieren (nur angezeigte Werte)',\n        key: 'Name',\n        value: 'Wert'\n      }\n    }\n  },\n  en: {\n    translation: {\n      ApplicationInfo: {\n        title: 'About',\n        clientVersionTitle: 'Client version',\n        backendVersionTitle: 'Backend version'\n      },\n      AddLayerModal: {\n        addSelectedLayers: 'Add selected',\n        addAllLayers: 'Add all',\n        inputPlaceholder: 'Enter a WMS GetCapabilities URL…',\n        externalWmsFolder: 'External layers',\n        title: 'Add WMS',\n        columnTitle: 'Name',\n        errorMessage: 'Error',\n        errorDescription: 'Could not load the provided Capabilities document, please check the validity of the URL',\n        version: 'Version'\n      },\n      BasicMapComponent: {\n        processedLayersFolder: 'Processed layers'\n      },\n      Permalink: {\n        title: 'Share',\n        twitterTooltip: 'Share link via Twitter',\n        whatsAppTooltip: 'Share link via WhatsApp',\n        mailTooltip: 'Share link via Mail',\n        copyTooltip: 'Copy link to Clipboard',\n        copiedToClipboard: 'Copied to clipboard',\n        copyToClipboardFailed: 'Could not copy link to clipboard'\n      },\n      Measure: {\n        title: 'Measure',\n        line: 'Distance',\n        area: 'Area',\n        clicktodrawline: 'Click to draw line',\n        clicktodrawarea: 'Click to draw area'\n      },\n      Draw: {\n        point: 'Point',\n        line: 'Line',\n        polygon: 'Polygon',\n        circle: 'Circle',\n        rectangle: 'Rectangle',\n        text: 'Annotation',\n        modify: 'Edit',\n        upload: 'Upload',\n        delete: 'Delete',\n        export: 'Export'\n      },\n      StylingDrawer: {\n        pickColor: 'Modify color scheme',\n        title: 'Modify color scheme'\n      },\n      FeatureInfo: {\n        usageHint: 'Click on the map to get details about the clicked coordinate.'\n      },\n      LayerTree: {\n        transparency: 'Transparency',\n        noLegendAvailable: 'No legend available'\n      },\n      LayerTreeContextMenu: {\n        layerZoomToExtent: 'Zoom to layer extent',\n        extentError: 'Could not zoom to layer extent',\n        removeLayer: 'Remove layer',\n        showLegend: 'Show legend',\n        hideLegend: 'Hide legend',\n        downloadLayer: 'Export layer as {{formatName}}',\n        editLayer: 'Edit layer',\n        layerDetails: 'Properties'\n      },\n      LayerDetailsModal: {\n        title: 'Properties of layer {{layerName}}',\n        internalConfigurationButtonTooltip: 'Show internal configuration',\n        internalConfigurationButtonTooltipPressed: 'Hide internal configuration'\n      },\n      LayerDetails: {\n        noDataPlaceholder: '-',\n        layerNameLabel: 'Name',\n        layerTitleLabel: 'Title',\n        serviceAbstractLabel: 'Service abstract',\n        abstractLabel: 'Abstract',\n        accessConstraintsLabel: 'Access constraints',\n        capabilitiesUrlLabel: 'GetCapabilities URL',\n        contactLabel: 'Contact',\n        minScaleLabel: 'Min. scale',\n        maxScaleLabel: 'Max. scale',\n        bboxLabel: 'Bounding box',\n        errorMessage: 'Error while loading the layer capabilities'\n      },\n      LayerConfiguration: {\n        errorMessage: 'Error while loading the internal configuration'\n      },\n      ToolMenu: {\n        expand: 'Expand',\n        collapse: 'Collapse',\n        measure: 'Measure',\n        draw: 'Draw',\n        featureInfo: 'Query map features',\n        addWms: 'Add WMS',\n        uploadData: 'Upload data',\n        print: 'Export',\n        layertree: 'Maps',\n        languageSelect: 'Language selector'\n      },\n      PrintForm: {\n        title: 'Title',\n        initialTitle: 'Title',\n        titlePlaceholder: 'Please input a title…',\n        comment: 'Comment',\n        commentPlaceholder: 'Please enter a comment…',\n        layout: 'Layout',\n        dpi: 'Resolution',\n        format: 'Format',\n        scale: 'Scale',\n        downloadBtnText: 'Create print',\n        printJobErrorMsg: 'Could not generate PDF output',\n        initErrorMsg: 'PDF Generator could not be initialized',\n        outputFormatPlaceholder: 'Please select an output format',\n        resolutionPlaceholder: 'Please select an output quality',\n        managerErrorMessage: 'Error while initializing the export engine'\n      },\n      Footer: {\n        refSystem: 'Reference system',\n        scale: 'Scale',\n        mousePosition: 'Mouse position',\n        imprint: 'Imprint',\n        contact: 'Contact',\n        privacypolicy: 'Privacy'\n      },\n      Index: {\n        applicationLoadErrorMessage: 'Error while loading the application',\n        applicationLoadErrorDescription: 'The application with ID {{applicationId}} could not be loaded correctly. ' +\n          'You\\'re seeing the default application configuration.',\n        errorMessage: 'Error while loading the application',\n        errorDescription: 'An unexpected error occured while loading the application. Please try to reload the page.'\n      },\n      Nominatim: {\n        placeholder: 'Place name, street name, district name, POI, etc.'\n      },\n      UserMenu: {\n        settingsMenuTitle: 'Edit profile',\n        infoMenuTitle: 'About',\n        logoutMenuTitle: 'Logout',\n        loginMenuTitle: 'Login'\n      },\n      WmsTimeSlider: {\n        title: 'Time reference',\n        default: 'No data found'\n      },\n      UploadDataModal: {\n        title: 'Upload data',\n        uploadedDataFolder: 'Uploaded data',\n        description: 'Click or drag file to this area to upload',\n        hint: 'Supported file formats are Shapefile (bundled as *.zip) and GeoTIFF',\n        success: 'Successfully uploaded file {{fileName}} and created layer {{layerName}}',\n        error: {\n          general: 'Error while uploading file {{fileName}}',\n          maxSize: 'The file exceeds the upload limit of {{maxSize}} MB',\n          supportedFormats: 'The given file type does not match the supported ones ({{supportedFormats}})',\n          zipContent: 'Multiple geodatasets within one archive are not supported'\n        }\n      },\n      MultiSearch: {\n        searchInViewBox: 'Search in current extent',\n        searchData: 'Search layer data',\n        searchNominatim: 'Search nominatim',\n        nominatimTitle: 'Nominatim',\n        searchPlaceholder: 'Address and data search…'\n      },\n      EditFeatureDrawer: {\n        featureEditor: 'Feature editor',\n        noLayerFoundError: 'No layer found - the editing is not possible.',\n        isFeatureLockedErrorMsg: 'The selected feature is already being edited in another session.',\n        closeDrawerWarnTitle: 'Do you really want to quit?',\n        closeDrawerWarnContent: 'This will discard any unsaved changes to the feature.'\n      },\n      EditFeatureSwitch: {\n        usageHint: 'Select an existing feature for editing on the map or…',\n        limitedUsageHint: 'To edit please select an object on the map',\n        createFeature: 'Create new feature'\n      },\n      EditFeatureFullForm: {\n        saveErrorMsg: 'Error while saving the feature',\n        deleteErrorMsg: 'Error while deleting the feature'\n      },\n      EditFeatureGeometryToolbar: {\n        draw: 'Draw new geometry',\n        edit: 'Edit geometry',\n        delete: 'Delete geometry',\n        undo: 'Undo',\n        redo: 'Redo'\n      },\n      ResetButton: {\n        title: 'Reset'\n      },\n      SaveButton: {\n        title: 'Save'\n      },\n      DeleteButton: {\n        title: 'Delete feature',\n        confirm: 'The feature will be completely deleted. Proceed?'\n      },\n      EditFeatureButton: {\n        title: 'Edit feature'\n      },\n      FeaturePropertyGrid: {\n        copyAsGeoJson: 'Copy as GeoJSON (incl. geometry)',\n        copyAsObject: 'Copy as object (displayed values only)',\n        key: 'Name',\n        value: 'Value'\n      }\n    }\n  }\n};\n","import('./bootstrap');\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface AddLayerModalState {\n  visible: boolean;\n}\n\nconst initialState: AddLayerModalState = {\n  visible: false\n};\n\nconst addLayerModalSlice = createSlice({\n  name: 'addLayerModal',\n  initialState,\n  reducers: {\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = addLayerModalSlice.actions;\n\nexport default addLayerModalSlice.reducer;\n","import {\n  PayloadAction,\n  createSlice\n} from '@reduxjs/toolkit';\n\nimport {\n  Feature\n} from 'geojson';\n\nexport type EditLevel = 'CREATE' | 'UPDATE' | 'DELETE' | 'NONE';\nexport interface EditFeatureState {\n  layerId: string | null;\n  feature: Feature | null;\n  userEditMode: EditLevel[];\n}\n\nconst initialState: EditFeatureState = {\n  layerId: null,\n  feature: null,\n  userEditMode: ['NONE']\n};\n\nconst editFeatureSlice = createSlice({\n  name: 'editFeature',\n  initialState,\n  reducers: {\n    setLayerId(state, action: PayloadAction<string | null>) {\n      state.layerId = action.payload;\n    },\n    setFeature(state, action: PayloadAction<Feature | null>) {\n      state.feature = action.payload;\n    },\n    reset(state) {\n      state.layerId = null;\n      state.feature = null;\n    },\n    setUserEditMode(state, action: PayloadAction<EditLevel[]>) {\n      state.userEditMode = action.payload;\n    }\n  }\n});\n\nexport const {\n  setLayerId,\n  setFeature,\n  reset,\n  setUserEditMode\n} = editFeatureSlice.actions;\n\nexport default editFeatureSlice.reducer;\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nconst initialState: boolean = false;\n\nconst editFeatureDrawerOpenSlice = createSlice({\n  name: 'editFeatureDrawerOpen',\n  initialState,\n  reducers: {\n    show() {\n      return true;\n    },\n    hide() {\n      return false;\n    },\n    toggle(state) {\n      return !state;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = editFeatureDrawerOpenSlice.actions;\n\nexport default editFeatureDrawerOpenSlice.reducer;\n","import {\n  PayloadAction,\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface LayerDetailsModalState {\n  visible: boolean;\n  layerId?: string;\n}\n\nconst initialState: LayerDetailsModalState = {\n  visible: false\n};\n\nconst layerDetailsModalSlice = createSlice({\n  name: 'layerDetailsModal',\n  initialState,\n  reducers: {\n    setLayer(state, action: PayloadAction<string | undefined>) {\n      state.layerId = action.payload;\n    },\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  setLayer,\n  show,\n  hide,\n  toggle\n} = layerDetailsModalSlice.actions;\n\nexport default layerDetailsModalSlice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nimport { V3CustomMapParams } from '@terrestris/mapfish-print-manager/dist/manager/MapFishPrintV3Manager';\n\nexport type PrintState = {\n  customMapParams?: V3CustomMapParams;\n  customParams?: any;\n};\n\nconst initialState: PrintState = {\n  customMapParams: {},\n  customParams: {\n    printLegend: false\n  }\n};\n\nexport const printSlice = createSlice({\n  name: 'print',\n  initialState,\n  reducers: {\n    setCustomMapParams: (state, action: PayloadAction<V3CustomMapParams>) => {\n      state.customMapParams = action.payload;\n    },\n    setCustomParams: (state, action: PayloadAction<any>) => {\n      state.customParams = action.payload;\n    },\n    addCustomMapParam: (state, action: PayloadAction<Partial<V3CustomMapParams>>) => {\n      state.customMapParams = {\n        ...state.customMapParams,\n        ...action.payload\n      };\n    },\n    addCustomParam: (state, action: PayloadAction<any>) => {\n      state.customParams = {\n        ...state.customParams,\n        ...action.payload\n      };\n    }\n  }\n});\n\nexport const {\n  setCustomMapParams,\n  setCustomParams,\n  addCustomMapParam,\n  addCustomParam\n} = printSlice.actions;\n\nexport default printSlice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nexport type SelectedFeatures = {\n  [layerName: string]: string;\n};\n\nconst initialState: SelectedFeatures = {};\n\nexport const slice = createSlice({\n  name: 'selectedFeatures',\n  initialState,\n  reducers: {\n    setSelectedFeatures(state, action: PayloadAction<SelectedFeatures>) {\n      return action.payload;\n    }\n  }\n});\n\nexport const {\n  setSelectedFeatures\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction\n} from '@reduxjs/toolkit';\n\nexport interface ToolMenuState {\n  activeKeys: string[];\n  availableTools: string[];\n}\n\nconst initialState: ToolMenuState = {\n  // This is the default state. If no config is given, then load all tools\n  activeKeys: [],\n  availableTools: ['default']\n};\n\nexport const slice = createSlice({\n  name: 'toolMenu',\n  initialState,\n  reducers: {\n    setActiveKeys(state, action: PayloadAction<string[]>) {\n      state.activeKeys = [...action.payload];\n    },\n    setAvailableTools(state, action: PayloadAction<string[]>) {\n      state.availableTools = [...action.payload];\n    }\n  }\n});\n\nexport const {\n  setActiveKeys,\n  setAvailableTools\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createSlice\n} from '@reduxjs/toolkit';\n\nexport interface UploadDataModalState {\n  visible: boolean;\n}\n\nconst initialState: UploadDataModalState = {\n  visible: false\n};\n\nconst uploadDataModalSlice = createSlice({\n  name: 'uploadDataModal',\n  initialState,\n  reducers: {\n    show(state) {\n      state.visible = true;\n    },\n    hide(state) {\n      state.visible = false;\n    },\n    toggle(state) {\n      state.visible = !state.visible;\n    }\n  }\n});\n\nexport const {\n  show,\n  hide,\n  toggle\n} = uploadDataModalSlice.actions;\n\nexport default uploadDataModalSlice.reducer;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","locals","AddLayerModal","restProps","loading","setLoading","useState","layers","setLayers","selectedRowKeys","setSelectedRowKeys","url","setUrl","sanitizedUrl","setSanitizedUrl","version","setVersion","isModalVisible","state","addLayerModal","visible","dispatch","map","useMap","t","useTranslation","useEffect","UrlUtil","closeModal","hide","addLayers","layersToAdd","targetFolderName","targetGroup","MapUtil","OlLayerGroup","set","existingGroups","getLayerGroup","getLayers","insertAt","getLength","forEach","layerToAdd","getArray","includes","layerUrl","ImageLayer","getSource","getUrl","TileLayer","urls","getUrls","length","undefined","layerConfig","name","get","type","opacity","getOpacity","sourceConfig","layerNames","getParams","LAYERS","useBearerToken","push","React","Modal","_extends","className","title","open","onCancel","width","footer","Button","key","disabled","onClick","onAddAll","onAddSelected","filter","layer","getUid","Input","Search","placeholder","value","onChange","event","target","onSearch","async","capabilities","CapabilitiesUtil","externalLayers","error","notification","message","description","enterButton","addonBefore","Select","defaultValue","label","Table","columns","render","text","record","rowKey","rowSelection","pagination","dataSource","usePlugins","useContext","PluginContext","useSHOGunAPIClient","SHOGunAPIClientContext","BasicMapComponent","client","queryParams","search","window","location","URLSearchParams","useQueryParams","plugins","center","zoom","customLayerAttributes","restoreTransientLayers","useCallback","configString","permaLinkLayers","addLayerGroup","layerGroup","config","JSON","parse","Error","parser","SHOGunApplicationUtil","i","cfg","_isEmpty","olLayer","parseLayer","isExternalLayer","isUploadedLayer","groupName","setVisible","split","some","l","Logger","identifier","OlLayerTile","OlLayerImage","PermalinkUtil","pluginComponents","plugin","pluginIntegration","integration","placement","wrappedComponent","WrappedPluginComponent","MapComponent","useExecuteWfsTransaction","source","opts","OlSourceImageWMS","OlSourceTileWMS","endsWith","slice","defaultHeaders","response","fetch","method","headers","getBearerTokenHeader","getKeycloak","body","XMLSerializer","serializeToString","transaction","ok","responseText","DOMParser","parseFromString","getElementsByTagName","isGeometryType","propertyType","useExecuteWfsDescribeFeatureType","params","SERVICE","REQUEST","VERSION","OUTPUTFORMAT","TYPENAMES","json","useWriteWfsTransaction","executeWfsDescribeFeatureType","cleanFormValues","form","formValues","getFieldsValue","Object","entries","getFieldInstance","isMoment","toISOString","inserts","updates","deletes","describeFeatureType","geomProperty","featureTypes","properties","find","property","overallUpdateMode","upsertFeatures","feature","feat","OlFeature","geometry","getGeometry","clone","isEmpty","getExtent","setGeometryName","setProperties","updateMode","getId","setId","deleteFeatures","transactionOpts","featureNS","targetNamespace","featurePrefix","targetPrefix","featureType","srsName","getView","getProjection","getCode","nativeElements","OlFormatWFS","writeTransaction","ClientConfiguration","rootNode","getRootNode","lockId","document","createElementNS","lockIdValue","createTextNode","appendChild","MapDrawer","children","passThroughProps","querySelectorAll","classList","toggle","Drawer","mask","afterOpenChange","onAfterDrawerOpenChange","updateSize","useExecuteGetFeature","featureRequest","writeGetFeature","outputFormat","EditFeatureGeometryToolbar","historyLength","editHistory","useRef","past","future","editLayer","setEditLayer","setRevision","gjFormat","useMemo","OlFormatGeoJson","allowedEditMode","editFeature","userEditMode","DigitizeUtil","getDigitizeLayer","removeLayer","id","clear","olFeat","readFeature","addFeature","r","isEmptyOlExtent","fit","padding","updateRevision","features","getFeatures","writeFeaturesObject","current","btnTooltipProps","tooltipPlacement","tooltipProps","mouseEnterDelay","Toolbar","alignment","ToggleGroup","DrawButton","icon","FontAwesomeIcon","faPencil","pressedIcon","digitizeLayer","tooltip","drawType","onDrawEnd","e","toLocaleLowerCase","startsWith","ModifyButton","faDrawPolygon","onModifyStart","onModifyEnd","onTranslateEnd","DeleteButton","faTrash","onFeatureRemove","SimpleButton","faUndo","undoEdit","editSource","previousSource","addFeatures","readFeatures","flip","redoEdit","nextSource","DisplayField","format","suffix","displayText","Number","isFinite","Intl","NumberFormat","Array","isArray","join","Typography","Text","EditFeatureForm","formConfig","createReadOnlyComponent","fieldConfig","fieldProps","createFieldComponent","fieldCfg","component","Checkbox","DatePicker","InputNumber","allowClear","Switch","TextArea","Form","labelCol","span","labelAlign","labelWrap","field","readOnly","propertyName","formItemProps","rules","required","valuePropName","Item","displayName","EditFeatureTabs","tabConfig","initialValues","items","idx","forceRender","Tabs","onError","onSuccess","writeWfsTransaction","executeWfsTransaction","Popconfirm","onConfirm","isWmsLayer","olFeature","OlFormatGeoJSON","refresh","danger","ResetButton","resetFields","faRotateLeft","SaveButton","validateFields","warn","result","faFloppyDisk","EditFeatureToolbar","onSaveSuccess","onSaveError","onDeleteSuccess","onDeleteError","EditFeatureFullForm","executeGetFeature","setTabConfig","setInitialValues","errorMsg","setErrorMsg","useForm","reloadFeature","updatedFeatures","equalTo","setFeature","update","editFormConfig","cloneDeep","tabConfigs","tabCfg","formCfg","isDate","moment","isUpload","status","setFieldsValue","Alert","showIcon","featureId","idString","item","getAttribute","useExecuteWfsLockFeature","lockFeatureDoc","featureProperties","parseInt","match","toString","idProperty","typeName","setAttribute","queryElement","filterElement","isEqualToElement","valueReferenceElement","valueReferenceValue","literalElement","literalValue","writeWfsLockFeature","useGetFeatureInfo","onFailure","onSingleClick","coords","evt","coordinate","viewResolution","getResolution","getFeatureInfoUrl","INFO_FORMAT","BUFFER","getTargetElement","style","cursor","featureCollection","onPointerMove","dragging","data","getData","pixel","Uint8ClampedArray","hit","on","un","EditFeatureSwitch","onLockSuccess","onLockError","onCreate","executeWfsLockFeature","geomType","getGeometryType","coordinates","EditFeatureDrawer","setLayer","isFeatureLocked","setIsFeatureLocked","drawerTitle","setDrawerTitle","isDrawerOpen","editFeatureDrawerOpen","layerId","closeDrawer","releaseLock","hideEditFeatureDrawer","reset","onClose","onDrawerClose","confirm","maskClosable","content","okType","onOk","Footer","legalInformation","legal","insertPlugins","itemPosition","placementOrientation","splice","insertionIndex","getControls","control","OlControlScaleLine","addControl","OlControlMousePosition","coordinateFormat","createStringXY","projection","openContactModal","contact","openImprintModal","imprint","openPrivacyModal","privacy","getLeftItems","Divider","ScaleCombo","getRightItems","BasicNominatimSearch","viewBox","setViewBox","mapViewProjection","extent","transformedExtent","transformExtent","NominatimSearch","countryCodes","nominatimBaseUrl","generateFuzzySearchQuery","searchParts","searchAttributes","a","part","trim","generateSolrQuery","searchValue","parts","replaceAll","s","subQueriesPerLayer","getAllLayers","searchConfig","fullLayerName","attributes","MultiSearch","useNominatim","delay","minChars","solrSearchBasePath","clickAwayRef","searchNominatim","setSearchNominatim","searchData","setSearchData","useViewBox","setUseViewBox","setSearchValue","resultsVisible","setResultsVisible","settingsVisible","setSettingsVisible","dataSearchResults","setDataSearchResults","nominatimResults","setNominatimResults","searchResults","setSearchResults","addEventListener","handleClickAway","removeEventListener","parents","unshift","parentNode","contains","settingsMenu","checked","performSearch","resetSearch","calculateExtent","query","searchUrl","URL","origin","bboxFilter","filterQuery","href","stringify","dataJson","docs","logger","nominatimUrl","searchParams","getFeatureTitle","dsResult","blacklistedAttributes","keys","propKey","propValue","toLowerCase","indexOf","updatedResults","geoJsonFormat","nFeats","f","geojson","dataProjection","featureProjection","display_name","nResults","wktFormat","OlFormatWKT","categories","_groupBy","res","category","resultCategory","readGeometry","ftName","substring","lastIndexOf","timeout","setTimeout","clearTimeout","listPrefixRenderer","Tag","actionsCreator","onEditFeatureBtnClick","setLayerId","showEditFeatureDrawer","Tooltip","EditOutlined","ref","addonAfter","Dropdown","menu","trigger","onOpenChange","SettingOutlined","onFocus","prefix","SearchOutlined","LoadingOutlined","resultRenderer","numTotal","Empty","image","PRESENTED_IMAGE_SIMPLE","SearchResultsPanel","accordion","searchTerms","layerStyle","OlStyle","stroke","OlStyleStroke","color","fill","OlStyleFill","OlStyleCircle","radius","SearchField","searchEngines","useSolr","getGravatarUrl","email","size","rating","defaultImage","force","lowerCaseEmail","md5","ApplicationInfo","opener","appInfo","logoPath","appDescription","isVisible","toggleVisibility","Opener","centered","src","Statistic","PROJECT_VERSION","buildTime","UserMenu","keycloak","user","onMenuClick","accountManagement","login","logout","UserChip","imageSrc","providerDetails","userName","faAngleDown","userMenu","getMenu","faSignIn","username","divider","settings","faUserCog","info","faInfo","faSignOut","enabled","accountRoles","tokenParsed","resource_access","account","roles","itemsForLoggedInUser","Header","getCenterItems","LayerConfiguration","errorMessage","setErrorMessage","layerConfiguration","setLayerConfiguration","getLayerConfiguration","conf","findOne","closable","Spin","spinning","LayerDetails","setCapabilities","getCapabilities","capa","getLayerName","getCapabilitiesUrl","getCapabilitiesLayer","Capability","Layer","layerName","lay","Name","getBBox","EX_GeographicBoundingBox","getMinScale","MinScaleDenominator","getMaxScale","MaxScaleDenominator","getAbstract","Abstract","getServiceAbstract","Service","getContact","ContactInformation","ContactElectronicMailAddress","getLayerTitle","Title","getAccessConstraints","AccessConstraints","layout","flex","LayerDetailsModal","configurationVisible","setConfigurationVisible","layerDetailsModal","OlLayer","FileTextOutlined","onShowConfigurationClick","hideLayerDetailsModal","setDetailsLayer","hidden","Option","LanguageSelect","supportedLanguages","i18n","services","resourceStore","language","lang","changeLanguage","supportedLanguage","toUpperCase","Permalink","layerAttributes","initialPermalink","getVisible","permalink","setPermalink","mailBody","eventKeys","identifierFunction","filterFunction","updatePermalink","updateLayerConfig","externalLayer","clientConfig","registerLayerCallback","layersInGroup","layerInGroup","LayerGroup","eventKeyVisibility","eventKeyOpacity","listenerKeyCenter","listenerKeyResolution","mapLayerGroup","unByKey","TwitterOutlined","twitterUrl","WhatsAppOutlined","whatsAppUrl","MailOutlined","mailToUrl","replace","CopyOutlined","copy","SHOGunMapFishPrintV3WMSSerializer","MapFishPrintV3WMSSerializer","serialize","serialized","super","baseURL","optsToApply","tileSize","this","validateSource","MapFishPrintV3TiledWMSSerializer","CustomFieldInput","maxLength","inputText","setInputText","_isNil","addCustomParam","showCount","LayoutSelect","printManager","setLayout","getLayouts","OutputFormatSelect","outputFormats","setOutputFormat","toLocaleUpperCase","ResolutionSelect","resolution","setResolution","setDpi","getDpis","d","ScaleSelect","scale","setScale","updateScale","pmScale","getScale","transformInteraction","getInteractions","MapFishPrintV3Manager","TRANSFORM_INTERACTION_NAME","getScales","toLocaleString","Shared","customParams","FORMAT","LAYER","encodeURIComponent","PrintForm","active","customPrintScales","layerBlackList","currentLanguageCode","customMapParams","print","setPrintManager","layerFilter","legendFilter","notBlacklisted","notHidden","printableLayer","SCALE","initializeMapProvider","pManagerOpts","getResolutions","units","getUnits","reverse","transformOpts","rotate","serializers","MapFishPrintV3GeoJsonSerializer","MapFishPrintV3OSMSerializer","MapFishPrintV3WMTSSerializer","SHOGunMapFishPrintV3TiledWMSSerializer","pManager","init","apps","getPrintApps","setPrintApp","getOutputFormats","shutdownManager","setCustomParams","setCustomMapParams","onAlertClose","isInitiated","initialValue","getClosestScaleToFitMap","faDownload","downloadUrl","StylingComponent","setStyle","symbolizers","kind","outlineOpacity","fillOpacity","outlineWidth","outlineColor","wellKnownName","strokeColor","strokeOpacity","font","offset","haloColor","haloWidth","olParser","OlParser","drawVectorLayer","olStylePolygon","olStyleLineString","olStylePoint","olStyleText","rule","newStyle","olStyle","writeStyle","output","drawLayerStyleFunction","geometryType","getType","parseStyles","CardStyle","onStyleChange","StylingDrawer","setOpen","showDrawer","faPaintBrush","Draw","showDrawPoint","showDrawLine","showDrawPolygon","showDrawCircle","showDrawRectangle","showDrawAnnotation","showModifyFeatures","showUploadFeatures","showDownloadFeatures","showDeleteFeatures","onGeoJSONUpload","geoJSONFile","fileReader","FileReader","onload","geoJSONFeatures","GeoJSON","mapProjection","transform","digitizeLayerSource","readAsText","pressed","faCircle","faGripLines","faSquare","faFont","faPenToSquare","UploadButton","uploadedFiles","files","faUpload","onGeoJSONDownload","clonedFeatures","digitizedFeatures","clonedFeature","geoJSON","writeFeatures","fileToDownload","Blob","createObjectURL","link","createElement","click","removeChild","FeatureInfoPropertyGrid","currentPage","setCurrenPage","selectedFeature","setSelectedFeature","vectorLayerName","page","initVectorLayer","OlSourceVector","featureStyle","OlLayerVector","addLayer","deinitVectorLayer","vectorLayer","attributeFilter","getKeys","prop","PropertyGrid","sticky","Pagination","simple","total","pageSize","writeFeature","faClipboardCheck","props","getProperties","attr","faClipboardList","dataIndex","ellipsis","defaultSortOrder","sorter","b","localeCompare","scroll","scrollToFirstRowOnChange","y","FeatureInfo","queryLayers","setQueryLayers","updateQueryLayers","layerCandidates","mapLayers","getUnqualifiedLayerName","CoordinateInfo","featureCount","coordinateInfoState","pluginRendererAvailable","mapLayer","unqualifiedMapLayerName","fetchOpts","getFetchOpts","layerUid","serializedFeatures","entry","selectedFeatures","setSelectedFeatures","WmsTimeSlider","setValue","TIME","min","setMin","max","setMax","marks","setMarks","timeValues","values","m","val","default","nearest","NaN","diff","faClock","TimeSlider","updateParams","step","LayerTreeContextMenu","visibleLegendsIds","setVisibleLegendsIds","extentLoading","setExtentLoading","downloadConfig","zoomToLayerExtent","LayerUtil","getAllLayerGroups","layerGroups","parentGroups","getParentLayerGroups","parentGroup","remove","removeExternalLayer","externalLayerGroup","uploadedLayerGroup","downloadLayer","reqOpts","blob","dropdownMenuItems","legendVisible","downloadItems","dlConfig","formatName","encodeURI","decodeURI","legendId","newLegendIds","setLayerDetailsLayer","showLayerDetailsModal","faEllipsisV","LayerTree","layerTileLoadCounter","setLayerTileLoadCounter","allLayers","hasListener","tileLoadStartListener","tileLoadEndListener","counter","uid","loaded","percent","isInteger","Math","round","RgLayerTree","nodeTitleRenderer","mapView","unit","Progress","strokeWidth","LayerTransparencySlider","formatter","Legend","extraParams","LEGEND_OPTIONS","TRANSPARENT","forEachFeature","draggable","Measure","showMeasureDistance","showMeasureArea","MeasureButton","geodesic","measureType","continueLineMsg","faPenRuler","continuePolygonMsg","Panel","Collapse","ToolMenu","availableTools","toolMenu","activeKeys","collapsed","setCollapsed","menuTools","setMenuTools","mobileQuery","matchMedia","mobileNavigatorRegEx","RegExp","matches","test","navigator","userAgent","setActiveKeys","getToolPanelConfig","tool","faRuler","faMousePointer","faFileDownload","faStream","faPlus","showAdd","upload","authorizedRoles","role","hasResourceRole","clientId","showUpload","faShareNodes","faLanguage","expandIconPosition","activeKey","destroyInactivePanel","_toArray","getToolPanels","panels","toolPanelConfig","panel","header","faChevronRight","faChevronLeft","Dragger","Upload","UploadDataModal","uploadError","setUploadError","uploadSuccess","setUploadSuccess","isUploading","setIsUploading","uploadDataModal","getAttributeType","dbfFieldType","customRequest","file","splittedFileName","fileType","geoServerBaseUrl","base","workspace","Date","now","uploadData","baseUrl","storeName","coverageStoreUrl","fileName","coverageUrl","coverage","nativeName","keywords","uploadGeoTiff","shp","Shapefile","load","featureTypeName","featureTypeAttributes","attribute","k","v","dbfContent","fields","minOccurs","maxOccurs","nillable","binding","shxContent","featureTypeUrl","uploadShapeZip","accept","maxCount","showUploadList","beforeUpload","maxSize","limit","fileSize","supportedFormats","hoverable","parseTileLayer","App","loadingMask","add","createSlice","initialState","authorities","commitHash","userId","reducers","setAppInfo","action","payload","actions","setDescription","setLegal","setLogoPath","setSearchEngines","setTitle","setUser","createReducer","asyncReducers","combineReducers","store","configureStore","reducer","SHOGunAPIClient","getConfigLang","enGB","deDE","setupSHOGunMap","view","parseMapView","application","constrainOnlyCenter","ll","fromLonLat","ur","setConstrainResolution","parseLayerTree","OlMap","controls","OlControlDefaults","setupDefaultMap","osmLayer","OlSourceOsm","temperatureLayer","eoLayerGroup","backgroundLayerGroup","OlView","loadPluginModules","moduleName","moduleUrl","remoteNames","__webpack_init_sharing__","Promise","resolve","reject","element","parentElement","onerror","err","head","container","__webpack_share_scopes__","modules","remoteName","module","matchRole","keycloakEnabled","keycloakOnLoad","onLoadAction","keycloakHost","host","keycloakRealm","realm","keycloakClientId","Keycloak","onTokenExpired","updateToken","onLoad","checkLoginIframe","initKeycloak","setKeycloak","appConfig","applicationId","duration","getApplicationConfiguration","defaultLanguage","use","LanguageDetector","initOpts","theme","primaryColor","secondaryColor","complementaryColor","parseTheme","ConfigProvider","Color","isLight","darken","hexa","setProperty","subscribe","getState","toolConfig","engines","setAvailableTools","setApplicationToStore","getAppInfo","getApplicationInfo","setAppInfoToStore","setUserToStore","getUser","userRoles","realm_access","checkRoles","list","featureEditRoles","authorizedRolesForCreate","authorizedRolesForUpdate","authorizedRolesForDelete","setUserEditMode","setupMap","clientPlugins","resourcePath","exposedPaths","clientPluginModules","clientPluginDefault","PluginComponent","locale","lng","resources","translation","addResourceBundle","replaceReducer","loadPlugins","fallback","SHOGunAPIClientProvider","PluginProvider","Provider","MapContext","getElementById","renderApp","de","clientVersionTitle","backendVersionTitle","addSelectedLayers","addAllLayers","inputPlaceholder","externalWmsFolder","columnTitle","errorDescription","processedLayersFolder","twitterTooltip","whatsAppTooltip","mailTooltip","copyTooltip","copiedToClipboard","copyToClipboardFailed","line","area","clicktodrawline","clicktodrawarea","point","polygon","circle","rectangle","modify","delete","export","pickColor","usageHint","transparency","noLegendAvailable","layerZoomToExtent","extentError","showLegend","hideLegend","layerDetails","internalConfigurationButtonTooltip","internalConfigurationButtonTooltipPressed","noDataPlaceholder","layerNameLabel","layerTitleLabel","serviceAbstractLabel","abstractLabel","accessConstraintsLabel","capabilitiesUrlLabel","contactLabel","minScaleLabel","maxScaleLabel","bboxLabel","expand","collapse","measure","draw","featureInfo","addWms","layertree","languageSelect","initialTitle","titlePlaceholder","comment","commentPlaceholder","dpi","downloadBtnText","printJobErrorMsg","initErrorMsg","outputFormatPlaceholder","resolutionPlaceholder","managerErrorMessage","refSystem","mousePosition","privacypolicy","Index","applicationLoadErrorMessage","applicationLoadErrorDescription","Nominatim","settingsMenuTitle","infoMenuTitle","logoutMenuTitle","loginMenuTitle","uploadedDataFolder","hint","success","general","zipContent","searchInViewBox","nominatimTitle","searchPlaceholder","featureEditor","noLayerFoundError","isFeatureLockedErrorMsg","closeDrawerWarnTitle","closeDrawerWarnContent","limitedUsageHint","createFeature","saveErrorMsg","deleteErrorMsg","edit","undo","redo","EditFeatureButton","FeaturePropertyGrid","copyAsGeoJson","copyAsObject","en","fallbackLng","debug","interpolation","escapeValue","returnNull","initReactI18next","addLayerModalSlice","show","editFeatureSlice","editFeatureDrawerOpenSlice","layerDetailsModalSlice","printSlice","printLegend","addCustomMapParam","uploadDataModalSlice","___CSS_LOADER_EXPORT___"],"sourceRoot":""}