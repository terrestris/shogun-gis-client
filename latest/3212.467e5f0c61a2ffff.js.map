{"version":3,"file":"3212.467e5f0c61a2ffff.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/Image.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/Tile.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/TileRange.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/TileState.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/easing.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/layer/BaseTile.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/layer/Tile.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/size.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/tilecoord.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/util.js"],"sourcesContent":["/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.4.0';\n"],"names":["ImageWrapper","extent","resolution","pixelRatio","stateOrLoader","requestResolution","Array","image","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","error","console","listenImage","loadHandler","errorHandler","listening","decoding","loaded","listenerKeys","img","decodeFallback","src","Promise","resolve","reject","e","handleLoad","unlisten","handleError","Error","decode","createImageBitmap","Tile","tileCoord","state","options","undefined","id","time","start","delta","TileRange","minX","maxX","minY","maxY","tileRange","x","y","createOrUpdate","easeIn","t","Math","easeOut","inAndOut","linear","upAndDown","BaseTileLayer","Layer","baseOptions","Object","cacheSize","TileProperty","preload","useInterimTilesOnError","pixel","BaseTile","hasArea","size","scale","ratio","dest","toSize","z","getKeyZXY","hash","withinExtentAndZ","tileGrid","abstract","uidCounter_","getUid","obj","String","VERSION"],"mappings":"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"}