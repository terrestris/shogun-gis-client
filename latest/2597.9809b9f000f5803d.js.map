{"version":3,"file":"2597.9809b9f000f5803d.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/expr/expression.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/expr/cpu.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/canvas/style.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/layer/BaseVector.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/node_modules/quickselect/index.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/node_modules/rbush/index.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/style/Icon.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/style/Text.js"],"sourcesContent":["/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   `['resolution']` returns the current resolution\n *   `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   `['zoom']` The current zoom level (WebGL only).\n *   `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   `['/', value1, value2]` divides `value1` by `value2`\n *   `['+', value1, value2, ...]` adds the values\n *   `['-', value1, value2]` subtracts `value2` from `value1`\n *   `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   `['abs', value1]` returns the absolute value of `value1`\n *   `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *     Note that for WebGL layers, the hardcoded value `-9999999` is used to distinguish when a property is not defined.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length - 1; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/VectorLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n"],"names":["Math","Object","Number","t","Error","Set","e","Array","JSON","i","o","String","a","r","NaN","l","c","n","HTMLImageElement"],"mappings":"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"}