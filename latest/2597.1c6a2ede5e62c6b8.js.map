{"version":3,"file":"2597.1c6a2ede5e62c6b8.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/expr/expression.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/expr/cpu.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/canvas/style.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/layer/BaseVector.js","webpack://@terrestris/shogun-gis-client/./node_modules/quickselect/index.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/node_modules/rbush/index.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/style/Icon.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/style/Text.js"],"sourcesContent":["/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   `['resolution']` returns the current resolution\n *   `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   `['zoom']` The current zoom level (WebGL only).\n *   `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   `['/', value1, value2]` divides `value1` by `value2`\n *   `['+', value1, value2, ...]` adds the values\n *   `['-', value1, value2]` subtracts `value2` from `value1`\n *   `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   `['abs', value1]` returns the absolute value of `value1`\n *   `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n"],"names":["numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","Math","typeNames","namedTypes","Object","Number","typeName","type","names","namedType","specific","broad","LiteralExpression","value","Error","CallExpression","operator","args","newParsingContext","Set","parse","encoded","expectedType","context","Array","parseCallExpression","returnType","parser","parsers","item","Ops","createCallExpressionParser","hasArgsCount","Infinity","withGetArgs","name","withNoArgs","withArgsOfType","usesMapState","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","input","fallback","i","match","err","output","base","interpolationType","b","JSON","interpolation","stop","operation","argCount","condition","needleType","haystack","arg","index","colors","parsedColors","color","key","String","minArgs","maxArgs","range","expression","argType","validators","parsed","newEvaluationContext","NaN","buildExpression","compileExpression","colorValue","compileAssertionExpression","length","compileAccessorExpression","nameExpression","ii","keyExpression","e","compileLogicalExpression","op","min","max","compileComparisonExpression","left","right","compileNumericExpression","compileCaseExpression","compileMatchExpression","compileInterpolateExpression","previousInput","previousOutput","isColor","interpolateColor","input1","rgba1","input2","rgba2","delta","lcha1","lcha2","deltaHue","lcha","interpolateNumber","compileConvertExpression","output1","output2","along","factor","always","flatStylesToStyleFunction","flatStyles","parsingContext","evaluators","buildStyle","evaluationContext","styles","feature","resolution","id","undefined","nonNullCount","style","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","numberArrayEvaluator","declutterMode","optionalDeclutterMode","text","Text","placement","textAlign","justify","textBaseline","evaluateImage","buildIcon","srcName","src","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","optionalColorLike","property","requireColorLike","crossOrigin","optionalString","offset","optionalNumberArray","requireNumberArray","offsetOrigin","width","optionalNumber","height","size","optionalSize","icon","Icon","buildShape","pointsName","radiusName","points","requireNumber","radius","radius2","angle","shape","RegularShape","buildCircle","evaluateRadius","circle","Circle","evaluateZIndex","Style","empty","fill","stroke","image","evaluateColor","patternEvaluator","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","Fill","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","Stroke","lineCap","lineJoin","evaluator","array","requireSize","BaseVectorLayer","Layer","options","baseOptions","pixel","frameState","layerState","declutterGroup","renderOrder","styleLike","toStyleLike","first","candidate","rules","rulesToStyleFunction","buildRuleSet","compiledRules","rule","filter","styleLength","j","someMatched","filterEvaluator","styleEvaluator","computeGeometryType","geometry","declutter","swap","arr","tmp","RBush","maxEntries","bbox","node","result","intersects","toBBox","nodesToSearch","child","childBBox","contains","data","tmpNode","createNode","equalsFn","parent","goingUp","path","indexes","findItem","items","a","N","M","calcBBox","N2","N1","multiSelect","right2","right3","level","targetNode","minArea","minEnlargement","area","bboxArea","enlargement","enlargedArea","isNode","insertPath","extend","m","splitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","minX","minY","maxX","maxY","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","compare","leftBBox","rightBBox","margin","bboxMargin","siblings","k","p","destNode","children","n","stack","mid","quickselect","z","s","sd","newLeft","newRight","t","calculateScale","wantedWidth","wantedHeight","imageState","opacity","rotation","cacheKey","HTMLImageElement","onload","imageSize","scale","anchor","displacement","pixelRatio","iconImageSize","listener","overflow","font","maxAngle","offsetX","offsetY","repeat","rotateWithView","keepUpright","padding"],"mappings":"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"}