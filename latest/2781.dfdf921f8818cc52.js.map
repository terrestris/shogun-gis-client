{"version":3,"file":"2781.dfdf921f8818cc52.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/control/FullScreen.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/control/ZoomSlider.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/control/ZoomToExtent.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/control/MousePosition.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/control/ScaleLine.js"],"sourcesContent":["/**\n * @module ol/control/FullScreen\n */\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Control from './Control.js';\n\nconst events = ['fullscreenchange', 'webkitfullscreenchange'];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this),\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport Control from './Control.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      target: options.target,\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false,\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false,\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2,\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this),\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport EventType from '../events/EventType.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {fromUserExtent} from '../proj.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label,\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : fromUserExtent(this.extent, view.getProjection());\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport {wrapX} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport Control from './Control.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this),\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this),\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection,\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection,\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/ScaleLine\n */\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport Control from './Control.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n * For cartesian measurements of the scaleline, you need to set the\n * `getPointResolution` method of your projection to simply return the input\n * value, e.g. `projection.setGetPointResolution(r => r);`\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n          ? 'ol-scale-bar'\n          : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits,\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 1e-6) {\n        suffix = 'nm';\n        pointResolution *= 1e9;\n      } else if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount = 0;\n    let previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>',\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm',\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n"],"names":["document","e","i","getComputedStyle","parseFloat","m","Error","Math","isNaN","s"],"mappings":"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"}