{"version":3,"file":"975.06322cbd9a5aa337.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/canvas/Builder.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/canvas/Executor.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/geom/flat/textpath.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/canvas/Instruction.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/canvas/TextBuilder.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/geom/flat/linechunk.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/geom/flat/straightchunk.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/canvas/hitdetect.js"],"sourcesContent":["/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n"],"names":["CanvasBuilder","tolerance","maxExtent","resolution","pixelRatio","dashArray","dash","flatCoordinates","stride","extent","tmpCoord","coordinates","myEnd","i","ii","offset","end","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","ends","builderEnds","builderEnd","geometry","feature","renderer","hitDetectionRenderer","index","builderEndss","type","builderBegin","endss","myEnds","undefined","instruction","hitDetectionInstructions","n","begin","fillStyle","state","fillStyleColor","strokeStyle","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","fillInstruction","createFill","applyStroke","lineCap","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","endGeometryInstruction","width","CanvasImageBuilder","pointGeometry","myBegin","Math","multiPointGeometry","filteredFlatCoordinates","imageStyle","sharedData","anchor","size","origin","CanvasLineStringBuilder","moveToLineToInstruction","lineStringGeometry","multiLineStringGeometry","CanvasPolygonBuilder","fill","stroke","numEnds","circleGeometry","circleInstruction","polygonGeometry","multiPolygonGeometry","BATCH_CONSTRUCTORS","Builder","TextBuilder","builderInstructions","zKey","builders","builderKey","builderInstruction","zIndex","builderType","zIndexKey","replays","replay","tmpExtent","getDeclutterBox","replayImageOrLabelArgs","rtlRegEx","RegExp","String","horizontalTextAlign","text","align","createTextChunks","acc","line","Executor","overlaps","instructions","deferredRendering","ZIndexContext","textKey","fillKey","strokeKey","previousFont","key","strokeState","fillState","textState","scale","Array","strokeWidth","chunks","height","widths","heights","lineWidths","renderWidth","contextInstructions","w","h","label","leftRight","x","strokeInstructions","fillInstructions","lineHeight","lineOffset","widthHeightIndex","lineWidthIndex","font","fillStrokeArgs","context","p1","p2","p3","p4","strokeInstruction","sheetWidth","sheetHeight","centerX","centerY","anchorX","anchorY","originX","originY","rotation","snapToPixel","padding","fillStroke","transform","y","boxW","boxH","boxX","boxY","scaledCanvasSize","imageOrLabel","dimensions","opacity","box","strokePadding","alignAndScale","repeatSize","baseline","featureCallback","hitExtent","declutterTree","pixelCoordinates","dd","declutterMode","prevX","prevY","roundX","roundY","image","currentGeometry","zIndexContext","d","pendingFill","pendingStroke","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","NaN","x1","y1","x2","y2","dx","dy","r","fn","coords","geometryWidths","backgroundFillInstruction","backgroundStrokeInstruction","rotateWithView","declutterImageWithText","labelWithAnchor","textOffsetX","textOffsetY","widthIndex","args","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","render","cachedWidths","overflow","maxAngle","measurePixelRatio","offsetY","pixelRatioScale","textKeepUpright","textScale","pathLength","textLength","startM","parts","drawTextOnPath","measureAndCacheTextWidth","cache","keepUpright","previousAngle","segmentLength","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","endX","endY","reverse","flat","PI","result","singleSegment","angle","delta","iStart","charLength","len","chars","drawChars","c","cc","part","ALL","DECLUTTER","NON_DECLUTTER","circlePixelIndexArrayCache","allInstructions","renderBuffer","flatClipCoords","executors","instructionByZindex","candidates","coordinate","hitTolerance","callback","declutteredFeatures","j","executor","contextSize","newContext","indexes","getPixelIndexArray","radius","maxDistanceSq","distances","distanceSq","distance","pixelIndex","imageData","idx","zs","Object","Number","minX","minY","maxX","maxY","targetContext","builderTypes","maxBuilderTypes","jj","requireClip","deferredZIndexContexts","Instruction","beginPathInstruction","closePathInstruction","TEXT_ALIGN","CanvasTextBuilder","geometryType","repeat","textAlign","flatOffset","o","oo","lineChunk","chunkLength","cursor","chunkM","currentChunk","m","missing","chunk","chunkBegin","chunkEnd","range","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","start","interiorPoints","beg","keep","backgroundFill","backgroundStroke","p0","p","hitDetectionBackgroundFill","textStyle","textFillStyle","textStrokeStyle","textRotateWithView","textRotation","HIT_DETECT_RESOLUTION","createHitDetectionImageData","transforms","features","styleFunction","squaredTolerance","projection","userExtent","canvas","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","color","originalStyle","style","imgSize","imgContext","img","byGeometryType","geometries","zIndexKeys","geomAndStyle","k","kk","hitDetect","pixel","resultFeatures","g","b"],"mappings":"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"}