{"version":3,"file":"9069.09a996ef7914c231.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-geo/dist/Slider/TimeSlider/TimeSlider.js","webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-geo/dist/constants.js","webpack://@terrestris/shogun-gis-client/./node_modules/iso8601-duration/lib/index.js"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport { Slider } from 'antd';\nimport dayjs from 'dayjs';\nimport { parse, toSeconds } from 'iso8601-duration';\nimport _isArray from 'lodash/isArray';\nimport _isFunction from 'lodash/isFunction';\nimport _isNil from 'lodash/isNil';\nimport { CSS_PREFIX } from '../../constants';\nconst TimeSlider = ({ className, defaultValue = dayjs(), duration, formatString = 'DD.MM. HH:mm', markFormatString, marks, max = dayjs(), min = dayjs().subtract(1, 'hour'), onChange = () => undefined, onChangeComplete = () => undefined, useRange = false, value = dayjs(), ...passThroughProps }) => {\n    const maxUnixTimestamp = useMemo(() => dayjs(max).unix(), [max]);\n    const minUnixTimestamp = useMemo(() => dayjs(min).unix(), [min]);\n    const convertDayjsToUnix = (val) => {\n        return _isArray(val)\n            ? val.map(iso => iso.unix())\n            : val.unix();\n    };\n    const convertedMarks = useMemo(() => {\n        if (!marks) {\n            return;\n        }\n        const convertedMks = {};\n        marks.forEach((mark) => {\n            const convertedTimestamp = convertDayjsToUnix(mark.timestamp);\n            if (Array.isArray(convertedTimestamp)) {\n                return;\n            }\n            convertedMks[convertedTimestamp] = mark.markConfig;\n        });\n        return convertedMks;\n    }, [marks]);\n    const formatTimestamp = useCallback((unix) => {\n        return unix ? dayjs(unix * 1000).format(markFormatString ?? formatString) : '';\n    }, [markFormatString, formatString]);\n    const valueUpdated = (val) => {\n        const updatedValue = _isArray(val)\n            ? [dayjs(val[0] * 1000), dayjs(val[1] * 1000)]\n            : dayjs(val * 1000);\n        if (_isFunction(onChange)) {\n            onChange(updatedValue);\n        }\n        if (_isFunction(onChangeComplete)) {\n            onChangeComplete(updatedValue);\n        }\n    };\n    const step = useMemo(() => {\n        if (_isNil(duration)) {\n            return null;\n        }\n        if (typeof duration === 'string') {\n            return toSeconds(parse(duration));\n        }\n        return toSeconds(duration);\n    }, [duration]);\n    const finalClassName = className ? `${className} ${CSS_PREFIX}timeslider` : `${CSS_PREFIX}timeslider`;\n    return useRange ? (React.createElement(Slider, { className: finalClassName, defaultValue: convertDayjsToUnix(defaultValue), marks: convertedMarks, max: maxUnixTimestamp, min: minUnixTimestamp, onChange: valueUpdated, onChangeComplete: valueUpdated, range: true, step: step, tooltip: { formatter: val => formatTimestamp(val) }, value: convertDayjsToUnix(value), ...passThroughProps })) : (React.createElement(Slider, { className: finalClassName, defaultValue: convertDayjsToUnix(defaultValue), marks: convertedMarks, max: maxUnixTimestamp, min: minUnixTimestamp, onChange: valueUpdated, onChangeComplete: valueUpdated, range: false, step: step, tooltip: {\n            formatter: val => formatTimestamp(val)\n        }, value: convertDayjsToUnix(value), ...passThroughProps }));\n};\nexport default TimeSlider;\n//# sourceMappingURL=TimeSlider.js.map","const CSS_PREFIX = 'react-geo-';\nexport { CSS_PREFIX };\n//# sourceMappingURL=constants.js.map","\"use strict\";\n/**\n * @description A module for parsing ISO8601 durations\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toSeconds = exports.end = exports.parse = exports.pattern = void 0;\n/**\n * The pattern used for parsing ISO8601 duration (PnYnMnWnDTnHnMnS).\n */\n// PnYnMnWnDTnHnMnS\nvar numbers = \"\\\\d+\";\nvar fractionalNumbers = \"\".concat(numbers, \"(?:[\\\\.,]\").concat(numbers, \")?\");\nvar datePattern = \"(\".concat(numbers, \"Y)?(\").concat(numbers, \"M)?(\").concat(numbers, \"W)?(\").concat(numbers, \"D)?\");\nvar timePattern = \"T(\".concat(fractionalNumbers, \"H)?(\").concat(fractionalNumbers, \"M)?(\").concat(fractionalNumbers, \"S)?\");\nvar iso8601 = \"P(?:\".concat(datePattern, \"(?:\").concat(timePattern, \")?)\");\nvar objMap = [\n    \"years\",\n    \"months\",\n    \"weeks\",\n    \"days\",\n    \"hours\",\n    \"minutes\",\n    \"seconds\",\n];\nvar defaultDuration = Object.freeze({\n    years: 0,\n    months: 0,\n    weeks: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n});\n/**\n * The ISO8601 regex for matching / testing durations\n */\nexports.pattern = new RegExp(iso8601);\n/** Parse PnYnMnDTnHnMnS format to object */\nvar parse = function (durationString) {\n    var matches = durationString.replace(/,/g, \".\").match(exports.pattern);\n    if (!matches) {\n        throw new RangeError(\"invalid duration: \".concat(durationString));\n    }\n    // Slice away first entry in match-array (the input string)\n    var slicedMatches = matches.slice(1);\n    if (slicedMatches.filter(function (v) { return v != null; }).length === 0) {\n        throw new RangeError(\"invalid duration: \".concat(durationString));\n    }\n    // Check only one fraction is used\n    if (slicedMatches.filter(function (v) { return /\\./.test(v || \"\"); }).length > 1) {\n        throw new RangeError(\"only the smallest unit can be fractional\");\n    }\n    return slicedMatches.reduce(function (prev, next, idx) {\n        prev[objMap[idx]] = parseFloat(next || \"0\") || 0;\n        return prev;\n    }, {});\n};\nexports.parse = parse;\n/** Convert ISO8601 duration object to an end Date. */\nvar end = function (durationInput, startDate) {\n    if (startDate === void 0) { startDate = new Date(); }\n    var duration = Object.assign({}, defaultDuration, durationInput);\n    // Create two equal timestamps, add duration to 'then' and return time difference\n    var timestamp = startDate.getTime();\n    var then = new Date(timestamp);\n    then.setFullYear(then.getFullYear() + duration.years);\n    then.setMonth(then.getMonth() + duration.months);\n    then.setDate(then.getDate() + duration.days);\n    // set time as milliseconds to get fractions working for minutes/hours\n    var hoursInMs = duration.hours * 3600 * 1000;\n    var minutesInMs = duration.minutes * 60 * 1000;\n    then.setMilliseconds(then.getMilliseconds() + duration.seconds * 1000 + hoursInMs + minutesInMs);\n    // Special case weeks\n    then.setDate(then.getDate() + duration.weeks * 7);\n    return then;\n};\nexports.end = end;\n/** Convert ISO8601 duration object to seconds */\nvar toSeconds = function (durationInput, startDate) {\n    if (startDate === void 0) { startDate = new Date(); }\n    var duration = Object.assign({}, defaultDuration, durationInput);\n    var timestamp = startDate.getTime();\n    var now = new Date(timestamp);\n    var then = (0, exports.end)(duration, now);\n    // Account for timezone offset between start and end date\n    var tzStart = startDate.getTimezoneOffset();\n    var tzEnd = then.getTimezoneOffset();\n    var tzOffsetSeconds = (tzStart - tzEnd) * 60;\n    var seconds = (then.getTime() - now.getTime()) / 1000;\n    return seconds + tzOffsetSeconds;\n};\nexports.toSeconds = toSeconds;\nexports.default = {\n    end: exports.end,\n    toSeconds: exports.toSeconds,\n    pattern: exports.pattern,\n    parse: exports.parse,\n};\n"],"names":["Array","Object","RegExp","RangeError","parseFloat","Date"],"mappings":"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"}