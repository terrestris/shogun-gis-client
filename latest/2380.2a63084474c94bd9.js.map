{"version":3,"file":"2380.2a63084474c94bd9.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/MapBrowserEventHandler.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/renderer/Map.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/renderer/Composite.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/Map.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/MapBrowserEvent.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/MapEvent.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/MapEventType.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/MapProperty.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/structs/PriorityQueue.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/TileQueue.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/control/Attribution.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/control/Control.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/control/Rotate.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/control/Zoom.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/control/defaults.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/layer/Group.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/pointer/EventType.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/render/Event.js"],"sourcesContent":["/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {PointerEvent|KeyboardEvent|WheelEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = mapBrowserEvent.originalEvent;\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    if (!this.frameState_) {\n      return;\n    }\n    const layerStates = this.frameState_.layerStatesArray;\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>|null} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {PointerEvent|KeyboardEvent|WheelEvent} [EVENT=PointerEvent|KeyboardEvent|WheelEvent]\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered.\n * **Caution:** Attributions are rendered dynamically using `innerHTML`, which can lead to potential\n * [**XSS (Cross-Site Scripting)**](https://en.wikipedia.org/wiki/Cross-site_scripting) vulnerabilities.\n * Use this feature only for trusted content\n * or ensure that the content is properly sanitized before inserting it.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n"],"names":["clearTimeout","setTimeout","Object","PointerEvent","e","Math","document","i","Array","window","ResizeObserver","s","t","ShadowRoot","Date","cancelAnimationFrame","requestAnimationFrame","isNaN","getComputedStyle","parseFloat","r","l","String","Set","Promise","c","a"],"mappings":"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"}