{"version":3,"file":"6976.cb65c8fcc25e878b.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/layer/Vector.js"],"sourcesContent":["/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport RenderEventType from '../../render/EventType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  getTolerance as getRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../render.js\").OrderFunction|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const declutter = this.getLayer().getDeclutter();\n    return this.replayGroup_.forEachFeatureAtCoordinate(\n      coordinate,\n      resolution,\n      rotation,\n      hitTolerance,\n      featureCallback,\n      declutter\n        ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n        : null,\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n"],"names":["CanvasVectorLayerRenderer","vectorLayer","NaN","executorGroup","frameState","declutterable","extent","viewState","center","resolution","projection","rotation","projectionExtent","vectorSource","declutter","pixelRatio","viewHints","snapToPixel","ViewHint","context","width","Math","height","multiWorld","worldWidth","endWorld","world","transform","undefined","alpha","target","layerState","replayGroup","render","layerExtent","pixel","Promise","resolve","size","layer","transforms","source","offsetX","startX","userProjection","coordinate","hitTolerance","callback","matches","features","feature","geometry","distanceSq","key","match","item","event","userTransform","animating","interacting","updateWhileAnimating","updateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","i","ii","userExtent","squaredTolerance","ready","index","styles","styleFunction","dirty","replayGroupInstructions","ExecutorGroup","builderGroup","loading","Array","BaseVector","options"],"mappings":"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"}