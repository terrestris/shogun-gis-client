{"version":3,"file":"5486.0718cdcb24ad6c73.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/easing.js"],"sourcesContent":["/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n"],"names":["Math","e","i"],"mappings":"sJAUO,SAAS,EAAO,CAAC,EACtB,OAAOA,KAAK,GAAG,CAAC,EAAG,EACrB,CAQO,SAASC,EAAQ,CAAC,EACvB,OAAO,EAAI,EAAO,EAAI,EACxB,CAQO,SAASC,EAAS,CAAC,EACxB,OAAO,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,CACjC,CAQO,SAAS,EAAO,CAAC,EACtB,OAAO,CACT,CAUO,SAAS,EAAU,CAAC,SACzB,AAAI,EAAI,GACCA,EAAS,EAAI,GAEf,EAAIA,EAAS,EAAK,GAAI,EAAE,EACjC,C"}