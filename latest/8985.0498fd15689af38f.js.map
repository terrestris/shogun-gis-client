{"version":3,"file":"8985.0498fd15689af38f.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/ol/Disposable.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/MapBrowserEventType.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/array.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/easing.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/events/Event.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/events/EventType.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/events/Target.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/events/condition.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/functions.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/interaction/Interaction.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/interaction/Modify.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/interaction/Pointer.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/interaction/Property.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/obj.js","webpack://@terrestris/shogun-gis-client/./node_modules/ol/util.js"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {equals} from '../array.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {getUid} from '../util.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {[SegmentData, number]} DragSegment\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have an `existing` property -\n * indicating whether there is an existing vertex underneath or not, a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array<DragSegment>}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     * @private\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this),\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this),\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer',\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this),\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this),\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     * @private\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(map.getCoordinateFromPixel(this.lastPixel_));\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<SegmentData>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const feature = segments[i].feature;\n        if (feature && !features.includes(feature)) {\n          this.featuresBeingModified_.push(feature);\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_,\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      },\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @param {boolean} existing The vertex represents an existing vertex.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries, existing) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    vertexFeature.set('existing', existing);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  findInsertVerticesAndUpdateDragSegments_(pixelCoordinate) {\n    this.handlePointerAtPixel_(pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      return;\n    }\n\n    const projection = this.getMap().getView().getProjection();\n    const insertVertices = [];\n    const vertex = vertexFeature.getGeometry().getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.geometry);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n\n      if (\n        segmentDataMatch.geometry.getType() === 'Circle' &&\n        segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n      ) {\n        const closestVertex = closestOnSegmentData(\n          pixelCoordinate,\n          segmentDataMatch,\n          projection,\n        );\n        if (\n          coordinatesEqual(closestVertex, vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n        continue;\n      }\n\n      if (coordinatesEqual(segment[0], vertex) && !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n        continue;\n      }\n\n      if (coordinatesEqual(segment[1], vertex) && !componentSegments[uid][1]) {\n        if (\n          componentSegments[uid][0] &&\n          componentSegments[uid][0].index === 0\n        ) {\n          let coordinates = segmentDataMatch.geometry.getCoordinates();\n          switch (segmentDataMatch.geometry.getType()) {\n            // prevent dragging closed linestrings by the connecting node\n            case 'LineString':\n            case 'MultiLineString':\n              continue;\n            // if dragging the first vertex of a polygon, ensure the other segment\n            // belongs to the closing vertex of the linear ring\n            case 'MultiPolygon':\n              coordinates = coordinates[depth[1]];\n            /* falls through */\n            case 'Polygon':\n              if (segmentDataMatch.index !== coordinates[depth[0]].length - 2) {\n                continue;\n              }\n              break;\n            default:\n            // pass\n          }\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n        continue;\n      }\n\n      if (\n        getUid(segment) in this.vertexSegments_ &&\n        !componentSegments[uid][0] &&\n        !componentSegments[uid][1]\n      ) {\n        insertVertices.push(segmentDataMatch);\n      }\n    }\n\n    return insertVertices;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @override\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(\n      evt,\n      this.dragSegments_.map(([segment]) => segment),\n    );\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          const circle = /** @type {import(\"../geom/Circle.js\").default} */ (\n            geometry\n          );\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            circle.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(circle.getCenter(), projection),\n              fromUserCoordinate(vertex, projection),\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = circle\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            circle.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries, true);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    const insertVertices =\n      this.findInsertVerticesAndUpdateDragSegments_(pixelCoordinate);\n\n    if (insertVertices?.length && this.insertVertexCondition_(evt)) {\n      this.willModifyFeatures_(evt, insertVertices);\n\n      if (this.vertexFeature_) {\n        const vertex = this.vertexFeature_.getGeometry().getCoordinates();\n        for (let j = insertVertices.length - 1; j >= 0; --j) {\n          this.insertVertex_(insertVertices[j], vertex);\n        }\n        this.ignoreNextSingleClick_ = true;\n      }\n    }\n\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        const circle = /** @type {import(\"../geom/Circle.js\").default} */ (\n          geometry\n        );\n        // Update a circle object in the R* bush:\n        const coordinates = circle.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        /** @type {import(\"../geom/Circle.js\").default | import(\"../geom/Polygon.js\").default} */\n        let circleGeometry = circle;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection,\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData,\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt,\n        ),\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixelCoordinate) {\n    const map = this.getMap();\n    const pixel = map.getPixelFromCoordinate(pixelCoordinate);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry && geometry.getType() === 'Point') {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection),\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n\n          if (\n            geom &&\n            geom.getType() === 'Point' &&\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter},\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection,\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection,\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n            this.snappedToVertex_,\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          // Stop and cleanup overlay vertex feature if a segment was hit and new vertex creation is not allowed by the insertVertexCondition\n          if (\n            !this.snappedToVertex_ &&\n            !this.insertVertexCondition_(this.lastPointerEvent_)\n          ) {\n            if (this.vertexFeature_) {\n              this.overlay_.getSource().removeFeature(this.vertexFeature_);\n              this.vertexFeature_ = null;\n            }\n            return;\n          }\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n            this.snappedToVertex_,\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @return {boolean} A vertex was inserted.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return false;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    return true;\n  }\n\n  updatePointer_(coordinate) {\n    if (coordinate) {\n      this.findInsertVerticesAndUpdateDragSegments_(coordinate);\n    }\n    return this.vertexFeature_?.getGeometry().getCoordinates();\n  }\n\n  /**\n   * Get the current pointer position.\n   * @return {import(\"../coordinate.js\").Coordinate | null} The current pointer coordinate.\n   */\n  getPoint() {\n    const coordinate = this.vertexFeature_?.getGeometry().getCoordinates();\n    if (!coordinate) {\n      return null;\n    }\n    return toUserCoordinate(\n      coordinate,\n      this.getMap().getView().getProjection(),\n    );\n  }\n\n  /**\n   * Check if a point can be removed from the current linestring or polygon at the current\n   * pointer position.\n   * @return {boolean} A point can be deleted at the current pointer position.\n   * @api\n   */\n  canRemovePoint() {\n    if (!this.vertexFeature_) {\n      return false;\n    }\n    if (\n      this.vertexFeature_\n        .get('geometries')\n        .every(\n          (geometry) =>\n            geometry.getType() === 'Circle' ||\n            geometry.getType().endsWith('Point'),\n        )\n    ) {\n      return false;\n    }\n    const coordinate = this.vertexFeature_.getGeometry().getCoordinates();\n    const segments = this.rBush_.getInExtent(boundingExtent([coordinate]));\n    return segments.some(\n      ({segment}) =>\n        coordinatesEqual(segment[0], coordinate) ||\n        coordinatesEqual(segment[1], coordinate),\n    );\n  }\n\n  /**\n   * Removes the vertex currently being pointed from the current linestring or polygon.\n   * @param {import('../coordinate.js').Coordinate} [coordinate] If provided, the pointer\n   * will be set to the provided coordinate. If not, the current pointer coordinate will be used.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint(coordinate) {\n    if (coordinate) {\n      coordinate = fromUserCoordinate(\n        coordinate,\n        this.getMap().getView().getProjection(),\n      );\n      this.updatePointer_(coordinate);\n    }\n    if (\n      !this.lastPointerEvent_ ||\n      (this.lastPointerEvent_ &&\n        this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG)\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(\n        evt,\n        this.dragSegments_.map(([segment]) => segment),\n      );\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData,\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * Check if a point can be inserted to the current linestring or polygon at the current\n   * pointer position.\n   * @return {boolean} A point can be inserted at the current pointer position.\n   * @api\n   */\n  canInsertPoint() {\n    if (!this.vertexFeature_) {\n      return false;\n    }\n    if (\n      this.vertexFeature_\n        .get('geometries')\n        .every(\n          (geometry) =>\n            geometry.getType() === 'Circle' ||\n            geometry.getType().endsWith('Point'),\n        )\n    ) {\n      return false;\n    }\n    const coordinate = this.vertexFeature_.getGeometry().getCoordinates();\n    const segments = this.rBush_.getInExtent(boundingExtent([coordinate]));\n    return segments.some(\n      ({segment}) =>\n        !(\n          coordinatesEqual(segment[0], coordinate) ||\n          coordinatesEqual(segment[1], coordinate)\n        ),\n    );\n  }\n\n  /**\n   * Inserts the vertex currently being pointed to the current linestring or polygon.\n   * @param {import('../coordinate.js').Coordinate} [coordinate] If provided, the pointer\n   * will be set to the provided coordinate. If not, the current pointer coordinate will be used.\n   * @return {boolean} A vertex was inserted.\n   * @api\n   */\n  insertPoint(coordinate) {\n    const pixelCoordinate = coordinate\n      ? fromUserCoordinate(coordinate, this.getMap().getView().getProjection())\n      : this.vertexFeature_?.getGeometry().getCoordinates();\n    if (!pixelCoordinate) {\n      return false;\n    }\n    const insertVertices =\n      this.findInsertVerticesAndUpdateDragSegments_(pixelCoordinate);\n    return insertVertices.reduce(\n      (prev, segmentData) =>\n        prev || this.insertVertex_(segmentData, pixelCoordinate),\n      false,\n    );\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      },\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection,\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = circleGeometry\n          .clone()\n          .transform(userProjection, projection);\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection),\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection),\n      ),\n      projection,\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection,\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.4.0';\n"],"names":["Disposable","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","a","b","descending","linearFindNearest","arr","target","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","length","equals","arr1","arr2","len1","isSorted","func","strict","compare","currentVal","index","res","easeIn","t","Math","easeOut","inAndOut","linear","upAndDown","stopPropagation","evt","preventDefault","BaseEvent","type","Target","listener","listeners","listenersForType","event","propagate","isString","dispatching","pendingRemovals","ii","pr","undefined","Object","all","var_args","conditions","arguments","pass","altKeyOnly","mapBrowserEvent","originalEvent","altShiftKeysOnly","focus","targetElement","rootNode","activeElement","ShadowRoot","focusWithTabindex","tabIndexCandidate","always","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerEvent","touchOnly","pointerEvt","penOnly","primaryAction","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","toPromise","getter","promiseGetter","value","err","Promise","Interaction","options","active","map","pan","view","delta","duration","currentCenter","center","zoomByDelta","anchor","currentZoom","newZoom","newResolution","tempExtent","tempSegment","ModifyEventType","ModifyEvent","features","Modify","getDefaultStyleFunction","style","feature","resolution","Error","geometry","writer","segments","rBush","nodesToRemove","node","nodeToRemove","j","coordinates","points","segmentData","segment","lines","jj","rings","polygons","k","kk","centerSegmentData","circumferenceSegmentData","featureSegments","circleGeometry","userProjection","projection","geometries","existing","vertexFeature","handled","pixelCoordinate","insertVertices","vertex","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","uid","depth","closestVertex","closestOnSegmentData","dragSegment","circle","radius","nodes","hitPointGeometry","pixel","layerFilter","layer","geom","coordinate","viewExtent","buffer","box","projectedDistanceToSegmentDataSquared","closestSegment","vertexPixel","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","geometryUid","rTree","newSegmentData","newSegmentData2","removed","component","left","newIndex","right","dragSegments","segmentsByFeature","deleted","prev","pointCoordinates","distanceToCircumference","PointerInteraction","stopEvent","handledUp","centroid","pointerEvents","clientX","clientY","clear","object","property","isEmpty","abstract","uidCounter_","getUid","obj","String","VERSION"],"mappings":"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"}