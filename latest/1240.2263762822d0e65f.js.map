{"version":3,"file":"1240.2263762822d0e65f.js","sources":["webpack://@terrestris/shogun-gis-client/./node_modules/@terrestris/react-geo/dist/Slider/LayerTransparencySlider/LayerTransparencySlider.js","webpack://@terrestris/shogun-gis-client/./node_modules/antd/es/_util/reactNode.js","webpack://@terrestris/shogun-gis-client/./node_modules/antd/es/theme/interface/presetColors.js"],"sourcesContent":["import { Slider } from 'antd';\nimport * as React from 'react';\nconst LayerTransparencySlider = ({ layer, ...passThroughProps }) => {\n    const setLayerTransparency = (transparency) => {\n        let opacity = 1 - (transparency / 100);\n        // Round the opacity to two digits.\n        opacity = Math.round((opacity) * 100) / 100;\n        layer.setOpacity(opacity);\n    };\n    const getLayerTransparency = () => {\n        // 1 = fully opaque/visible.\n        const opacity = layer.getOpacity();\n        let transparency = (1 - opacity) * 100;\n        // Remove any digits.\n        transparency = Math.round(transparency);\n        return transparency;\n    };\n    return (React.createElement(Slider, { tooltip: {\n            formatter: value => `${value}%`\n        }, defaultValue: getLayerTransparency(), onChange: (value) => {\n            setLayerTransparency(value);\n        }, ...passThroughProps }));\n};\nexport default LayerTransparencySlider;\n//# sourceMappingURL=LayerTransparencySlider.js.map","import React from 'react';\nexport function isFragment(child) {\n  return child && /*#__PURE__*/React.isValidElement(child) && child.type === React.Fragment;\n}\nexport const replaceElement = (element, replacement, props) => {\n  if (! /*#__PURE__*/React.isValidElement(element)) {\n    return replacement;\n  }\n  return /*#__PURE__*/React.cloneElement(element, typeof props === 'function' ? props(element.props || {}) : props);\n};\nexport function cloneElement(element, props) {\n  return replaceElement(element, element, props);\n}","export const PresetColors = ['blue', 'purple', 'cyan', 'green', 'magenta', 'pink', 'red', 'orange', 'yellow', 'volcano', 'geekblue', 'lime', 'gold'];"],"names":["layer","passThroughProps","transparency","setLayerTransparency","opacity","Math","value","isFragment","child","replaceElement","element","replacement","props","cloneElement","PresetColors"],"mappings":"qLAuBA,WArBgC,CAAC,CAAEA,MAAAA,CAAK,CAAE,GAAGC,EAAkB,QAUnDC,EATR,IAAMC,EAAuB,AAACD,IAC1B,IAAIE,EAAU,EAAKF,EAAe,IAElCE,EAAUC,KAAK,KAAK,CAAC,AAAY,IAAXD,GAAkB,IACxCJ,EAAM,UAAU,CAACI,EACrB,EASA,OAAQ,eAAmB,CAAC,GAAM,CAAE,CAAE,QAAS,CACvC,UAAWE,GAAS,CAAC,EAAEA,EAAM,CAAC,CAAC,AACnC,EAAG,aALYD,KAAK,KAAK,CAFN,AAAC,GADJL,EAAM,UAAU,EACF,EAAK,KAOM,SAAU,AAACM,IAChDH,EAAqBG,EACzB,EAAG,GAAGL,CAAgB,AAAC,EAC/B,C,gICrBO,SAASM,EAAWC,CAAK,EAC9B,OAAOA,GAAsB,kBAAoB,CAACA,IAAUA,EAAM,IAAI,GAAK,YAC7E,CACO,IAAMC,EAAiB,CAACC,EAASC,EAAaC,IACnD,AAAmB,kBAAoB,CAACF,GAGpB,gBAAkB,CAACA,EAAS,AAAiB,YAAjB,OAAOE,EAAuBA,EAAMF,EAAQ,KAAK,EAAI,CAAC,GAAKE,GAFlGD,EAIJ,SAASE,EAAaH,CAAO,CAAEE,CAAK,EACzC,OAAOH,EAAeC,EAASA,EAASE,EAC1C,C,uDCZO,IAAME,EAAe,CAAC,OAAQ,SAAU,OAAQ,QAAS,UAAW,OAAQ,MAAO,SAAU,SAAU,UAAW,WAAY,OAAQ,OAAO,A"}