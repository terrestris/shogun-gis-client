name: Test successful build

on: pull_request

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources 🔰
      uses: actions/checkout@v4

    - name: Setup Node.js 🧮
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Cache Node.js modules 💾
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-

    - name: Install dependencies ⏬
      run: npm ci

    - name: Run typecheck, lint and tests 🧪
      run: npm run check

    - name: Build artifacts 🏗️
      run: npm run build

    - name: Run tests related to current changes ✅
      run: |
        echo "BASE_BRANCH=main" >> $GITHUB_ENV
        git fetch origin ${{ env.BASE_BRANCH }}
        npx jest --config=jest.config.js --coverage --coverageReporters json-summary --onlyChanged --coverageDirectory ./coverage/changed

    - name: Check for test results 
      id: check-results
      run: |
        if [ -f ./coverage/changed/coverage-summary.json ]; then
          COVERAGE_CONTENT=$(cat ./coverage/changed/coverage-summary.json)
          if echo "$COVERAGE_CONTENT" | jq '.total.lines.pct' | grep -q '0'; then
            echo "no_tests_found=true" >> $GITHUB_ENV
          else
            echo "no_tests_found=false" >> $GITHUB_ENV
          fi
        else
          echo "no_tests_found=true" >> $GITHUB_ENV
        fi

    - name: Jest Coverage Comment 💬
      uses: MishaKav/jest-coverage-comment@main
      with:
        hide-comment: false
        create-new-comment: false
        hide-summary: false
        multiple-files: |
          All, ./coverage/all/coverage-summary.json
          only changed, ./coverage/changed/coverage-summary.json

    - name: Post No Tests Found Comment 
      if: env.no_tests_found == 'true'
      run: |
        COMMENT="No tests were found related to the files changed since the last commit."
        PR_NUMBER=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
        curl -s -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d "{\"body\": \"$COMMENT\"}" \
          "https://api.github.com/repos/${{ github.repository }}/issues/${PR_NUMBER}/comments"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
